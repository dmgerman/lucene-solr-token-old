begin_unit
begin_package
DECL|package|org.apache.lucene.store.instantiated
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|instantiated
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|TermVectorOffsetInfo
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import
begin_comment
comment|/**  * Copyright 2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/**  * There is one instance of this class per indexed term in a document  * and it contains the meta data about each occurrence of a term in a document.  *  * It is the inner glue of the inverted index.  *  *<pre>  * [Term]-- {0..*} | {0..*} --(field)[Document]  *&lt;&lt;ordered>>  *                 |  *    [TermDocumentInformation]  *       +payloads  *       +termPositions  *       +termOffsets  *</pre>  *   */
end_comment
begin_class
DECL|class|InstantiatedTermDocumentInformation
specifier|public
class|class
name|InstantiatedTermDocumentInformation
implements|implements
name|Serializable
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1l
decl_stmt|;
DECL|field|termComparator
specifier|public
specifier|static
specifier|final
name|Comparator
argument_list|<
name|InstantiatedTermDocumentInformation
argument_list|>
name|termComparator
init|=
operator|new
name|Comparator
argument_list|<
name|InstantiatedTermDocumentInformation
argument_list|>
argument_list|()
block|{
specifier|public
name|int
name|compare
parameter_list|(
name|InstantiatedTermDocumentInformation
name|instantiatedTermDocumentInformation
parameter_list|,
name|InstantiatedTermDocumentInformation
name|instantiatedTermDocumentInformation1
parameter_list|)
block|{
return|return
name|instantiatedTermDocumentInformation
operator|.
name|getTerm
argument_list|()
operator|.
name|getTerm
argument_list|()
operator|.
name|compareTo
argument_list|(
name|instantiatedTermDocumentInformation1
operator|.
name|getTerm
argument_list|()
operator|.
name|getTerm
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
DECL|field|documentNumberComparator
specifier|public
specifier|static
specifier|final
name|Comparator
argument_list|<
name|InstantiatedTermDocumentInformation
argument_list|>
name|documentNumberComparator
init|=
operator|new
name|Comparator
argument_list|<
name|InstantiatedTermDocumentInformation
argument_list|>
argument_list|()
block|{
specifier|public
name|int
name|compare
parameter_list|(
name|InstantiatedTermDocumentInformation
name|instantiatedTermDocumentInformation
parameter_list|,
name|InstantiatedTermDocumentInformation
name|instantiatedTermDocumentInformation1
parameter_list|)
block|{
return|return
name|instantiatedTermDocumentInformation
operator|.
name|getDocument
argument_list|()
operator|.
name|getDocumentNumber
argument_list|()
operator|.
name|compareTo
argument_list|(
name|instantiatedTermDocumentInformation1
operator|.
name|getDocument
argument_list|()
operator|.
name|getDocumentNumber
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
DECL|field|doumentNumberIntegerComparator
specifier|public
specifier|static
specifier|final
name|Comparator
name|doumentNumberIntegerComparator
init|=
operator|new
name|Comparator
argument_list|()
block|{
specifier|public
name|int
name|compare
parameter_list|(
name|Object
name|o1
parameter_list|,
name|Object
name|o2
parameter_list|)
block|{
name|InstantiatedTermDocumentInformation
name|di
init|=
operator|(
name|InstantiatedTermDocumentInformation
operator|)
name|o1
decl_stmt|;
name|Integer
name|i
init|=
operator|(
name|Integer
operator|)
name|o2
decl_stmt|;
return|return
name|di
operator|.
name|getDocument
argument_list|()
operator|.
name|getDocumentNumber
argument_list|()
operator|.
name|compareTo
argument_list|(
name|i
argument_list|)
return|;
block|}
block|}
decl_stmt|;
DECL|field|payloads
specifier|private
name|byte
index|[]
index|[]
name|payloads
decl_stmt|;
DECL|field|termPositions
specifier|private
name|int
index|[]
name|termPositions
decl_stmt|;
DECL|field|term
specifier|private
name|InstantiatedTerm
name|term
decl_stmt|;
DECL|field|document
specifier|private
name|InstantiatedDocument
name|document
decl_stmt|;
DECL|field|termOffsets
specifier|private
name|TermVectorOffsetInfo
index|[]
name|termOffsets
decl_stmt|;
DECL|method|InstantiatedTermDocumentInformation
specifier|public
name|InstantiatedTermDocumentInformation
parameter_list|(
name|InstantiatedTerm
name|term
parameter_list|,
name|InstantiatedDocument
name|document
parameter_list|,
name|int
index|[]
name|termPositions
parameter_list|,
name|byte
index|[]
index|[]
name|payloads
parameter_list|)
block|{
name|this
operator|.
name|term
operator|=
name|term
expr_stmt|;
name|this
operator|.
name|document
operator|=
name|document
expr_stmt|;
name|this
operator|.
name|termPositions
operator|=
name|termPositions
expr_stmt|;
name|this
operator|.
name|payloads
operator|=
name|payloads
expr_stmt|;
block|}
comment|// not quite sure why I wanted this.
comment|//  /**
comment|//   * [Term]--- {0..* ordered} ->[Info]
comment|//   */
comment|//  private int indexFromTerm;
comment|//  public int getIndexFromTerm() {
comment|//    return indexFromTerm;
comment|//  }
comment|//
comment|//  void setIndexFromTerm(int indexFromTerm) {
comment|//    this.indexFromTerm = indexFromTerm;
comment|//  }
DECL|method|getTermPositions
specifier|public
name|int
index|[]
name|getTermPositions
parameter_list|()
block|{
return|return
name|termPositions
return|;
block|}
DECL|method|getPayloads
specifier|public
name|byte
index|[]
index|[]
name|getPayloads
parameter_list|()
block|{
return|return
name|payloads
return|;
block|}
DECL|method|getDocument
specifier|public
name|InstantiatedDocument
name|getDocument
parameter_list|()
block|{
return|return
name|document
return|;
block|}
DECL|method|getTerm
specifier|public
name|InstantiatedTerm
name|getTerm
parameter_list|()
block|{
return|return
name|term
return|;
block|}
DECL|method|setTermPositions
name|void
name|setTermPositions
parameter_list|(
name|int
index|[]
name|termPositions
parameter_list|)
block|{
name|this
operator|.
name|termPositions
operator|=
name|termPositions
expr_stmt|;
block|}
DECL|method|setTerm
name|void
name|setTerm
parameter_list|(
name|InstantiatedTerm
name|term
parameter_list|)
block|{
name|this
operator|.
name|term
operator|=
name|term
expr_stmt|;
block|}
DECL|method|setDocument
name|void
name|setDocument
parameter_list|(
name|InstantiatedDocument
name|document
parameter_list|)
block|{
name|this
operator|.
name|document
operator|=
name|document
expr_stmt|;
block|}
DECL|method|getTermOffsets
specifier|public
name|TermVectorOffsetInfo
index|[]
name|getTermOffsets
parameter_list|()
block|{
return|return
name|termOffsets
return|;
block|}
DECL|method|setTermOffsets
name|void
name|setTermOffsets
parameter_list|(
name|TermVectorOffsetInfo
index|[]
name|termOffsets
parameter_list|)
block|{
name|this
operator|.
name|termOffsets
operator|=
name|termOffsets
expr_stmt|;
block|}
block|}
end_class
end_unit
