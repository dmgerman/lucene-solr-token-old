begin_unit
begin_package
DECL|package|org.apache.lucene.gdata.gom.core
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|core
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|FactoryConfigurationError
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|GOMIcon
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|GOMLogo
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|writer
operator|.
name|GOMStaxWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|writer
operator|.
name|GOMOutputWriter
import|;
end_import
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_comment
comment|/**  * @author Simon Willnauer  *   */
end_comment
begin_class
DECL|class|AtomUriElementTest
specifier|public
class|class
name|AtomUriElementTest
extends|extends
name|TestCase
block|{
DECL|field|iconImpl
name|GOMIconImpl
name|iconImpl
decl_stmt|;
DECL|field|logoImpl
name|GOMLogoImpl
name|logoImpl
decl_stmt|;
DECL|method|setUp
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|iconImpl
operator|=
operator|new
name|GOMIconImpl
argument_list|()
expr_stmt|;
name|this
operator|.
name|logoImpl
operator|=
operator|new
name|GOMLogoImpl
argument_list|()
expr_stmt|;
block|}
comment|/* 	 * Test method for 	 * 'org.apache.lucene.gdata.gom.core.AtomUriElement.processEndElement()' 	 */
DECL|method|testProcessEndElement
specifier|public
name|void
name|testProcessEndElement
parameter_list|()
block|{
try|try
block|{
name|this
operator|.
name|iconImpl
operator|.
name|processEndElement
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"no text value"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|GDataParseException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"requires a element value"
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|this
operator|.
name|iconImpl
operator|.
name|setTextValue
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|this
operator|.
name|iconImpl
operator|.
name|processEndElement
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"no text value"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|GDataParseException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"must be a"
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|this
operator|.
name|iconImpl
operator|.
name|setTextValue
argument_list|(
literal|"/test"
argument_list|)
expr_stmt|;
name|this
operator|.
name|iconImpl
operator|.
name|processEndElement
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"no text value"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|GDataParseException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"must be a"
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|iconImpl
operator|.
name|xmlBase
operator|=
literal|"http://www.apache.org"
expr_stmt|;
name|this
operator|.
name|iconImpl
operator|.
name|setTextValue
argument_list|(
literal|"/test"
argument_list|)
expr_stmt|;
name|this
operator|.
name|iconImpl
operator|.
name|processEndElement
argument_list|()
expr_stmt|;
name|this
operator|.
name|iconImpl
operator|.
name|xmlBase
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|iconImpl
operator|.
name|setTextValue
argument_list|(
literal|"http://www.apache.org/test"
argument_list|)
expr_stmt|;
block|}
DECL|method|testConstructor
specifier|public
name|void
name|testConstructor
parameter_list|()
block|{
name|assertEquals
argument_list|(
name|GOMIcon
operator|.
name|LOCALNAME
argument_list|,
name|this
operator|.
name|iconImpl
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|GOMIcon
operator|.
name|LOCALNAME
argument_list|,
name|this
operator|.
name|iconImpl
operator|.
name|getQname
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|GOMLogo
operator|.
name|LOCALNAME
argument_list|,
name|this
operator|.
name|logoImpl
operator|.
name|getLocalName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|GOMLogo
operator|.
name|LOCALNAME
argument_list|,
name|this
operator|.
name|logoImpl
operator|.
name|getQname
argument_list|()
operator|.
name|getLocalPart
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testWriteRssOutput
specifier|public
name|void
name|testWriteRssOutput
parameter_list|()
throws|throws
name|XMLStreamException
throws|,
name|FactoryConfigurationError
block|{
block|{
name|StringWriter
name|stW
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|GOMOutputWriter
name|writer
init|=
operator|new
name|GOMStaxWriter
argument_list|(
name|stW
argument_list|)
decl_stmt|;
name|this
operator|.
name|iconImpl
operator|.
name|writeRssOutput
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<url/>"
argument_list|,
name|stW
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|StringWriter
name|stW
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|GOMOutputWriter
name|writer
init|=
operator|new
name|GOMStaxWriter
argument_list|(
name|stW
argument_list|)
decl_stmt|;
name|this
operator|.
name|iconImpl
operator|.
name|setTextValue
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|this
operator|.
name|iconImpl
operator|.
name|writeRssOutput
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<url>test</url>"
argument_list|,
name|stW
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|StringWriter
name|stW
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|GOMOutputWriter
name|writer
init|=
operator|new
name|GOMStaxWriter
argument_list|(
name|stW
argument_list|)
decl_stmt|;
name|this
operator|.
name|logoImpl
operator|.
name|writeRssOutput
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<url/>"
argument_list|,
name|stW
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|StringWriter
name|stW
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|GOMOutputWriter
name|writer
init|=
operator|new
name|GOMStaxWriter
argument_list|(
name|stW
argument_list|)
decl_stmt|;
name|this
operator|.
name|logoImpl
operator|.
name|setTextValue
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|this
operator|.
name|logoImpl
operator|.
name|writeRssOutput
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<url>test</url>"
argument_list|,
name|stW
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testWriteAtomOutput
specifier|public
name|void
name|testWriteAtomOutput
parameter_list|()
throws|throws
name|XMLStreamException
block|{
block|{
name|StringWriter
name|stW
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|GOMOutputWriter
name|writer
init|=
operator|new
name|GOMStaxWriter
argument_list|(
name|stW
argument_list|)
decl_stmt|;
name|this
operator|.
name|iconImpl
operator|.
name|writeAtomOutput
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<icon/>"
argument_list|,
name|stW
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|StringWriter
name|stW
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|GOMOutputWriter
name|writer
init|=
operator|new
name|GOMStaxWriter
argument_list|(
name|stW
argument_list|)
decl_stmt|;
name|this
operator|.
name|iconImpl
operator|.
name|setTextValue
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|this
operator|.
name|iconImpl
operator|.
name|writeAtomOutput
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<icon>test</icon>"
argument_list|,
name|stW
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|StringWriter
name|stW
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|GOMOutputWriter
name|writer
init|=
operator|new
name|GOMStaxWriter
argument_list|(
name|stW
argument_list|)
decl_stmt|;
name|this
operator|.
name|logoImpl
operator|.
name|writeAtomOutput
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<logo/>"
argument_list|,
name|stW
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|StringWriter
name|stW
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|GOMOutputWriter
name|writer
init|=
operator|new
name|GOMStaxWriter
argument_list|(
name|stW
argument_list|)
decl_stmt|;
name|this
operator|.
name|logoImpl
operator|.
name|setTextValue
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|this
operator|.
name|logoImpl
operator|.
name|writeAtomOutput
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<logo>test</logo>"
argument_list|,
name|stW
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
