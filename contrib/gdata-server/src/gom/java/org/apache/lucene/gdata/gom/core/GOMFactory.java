begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.gom.core
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|core
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|GOMEntry
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|GOMFeed
import|;
end_import
begin_comment
comment|/**  * @author Simon Willnauer  *   */
end_comment
begin_class
DECL|class|GOMFactory
specifier|public
class|class
name|GOMFactory
block|{
comment|/** 	 *  	 */
DECL|method|GOMFactory
specifier|private
name|GOMFactory
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
DECL|method|createInstance
specifier|public
specifier|static
name|GOMFactory
name|createInstance
parameter_list|()
block|{
return|return
operator|new
name|GOMFactory
argument_list|()
return|;
block|}
DECL|method|createFeed
specifier|public
name|GOMFeed
name|createFeed
parameter_list|()
block|{
return|return
operator|new
name|GOMFeedImpl
argument_list|()
return|;
block|}
DECL|method|createEntry
specifier|public
name|GOMEntry
name|createEntry
parameter_list|()
block|{
return|return
operator|new
name|GOMEntryImpl
argument_list|()
return|;
block|}
block|}
end_class
end_unit
