begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.gom.writer
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|writer
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStreamWriter
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|FactoryConfigurationError
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLOutputFactory
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|GOMAttribute
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|GOMNamespace
import|;
end_import
begin_comment
comment|/**  * @author Simon Willnauer  *   */
end_comment
begin_class
DECL|class|GOMStaxWriter
specifier|public
class|class
name|GOMStaxWriter
implements|implements
name|GOMOutputWriter
block|{
DECL|field|STAX_OUTPUTFACTORY_KEY
specifier|private
specifier|static
specifier|final
name|String
name|STAX_OUTPUTFACTORY_KEY
init|=
literal|"org.apache.lucene.gdata.gom.writer.GOMXmlOutputFactory"
decl_stmt|;
DECL|field|namespaceSet
specifier|private
specifier|final
name|Set
argument_list|<
name|GOMNamespace
argument_list|>
name|namespaceSet
init|=
operator|new
name|HashSet
argument_list|<
name|GOMNamespace
argument_list|>
argument_list|(
literal|16
argument_list|)
decl_stmt|;
DECL|field|writer
specifier|private
specifier|final
name|XMLStreamWriter
name|writer
decl_stmt|;
static|static
block|{
comment|/* 		 * set the system property to make sure the factory will be found 		 */
name|String
name|property
init|=
name|System
operator|.
name|getProperty
argument_list|(
name|STAX_OUTPUTFACTORY_KEY
argument_list|)
decl_stmt|;
if|if
condition|(
name|property
operator|==
literal|null
condition|)
name|System
operator|.
name|setProperty
argument_list|(
name|STAX_OUTPUTFACTORY_KEY
argument_list|,
name|STAX_OUTPUTFACTORY_KEY
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param aOutputStream 	 * @param encoding 	 * @throws UnsupportedEncodingException 	 * @throws XMLStreamException 	 * @throws FactoryConfigurationError 	 */
DECL|method|GOMStaxWriter
specifier|public
name|GOMStaxWriter
parameter_list|(
specifier|final
name|OutputStream
name|aOutputStream
parameter_list|,
name|String
name|encoding
parameter_list|)
throws|throws
name|UnsupportedEncodingException
throws|,
name|XMLStreamException
throws|,
name|FactoryConfigurationError
block|{
name|this
argument_list|(
operator|new
name|OutputStreamWriter
argument_list|(
name|aOutputStream
argument_list|,
name|encoding
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Class constructor 	 *  	 *  	 * @param aOutputStream - 	 *            a output stream to write the xml stream to. 	 * @throws XMLStreamException - 	 *             if a write exception occurs 	 * @throws FactoryConfigurationError - 	 *             if XMLOutputFactory throws an exception 	 *  	 */
DECL|method|GOMStaxWriter
specifier|public
name|GOMStaxWriter
parameter_list|(
specifier|final
name|OutputStream
name|aOutputStream
parameter_list|)
throws|throws
name|XMLStreamException
throws|,
name|FactoryConfigurationError
block|{
name|this
argument_list|(
operator|new
name|OutputStreamWriter
argument_list|(
name|aOutputStream
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Class constructor 	 *  	 * @param aWriter - 	 *            a writer to write the xml stream to. 	 * @throws XMLStreamException - 	 *             if a write exception occurs 	 * @throws FactoryConfigurationError - 	 *             if XMLOutputFactory throws an exception 	 */
DECL|method|GOMStaxWriter
specifier|public
name|GOMStaxWriter
parameter_list|(
specifier|final
name|Writer
name|aWriter
parameter_list|)
throws|throws
name|XMLStreamException
throws|,
name|FactoryConfigurationError
block|{
if|if
condition|(
name|aWriter
operator|==
literal|null
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Given writer must not be null"
argument_list|)
throw|;
name|this
operator|.
name|writer
operator|=
name|XMLOutputFactory
operator|.
name|newInstance
argument_list|(
name|STAX_OUTPUTFACTORY_KEY
argument_list|,
name|GOMStaxWriter
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|)
operator|.
name|createXMLStreamWriter
argument_list|(
name|aWriter
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeSimpleXMLElement(javax.xml.namespace.QName, 	 *      java.util.List, java.lang.String) 	 */
DECL|method|writeSimpleXMLElement
specifier|public
name|void
name|writeSimpleXMLElement
parameter_list|(
name|QName
name|aName
parameter_list|,
name|List
argument_list|<
name|GOMAttribute
argument_list|>
name|aList
parameter_list|,
name|String
name|aValue
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writeStartElement
argument_list|(
name|aName
argument_list|,
name|aList
argument_list|)
expr_stmt|;
name|writeContent
argument_list|(
name|aValue
argument_list|)
expr_stmt|;
name|this
operator|.
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeSimpleXMLElement(javax.xml.namespace.QName, 	 *      java.lang.String, org.apache.lucene.gdata.gom.GOMAttribute) 	 */
DECL|method|writeSimpleXMLElement
specifier|public
name|void
name|writeSimpleXMLElement
parameter_list|(
name|QName
name|aName
parameter_list|,
name|String
name|aValue
parameter_list|,
name|GOMAttribute
name|aAttribute
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|List
argument_list|<
name|GOMAttribute
argument_list|>
name|list
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|aAttribute
operator|!=
literal|null
condition|)
block|{
name|list
operator|=
operator|new
name|ArrayList
argument_list|<
name|GOMAttribute
argument_list|>
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|aAttribute
argument_list|)
expr_stmt|;
block|}
name|writeSimpleXMLElement
argument_list|(
name|aName
argument_list|,
name|list
argument_list|,
name|aValue
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeSimpleXMLElement(java.lang.String, 	 *      java.lang.String, org.apache.lucene.gdata.gom.GOMAttribute) 	 */
DECL|method|writeSimpleXMLElement
specifier|public
name|void
name|writeSimpleXMLElement
parameter_list|(
name|String
name|aName
parameter_list|,
name|String
name|aValue
parameter_list|,
name|GOMAttribute
name|aAttribute
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|List
argument_list|<
name|GOMAttribute
argument_list|>
name|list
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|aAttribute
operator|!=
literal|null
condition|)
block|{
name|list
operator|=
operator|new
name|ArrayList
argument_list|<
name|GOMAttribute
argument_list|>
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|aAttribute
argument_list|)
expr_stmt|;
block|}
name|writeSimpleXMLElement
argument_list|(
name|aName
argument_list|,
name|list
argument_list|,
name|aValue
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeSimpleXMLElement(java.lang.String, 	 *      java.util.List, java.lang.String) 	 */
DECL|method|writeSimpleXMLElement
specifier|public
name|void
name|writeSimpleXMLElement
parameter_list|(
name|String
name|aName
parameter_list|,
name|List
argument_list|<
name|GOMAttribute
argument_list|>
name|aList
parameter_list|,
name|String
name|aValue
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|writeStartElement
argument_list|(
name|aName
argument_list|,
name|aList
argument_list|)
expr_stmt|;
name|writeContent
argument_list|(
name|aValue
argument_list|)
expr_stmt|;
name|this
operator|.
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeAttribute(org.apache.lucene.gdata.gom.GOMAttribute) 	 */
DECL|method|writeAttribute
specifier|public
name|void
name|writeAttribute
parameter_list|(
name|GOMAttribute
name|attribute
parameter_list|)
throws|throws
name|XMLStreamException
block|{
if|if
condition|(
name|attribute
operator|.
name|hasDefaultNamespace
argument_list|()
condition|)
name|this
operator|.
name|writer
operator|.
name|writeAttribute
argument_list|(
name|attribute
operator|.
name|getLocalName
argument_list|()
argument_list|,
name|attribute
operator|.
name|getTextValue
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|this
operator|.
name|writer
operator|.
name|writeAttribute
argument_list|(
name|attribute
operator|.
name|getQname
argument_list|()
operator|.
name|getPrefix
argument_list|()
argument_list|,
name|attribute
operator|.
name|getQname
argument_list|()
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|attribute
operator|.
name|getLocalName
argument_list|()
argument_list|,
name|attribute
operator|.
name|getTextValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeStartElement(java.lang.String, 	 *      java.util.List) 	 */
DECL|method|writeStartElement
specifier|public
name|void
name|writeStartElement
parameter_list|(
name|String
name|aName
parameter_list|,
name|List
argument_list|<
name|GOMAttribute
argument_list|>
name|aList
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|this
operator|.
name|writer
operator|.
name|writeStartElement
argument_list|(
name|aName
argument_list|)
expr_stmt|;
if|if
condition|(
name|aList
operator|!=
literal|null
condition|)
for|for
control|(
name|GOMAttribute
name|attribute
range|:
name|aList
control|)
block|{
name|writeAttribute
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
block|}
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeStartElement(java.lang.String, 	 *      org.apache.lucene.gdata.gom.GOMAttribute) 	 */
DECL|method|writeStartElement
specifier|public
name|void
name|writeStartElement
parameter_list|(
name|String
name|aName
parameter_list|,
name|GOMAttribute
name|aAttribute
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|this
operator|.
name|writer
operator|.
name|writeStartElement
argument_list|(
name|aName
argument_list|)
expr_stmt|;
name|writeAttribute
argument_list|(
name|aAttribute
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeStartElement(java.lang.String) 	 */
DECL|method|writeStartElement
specifier|public
name|void
name|writeStartElement
parameter_list|(
name|String
name|aName
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|this
operator|.
name|writer
operator|.
name|writeStartElement
argument_list|(
name|aName
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeStartElement(javax.xml.namespace.QName, 	 *      java.util.List) 	 */
DECL|method|writeStartElement
specifier|public
name|void
name|writeStartElement
parameter_list|(
name|QName
name|aName
parameter_list|,
name|List
argument_list|<
name|GOMAttribute
argument_list|>
name|aList
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|this
operator|.
name|writer
operator|.
name|writeStartElement
argument_list|(
name|aName
operator|.
name|getPrefix
argument_list|()
argument_list|,
name|aName
operator|.
name|getLocalPart
argument_list|()
argument_list|,
name|aName
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|aList
operator|!=
literal|null
condition|)
for|for
control|(
name|GOMAttribute
name|attribute
range|:
name|aList
control|)
block|{
name|writeAttribute
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
block|}
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeEndElement() 	 */
DECL|method|writeEndElement
specifier|public
name|void
name|writeEndElement
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|this
operator|.
name|writer
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeContent(java.lang.String) 	 */
DECL|method|writeContent
specifier|public
name|void
name|writeContent
parameter_list|(
name|String
name|aContent
parameter_list|)
throws|throws
name|XMLStreamException
block|{
if|if
condition|(
name|aContent
operator|!=
literal|null
condition|)
block|{
name|char
index|[]
name|cs
init|=
name|aContent
operator|.
name|toCharArray
argument_list|()
decl_stmt|;
name|this
operator|.
name|writer
operator|.
name|writeCharacters
argument_list|(
name|cs
argument_list|,
literal|0
argument_list|,
name|cs
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeContentUnescaped(java.lang.String) 	 */
DECL|method|writeContentUnescaped
specifier|public
name|void
name|writeContentUnescaped
parameter_list|(
name|String
name|aContent
parameter_list|)
throws|throws
name|XMLStreamException
block|{
if|if
condition|(
name|aContent
operator|!=
literal|null
condition|)
name|this
operator|.
name|writer
operator|.
name|writeCharacters
argument_list|(
name|aContent
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @see XMLStreamWriter#writeDefaultNamespace(java.lang.String) 	 */
DECL|method|writeDefaultNamespace
specifier|public
name|void
name|writeDefaultNamespace
parameter_list|(
name|String
name|aNsUri
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|this
operator|.
name|writer
operator|.
name|writeDefaultNamespace
argument_list|(
name|aNsUri
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeDefaultNamespace(org.apache.lucene.gdata.gom.GOMNamespace) 	 */
DECL|method|writeDefaultNamespace
specifier|public
name|void
name|writeDefaultNamespace
parameter_list|(
name|GOMNamespace
name|aNameSpace
parameter_list|)
throws|throws
name|XMLStreamException
block|{
if|if
condition|(
name|aNameSpace
operator|!=
literal|null
condition|)
name|writeDefaultNamespace
argument_list|(
name|aNameSpace
operator|.
name|getNamespaceUri
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeNamespace(org.apache.lucene.gdata.gom.GOMNamespace) 	 */
DECL|method|writeNamespace
specifier|public
name|void
name|writeNamespace
parameter_list|(
name|GOMNamespace
name|aNameSpace
parameter_list|)
throws|throws
name|XMLStreamException
block|{
if|if
condition|(
name|aNameSpace
operator|==
literal|null
condition|)
return|return;
if|if
condition|(
name|this
operator|.
name|namespaceSet
operator|.
name|contains
argument_list|(
name|aNameSpace
argument_list|)
condition|)
return|return;
name|this
operator|.
name|namespaceSet
operator|.
name|add
argument_list|(
name|aNameSpace
argument_list|)
expr_stmt|;
name|this
operator|.
name|writer
operator|.
name|writeNamespace
argument_list|(
name|aNameSpace
operator|.
name|getNamespacePrefix
argument_list|()
argument_list|,
name|aNameSpace
operator|.
name|getNamespaceUri
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeStartDocument(java.lang.String, 	 *      java.lang.String) 	 */
DECL|method|writeStartDocument
specifier|public
name|void
name|writeStartDocument
parameter_list|(
name|String
name|aString
parameter_list|,
name|String
name|aString2
parameter_list|)
throws|throws
name|XMLStreamException
block|{
name|this
operator|.
name|writer
operator|.
name|writeStartDocument
argument_list|(
name|aString
argument_list|,
name|aString2
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#writeEndDocument() 	 */
DECL|method|writeEndDocument
specifier|public
name|void
name|writeEndDocument
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|this
operator|.
name|writer
operator|.
name|writeEndDocument
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#flush() 	 */
DECL|method|flush
specifier|public
name|void
name|flush
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|this
operator|.
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.writer.GOMOutputWriter#close() 	 */
DECL|method|close
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|XMLStreamException
block|{
name|this
operator|.
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class
end_unit
