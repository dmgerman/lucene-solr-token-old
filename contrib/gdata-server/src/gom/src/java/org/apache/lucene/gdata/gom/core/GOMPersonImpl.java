begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.gom.core
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|core
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|GOMAttribute
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|GOMNamespace
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|core
operator|.
name|utils
operator|.
name|GOMUtils
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|writer
operator|.
name|GOMOutputWriter
import|;
end_import
begin_comment
comment|/**  * @author Simon Willnauer  *   */
end_comment
begin_class
DECL|class|GOMPersonImpl
specifier|public
class|class
name|GOMPersonImpl
extends|extends
name|AbstractGOMElement
implements|implements
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|GOMPerson
block|{
DECL|field|NAME_LOCAL_NAME
specifier|private
specifier|final
specifier|static
name|String
name|NAME_LOCAL_NAME
init|=
literal|"name"
decl_stmt|;
DECL|field|EMAIL_LOCAL_NAME
specifier|private
specifier|final
specifier|static
name|String
name|EMAIL_LOCAL_NAME
init|=
literal|"email"
decl_stmt|;
DECL|field|URI_LOCAL_NAME
specifier|private
specifier|final
specifier|static
name|String
name|URI_LOCAL_NAME
init|=
literal|"uri"
decl_stmt|;
DECL|field|uri
specifier|protected
name|String
name|uri
decl_stmt|;
DECL|field|email
specifier|protected
name|String
name|email
decl_stmt|;
DECL|field|name
specifier|protected
name|String
name|name
decl_stmt|;
comment|/** 	 *  	 */
DECL|method|GOMPersonImpl
specifier|public
name|GOMPersonImpl
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|localName
operator|=
name|LOCALNAME
expr_stmt|;
name|this
operator|.
name|qname
operator|=
operator|new
name|QName
argument_list|(
name|GOMNamespace
operator|.
name|ATOM_NS_URI
argument_list|,
name|this
operator|.
name|localName
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.GOMPerson#setName(java.lang.String) 	 */
DECL|method|setName
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|aName
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|aName
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.GOMPerson#setEmail(java.lang.String) 	 */
DECL|method|setEmail
specifier|public
name|void
name|setEmail
parameter_list|(
name|String
name|aEmail
parameter_list|)
block|{
name|this
operator|.
name|email
operator|=
name|aEmail
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.GOMPerson#setUri(java.lang.String) 	 */
DECL|method|setUri
specifier|public
name|void
name|setUri
parameter_list|(
name|String
name|aUri
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|aUri
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.GOMPerson#getName() 	 */
DECL|method|getName
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|this
operator|.
name|name
return|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.GOMPerson#getEmail() 	 */
DECL|method|getEmail
specifier|public
name|String
name|getEmail
parameter_list|()
block|{
return|return
name|this
operator|.
name|email
return|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.GOMPerson#getUri() 	 */
DECL|method|getUri
specifier|public
name|String
name|getUri
parameter_list|()
block|{
return|return
name|this
operator|.
name|uri
return|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.GOMElement#writeAtomOutput(org.apache.lucene.gdata.gom.writer.GOMOutputWriter) 	 */
DECL|method|writeAtomOutput
specifier|public
name|void
name|writeAtomOutput
parameter_list|(
name|GOMOutputWriter
name|aStreamWriter
parameter_list|)
throws|throws
name|XMLStreamException
block|{
if|if
condition|(
name|aStreamWriter
operator|==
literal|null
condition|)
throw|throw
operator|new
name|GDataParseException
argument_list|(
literal|"GOMWriter must not be null"
argument_list|)
throw|;
name|List
argument_list|<
name|GOMAttribute
argument_list|>
name|list
init|=
name|getXmlNamespaceAttributes
argument_list|()
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|xmlLang
operator|!=
literal|null
condition|)
block|{
name|list
operator|=
operator|new
name|ArrayList
argument_list|<
name|GOMAttribute
argument_list|>
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|GOMUtils
operator|.
name|buildXMLNamespaceAttribute
argument_list|(
name|this
operator|.
name|xmlLang
argument_list|,
name|XML_LANG
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|aStreamWriter
operator|.
name|writeStartElement
argument_list|(
name|this
operator|.
name|qname
argument_list|,
name|list
argument_list|)
expr_stmt|;
name|aStreamWriter
operator|.
name|writeSimpleXMLElement
argument_list|(
name|NAME_LOCAL_NAME
argument_list|,
name|this
operator|.
name|name
argument_list|,
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|email
operator|!=
literal|null
condition|)
name|aStreamWriter
operator|.
name|writeSimpleXMLElement
argument_list|(
name|EMAIL_LOCAL_NAME
argument_list|,
name|this
operator|.
name|email
argument_list|,
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|uri
operator|!=
literal|null
condition|)
name|aStreamWriter
operator|.
name|writeSimpleXMLElement
argument_list|(
name|URI_LOCAL_NAME
argument_list|,
name|this
operator|.
name|uri
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|aStreamWriter
operator|.
name|writeEndElement
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.GOMElement#writeRssOutput(org.apache.lucene.gdata.gom.writer.GOMOutputWriter) 	 */
DECL|method|writeRssOutput
specifier|public
name|void
name|writeRssOutput
parameter_list|(
name|GOMOutputWriter
name|aStreamWriter
parameter_list|)
throws|throws
name|XMLStreamException
block|{
comment|//
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.core.AbstractGOMElement#getChildParser(javax.xml.namespace.QName) 	 */
annotation|@
name|Override
DECL|method|getChildParser
specifier|public
name|AtomParser
name|getChildParser
parameter_list|(
name|QName
name|aName
parameter_list|)
block|{
if|if
condition|(
name|aName
operator|==
literal|null
condition|)
throw|throw
operator|new
name|GDataParseException
argument_list|(
literal|"QName must not be null"
argument_list|)
throw|;
if|if
condition|(
name|aName
operator|.
name|getNamespaceURI
argument_list|()
operator|.
name|equals
argument_list|(
name|GOMNamespace
operator|.
name|ATOM_NS_URI
argument_list|)
condition|)
block|{
if|if
condition|(
name|aName
operator|.
name|getLocalPart
argument_list|()
operator|.
name|equals
argument_list|(
name|NAME_LOCAL_NAME
argument_list|)
condition|)
return|return
name|this
operator|.
expr|new
name|NameParser
argument_list|()
return|;
if|if
condition|(
name|aName
operator|.
name|getLocalPart
argument_list|()
operator|.
name|equals
argument_list|(
name|URI_LOCAL_NAME
argument_list|)
condition|)
return|return
name|this
operator|.
expr|new
name|UriParser
argument_list|()
return|;
if|if
condition|(
name|aName
operator|.
name|getLocalPart
argument_list|()
operator|.
name|equals
argument_list|(
name|EMAIL_LOCAL_NAME
argument_list|)
condition|)
return|return
name|this
operator|.
expr|new
name|EmailParser
argument_list|()
return|;
block|}
return|return
name|super
operator|.
name|getChildParser
argument_list|(
name|aName
argument_list|)
return|;
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.core.AbstractGOMElement#processEndElement() 	 */
annotation|@
name|Override
DECL|method|processEndElement
specifier|public
name|void
name|processEndElement
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|name
operator|==
literal|null
condition|)
throw|throw
operator|new
name|GDataParseException
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|AtomParser
operator|.
name|MISSING_ELEMENT_CHILD
argument_list|,
name|this
operator|.
name|localName
argument_list|,
name|NAME_LOCAL_NAME
argument_list|)
argument_list|)
throw|;
block|}
DECL|class|NameParser
class|class
name|NameParser
extends|extends
name|SimpleElementParser
block|{
DECL|method|NameParser
name|NameParser
parameter_list|()
block|{
name|this
operator|.
name|localname
operator|=
name|NAME_LOCAL_NAME
expr_stmt|;
block|}
comment|/** 		 * @see org.apache.lucene.gdata.gom.core.AtomParser#processEndElement() 		 */
DECL|method|processEndElement
specifier|public
name|void
name|processEndElement
parameter_list|()
block|{
if|if
condition|(
name|name
operator|!=
literal|null
condition|)
throw|throw
operator|new
name|GDataParseException
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|AtomParser
operator|.
name|DUPLICATE_ELEMENT
argument_list|,
name|this
operator|.
name|localname
argument_list|)
argument_list|)
throw|;
if|if
condition|(
name|this
operator|.
name|aString
operator|!=
literal|null
condition|)
name|name
operator|=
name|this
operator|.
name|aString
expr_stmt|;
block|}
block|}
DECL|class|UriParser
class|class
name|UriParser
extends|extends
name|SimpleElementParser
block|{
DECL|method|UriParser
name|UriParser
parameter_list|()
block|{
name|this
operator|.
name|localname
operator|=
name|URI_LOCAL_NAME
expr_stmt|;
block|}
comment|/** 		 * @see org.apache.lucene.gdata.gom.core.AtomParser#processEndElement() 		 */
DECL|method|processEndElement
specifier|public
name|void
name|processEndElement
parameter_list|()
block|{
if|if
condition|(
name|uri
operator|!=
literal|null
condition|)
throw|throw
operator|new
name|GDataParseException
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|AtomParser
operator|.
name|DUPLICATE_ELEMENT
argument_list|,
name|this
operator|.
name|localname
argument_list|)
argument_list|)
throw|;
if|if
condition|(
name|this
operator|.
name|aString
operator|!=
literal|null
condition|)
name|uri
operator|=
name|this
operator|.
name|aString
expr_stmt|;
block|}
block|}
DECL|class|EmailParser
class|class
name|EmailParser
extends|extends
name|SimpleElementParser
block|{
DECL|method|EmailParser
name|EmailParser
parameter_list|()
block|{
name|this
operator|.
name|localname
operator|=
name|EMAIL_LOCAL_NAME
expr_stmt|;
block|}
comment|/** 		 * @see org.apache.lucene.gdata.gom.core.AtomParser#processEndElement() 		 */
DECL|method|processEndElement
specifier|public
name|void
name|processEndElement
parameter_list|()
block|{
if|if
condition|(
name|email
operator|!=
literal|null
condition|)
throw|throw
operator|new
name|GDataParseException
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|AtomParser
operator|.
name|DUPLICATE_ELEMENT
argument_list|,
name|this
operator|.
name|localname
argument_list|)
argument_list|)
throw|;
if|if
condition|(
name|this
operator|.
name|aString
operator|!=
literal|null
condition|)
name|email
operator|=
name|this
operator|.
name|aString
expr_stmt|;
block|}
block|}
comment|/** 	 * @see org.apache.lucene.gdata.gom.core.AbstractGOMElement#writeRssOutput(org.apache.lucene.gdata.gom.writer.GOMOutputWriter, 	 *      java.lang.String) 	 */
annotation|@
name|Override
DECL|method|writeRssOutput
specifier|public
name|void
name|writeRssOutput
parameter_list|(
name|GOMOutputWriter
name|aStreamWriter
parameter_list|,
name|String
name|aRssName
parameter_list|)
throws|throws
name|XMLStreamException
block|{
if|if
condition|(
name|aStreamWriter
operator|==
literal|null
condition|)
throw|throw
operator|new
name|GDataParseException
argument_list|(
literal|"GOMWriter must not be null"
argument_list|)
throw|;
name|StringBuilder
name|builder
init|=
operator|new
name|StringBuilder
argument_list|(
literal|""
argument_list|)
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|email
operator|!=
literal|null
condition|)
name|builder
operator|.
name|append
argument_list|(
name|this
operator|.
name|email
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|name
operator|!=
literal|null
condition|)
name|builder
operator|.
name|append
argument_list|(
literal|"("
argument_list|)
operator|.
name|append
argument_list|(
name|this
operator|.
name|name
argument_list|)
operator|.
name|append
argument_list|(
literal|")"
argument_list|)
expr_stmt|;
name|aStreamWriter
operator|.
name|writeSimpleXMLElement
argument_list|(
name|aRssName
argument_list|,
name|getXmlNamespaceAttributes
argument_list|()
argument_list|,
name|builder
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
