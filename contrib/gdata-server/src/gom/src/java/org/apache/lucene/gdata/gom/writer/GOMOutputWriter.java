begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.gom.writer
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|writer
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|GOMAttribute
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|GOMNamespace
import|;
end_import
begin_comment
comment|/**  * @author Simon Willnauer  *   */
end_comment
begin_interface
DECL|interface|GOMOutputWriter
specifier|public
interface|interface
name|GOMOutputWriter
block|{
comment|/** 	 * Writes a simple element with full namespace 	 *  	 * @param aName - 	 *            element QName 	 * @param aList - 	 *            attribute list 	 * @param aValue - 	 *            character value 	 * @throws XMLStreamException - 	 *             if a write exception occurs 	 */
DECL|method|writeSimpleXMLElement
specifier|public
specifier|abstract
name|void
name|writeSimpleXMLElement
parameter_list|(
name|QName
name|aName
parameter_list|,
name|List
argument_list|<
name|GOMAttribute
argument_list|>
name|aList
parameter_list|,
name|String
name|aValue
parameter_list|)
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * Writes a simple element with full namespace 	 *  	 * @param aName - 	 *            element QName 	 * @param aAttribute - 	 *            attribute 	 * @param aValue - 	 *            character value 	 * @throws XMLStreamException - 	 *             if a write exception occurs 	 */
DECL|method|writeSimpleXMLElement
specifier|public
specifier|abstract
name|void
name|writeSimpleXMLElement
parameter_list|(
name|QName
name|aName
parameter_list|,
name|String
name|aValue
parameter_list|,
name|GOMAttribute
name|aAttribute
parameter_list|)
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * Writes a simple element with full namespace 	 *  	 * @param aName - 	 *            the local name of the element 	 * @param aAttribute - 	 *            attribute 	 * @param aValue - 	 *            character value 	 * @throws XMLStreamException - 	 *             if a write exception occurs 	 */
DECL|method|writeSimpleXMLElement
specifier|public
specifier|abstract
name|void
name|writeSimpleXMLElement
parameter_list|(
name|String
name|aName
parameter_list|,
name|String
name|aValue
parameter_list|,
name|GOMAttribute
name|aAttribute
parameter_list|)
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * Writes a simple element with default namespace 	 *  	 * @param aName - 	 *            elements name 	 * @param aList - 	 *            attribute list 	 * @param aValue - 	 *            character value 	 * @throws XMLStreamException - 	 *             if a write exception occurs 	 */
DECL|method|writeSimpleXMLElement
specifier|public
specifier|abstract
name|void
name|writeSimpleXMLElement
parameter_list|(
name|String
name|aName
parameter_list|,
name|List
argument_list|<
name|GOMAttribute
argument_list|>
name|aList
parameter_list|,
name|String
name|aValue
parameter_list|)
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * writes a attribute with the attribute namespace Uri 	 *  	 * @param attribute - 	 *            the attribute 	 * @throws XMLStreamException - 	 *             if a write exception occurs 	 */
DECL|method|writeAttribute
specifier|public
specifier|abstract
name|void
name|writeAttribute
parameter_list|(
name|GOMAttribute
name|attribute
parameter_list|)
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * @param aName 	 * @param aList 	 * @throws XMLStreamException 	 */
DECL|method|writeStartElement
specifier|public
specifier|abstract
name|void
name|writeStartElement
parameter_list|(
name|String
name|aName
parameter_list|,
name|List
argument_list|<
name|GOMAttribute
argument_list|>
name|aList
parameter_list|)
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * @param aName 	 * @param aAttribute 	 * @throws XMLStreamException 	 */
DECL|method|writeStartElement
specifier|public
specifier|abstract
name|void
name|writeStartElement
parameter_list|(
name|String
name|aName
parameter_list|,
name|GOMAttribute
name|aAttribute
parameter_list|)
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * @param aName 	 * @throws XMLStreamException 	 */
DECL|method|writeStartElement
specifier|public
specifier|abstract
name|void
name|writeStartElement
parameter_list|(
name|String
name|aName
parameter_list|)
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * @param aName 	 * @param aList 	 * @throws XMLStreamException 	 */
DECL|method|writeStartElement
specifier|public
specifier|abstract
name|void
name|writeStartElement
parameter_list|(
name|QName
name|aName
parameter_list|,
name|List
argument_list|<
name|GOMAttribute
argument_list|>
name|aList
parameter_list|)
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * @throws XMLStreamException 	 */
DECL|method|writeEndElement
specifier|public
specifier|abstract
name|void
name|writeEndElement
parameter_list|()
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * @param aContent 	 * @throws XMLStreamException 	 */
DECL|method|writeContent
specifier|public
specifier|abstract
name|void
name|writeContent
parameter_list|(
name|String
name|aContent
parameter_list|)
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * @param aContent 	 * @throws XMLStreamException 	 */
DECL|method|writeContentUnescaped
specifier|public
specifier|abstract
name|void
name|writeContentUnescaped
parameter_list|(
name|String
name|aContent
parameter_list|)
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * @param aNameSpace 	 * @throws XMLStreamException 	 */
DECL|method|writeDefaultNamespace
specifier|public
specifier|abstract
name|void
name|writeDefaultNamespace
parameter_list|(
name|GOMNamespace
name|aNameSpace
parameter_list|)
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * @param aNameSpace 	 * @throws XMLStreamException 	 */
DECL|method|writeNamespace
specifier|public
specifier|abstract
name|void
name|writeNamespace
parameter_list|(
name|GOMNamespace
name|aNameSpace
parameter_list|)
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * @param aString 	 * @param aString2 	 * @throws XMLStreamException 	 */
DECL|method|writeStartDocument
specifier|public
specifier|abstract
name|void
name|writeStartDocument
parameter_list|(
name|String
name|aString
parameter_list|,
name|String
name|aString2
parameter_list|)
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * Writes a end element tag according to the start element tag 	 *  	 * @throws XMLStreamException - 	 *             if no start tag has been written or the element stack points 	 *             to a different element 	 */
DECL|method|writeEndDocument
specifier|public
specifier|abstract
name|void
name|writeEndDocument
parameter_list|()
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * Flush the GOMWriter 	 *  	 * @throws XMLStreamException 	 */
DECL|method|flush
specifier|public
specifier|abstract
name|void
name|flush
parameter_list|()
throws|throws
name|XMLStreamException
function_decl|;
comment|/** 	 * Closes the GOM Writer 	 *  	 * @throws XMLStreamException 	 */
DECL|method|close
specifier|public
specifier|abstract
name|void
name|close
parameter_list|()
throws|throws
name|XMLStreamException
function_decl|;
block|}
end_interface
end_unit
