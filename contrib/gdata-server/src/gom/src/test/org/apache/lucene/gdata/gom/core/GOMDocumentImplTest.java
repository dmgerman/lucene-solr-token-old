begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.gom.core
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|core
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|FactoryConfigurationError
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|writer
operator|.
name|GOMStaxWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|gom
operator|.
name|writer
operator|.
name|GOMOutputWriter
import|;
end_import
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_comment
comment|/**  * @author Simon Willnauer  *   */
end_comment
begin_class
DECL|class|GOMDocumentImplTest
specifier|public
class|class
name|GOMDocumentImplTest
extends|extends
name|TestCase
block|{
comment|/* 	 * Test method for 	 * 'org.apache.lucene.gdata.gom.core.GOMDocumentImpl.writeAtomOutput(GOMWriter)' 	 */
DECL|method|testWriteAtomOutput
specifier|public
name|void
name|testWriteAtomOutput
parameter_list|()
throws|throws
name|XMLStreamException
throws|,
name|FactoryConfigurationError
block|{
name|GOMDocumentImpl
argument_list|<
name|ArbitraryGOMXml
argument_list|>
name|impl
init|=
operator|new
name|GOMDocumentImpl
argument_list|<
name|ArbitraryGOMXml
argument_list|>
argument_list|()
decl_stmt|;
name|impl
operator|.
name|setRootElement
argument_list|(
operator|new
name|ArbitraryGOMXml
argument_list|(
operator|new
name|QName
argument_list|(
literal|"test"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|StringWriter
name|strWriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|GOMOutputWriter
name|writer
init|=
operator|new
name|GOMStaxWriter
argument_list|(
name|strWriter
argument_list|)
decl_stmt|;
name|impl
operator|.
name|writeAtomOutput
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<?xml version='1.0' encoding='UTF-8'?><test/>"
argument_list|,
name|strWriter
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|impl
operator|.
name|setRootElement
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|{
name|StringWriter
name|strWriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|GOMOutputWriter
name|writer
init|=
operator|new
name|GOMStaxWriter
argument_list|(
name|strWriter
argument_list|)
decl_stmt|;
name|impl
operator|.
name|writeAtomOutput
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<?xml version='1.0' encoding='UTF-8'?>"
argument_list|,
name|strWriter
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|impl
operator|.
name|setVersion
argument_list|(
literal|"2.0"
argument_list|)
expr_stmt|;
name|impl
operator|.
name|setCharacterEncoding
argument_list|(
literal|"ISO-8859-1"
argument_list|)
expr_stmt|;
block|{
name|StringWriter
name|strWriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|GOMOutputWriter
name|writer
init|=
operator|new
name|GOMStaxWriter
argument_list|(
name|strWriter
argument_list|)
decl_stmt|;
name|impl
operator|.
name|writeAtomOutput
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<?xml version='2.0' encoding='ISO-8859-1'?>"
argument_list|,
name|strWriter
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/* 	 * Test method for 	 * 'org.apache.lucene.gdata.gom.core.GOMDocumentImpl.writeRssOutput(GOMWriter)' 	 */
DECL|method|testWriteRssOutput
specifier|public
name|void
name|testWriteRssOutput
parameter_list|()
throws|throws
name|XMLStreamException
throws|,
name|FactoryConfigurationError
block|{
name|GOMDocumentImpl
argument_list|<
name|ArbitraryGOMXml
argument_list|>
name|impl
init|=
operator|new
name|GOMDocumentImpl
argument_list|<
name|ArbitraryGOMXml
argument_list|>
argument_list|()
decl_stmt|;
name|impl
operator|.
name|setRootElement
argument_list|(
operator|new
name|ArbitraryGOMXml
argument_list|(
operator|new
name|QName
argument_list|(
literal|"test"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|StringWriter
name|strWriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|GOMOutputWriter
name|writer
init|=
operator|new
name|GOMStaxWriter
argument_list|(
name|strWriter
argument_list|)
decl_stmt|;
name|impl
operator|.
name|writeRssOutput
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<?xml version='1.0' encoding='UTF-8'?><test/>"
argument_list|,
name|strWriter
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|impl
operator|.
name|setRootElement
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|{
name|StringWriter
name|strWriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|GOMOutputWriter
name|writer
init|=
operator|new
name|GOMStaxWriter
argument_list|(
name|strWriter
argument_list|)
decl_stmt|;
name|impl
operator|.
name|writeRssOutput
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<?xml version='1.0' encoding='UTF-8'?>"
argument_list|,
name|strWriter
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|impl
operator|.
name|setVersion
argument_list|(
literal|"2.0"
argument_list|)
expr_stmt|;
name|impl
operator|.
name|setCharacterEncoding
argument_list|(
literal|"ISO-8859-1"
argument_list|)
expr_stmt|;
block|{
name|StringWriter
name|strWriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|GOMOutputWriter
name|writer
init|=
operator|new
name|GOMStaxWriter
argument_list|(
name|strWriter
argument_list|)
decl_stmt|;
name|impl
operator|.
name|writeRssOutput
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"<?xml version='2.0' encoding='ISO-8859-1'?>"
argument_list|,
name|strWriter
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
