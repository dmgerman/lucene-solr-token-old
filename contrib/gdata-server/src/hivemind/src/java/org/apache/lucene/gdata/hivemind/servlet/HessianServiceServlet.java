begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.hivemind.servlet
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|hivemind
operator|.
name|servlet
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServlet
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hivemind
operator|.
name|Registry
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hivemind
operator|.
name|servlet
operator|.
name|HiveMindFilter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|hivemind
operator|.
name|webservice
operator|.
name|HessianServiceSkeletonInvoker
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|hivemind
operator|.
name|webservice
operator|.
name|HessianSkeletonProvider
import|;
end_import
begin_comment
comment|/**  * Central Hessian servlet which provides access to all hessian exposed services  * via a single servlet.  *   * @author Simon Willnauer  *   */
end_comment
begin_class
DECL|class|HessianServiceServlet
specifier|public
class|class
name|HessianServiceServlet
extends|extends
name|HttpServlet
block|{
comment|/**      *       */
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|5519783120466089391L
decl_stmt|;
comment|/**      * @see javax.servlet.http.HttpServlet#doPost(javax.servlet.http.HttpServletRequest,      *      javax.servlet.http.HttpServletResponse)      */
annotation|@
name|Override
DECL|method|doPost
specifier|protected
name|void
name|doPost
parameter_list|(
name|HttpServletRequest
name|arg0
parameter_list|,
name|HttpServletResponse
name|arg1
parameter_list|)
throws|throws
name|ServletException
throws|,
name|IOException
block|{
try|try
block|{
name|HessianSkeletonProvider
name|provider
init|=
name|getSkeletonProvider
argument_list|(
name|arg0
argument_list|)
decl_stmt|;
name|HessianServiceSkeletonInvoker
name|invoker
init|=
name|provider
operator|.
name|getServiceSkeletonInvoker
argument_list|(
name|arg0
argument_list|)
decl_stmt|;
name|invoker
operator|.
name|invoke
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
literal|"Nested Exception occured -- Message: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|getSkeletonProvider
specifier|private
name|HessianSkeletonProvider
name|getSkeletonProvider
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|Registry
name|reg
init|=
name|HiveMindFilter
operator|.
name|getRegistry
argument_list|(
name|request
argument_list|)
decl_stmt|;
return|return
operator|(
name|HessianSkeletonProvider
operator|)
name|reg
operator|.
name|getService
argument_list|(
name|HessianSkeletonProvider
operator|.
name|class
argument_list|)
return|;
block|}
block|}
end_class
end_unit
