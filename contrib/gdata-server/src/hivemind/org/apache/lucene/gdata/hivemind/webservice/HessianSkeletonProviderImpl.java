begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.hivemind.webservice
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|hivemind
operator|.
name|webservice
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import
begin_import
import|import
name|com
operator|.
name|caucho
operator|.
name|hessian
operator|.
name|server
operator|.
name|HessianSkeleton
import|;
end_import
begin_comment
comment|/**  * Simple provider implementation.  * @author Simon Willnauer  *   */
end_comment
begin_class
DECL|class|HessianSkeletonProviderImpl
specifier|public
class|class
name|HessianSkeletonProviderImpl
implements|implements
name|HessianSkeletonProvider
block|{
DECL|field|mapping
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|WebserviceMappingBean
argument_list|>
name|mapping
decl_stmt|;
DECL|field|skeletonCache
specifier|private
name|ConcurrentHashMap
argument_list|<
name|String
argument_list|,
name|HessianSkeleton
argument_list|>
name|skeletonCache
init|=
operator|new
name|ConcurrentHashMap
argument_list|<
name|String
argument_list|,
name|HessianSkeleton
argument_list|>
argument_list|()
decl_stmt|;
comment|/**      * Creates a new HessianSkeletonProviderImpl instance      */
DECL|method|HessianSkeletonProviderImpl
specifier|public
name|HessianSkeletonProviderImpl
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
comment|/**      * The last part of the request URL is used to identify a configured service      * mapping.      *       * @param path -      *            the servletrequest path info      * @return - the corresponding HessianSkeleton      */
DECL|method|getMappingFromPath
specifier|protected
name|HessianSkeleton
name|getMappingFromPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
if|if
condition|(
name|path
operator|.
name|endsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
name|path
operator|=
name|path
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|path
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|String
name|requestedService
init|=
name|path
operator|.
name|substring
argument_list|(
name|path
operator|.
name|lastIndexOf
argument_list|(
literal|"/"
argument_list|)
operator|+
literal|1
argument_list|)
decl_stmt|;
name|HessianSkeleton
name|retVal
init|=
name|this
operator|.
name|skeletonCache
operator|.
name|get
argument_list|(
name|requestedService
argument_list|)
decl_stmt|;
if|if
condition|(
name|retVal
operator|==
literal|null
condition|)
block|{
name|WebserviceMappingBean
name|wsBean
init|=
name|this
operator|.
name|mapping
operator|.
name|get
argument_list|(
name|requestedService
argument_list|)
decl_stmt|;
if|if
condition|(
name|wsBean
operator|==
literal|null
condition|)
throw|throw
operator|new
name|NoSuchServiceException
argument_list|()
throw|;
if|if
condition|(
operator|!
name|checkInterface
argument_list|(
name|wsBean
argument_list|)
condition|)
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"The configured webservice interface is not assignable from the corresponding service"
argument_list|)
throw|;
name|retVal
operator|=
operator|new
name|HessianSkeleton
argument_list|(
name|wsBean
operator|.
name|getServiceImpl
argument_list|()
argument_list|,
name|wsBean
operator|.
name|getServiceInterface
argument_list|()
argument_list|)
expr_stmt|;
comment|/*              * rather create this service twice as synchronize the whole block              */
name|this
operator|.
name|skeletonCache
operator|.
name|putIfAbsent
argument_list|(
name|requestedService
argument_list|,
name|retVal
argument_list|)
expr_stmt|;
block|}
return|return
name|retVal
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|checkInterface
specifier|private
name|boolean
name|checkInterface
parameter_list|(
name|WebserviceMappingBean
name|bean
parameter_list|)
block|{
return|return
name|bean
operator|.
name|getServiceInterface
argument_list|()
operator|.
name|isAssignableFrom
argument_list|(
name|bean
operator|.
name|getServiceImpl
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * @see org.apache.lucene.gdata.hivemind.webservice.HessianSkeletonProvider#getServiceSkeletonInvoker(javax.servlet.http.HttpServletRequest)      */
DECL|method|getServiceSkeletonInvoker
specifier|public
name|HessianServiceSkeletonInvoker
name|getServiceSkeletonInvoker
parameter_list|(
name|HttpServletRequest
name|arg0
parameter_list|)
block|{
if|if
condition|(
name|arg0
operator|==
literal|null
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"HttpServletRequest must not be null"
argument_list|)
throw|;
name|HessianSkeleton
name|mappingFromRequest
init|=
name|getMappingFromPath
argument_list|(
name|arg0
operator|.
name|getPathInfo
argument_list|()
argument_list|)
decl_stmt|;
return|return
operator|new
name|HessianServiceSkeletonInvokerImpl
argument_list|(
name|mappingFromRequest
argument_list|)
return|;
block|}
comment|/**      * @return Returns the mapping.      */
DECL|method|getMapping
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|WebserviceMappingBean
argument_list|>
name|getMapping
parameter_list|()
block|{
return|return
name|this
operator|.
name|mapping
return|;
block|}
comment|/**      * @param mapping      *            The mapping to set.      */
DECL|method|setMapping
specifier|public
name|void
name|setMapping
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|WebserviceMappingBean
argument_list|>
name|mapping
parameter_list|)
block|{
name|this
operator|.
name|mapping
operator|=
name|mapping
expr_stmt|;
block|}
block|}
end_class
end_unit
