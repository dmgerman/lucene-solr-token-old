begin_unit
begin_comment
comment|/**   * Copyright 2004 The Apache Software Foundation   *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   *     http://www.apache.org/licenses/LICENSE-2.0   *   * Unless required by applicable law or agreed to in writing, software   * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.search.config
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|config
package|;
end_package
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|data
operator|.
name|ServerBaseEntry
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|analysis
operator|.
name|ContentStrategy
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|analysis
operator|.
name|Indexable
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|analysis
operator|.
name|NotIndexableException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|analysis
operator|.
name|PlainTextStrategy
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|config
operator|.
name|IndexSchemaField
operator|.
name|ContentType
import|;
end_import
begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import
begin_comment
comment|/**  *  *  */
end_comment
begin_class
DECL|class|TestIndexSchemaField
specifier|public
class|class
name|TestIndexSchemaField
extends|extends
name|TestCase
block|{
DECL|method|setUp
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
DECL|method|tearDown
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.search.config.IndexSchemaField.checkRequieredValues()'      */
DECL|method|testCheckRequieredValues
specifier|public
name|void
name|testCheckRequieredValues
parameter_list|()
block|{
name|IndexSchemaField
name|f
init|=
operator|new
name|IndexSchemaField
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|f
operator|.
name|checkRequieredValues
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setName
argument_list|(
literal|"someName"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|f
operator|.
name|checkRequieredValues
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setPath
argument_list|(
literal|"somePath"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|f
operator|.
name|checkRequieredValues
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setType
argument_list|(
literal|"text"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|f
operator|.
name|checkRequieredValues
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setType
argument_list|(
literal|"mixed"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|f
operator|.
name|checkRequieredValues
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setTypePath
argument_list|(
literal|"sometypepath"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|f
operator|.
name|checkRequieredValues
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setType
argument_list|(
literal|"custom"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|f
operator|.
name|checkRequieredValues
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setFieldClass
argument_list|(
name|TestContentStragtegy
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|f
operator|.
name|checkRequieredValues
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testSetFieldType
specifier|public
name|void
name|testSetFieldType
parameter_list|()
block|{
name|IndexSchemaField
name|f
init|=
operator|new
name|IndexSchemaField
argument_list|()
decl_stmt|;
name|f
operator|.
name|setFieldClass
argument_list|(
name|TestContentStragtegy
operator|.
name|class
argument_list|)
expr_stmt|;
try|try
block|{
name|f
operator|.
name|setFieldClass
argument_list|(
name|PlainTextStrategy
operator|.
name|class
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"no pub const."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{                      }
try|try
block|{
name|f
operator|.
name|setFieldClass
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"is null"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{                      }
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.search.config.IndexSchemaField.setAnalyzerClass(Class<? extends Analyzer>)'      */
DECL|method|testSetType
specifier|public
name|void
name|testSetType
parameter_list|()
block|{
name|IndexSchemaField
name|f
init|=
operator|new
name|IndexSchemaField
argument_list|()
decl_stmt|;
name|f
operator|.
name|setType
argument_list|(
literal|"notatype"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|f
operator|.
name|getContentType
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setType
argument_list|(
literal|"custom"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ContentType
operator|.
name|CUSTOM
argument_list|,
name|f
operator|.
name|getContentType
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setType
argument_list|(
literal|"text"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ContentType
operator|.
name|TEXT
argument_list|,
name|f
operator|.
name|getContentType
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.search.config.IndexSchemaField.setStoreByName(String)'      */
DECL|method|testSetStoreByName
specifier|public
name|void
name|testSetStoreByName
parameter_list|()
block|{
name|IndexSchemaField
name|f
init|=
operator|new
name|IndexSchemaField
argument_list|()
decl_stmt|;
name|f
operator|.
name|setStoreByName
argument_list|(
literal|"someother"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|,
name|f
operator|.
name|getStore
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setStoreByName
argument_list|(
literal|"COMPRESS"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Field
operator|.
name|Store
operator|.
name|COMPRESS
argument_list|,
name|f
operator|.
name|getStore
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setStoreByName
argument_list|(
literal|"YeS"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|,
name|f
operator|.
name|getStore
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setStoreByName
argument_list|(
literal|"No"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|,
name|f
operator|.
name|getStore
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.search.config.IndexSchemaField.setIndexByName(String)'      */
DECL|method|testSetIndexByName
specifier|public
name|void
name|testSetIndexByName
parameter_list|()
block|{
name|IndexSchemaField
name|f
init|=
operator|new
name|IndexSchemaField
argument_list|()
decl_stmt|;
name|f
operator|.
name|setIndexByName
argument_list|(
literal|"UN_done"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Field
operator|.
name|Index
operator|.
name|TOKENIZED
argument_list|,
name|f
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setIndexByName
argument_list|(
literal|"UN_tokenized"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Field
operator|.
name|Index
operator|.
name|UN_TOKENIZED
argument_list|,
name|f
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setIndexByName
argument_list|(
literal|"tokenized"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Field
operator|.
name|Index
operator|.
name|TOKENIZED
argument_list|,
name|f
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setIndexByName
argument_list|(
literal|"no"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Field
operator|.
name|Index
operator|.
name|NO
argument_list|,
name|f
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setIndexByName
argument_list|(
literal|"no_norms"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Field
operator|.
name|Index
operator|.
name|NO_NORMS
argument_list|,
name|f
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testSetboost
specifier|public
name|void
name|testSetboost
parameter_list|()
block|{
name|IndexSchemaField
name|f
init|=
operator|new
name|IndexSchemaField
argument_list|()
decl_stmt|;
name|f
operator|.
name|setBoost
argument_list|(
operator|-
literal|0.1f
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.0f
argument_list|,
name|f
operator|.
name|getBoost
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setBoost
argument_list|(
literal|2.50f
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2.50f
argument_list|,
name|f
operator|.
name|getBoost
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testToSTringNoNullPEx
specifier|public
name|void
name|testToSTringNoNullPEx
parameter_list|()
block|{
name|assertNotNull
argument_list|(
operator|new
name|IndexSchemaField
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|class|TestContentStragtegy
specifier|static
class|class
name|TestContentStragtegy
extends|extends
name|ContentStrategy
block|{
DECL|method|TestContentStragtegy
specifier|public
name|TestContentStragtegy
parameter_list|(
name|IndexSchemaField
name|fieldConfiguration
parameter_list|)
block|{
name|super
argument_list|(
name|fieldConfiguration
argument_list|)
expr_stmt|;
comment|// TODO Auto-generated constructor stub
block|}
annotation|@
name|Override
DECL|method|processIndexable
specifier|public
name|void
name|processIndexable
parameter_list|(
name|Indexable
argument_list|<
name|?
extends|extends
name|Node
argument_list|,
name|?
extends|extends
name|ServerBaseEntry
argument_list|>
name|indexable
parameter_list|)
throws|throws
name|NotIndexableException
block|{         }
block|}
block|}
end_class
end_unit
