begin_unit
begin_comment
comment|/**   * Copyright 2004 The Apache Software Foundation   *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   *     http://www.apache.org/licenses/LICENSE-2.0   *   * Unless required by applicable law or agreed to in writing, software   * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.search.query
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|query
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|config
operator|.
name|IndexSchema
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|config
operator|.
name|IndexSchemaField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|config
operator|.
name|IndexSchemaField
operator|.
name|ContentType
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|utils
operator|.
name|ProvidedServiceStub
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|RangeQuery
import|;
end_import
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_comment
comment|/**  * @author Simon Willnauer  *  */
end_comment
begin_class
DECL|class|TestQueryTranslator
specifier|public
class|class
name|TestQueryTranslator
extends|extends
name|TestCase
block|{
DECL|field|CONTENT_FIELD
specifier|private
specifier|static
specifier|final
name|String
name|CONTENT_FIELD
init|=
literal|"content"
decl_stmt|;
DECL|field|UPDATED_FIELD
specifier|private
specifier|static
specifier|final
name|String
name|UPDATED_FIELD
init|=
literal|"updated"
decl_stmt|;
DECL|field|schema
specifier|private
name|IndexSchema
name|schema
decl_stmt|;
DECL|field|parameterMap
name|Map
argument_list|<
name|String
argument_list|,
name|String
index|[]
argument_list|>
name|parameterMap
decl_stmt|;
comment|/*      * @see junit.framework.TestCase#setUp()      */
annotation|@
name|Override
DECL|method|setUp
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|schema
operator|=
operator|new
name|IndexSchema
argument_list|()
expr_stmt|;
comment|//must be set
name|this
operator|.
name|schema
operator|.
name|setDefaultSearchField
argument_list|(
name|CONTENT_FIELD
argument_list|)
expr_stmt|;
name|this
operator|.
name|schema
operator|.
name|setIndexLocation
argument_list|(
literal|"/tmp/"
argument_list|)
expr_stmt|;
name|this
operator|.
name|schema
operator|.
name|setName
argument_list|(
name|ProvidedServiceStub
operator|.
name|SERVICE_NAME
argument_list|)
expr_stmt|;
name|IndexSchemaField
name|field
init|=
operator|new
name|IndexSchemaField
argument_list|()
decl_stmt|;
name|field
operator|.
name|setName
argument_list|(
name|CONTENT_FIELD
argument_list|)
expr_stmt|;
name|field
operator|.
name|setContentType
argument_list|(
name|ContentType
operator|.
name|TEXT
argument_list|)
expr_stmt|;
name|IndexSchemaField
name|field1
init|=
operator|new
name|IndexSchemaField
argument_list|()
decl_stmt|;
name|field1
operator|.
name|setName
argument_list|(
name|UPDATED_FIELD
argument_list|)
expr_stmt|;
name|field1
operator|.
name|setContentType
argument_list|(
name|ContentType
operator|.
name|GDATADATE
argument_list|)
expr_stmt|;
name|this
operator|.
name|schema
operator|.
name|addSchemaField
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|this
operator|.
name|schema
operator|.
name|addSchemaField
argument_list|(
name|field1
argument_list|)
expr_stmt|;
name|parameterMap
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
index|[]
argument_list|>
argument_list|()
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.search.query.QueryTranslator.translateHttpSearchRequest(IndexSchema, Map<String, String>, String, String)'      */
DECL|method|testTranslateHttpSearchRequest
specifier|public
name|void
name|testTranslateHttpSearchRequest
parameter_list|()
block|{
name|assertNull
argument_list|(
name|QueryTranslator
operator|.
name|translateHttpSearchRequest
argument_list|(
name|this
operator|.
name|schema
argument_list|,
name|this
operator|.
name|parameterMap
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|contentQuery
init|=
literal|"content1 -content2 \"exact Content\""
decl_stmt|;
name|parameterMap
operator|.
name|put
argument_list|(
literal|"q"
argument_list|,
operator|new
name|String
index|[]
block|{
name|contentQuery
block|}
argument_list|)
expr_stmt|;
name|String
name|expected
init|=
name|CONTENT_FIELD
operator|+
literal|":("
operator|+
name|contentQuery
operator|+
literal|") "
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|QueryTranslator
operator|.
name|translateHttpSearchRequest
argument_list|(
name|this
operator|.
name|schema
argument_list|,
name|this
operator|.
name|parameterMap
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|parameterMap
operator|.
name|put
argument_list|(
literal|"updated-min"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"2005-08-09T10:57:00-08:00"
block|}
argument_list|)
expr_stmt|;
name|parameterMap
operator|.
name|put
argument_list|(
literal|"updated-max"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"2005-10-09T10:57:00-08:00"
block|}
argument_list|)
expr_stmt|;
name|parameterMap
operator|.
name|put
argument_list|(
literal|"max-results"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"3"
block|}
argument_list|)
expr_stmt|;
name|parameterMap
operator|.
name|remove
argument_list|(
literal|"q"
argument_list|)
expr_stmt|;
name|parameterMap
operator|.
name|put
argument_list|(
name|CONTENT_FIELD
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"apache"
block|}
argument_list|)
expr_stmt|;
name|String
name|tranlatedQuery
init|=
name|QueryTranslator
operator|.
name|translateHttpSearchRequest
argument_list|(
name|this
operator|.
name|schema
argument_list|,
name|this
operator|.
name|parameterMap
argument_list|,
literal|"test |{urn:google.com} {urn:apache.org}"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|tranlatedQuery
operator|.
name|contains
argument_list|(
literal|"updated:[1123613820000 TO 1128884219999]"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|tranlatedQuery
operator|.
name|contains
argument_list|(
name|CONTENT_FIELD
operator|+
literal|":(apache)"
argument_list|)
argument_list|)
expr_stmt|;
name|parameterMap
operator|.
name|remove
argument_list|(
literal|"updated-max"
argument_list|)
expr_stmt|;
name|tranlatedQuery
operator|=
name|QueryTranslator
operator|.
name|translateHttpSearchRequest
argument_list|(
name|this
operator|.
name|schema
argument_list|,
name|this
operator|.
name|parameterMap
argument_list|,
literal|"test |{urn:google.com} {urn:apache.org}"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|tranlatedQuery
operator|.
name|contains
argument_list|(
literal|"updated:[1123613820000 TO "
operator|+
name|Long
operator|.
name|MAX_VALUE
operator|+
literal|"]"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|tranlatedQuery
operator|.
name|contains
argument_list|(
name|CONTENT_FIELD
operator|+
literal|":(apache)"
argument_list|)
argument_list|)
expr_stmt|;
name|parameterMap
operator|.
name|put
argument_list|(
literal|"updated-max"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"2005-10-09T10:57:00-08:00"
block|}
argument_list|)
expr_stmt|;
name|parameterMap
operator|.
name|remove
argument_list|(
literal|"updated-min"
argument_list|)
expr_stmt|;
name|tranlatedQuery
operator|=
name|QueryTranslator
operator|.
name|translateHttpSearchRequest
argument_list|(
name|this
operator|.
name|schema
argument_list|,
name|this
operator|.
name|parameterMap
argument_list|,
literal|"test |{urn:google.com} {urn:apache.org}"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|tranlatedQuery
operator|.
name|contains
argument_list|(
literal|"updated:["
operator|+
literal|0
operator|+
literal|" TO 1128884219999]"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|tranlatedQuery
operator|.
name|contains
argument_list|(
name|CONTENT_FIELD
operator|+
literal|":(apache)"
argument_list|)
argument_list|)
expr_stmt|;
name|parameterMap
operator|.
name|put
argument_list|(
literal|"wrong-parameter"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"3"
block|}
argument_list|)
expr_stmt|;
try|try
block|{
name|QueryTranslator
operator|.
name|translateHttpSearchRequest
argument_list|(
name|this
operator|.
name|schema
argument_list|,
name|this
operator|.
name|parameterMap
argument_list|,
literal|"test |{urn:google.com} {urn:apache.org}"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"illegal parameter"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{                     }
block|}
block|}
end_class
end_unit
