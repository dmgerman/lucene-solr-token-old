begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.search.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|index
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|standard
operator|.
name|StandardAnalyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|data
operator|.
name|ServerBaseEntry
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|GDataSearcher
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|config
operator|.
name|IndexSchema
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|config
operator|.
name|IndexSchemaField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|config
operator|.
name|IndexSchemaField
operator|.
name|ContentType
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|index
operator|.
name|IndexController
operator|.
name|ServiceIndex
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
operator|.
name|registry
operator|.
name|GDataServerRegistry
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|utils
operator|.
name|ProvidedServiceStub
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|utils
operator|.
name|ReferenceCounter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermQuery
import|;
end_import
begin_comment
comment|/**  *  *   */
end_comment
begin_class
DECL|class|TestIndexController
specifier|public
class|class
name|TestIndexController
extends|extends
name|TestCase
block|{
DECL|field|controller
name|IndexController
name|controller
decl_stmt|;
DECL|field|schema
name|IndexSchema
name|schema
decl_stmt|;
DECL|field|indexLocation
name|File
name|indexLocation
decl_stmt|;
DECL|method|setUp
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|controller
operator|=
operator|new
name|IndexController
argument_list|()
expr_stmt|;
name|GDataServerRegistry
name|reg
init|=
name|GDataServerRegistry
operator|.
name|getRegistry
argument_list|()
decl_stmt|;
name|this
operator|.
name|indexLocation
operator|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
argument_list|)
expr_stmt|;
name|ProvidedServiceStub
name|stub
init|=
operator|new
name|ProvidedServiceStub
argument_list|()
decl_stmt|;
name|this
operator|.
name|schema
operator|=
operator|new
name|IndexSchema
argument_list|()
expr_stmt|;
comment|// must be set
name|this
operator|.
name|schema
operator|.
name|setDefaultSearchField
argument_list|(
literal|"content"
argument_list|)
expr_stmt|;
name|this
operator|.
name|schema
operator|.
name|setName
argument_list|(
name|ProvidedServiceStub
operator|.
name|SERVICE_NAME
argument_list|)
expr_stmt|;
name|this
operator|.
name|schema
operator|.
name|setIndexLocation
argument_list|(
name|this
operator|.
name|indexLocation
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|IndexSchemaField
name|field
init|=
operator|new
name|IndexSchemaField
argument_list|()
decl_stmt|;
name|field
operator|.
name|setName
argument_list|(
literal|"content"
argument_list|)
expr_stmt|;
name|field
operator|.
name|setPath
argument_list|(
literal|"/somePath"
argument_list|)
expr_stmt|;
name|field
operator|.
name|setContentType
argument_list|(
name|ContentType
operator|.
name|TEXT
argument_list|)
expr_stmt|;
name|this
operator|.
name|schema
operator|.
name|addSchemaField
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|stub
operator|.
name|setIndexSchema
argument_list|(
name|this
operator|.
name|schema
argument_list|)
expr_stmt|;
name|reg
operator|.
name|registerService
argument_list|(
name|stub
argument_list|)
expr_stmt|;
block|}
DECL|method|tearDown
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|GDataServerRegistry
operator|.
name|getRegistry
argument_list|()
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|this
operator|.
name|controller
operator|.
name|destroy
argument_list|()
expr_stmt|;
comment|/*          * this file will be created by the controller          */
name|File
name|toDel
init|=
operator|new
name|File
argument_list|(
name|this
operator|.
name|indexLocation
argument_list|,
name|ProvidedServiceStub
operator|.
name|SERVICE_NAME
argument_list|)
decl_stmt|;
name|delAllFiles
argument_list|(
name|toDel
argument_list|)
expr_stmt|;
block|}
comment|/*      * del all created files      */
DECL|method|delAllFiles
specifier|private
name|void
name|delAllFiles
parameter_list|(
name|File
name|dir
parameter_list|)
block|{
if|if
condition|(
name|dir
operator|==
literal|null
operator|||
operator|!
name|dir
operator|.
name|exists
argument_list|()
condition|)
return|return;
name|File
index|[]
name|files
init|=
name|dir
operator|.
name|listFiles
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|files
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
while|while
condition|(
operator|!
name|files
index|[
name|i
index|]
operator|.
name|canWrite
argument_list|()
condition|)
block|{             }
empty_stmt|;
name|files
index|[
name|i
index|]
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
name|dir
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.IndexController.initialize()'      */
DECL|method|testInitialize
specifier|public
name|void
name|testInitialize
parameter_list|()
block|{
name|this
operator|.
name|controller
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|this
operator|.
name|controller
operator|.
name|indexerMap
operator|.
name|containsKey
argument_list|(
name|ProvidedServiceStub
operator|.
name|SERVICE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|ServiceIndex
name|bean
init|=
name|this
operator|.
name|controller
operator|.
name|indexerMap
operator|.
name|get
argument_list|(
name|ProvidedServiceStub
operator|.
name|SERVICE_NAME
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|bean
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|bean
operator|.
name|getIndexer
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|this
operator|.
name|schema
argument_list|,
name|bean
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|GDataServerRegistry
operator|.
name|getRegistry
argument_list|()
operator|.
name|getEntryEventMediator
argument_list|()
operator|.
name|isListenerRegistered
argument_list|(
name|this
operator|.
name|controller
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.IndexController.initialize()'      */
DECL|method|testInitializeValueMissing
specifier|public
name|void
name|testInitializeValueMissing
parameter_list|()
block|{
name|this
operator|.
name|schema
operator|.
name|setIndexLocation
argument_list|(
literal|null
argument_list|)
expr_stmt|;
try|try
block|{
name|this
operator|.
name|controller
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"missing index location"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{         }
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.IndexController.addIndexSchema(IndexSchema)'      */
DECL|method|testAddIndexSchema
specifier|public
name|void
name|testAddIndexSchema
parameter_list|()
block|{
name|this
operator|.
name|controller
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|this
operator|.
name|controller
operator|.
name|indexerMap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|this
operator|.
name|controller
operator|.
name|addIndexSchema
argument_list|(
name|this
operator|.
name|schema
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"schema already added"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{          }
name|this
operator|.
name|schema
operator|.
name|setName
argument_list|(
literal|null
argument_list|)
expr_stmt|;
try|try
block|{
name|this
operator|.
name|controller
operator|.
name|addIndexSchema
argument_list|(
name|this
operator|.
name|schema
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"schema name is null"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{          }
name|this
operator|.
name|schema
operator|.
name|setName
argument_list|(
literal|"someOthername"
argument_list|)
expr_stmt|;
name|this
operator|.
name|controller
operator|.
name|addIndexSchema
argument_list|(
name|this
operator|.
name|schema
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|this
operator|.
name|controller
operator|.
name|indexerMap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.IndexController.createIndexer(IndexSchema)'      */
DECL|method|testCreateIndexDirectory
specifier|public
name|void
name|testCreateIndexDirectory
parameter_list|()
throws|throws
name|IOException
block|{
name|File
name|f
init|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
argument_list|,
literal|"gdataindexdir"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|f
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|f
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|IndexWriter
name|w
init|=
operator|new
name|IndexWriter
argument_list|(
name|f
argument_list|,
operator|new
name|StandardAnalyzer
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Document
name|d
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|,
name|Field
operator|.
name|Index
operator|.
name|TOKENIZED
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|addDocument
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|this
operator|.
name|controller
operator|.
name|createIndexDirectory
argument_list|(
name|f
argument_list|)
argument_list|)
expr_stmt|;
comment|// throw away files in the directory
name|delAllFiles
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|File
name|f1
init|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
argument_list|,
literal|"newIndexDir"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|f1
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|f1
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|this
operator|.
name|controller
operator|.
name|createIndexDirectory
argument_list|(
name|f1
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.IndexController.createIndexLocation(String,      * String)'      */
DECL|method|testCreateIndexLocation
specifier|public
name|void
name|testCreateIndexLocation
parameter_list|()
throws|throws
name|IOException
block|{
name|File
name|f
init|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
argument_list|,
literal|"gdatadir"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|f
operator|.
name|mkdir
argument_list|()
expr_stmt|;
name|f
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|f
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|this
operator|.
name|controller
operator|.
name|createIndexLocation
argument_list|(
name|f
operator|.
name|getParent
argument_list|()
argument_list|,
name|f
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
empty_stmt|;
name|File
name|pFile
init|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
argument_list|,
literal|"gdatafile"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|pFile
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
try|try
block|{
name|this
operator|.
name|controller
operator|.
name|createIndexLocation
argument_list|(
name|pFile
operator|.
name|getParent
argument_list|()
argument_list|,
name|pFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"can not create dir"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{                      }
name|assertTrue
argument_list|(
name|pFile
operator|.
name|createNewFile
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|this
operator|.
name|controller
operator|.
name|createIndexLocation
argument_list|(
name|pFile
operator|.
name|getParent
argument_list|()
argument_list|,
name|pFile
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"file is not a directory"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{          }
try|try
block|{
name|this
operator|.
name|controller
operator|.
name|createIndexLocation
argument_list|(
name|pFile
operator|.
name|getName
argument_list|()
argument_list|,
name|pFile
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"parent is not a directory"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{          }
try|try
block|{
name|this
operator|.
name|controller
operator|.
name|createIndexLocation
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"null"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|GdataIndexerException
name|e
parameter_list|)
block|{          }
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.IndexController.getServiceSearcher(ProvidedService)'      */
DECL|method|testGetServiceSearcher
specifier|public
name|void
name|testGetServiceSearcher
parameter_list|()
block|{
name|this
operator|.
name|controller
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|ReferenceCounter
argument_list|<
name|IndexSearcher
argument_list|>
name|refCounter
init|=
name|this
operator|.
name|controller
operator|.
name|indexerMap
operator|.
name|get
argument_list|(
name|ProvidedServiceStub
operator|.
name|SERVICE_NAME
argument_list|)
operator|.
name|getSearcher
argument_list|()
decl_stmt|;
name|GDataSearcher
name|searcher
init|=
name|this
operator|.
name|controller
operator|.
name|getServiceSearcher
argument_list|(
operator|new
name|ProvidedServiceStub
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|searcher
argument_list|)
expr_stmt|;
name|GDataSearcher
name|sameSearcher
init|=
name|this
operator|.
name|controller
operator|.
name|getServiceSearcher
argument_list|(
operator|new
name|ProvidedServiceStub
argument_list|()
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|refCounter
argument_list|,
name|this
operator|.
name|controller
operator|.
name|indexerMap
operator|.
name|get
argument_list|(
name|ProvidedServiceStub
operator|.
name|SERVICE_NAME
argument_list|)
operator|.
name|getSearcher
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|controller
operator|.
name|commitCallBack
argument_list|(
name|ProvidedServiceStub
operator|.
name|SERVICE_NAME
argument_list|)
expr_stmt|;
name|GDataSearcher
name|newSearcher
init|=
name|this
operator|.
name|controller
operator|.
name|getServiceSearcher
argument_list|(
operator|new
name|ProvidedServiceStub
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|refCounter
argument_list|,
name|this
operator|.
name|controller
operator|.
name|indexerMap
operator|.
name|get
argument_list|(
name|ProvidedServiceStub
operator|.
name|SERVICE_NAME
argument_list|)
operator|.
name|getSearcher
argument_list|()
argument_list|)
expr_stmt|;
name|sameSearcher
operator|.
name|close
argument_list|()
expr_stmt|;
name|searcher
operator|.
name|close
argument_list|()
expr_stmt|;
name|newSearcher
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testDestroy
specifier|public
name|void
name|testDestroy
parameter_list|()
block|{
name|this
operator|.
name|controller
operator|.
name|initialize
argument_list|()
expr_stmt|;
try|try
block|{
name|this
operator|.
name|controller
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"controller is initialized"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
name|this
operator|.
name|controller
operator|.
name|destroy
argument_list|()
expr_stmt|;
try|try
block|{
name|this
operator|.
name|controller
operator|.
name|getServiceSearcher
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"controller is closed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|this
operator|.
name|controller
operator|.
name|commitCallBack
argument_list|(
literal|"null"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"controller is closed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|this
operator|.
name|controller
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"controller is closed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
try|try
block|{
name|this
operator|.
name|controller
operator|.
name|addIndexSchema
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"controller is closed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{         }
comment|/*          * init again to destroy in teardown          */
name|this
operator|.
name|controller
operator|.
name|initialize
argument_list|()
expr_stmt|;
block|}
DECL|method|testfireInsertEvent
specifier|public
name|void
name|testfireInsertEvent
parameter_list|()
block|{
try|try
block|{
name|this
operator|.
name|controller
operator|.
name|fireInsertEvent
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"not initialized"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
comment|// TODO: handle exception
block|}
name|this
operator|.
name|controller
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|ServerBaseEntry
name|e
init|=
operator|new
name|ServerBaseEntry
argument_list|()
decl_stmt|;
name|e
operator|.
name|setId
argument_list|(
literal|"someId"
argument_list|)
expr_stmt|;
name|e
operator|.
name|setFeedId
argument_list|(
literal|"someId"
argument_list|)
expr_stmt|;
name|e
operator|.
name|setServiceConfig
argument_list|(
operator|new
name|ProvidedServiceStub
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|controller
operator|.
name|fireInsertEvent
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
DECL|method|testCreateNewIndexTask
specifier|public
name|void
name|testCreateNewIndexTask
parameter_list|()
throws|throws
name|InterruptedException
throws|,
name|IOException
block|{
name|this
operator|.
name|schema
operator|.
name|setCommitAfterDocuments
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|this
operator|.
name|schema
operator|.
name|setOptimizeAfterCommit
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|IndexSchemaField
name|f
init|=
operator|new
name|IndexSchemaField
argument_list|()
decl_stmt|;
name|f
operator|.
name|setName
argument_list|(
literal|"myField"
argument_list|)
expr_stmt|;
name|f
operator|.
name|setContentType
argument_list|(
name|ContentType
operator|.
name|KEYWORD
argument_list|)
expr_stmt|;
name|f
operator|.
name|setPath
argument_list|(
literal|"entry/id"
argument_list|)
expr_stmt|;
name|this
operator|.
name|schema
operator|.
name|addSchemaField
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|this
operator|.
name|controller
operator|.
name|initialize
argument_list|()
expr_stmt|;
name|ServerBaseEntry
name|e
init|=
operator|new
name|ServerBaseEntry
argument_list|()
decl_stmt|;
name|e
operator|.
name|setId
argument_list|(
literal|"someId"
argument_list|)
expr_stmt|;
name|e
operator|.
name|setFeedId
argument_list|(
literal|"someId"
argument_list|)
expr_stmt|;
name|e
operator|.
name|setServiceConfig
argument_list|(
operator|new
name|ProvidedServiceStub
argument_list|()
argument_list|)
expr_stmt|;
name|CommitListener
name|l
init|=
operator|new
name|CommitListener
argument_list|()
decl_stmt|;
name|l
operator|.
name|createLatch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|ServiceIndex
name|sIndex
init|=
name|this
operator|.
name|controller
operator|.
name|indexerMap
operator|.
name|get
argument_list|(
name|this
operator|.
name|schema
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|sIndex
operator|.
name|getIndexer
argument_list|()
operator|.
name|registerIndexEventListener
argument_list|(
name|l
argument_list|)
expr_stmt|;
name|this
operator|.
name|controller
operator|.
name|fireInsertEvent
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|l
operator|.
name|waitOnLatch
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|sIndex
operator|.
name|getIndexer
argument_list|()
operator|.
name|optimized
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|sIndex
operator|.
name|getIndexer
argument_list|()
operator|.
name|committed
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|sIndex
operator|.
name|getIndexer
argument_list|()
operator|.
name|removeIndexEventListener
argument_list|(
name|l
argument_list|)
expr_stmt|;
name|e
operator|=
operator|new
name|ServerBaseEntry
argument_list|()
expr_stmt|;
name|e
operator|.
name|setId
argument_list|(
literal|"someId"
argument_list|)
expr_stmt|;
name|e
operator|.
name|setFeedId
argument_list|(
literal|"someId"
argument_list|)
expr_stmt|;
name|e
operator|.
name|setServiceConfig
argument_list|(
operator|new
name|ProvidedServiceStub
argument_list|()
argument_list|)
expr_stmt|;
name|l
operator|=
operator|new
name|CommitListener
argument_list|()
expr_stmt|;
name|l
operator|.
name|createLatch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|sIndex
operator|=
name|this
operator|.
name|controller
operator|.
name|indexerMap
operator|.
name|get
argument_list|(
name|this
operator|.
name|schema
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|sIndex
operator|.
name|getIndexer
argument_list|()
operator|.
name|registerIndexEventListener
argument_list|(
name|l
argument_list|)
expr_stmt|;
name|this
operator|.
name|controller
operator|.
name|fireUpdateEvent
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|l
operator|.
name|waitOnLatch
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|sIndex
operator|.
name|getIndexer
argument_list|()
operator|.
name|optimized
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|sIndex
operator|.
name|getIndexer
argument_list|()
operator|.
name|committed
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|GDataSearcher
argument_list|<
name|String
argument_list|>
name|searcher
init|=
name|this
operator|.
name|controller
operator|.
name|getServiceSearcher
argument_list|(
name|e
operator|.
name|getServiceConfig
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|results
init|=
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
name|IndexDocument
operator|.
name|FIELD_ENTRY_ID
argument_list|,
literal|"someId"
argument_list|)
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|,
literal|"someId"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|results
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|searcher
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|class|CommitListener
specifier|static
class|class
name|CommitListener
implements|implements
name|IndexEventListener
block|{
DECL|field|latch
specifier|public
name|CountDownLatch
name|latch
decl_stmt|;
DECL|method|createLatch
specifier|public
name|void
name|createLatch
parameter_list|(
name|int
name|count
parameter_list|)
block|{
name|this
operator|.
name|latch
operator|=
operator|new
name|CountDownLatch
argument_list|(
name|count
argument_list|)
expr_stmt|;
block|}
DECL|method|waitOnLatch
specifier|public
name|void
name|waitOnLatch
parameter_list|()
throws|throws
name|InterruptedException
block|{
if|if
condition|(
name|latch
operator|!=
literal|null
condition|)
name|latch
operator|.
name|await
argument_list|()
expr_stmt|;
block|}
DECL|method|commitCallBack
specifier|public
name|void
name|commitCallBack
parameter_list|(
name|String
name|service
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|latch
operator|!=
literal|null
condition|)
name|this
operator|.
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
