begin_unit
begin_package
DECL|package|org.apache.lucene.gdata.server.registry
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
operator|.
name|registry
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/**  * This exception is thrown by the  * {@link org.apache.lucene.gdata.server.registry.GDataServerRegistry} if  * registering a service or a component fails.  *   * @author Simon Willnauer  *   */
end_comment
begin_class
DECL|class|RegistryException
specifier|public
class|class
name|RegistryException
extends|extends
name|Exception
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|3563720639871194466L
decl_stmt|;
comment|/**      * Constructs a new Registry Exception.      */
DECL|method|RegistryException
specifier|public
name|RegistryException
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
comment|/**      * Constructs a new Registry Exception with the specified detail message.      * @param arg0 - detail message      */
DECL|method|RegistryException
specifier|public
name|RegistryException
parameter_list|(
name|String
name|arg0
parameter_list|)
block|{
name|super
argument_list|(
name|arg0
argument_list|)
expr_stmt|;
block|}
comment|/**      * Constructs a new Registry Exception with the specified detail message and nested exception.      * @param arg0 - detail message      * @param arg1 - nested exception      */
DECL|method|RegistryException
specifier|public
name|RegistryException
parameter_list|(
name|String
name|arg0
parameter_list|,
name|Throwable
name|arg1
parameter_list|)
block|{
name|super
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
expr_stmt|;
block|}
comment|/** Constructs a new Registry Exception with a nested exception.      * @param arg0 - nested exception      */
DECL|method|RegistryException
specifier|public
name|RegistryException
parameter_list|(
name|Throwable
name|arg0
parameter_list|)
block|{
name|super
argument_list|(
name|arg0
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
