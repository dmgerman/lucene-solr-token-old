begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.search.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|index
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import
begin_comment
comment|/**  * This IndexDocumentBuilder deletes a entire feed form the index the builder is  * passed to if the feed has any entries in the search index. Each created and  * passed IndexFeedDeleteTask forces a commit.  *   *  *   */
end_comment
begin_class
DECL|class|IndexFeedDeleteTask
specifier|public
class|class
name|IndexFeedDeleteTask
implements|implements
name|IndexDocumentBuilder
argument_list|<
name|IndexDocument
argument_list|>
block|{
DECL|field|feedId
specifier|private
specifier|final
name|String
name|feedId
decl_stmt|;
DECL|method|IndexFeedDeleteTask
name|IndexFeedDeleteTask
parameter_list|(
name|String
name|feedId
parameter_list|)
block|{
if|if
condition|(
name|feedId
operator|==
literal|null
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"feedId must not be null"
argument_list|)
throw|;
name|this
operator|.
name|feedId
operator|=
name|feedId
expr_stmt|;
block|}
comment|/**      * @see org.apache.lucene.gdata.search.index.IndexDocumentBuilder#call()      */
DECL|method|call
specifier|public
name|IndexDocument
name|call
parameter_list|()
throws|throws
name|GdataIndexerException
block|{
return|return
operator|new
name|FeedDeleteDocument
argument_list|(
name|this
operator|.
name|feedId
argument_list|)
return|;
block|}
DECL|class|FeedDeleteDocument
specifier|private
specifier|static
class|class
name|FeedDeleteDocument
implements|implements
name|IndexDocument
block|{
DECL|field|deleteTerm
specifier|private
specifier|final
name|Term
name|deleteTerm
decl_stmt|;
DECL|method|FeedDeleteDocument
name|FeedDeleteDocument
parameter_list|(
name|String
name|feedId
parameter_list|)
block|{
name|this
operator|.
name|deleteTerm
operator|=
operator|new
name|Term
argument_list|(
name|FIELD_FEED_ID
argument_list|,
name|feedId
argument_list|)
expr_stmt|;
block|}
comment|/**          * @see org.apache.lucene.gdata.search.index.IndexDocument#isUpdate()          */
DECL|method|isUpdate
specifier|public
name|boolean
name|isUpdate
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
comment|/**          * @see org.apache.lucene.gdata.search.index.IndexDocument#isDelete()          */
DECL|method|isDelete
specifier|public
name|boolean
name|isDelete
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
comment|/**          * @see org.apache.lucene.gdata.search.index.IndexDocument#isInsert()          */
DECL|method|isInsert
specifier|public
name|boolean
name|isInsert
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
comment|/**          * @see org.apache.lucene.gdata.search.index.IndexDocument#getWriteable()          */
DECL|method|getWriteable
specifier|public
name|Document
name|getWriteable
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
comment|/**          * @see org.apache.lucene.gdata.search.index.IndexDocument#getDeletealbe()          */
DECL|method|getDeletealbe
specifier|public
name|Term
name|getDeletealbe
parameter_list|()
block|{
return|return
name|this
operator|.
name|deleteTerm
return|;
block|}
comment|/**          * @see org.apache.lucene.gdata.search.index.IndexDocument#commitAfter()          */
DECL|method|commitAfter
specifier|public
name|boolean
name|commitAfter
parameter_list|()
block|{
comment|/*              * force commit after delete a entire feed and its entries              */
return|return
literal|true
return|;
block|}
comment|/**          * @see org.apache.lucene.gdata.search.index.IndexDocument#optimizeAfter()          */
DECL|method|optimizeAfter
specifier|public
name|boolean
name|optimizeAfter
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
comment|/**      * @see java.lang.Object#equals(java.lang.Object)      */
annotation|@
name|Override
DECL|method|equals
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|obj
operator|instanceof
name|IndexFeedDeleteTask
condition|)
block|{
name|IndexFeedDeleteTask
name|other
init|=
operator|(
name|IndexFeedDeleteTask
operator|)
name|obj
decl_stmt|;
return|return
name|this
operator|.
name|feedId
operator|.
name|equals
argument_list|(
name|other
operator|.
name|feedId
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
comment|/**      * @see java.lang.Object#hashCode()      */
annotation|@
name|Override
DECL|method|hashCode
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|this
operator|.
name|feedId
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
end_class
end_unit
