begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.search.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|index
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|PerFieldAnalyzerWrapper
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|StopAnalyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|standard
operator|.
name|StandardAnalyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|config
operator|.
name|IndexSchema
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|config
operator|.
name|IndexSchemaField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|RAMDirectory
import|;
end_import
begin_comment
comment|/**  * @author Simon Willnauer  *  */
end_comment
begin_class
DECL|class|TestGdataIndexWriter
specifier|public
class|class
name|TestGdataIndexWriter
extends|extends
name|TestCase
block|{
DECL|field|schemaNoPerFielAnalyzer
name|IndexSchema
name|schemaNoPerFielAnalyzer
decl_stmt|;
DECL|field|schemaPerFielAnalyzer
name|IndexSchema
name|schemaPerFielAnalyzer
decl_stmt|;
DECL|field|VALUE_GT_DEFAULT_LONG
name|long
name|VALUE_GT_DEFAULT_LONG
init|=
literal|15000
decl_stmt|;
DECL|field|VALUE_GT_DEFAULT_INT
name|int
name|VALUE_GT_DEFAULT_INT
init|=
literal|10000
decl_stmt|;
DECL|method|setUp
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|schemaNoPerFielAnalyzer
operator|=
operator|new
name|IndexSchema
argument_list|()
expr_stmt|;
name|this
operator|.
name|schemaPerFielAnalyzer
operator|=
operator|new
name|IndexSchema
argument_list|()
expr_stmt|;
name|IndexSchemaField
name|field
init|=
operator|new
name|IndexSchemaField
argument_list|()
decl_stmt|;
name|field
operator|.
name|setName
argument_list|(
literal|"someField"
argument_list|)
expr_stmt|;
name|field
operator|.
name|setAnalyzerClass
argument_list|(
name|StopAnalyzer
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|schemaPerFielAnalyzer
operator|.
name|addSchemaField
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|this
operator|.
name|schemaPerFielAnalyzer
operator|.
name|setCommitLockTimeout
argument_list|(
name|VALUE_GT_DEFAULT_LONG
argument_list|)
expr_stmt|;
name|this
operator|.
name|schemaPerFielAnalyzer
operator|.
name|setMaxBufferedDocs
argument_list|(
name|VALUE_GT_DEFAULT_INT
argument_list|)
expr_stmt|;
name|this
operator|.
name|schemaPerFielAnalyzer
operator|.
name|setMaxFieldLength
argument_list|(
name|VALUE_GT_DEFAULT_INT
argument_list|)
expr_stmt|;
name|this
operator|.
name|schemaPerFielAnalyzer
operator|.
name|setMaxMergeDocs
argument_list|(
name|VALUE_GT_DEFAULT_INT
argument_list|)
expr_stmt|;
name|this
operator|.
name|schemaPerFielAnalyzer
operator|.
name|setMergeFactor
argument_list|(
name|VALUE_GT_DEFAULT_INT
argument_list|)
expr_stmt|;
name|this
operator|.
name|schemaPerFielAnalyzer
operator|.
name|setWriteLockTimeout
argument_list|(
name|VALUE_GT_DEFAULT_LONG
argument_list|)
expr_stmt|;
name|this
operator|.
name|schemaPerFielAnalyzer
operator|.
name|setUseCompoundFile
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexWriter.GDataIndexWriter(Directory, boolean, IndexSchema)'      * @throws IOException       */
DECL|method|testGDataIndexWriter
specifier|public
name|void
name|testGDataIndexWriter
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
operator|new
name|GDataIndexWriter
argument_list|(
operator|new
name|RAMDirectory
argument_list|()
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"no index schema"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{}
name|GDataIndexWriter
name|writer
init|=
operator|new
name|GDataIndexWriter
argument_list|(
operator|new
name|RAMDirectory
argument_list|()
argument_list|,
literal|true
argument_list|,
name|this
operator|.
name|schemaNoPerFielAnalyzer
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|writer
operator|.
name|getAnalyzer
argument_list|()
operator|.
name|getClass
argument_list|()
operator|==
name|StandardAnalyzer
operator|.
name|class
argument_list|)
expr_stmt|;
name|writer
operator|=
operator|new
name|GDataIndexWriter
argument_list|(
operator|new
name|RAMDirectory
argument_list|()
argument_list|,
literal|true
argument_list|,
name|this
operator|.
name|schemaPerFielAnalyzer
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|writer
operator|.
name|getAnalyzer
argument_list|()
operator|.
name|getClass
argument_list|()
operator|==
name|PerFieldAnalyzerWrapper
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_GT_DEFAULT_LONG
argument_list|,
name|writer
operator|.
name|getCommitLockTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_GT_DEFAULT_LONG
argument_list|,
name|writer
operator|.
name|getWriteLockTimeout
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_GT_DEFAULT_INT
argument_list|,
name|writer
operator|.
name|getMaxBufferedDocs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_GT_DEFAULT_INT
argument_list|,
name|writer
operator|.
name|getMaxMergeDocs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_GT_DEFAULT_INT
argument_list|,
name|writer
operator|.
name|getMaxFieldLength
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VALUE_GT_DEFAULT_INT
argument_list|,
name|writer
operator|.
name|getMergeFactor
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|writer
operator|.
name|getUseCompoundFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
