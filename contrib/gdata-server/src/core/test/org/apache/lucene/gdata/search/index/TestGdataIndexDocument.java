begin_unit
begin_comment
comment|/**   * Copyright 2004 The Apache Software Foundation   *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   *     http://www.apache.org/licenses/LICENSE-2.0   *   * Unless required by applicable law or agreed to in writing, software   * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.search.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|index
package|;
end_package
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|analysis
operator|.
name|ContentStrategy
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|config
operator|.
name|IndexSchemaField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|config
operator|.
name|IndexSchemaField
operator|.
name|ContentType
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import
begin_class
DECL|class|TestGdataIndexDocument
specifier|public
class|class
name|TestGdataIndexDocument
extends|extends
name|TestCase
block|{
DECL|field|ENTRYID
specifier|static
name|String
name|ENTRYID
init|=
literal|"someEId"
decl_stmt|;
DECL|field|FEEDID
specifier|static
name|String
name|FEEDID
init|=
literal|"someFId"
decl_stmt|;
DECL|field|delDocument
name|GDataIndexDocument
name|delDocument
decl_stmt|;
DECL|field|updDocument
name|GDataIndexDocument
name|updDocument
decl_stmt|;
DECL|field|insDocument
name|GDataIndexDocument
name|insDocument
decl_stmt|;
DECL|method|setUp
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|delDocument
operator|=
operator|new
name|GDataIndexDocument
argument_list|(
name|IndexAction
operator|.
name|DELETE
argument_list|,
name|ENTRYID
argument_list|,
name|FEEDID
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|insDocument
operator|=
operator|new
name|GDataIndexDocument
argument_list|(
name|IndexAction
operator|.
name|INSERT
argument_list|,
name|ENTRYID
argument_list|,
name|FEEDID
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|this
operator|.
name|updDocument
operator|=
operator|new
name|GDataIndexDocument
argument_list|(
name|IndexAction
operator|.
name|UPDATE
argument_list|,
name|ENTRYID
argument_list|,
name|FEEDID
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|tearDown
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexDocument.addField(ContentStrategy)'      */
DECL|method|testAddField
specifier|public
name|void
name|testAddField
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|this
operator|.
name|delDocument
operator|.
name|fields
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|delDocument
operator|.
name|addField
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|this
operator|.
name|delDocument
operator|.
name|fields
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|IndexSchemaField
name|ifield
init|=
operator|new
name|IndexSchemaField
argument_list|()
decl_stmt|;
name|ifield
operator|.
name|setContentType
argument_list|(
name|ContentType
operator|.
name|TEXT
argument_list|)
expr_stmt|;
name|this
operator|.
name|delDocument
operator|.
name|addField
argument_list|(
name|ContentStrategy
operator|.
name|getFieldStrategy
argument_list|(
name|ifield
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|this
operator|.
name|delDocument
operator|.
name|fields
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexDocument.getWriteable()'      */
DECL|method|testGetWriteable
specifier|public
name|void
name|testGetWriteable
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|this
operator|.
name|insDocument
operator|.
name|getWriteable
argument_list|()
argument_list|)
expr_stmt|;
name|Document
name|doc
init|=
name|this
operator|.
name|insDocument
operator|.
name|getWriteable
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|doc
operator|.
name|getFields
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ENTRYID
argument_list|,
name|doc
operator|.
name|getField
argument_list|(
name|GDataIndexDocument
operator|.
name|FIELD_ENTRY_ID
argument_list|)
operator|.
name|stringValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FEEDID
argument_list|,
name|doc
operator|.
name|getField
argument_list|(
name|GDataIndexDocument
operator|.
name|FIELD_FEED_ID
argument_list|)
operator|.
name|stringValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexDocument.getDeletealbe()'      */
DECL|method|testGetDeletealbe
specifier|public
name|void
name|testGetDeletealbe
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|this
operator|.
name|insDocument
operator|.
name|getDeletealbe
argument_list|()
argument_list|)
expr_stmt|;
name|Term
name|t
init|=
name|this
operator|.
name|insDocument
operator|.
name|getDeletealbe
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|IndexDocument
operator|.
name|FIELD_ENTRY_ID
argument_list|,
name|t
operator|.
name|field
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ENTRYID
argument_list|,
name|t
operator|.
name|text
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexDocument.isUpdate()'      */
DECL|method|testIsUpdate
specifier|public
name|void
name|testIsUpdate
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|this
operator|.
name|insDocument
operator|.
name|isUpdate
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|this
operator|.
name|updDocument
operator|.
name|isUpdate
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|this
operator|.
name|delDocument
operator|.
name|isUpdate
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexDocument.isDelete()'      */
DECL|method|testIsDelete
specifier|public
name|void
name|testIsDelete
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|this
operator|.
name|insDocument
operator|.
name|isDelete
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|this
operator|.
name|updDocument
operator|.
name|isDelete
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|this
operator|.
name|delDocument
operator|.
name|isDelete
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexDocument.isInsert()'      */
DECL|method|testIsInsert
specifier|public
name|void
name|testIsInsert
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|this
operator|.
name|insDocument
operator|.
name|isInsert
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|this
operator|.
name|updDocument
operator|.
name|isInsert
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|this
operator|.
name|delDocument
operator|.
name|isInsert
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexDocument.commitAfter()'      */
DECL|method|testCommitAfter
specifier|public
name|void
name|testCommitAfter
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|this
operator|.
name|insDocument
operator|.
name|commitAfter
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|this
operator|.
name|updDocument
operator|.
name|commitAfter
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|this
operator|.
name|delDocument
operator|.
name|commitAfter
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.search.index.GDataIndexDocument.optimizeAfter()'      */
DECL|method|testOptimizeAfter
specifier|public
name|void
name|testOptimizeAfter
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|this
operator|.
name|insDocument
operator|.
name|optimizeAfter
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|this
operator|.
name|updDocument
operator|.
name|optimizeAfter
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|this
operator|.
name|delDocument
operator|.
name|optimizeAfter
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
