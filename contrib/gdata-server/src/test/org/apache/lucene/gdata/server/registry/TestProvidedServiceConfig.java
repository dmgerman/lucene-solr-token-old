begin_unit
begin_comment
comment|/**   * Copyright 2004 The Apache Software Foundation   *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   *     http://www.apache.org/licenses/LICENSE-2.0   *   * Unless required by applicable law or agreed to in writing, software   * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.server.registry
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
operator|.
name|registry
package|;
end_package
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|Entry
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|ExtensionProfile
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|Feed
import|;
end_import
begin_class
DECL|class|TestProvidedServiceConfig
specifier|public
class|class
name|TestProvidedServiceConfig
extends|extends
name|TestCase
block|{
DECL|field|instance
name|ProvidedServiceConfig
name|instance
decl_stmt|;
DECL|method|setUp
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|instance
operator|=
operator|new
name|ProvidedServiceConfig
argument_list|()
expr_stmt|;
name|instance
operator|.
name|setExtensionProfileClass
argument_list|(
name|ExtensionProfile
operator|.
name|class
argument_list|)
expr_stmt|;
name|instance
operator|.
name|setFeedType
argument_list|(
name|Feed
operator|.
name|class
argument_list|)
expr_stmt|;
name|instance
operator|.
name|setEntryType
argument_list|(
name|Entry
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|method|tearDown
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|instance
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.server.registry.ProvidedServiceConfig.getExtensionProfile()'      */
DECL|method|testGetExtensionProfile
specifier|public
name|void
name|testGetExtensionProfile
parameter_list|()
block|{
try|try
block|{
name|this
operator|.
name|instance
operator|.
name|setExtensionProfile
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"value must not be null"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{          }
name|ExtensionProfile
name|profile
init|=
name|this
operator|.
name|instance
operator|.
name|getExtensionProfile
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|profile
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|profile
argument_list|,
name|this
operator|.
name|instance
operator|.
name|getExtensionProfile
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|instance
operator|.
name|visiteInitialize
argument_list|()
expr_stmt|;
name|assertSame
argument_list|(
name|profile
argument_list|,
name|this
operator|.
name|instance
operator|.
name|getExtensionProfile
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
operator|new
name|ProvidedServiceConfig
argument_list|()
operator|.
name|getExtensionProfile
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.server.registry.ProvidedServiceConfig.setExtensionProfile(ExtensionProfile)'      */
DECL|method|testSetPoolSize
specifier|public
name|void
name|testSetPoolSize
parameter_list|()
throws|throws
name|InstantiationException
throws|,
name|IllegalAccessException
block|{
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|instance
operator|.
name|getPoolSize
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|instance
operator|=
operator|new
name|ProvidedServiceConfig
argument_list|()
expr_stmt|;
name|instance
operator|.
name|setExtensionProfileClass
argument_list|(
name|ExtensionProfile
operator|.
name|class
argument_list|)
expr_stmt|;
name|instance
operator|.
name|setFeedType
argument_list|(
name|Feed
operator|.
name|class
argument_list|)
expr_stmt|;
name|instance
operator|.
name|setEntryType
argument_list|(
name|Entry
operator|.
name|class
argument_list|)
expr_stmt|;
name|instance
operator|.
name|setPoolSize
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|instance
operator|.
name|visiteInitialize
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|instance
operator|.
name|getPoolSize
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|instance
operator|=
operator|new
name|ProvidedServiceConfig
argument_list|()
expr_stmt|;
name|instance
operator|.
name|setExtensionProfileClass
argument_list|(
name|ExtensionProfile
operator|.
name|class
argument_list|)
expr_stmt|;
name|instance
operator|.
name|setFeedType
argument_list|(
name|Feed
operator|.
name|class
argument_list|)
expr_stmt|;
name|instance
operator|.
name|setEntryType
argument_list|(
name|Entry
operator|.
name|class
argument_list|)
expr_stmt|;
name|instance
operator|.
name|setPoolSize
argument_list|(
operator|-
literal|5
argument_list|)
expr_stmt|;
name|instance
operator|.
name|visiteInitialize
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|instance
operator|.
name|getPoolSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.server.registry.ProvidedServiceConfig.visiteInitialize()'      */
DECL|method|testVisiteInitialize
specifier|public
name|void
name|testVisiteInitialize
parameter_list|()
block|{
name|instance
operator|.
name|visiteInitialize
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|instance
operator|.
name|extProfThreadLocal
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|getExtensionProfile
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|instance
operator|.
name|extProfThreadLocal
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for 'org.apache.lucene.gdata.server.registry.ProvidedServiceConfig.visiteDestroy()'      */
DECL|method|testVisiteDestroy
specifier|public
name|void
name|testVisiteDestroy
parameter_list|()
block|{
name|ExtensionProfile
name|profile
init|=
name|this
operator|.
name|instance
operator|.
name|getExtensionProfile
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|profile
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|instance
operator|.
name|extProfThreadLocal
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|visiteDestroy
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|instance
operator|.
name|extProfThreadLocal
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|instance
operator|.
name|visiteDestroy
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|instance
operator|.
name|extProfThreadLocal
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
