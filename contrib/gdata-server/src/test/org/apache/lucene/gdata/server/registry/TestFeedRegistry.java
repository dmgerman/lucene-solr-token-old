begin_unit
begin_comment
comment|/**   * Copyright 2004 The Apache Software Foundation   *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   *     http://www.apache.org/licenses/LICENSE-2.0   *   * Unless required by applicable law or agreed to in writing, software   * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.server.registry
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
operator|.
name|registry
package|;
end_package
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|Feed
import|;
end_import
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_comment
comment|/**   * @author Simon Willnauer   *   */
end_comment
begin_class
DECL|class|TestFeedRegistry
specifier|public
class|class
name|TestFeedRegistry
extends|extends
name|TestCase
block|{
DECL|field|reg
specifier|private
name|GDataServerRegistry
name|reg
decl_stmt|;
DECL|field|configurator
specifier|private
name|FeedInstanceConfigurator
name|configurator
decl_stmt|;
annotation|@
name|Override
DECL|method|setUp
specifier|protected
name|void
name|setUp
parameter_list|()
block|{
name|this
operator|.
name|reg
operator|=
name|GDataServerRegistry
operator|.
name|getRegistry
argument_list|()
expr_stmt|;
name|this
operator|.
name|configurator
operator|=
operator|new
name|FeedInstanceConfigurator
argument_list|()
expr_stmt|;
block|}
comment|/**       * @see junit.framework.TestCase#tearDown()       */
annotation|@
name|Override
DECL|method|tearDown
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|reg
operator|.
name|flushRegistry
argument_list|()
expr_stmt|;
block|}
comment|/**       * Test method for 'org.apache.lucene.gdata.server.registry.FeedRegistry.getRegistry()'       */
DECL|method|testGetRegistry
specifier|public
name|void
name|testGetRegistry
parameter_list|()
block|{
name|GDataServerRegistry
name|reg1
init|=
name|GDataServerRegistry
operator|.
name|getRegistry
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test singleton"
argument_list|,
name|this
operator|.
name|reg
argument_list|,
name|reg1
argument_list|)
expr_stmt|;
block|}
comment|/**       * Test method for 'org.apache.lucene.gdata.server.registry.FeedRegistry.registerFeed(FeedInstanceConfigurator)'       */
DECL|method|testRegisterFeed
specifier|public
name|void
name|testRegisterFeed
parameter_list|()
block|{
name|String
name|feedURL
init|=
literal|"myFeed"
decl_stmt|;
name|registerFeed
argument_list|(
name|feedURL
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Registered Configurator"
argument_list|,
name|this
operator|.
name|configurator
argument_list|,
name|this
operator|.
name|reg
operator|.
name|getFeedConfigurator
argument_list|(
name|feedURL
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"not registered Configurator"
argument_list|,
name|this
operator|.
name|reg
operator|.
name|getFeedConfigurator
argument_list|(
literal|"somethingElse"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|this
operator|.
name|reg
operator|.
name|getFeedConfigurator
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Exception expected"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|//
block|}
block|}
comment|/**       * Test method for 'org.apache.lucene.gdata.server.registry.FeedRegistry.getFeedConfigurator(String)'       */
DECL|method|testFlushRegistry
specifier|public
name|void
name|testFlushRegistry
parameter_list|()
block|{
name|String
name|feedURL
init|=
literal|"testFeed"
decl_stmt|;
name|registerFeed
argument_list|(
name|feedURL
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Registered Configurator"
argument_list|,
name|this
operator|.
name|configurator
argument_list|,
name|this
operator|.
name|reg
operator|.
name|getFeedConfigurator
argument_list|(
name|feedURL
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|reg
operator|.
name|flushRegistry
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
literal|"Registry flushed"
argument_list|,
name|this
operator|.
name|reg
operator|.
name|getFeedConfigurator
argument_list|(
name|feedURL
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**       *        */
DECL|method|testIsFeedRegistered
specifier|public
name|void
name|testIsFeedRegistered
parameter_list|()
block|{
name|String
name|myFeed
init|=
literal|"myFeed"
decl_stmt|;
name|registerFeed
argument_list|(
name|myFeed
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Feed is registerd"
argument_list|,
name|this
operator|.
name|reg
operator|.
name|isFeedRegistered
argument_list|(
name|myFeed
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"null Feed is not registerd"
argument_list|,
name|this
operator|.
name|reg
operator|.
name|isFeedRegistered
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Feed is not registerd"
argument_list|,
name|this
operator|.
name|reg
operator|.
name|isFeedRegistered
argument_list|(
literal|"someOtherFeed"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|registerFeed
specifier|private
name|void
name|registerFeed
parameter_list|(
name|String
name|feedURL
parameter_list|)
block|{
name|this
operator|.
name|configurator
operator|.
name|setFeedType
argument_list|(
name|Feed
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|configurator
operator|.
name|setFeedId
argument_list|(
name|feedURL
argument_list|)
expr_stmt|;
name|this
operator|.
name|reg
operator|.
name|registerFeed
argument_list|(
name|this
operator|.
name|configurator
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
