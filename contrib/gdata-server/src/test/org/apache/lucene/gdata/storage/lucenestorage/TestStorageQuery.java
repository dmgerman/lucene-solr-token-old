begin_unit
begin_package
DECL|package|org.apache.lucene.gdata.storage.lucenestorage
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
operator|.
name|lucenestorage
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|standard
operator|.
name|StandardAnalyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
operator|.
name|FeedNotFoundException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
operator|.
name|registry
operator|.
name|FeedInstanceConfigurator
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
operator|.
name|registry
operator|.
name|GDataServerRegistry
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
operator|.
name|registry
operator|.
name|RegistryBuilder
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
operator|.
name|StorageException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
operator|.
name|lucenestorage
operator|.
name|StorageCoreController
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
operator|.
name|lucenestorage
operator|.
name|StorageEntryWrapper
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
operator|.
name|lucenestorage
operator|.
name|StorageModifier
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
operator|.
name|lucenestorage
operator|.
name|StorageQuery
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
operator|.
name|lucenestorage
operator|.
name|StorageEntryWrapper
operator|.
name|StorageOperation
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
operator|.
name|lucenestorage
operator|.
name|util
operator|.
name|ReferenceCounter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|RAMDirectory
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|BaseEntry
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|DateTime
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|Entry
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|ExtensionProfile
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|Feed
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|util
operator|.
name|ParseException
import|;
end_import
begin_class
DECL|class|TestStorageQuery
specifier|public
class|class
name|TestStorageQuery
extends|extends
name|TestCase
block|{
DECL|field|modifier
specifier|private
name|StorageModifier
name|modifier
decl_stmt|;
DECL|field|count
specifier|private
name|int
name|count
init|=
literal|30
decl_stmt|;
DECL|field|query
specifier|private
name|ReferenceCounter
argument_list|<
name|StorageQuery
argument_list|>
name|query
decl_stmt|;
DECL|field|profile
specifier|private
name|ExtensionProfile
name|profile
decl_stmt|;
DECL|field|dir
specifier|private
name|Directory
name|dir
decl_stmt|;
DECL|field|feedId
specifier|private
specifier|static
name|String
name|feedId
init|=
literal|"myFeed"
decl_stmt|;
DECL|method|setUp
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|FeedInstanceConfigurator
name|configurator
init|=
operator|new
name|FeedInstanceConfigurator
argument_list|()
decl_stmt|;
name|configurator
operator|.
name|setFeedType
argument_list|(
name|Feed
operator|.
name|class
argument_list|)
expr_stmt|;
name|configurator
operator|.
name|setFeedId
argument_list|(
name|feedId
argument_list|)
expr_stmt|;
name|configurator
operator|.
name|setExtensionProfileClass
argument_list|(
name|ExtensionProfile
operator|.
name|class
argument_list|)
expr_stmt|;
name|GDataServerRegistry
operator|.
name|getRegistry
argument_list|()
operator|.
name|registerFeed
argument_list|(
name|configurator
argument_list|)
expr_stmt|;
name|this
operator|.
name|profile
operator|=
operator|new
name|ExtensionProfile
argument_list|()
expr_stmt|;
name|this
operator|.
name|dir
operator|=
operator|new
name|RAMDirectory
argument_list|()
expr_stmt|;
name|IndexWriter
name|writer
decl_stmt|;
name|writer
operator|=
operator|new
name|IndexWriter
argument_list|(
name|this
operator|.
name|dir
argument_list|,
operator|new
name|StandardAnalyzer
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|this
operator|.
name|modifier
operator|=
name|StorageCoreController
operator|.
name|getStorageCoreController
argument_list|(
name|this
operator|.
name|dir
argument_list|)
operator|.
name|getStorageModifier
argument_list|()
expr_stmt|;
name|insertEntries
argument_list|(
name|this
operator|.
name|count
argument_list|)
expr_stmt|;
name|this
operator|.
name|query
operator|=
name|StorageCoreController
operator|.
name|getStorageCoreController
argument_list|()
operator|.
name|getStorageQuery
argument_list|()
expr_stmt|;
block|}
DECL|method|insertEntries
specifier|public
name|void
name|insertEntries
parameter_list|(
name|int
name|count
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
throws|,
name|StorageException
block|{
name|List
argument_list|<
name|StorageEntryWrapper
argument_list|>
name|tempList
init|=
operator|new
name|ArrayList
argument_list|<
name|StorageEntryWrapper
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<=
name|count
condition|;
name|i
operator|++
control|)
block|{
name|Entry
name|entry
init|=
operator|new
name|Entry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setId
argument_list|(
literal|""
operator|+
name|i
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setUpdated
argument_list|(
operator|new
name|DateTime
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|StorageEntryWrapper
name|wrapper
init|=
operator|new
name|StorageEntryWrapper
argument_list|(
name|entry
argument_list|,
name|feedId
argument_list|,
name|StorageOperation
operator|.
name|INSERT
argument_list|,
name|this
operator|.
name|profile
argument_list|)
decl_stmt|;
name|tempList
operator|.
name|add
argument_list|(
name|i
argument_list|,
name|wrapper
argument_list|)
expr_stmt|;
comment|// force different timestamps --> DateTime 2006-06-05T13:37:55.724Z
name|Thread
operator|.
name|sleep
argument_list|(
literal|50
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|StorageEntryWrapper
name|entry
range|:
name|tempList
control|)
block|{
name|this
operator|.
name|modifier
operator|.
name|insertEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|tearDown
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|query
operator|.
name|decrementRef
argument_list|()
expr_stmt|;
name|GDataServerRegistry
operator|.
name|getRegistry
argument_list|()
operator|.
name|destroy
argument_list|()
expr_stmt|;
comment|//TODO remove dependency here
block|}
comment|/*       * Test method for 'org.apache.lucene.storage.lucenestorage.StorageQuery.feedQuery(String, int, int)'       */
DECL|method|testFeedQuery
specifier|public
name|void
name|testFeedQuery
parameter_list|()
throws|throws
name|IOException
throws|,
name|FeedNotFoundException
throws|,
name|ParseException
throws|,
name|StorageException
block|{
name|FeedQueryHelper
argument_list|(
name|this
operator|.
name|query
argument_list|)
expr_stmt|;
name|StorageCoreController
operator|.
name|getStorageCoreController
argument_list|()
operator|.
name|forceWrite
argument_list|()
expr_stmt|;
name|ReferenceCounter
argument_list|<
name|StorageQuery
argument_list|>
name|queryAssureWritten
init|=
name|StorageCoreController
operator|.
name|getStorageCoreController
argument_list|()
operator|.
name|getStorageQuery
argument_list|()
decl_stmt|;
name|assertNotSame
argument_list|(
name|queryAssureWritten
argument_list|,
name|this
operator|.
name|query
argument_list|)
expr_stmt|;
name|FeedQueryHelper
argument_list|(
name|queryAssureWritten
argument_list|)
expr_stmt|;
name|queryAssureWritten
operator|.
name|decrementRef
argument_list|()
expr_stmt|;
block|}
DECL|method|FeedQueryHelper
specifier|private
name|void
name|FeedQueryHelper
parameter_list|(
name|ReferenceCounter
argument_list|<
name|StorageQuery
argument_list|>
name|currentQuery
parameter_list|)
throws|throws
name|IOException
throws|,
name|FeedNotFoundException
throws|,
name|ParseException
block|{
name|List
argument_list|<
name|BaseEntry
argument_list|>
name|entryList
init|=
name|currentQuery
operator|.
name|get
argument_list|()
operator|.
name|getLatestFeedQuery
argument_list|(
name|feedId
argument_list|,
literal|25
argument_list|,
literal|1
argument_list|,
name|this
operator|.
name|profile
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"listSize: "
operator|+
name|entryList
operator|.
name|size
argument_list|()
argument_list|,
name|entryList
operator|.
name|size
argument_list|()
operator|==
literal|25
argument_list|)
expr_stmt|;
name|BaseEntry
name|tempEntry
init|=
literal|null
decl_stmt|;
for|for
control|(
name|BaseEntry
name|entry
range|:
name|entryList
control|)
block|{
name|assertNotNull
argument_list|(
literal|"entry"
argument_list|,
name|entry
argument_list|)
expr_stmt|;
if|if
condition|(
name|tempEntry
operator|!=
literal|null
condition|)
block|{
name|assertTrue
argument_list|(
name|tempEntry
operator|.
name|getUpdated
argument_list|()
operator|.
name|compareTo
argument_list|(
name|entry
operator|.
name|getUpdated
argument_list|()
argument_list|)
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|tempEntry
operator|=
name|entry
expr_stmt|;
block|}
else|else
name|tempEntry
operator|=
name|entry
expr_stmt|;
block|}
comment|// test sub retrieve sublist
name|int
name|offset
init|=
literal|15
decl_stmt|;
name|int
name|resultCount
init|=
literal|5
decl_stmt|;
name|List
argument_list|<
name|BaseEntry
argument_list|>
name|entrySubList
init|=
name|currentQuery
operator|.
name|get
argument_list|()
operator|.
name|getLatestFeedQuery
argument_list|(
name|feedId
argument_list|,
name|resultCount
argument_list|,
name|offset
argument_list|,
name|this
operator|.
name|profile
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"listSize: "
operator|+
name|entrySubList
operator|.
name|size
argument_list|()
argument_list|,
name|entrySubList
operator|.
name|size
argument_list|()
operator|==
name|resultCount
argument_list|)
expr_stmt|;
name|offset
operator|--
expr_stmt|;
for|for
control|(
name|BaseEntry
name|entry
range|:
name|entrySubList
control|)
block|{
name|assertEquals
argument_list|(
name|entry
operator|.
name|getId
argument_list|()
argument_list|,
name|entryList
operator|.
name|get
argument_list|(
name|offset
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|offset
operator|++
expr_stmt|;
block|}
block|}
comment|/*       * Test method for 'org.apache.lucene.storage.lucenestorage.StorageQuery.singleEntryQuery(String, String)'       */
DECL|method|testSingleEntryQuery
specifier|public
name|void
name|testSingleEntryQuery
parameter_list|()
throws|throws
name|FeedNotFoundException
throws|,
name|ParseException
throws|,
name|IOException
block|{
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
name|this
operator|.
name|count
condition|;
name|i
operator|++
control|)
block|{
name|BaseEntry
name|entry
init|=
name|this
operator|.
name|query
operator|.
name|get
argument_list|()
operator|.
name|singleEntryQuery
argument_list|(
literal|""
operator|+
name|i
argument_list|,
name|feedId
argument_list|,
name|this
operator|.
name|profile
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|""
operator|+
name|i
argument_list|,
name|entry
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*       * Test method for 'org.apache.lucene.storage.lucenestorage.StorageQuery.entryQuery(List<String>, String)'       */
DECL|method|testEntryQuery
specifier|public
name|void
name|testEntryQuery
parameter_list|()
throws|throws
name|FeedNotFoundException
throws|,
name|ParseException
throws|,
name|IOException
throws|,
name|StorageException
block|{
name|entryQueryHelper
argument_list|(
name|this
operator|.
name|query
argument_list|)
expr_stmt|;
name|StorageCoreController
operator|.
name|getStorageCoreController
argument_list|()
operator|.
name|forceWrite
argument_list|()
expr_stmt|;
name|ReferenceCounter
argument_list|<
name|StorageQuery
argument_list|>
name|queryAssureWritten
init|=
name|StorageCoreController
operator|.
name|getStorageCoreController
argument_list|()
operator|.
name|getStorageQuery
argument_list|()
decl_stmt|;
name|assertNotSame
argument_list|(
name|queryAssureWritten
argument_list|,
name|query
argument_list|)
expr_stmt|;
name|entryQueryHelper
argument_list|(
name|queryAssureWritten
argument_list|)
expr_stmt|;
name|queryAssureWritten
operator|.
name|decrementRef
argument_list|()
expr_stmt|;
block|}
DECL|method|entryQueryHelper
specifier|private
name|void
name|entryQueryHelper
parameter_list|(
name|ReferenceCounter
argument_list|<
name|StorageQuery
argument_list|>
name|currentQuery
parameter_list|)
throws|throws
name|IOException
throws|,
name|FeedNotFoundException
throws|,
name|ParseException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|entryIdList
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
name|this
operator|.
name|count
condition|;
name|i
operator|++
control|)
block|{
name|entryIdList
operator|.
name|add
argument_list|(
literal|""
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|BaseEntry
argument_list|>
name|entryList
init|=
name|currentQuery
operator|.
name|get
argument_list|()
operator|.
name|entryQuery
argument_list|(
name|entryIdList
argument_list|,
name|feedId
argument_list|,
name|this
operator|.
name|profile
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|entryIdList
operator|.
name|size
argument_list|()
argument_list|,
name|entryList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|entryIdCompare
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|BaseEntry
name|entry
range|:
name|entryList
control|)
block|{
name|entryIdCompare
operator|.
name|add
argument_list|(
name|entry
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|entryIdList
operator|.
name|containsAll
argument_list|(
name|entryIdCompare
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
