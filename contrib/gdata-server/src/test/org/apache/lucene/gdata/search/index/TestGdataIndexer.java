begin_unit
begin_comment
comment|/**  * Copyright 2004 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.search.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|index
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeoutException
import|;
end_import
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|standard
operator|.
name|StandardAnalyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|config
operator|.
name|IndexSchema
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Hits
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermQuery
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|RAMDirectory
import|;
end_import
begin_comment
comment|/**  * @author Simon Willnauer  *  */
end_comment
begin_class
DECL|class|TestGdataIndexer
specifier|public
class|class
name|TestGdataIndexer
extends|extends
name|TestCase
block|{
DECL|field|indexer
specifier|private
name|GDataIndexer
name|indexer
decl_stmt|;
DECL|field|dir
specifier|private
name|Directory
name|dir
decl_stmt|;
DECL|field|config
specifier|private
specifier|static
name|IndexSchema
name|config
decl_stmt|;
DECL|field|FIELD_ID
specifier|private
specifier|static
name|String
name|FIELD_ID
init|=
name|IndexDocument
operator|.
name|FIELD_ENTRY_ID
decl_stmt|;
static|static
block|{
name|config
operator|=
operator|new
name|IndexSchema
argument_list|()
expr_stmt|;
name|config
operator|.
name|setName
argument_list|(
literal|"testService"
argument_list|)
expr_stmt|;
name|config
operator|.
name|setCommitLockTimeout
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|config
operator|.
name|setServiceAnalyzer
argument_list|(
operator|new
name|StandardAnalyzer
argument_list|()
argument_list|)
expr_stmt|;
name|config
operator|.
name|setMaxBufferedDocs
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|config
operator|.
name|setMaxFieldLength
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|config
operator|.
name|setMaxMergeDocs
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|config
operator|.
name|setWriteLockTimeout
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|config
operator|.
name|setMergeFactor
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
comment|/**      * @see junit.framework.TestCase#setUp()      */
annotation|@
name|Override
DECL|method|setUp
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|dir
operator|=
operator|new
name|RAMDirectory
argument_list|()
expr_stmt|;
name|this
operator|.
name|indexer
operator|=
name|GDataIndexer
operator|.
name|createGdataIndexer
argument_list|(
name|config
argument_list|,
name|this
operator|.
name|dir
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
comment|/**      * @see junit.framework.TestCase#tearDown()      */
annotation|@
name|Override
DECL|method|tearDown
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|indexer
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
DECL|method|testStaticFactoryMethodes
specifier|public
name|void
name|testStaticFactoryMethodes
parameter_list|()
throws|throws
name|IOException
block|{
name|GDataIndexer
name|i
init|=
name|GDataIndexer
operator|.
name|createGdataIndexer
argument_list|(
name|config
argument_list|,
operator|new
name|RAMDirectory
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|IndexTask
operator|.
name|class
argument_list|,
name|i
operator|.
name|indexTask
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|i
operator|=
name|GDataIndexer
operator|.
name|createTimedGdataIndexer
argument_list|(
name|config
argument_list|,
operator|new
name|RAMDirectory
argument_list|()
argument_list|,
literal|true
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TimedIndexTask
operator|.
name|class
argument_list|,
name|i
operator|.
name|indexTask
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
argument_list|,
operator|(
operator|(
name|TimedIndexTask
operator|)
name|i
operator|.
name|indexTask
operator|)
operator|.
name|getIdleTime
argument_list|()
argument_list|)
expr_stmt|;
name|i
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.GDataIndexer.GDataIndexer(IndexServiceConfiguration,      * Directory, boolean)'      */
DECL|method|testGDataIndexer
specifier|public
name|void
name|testGDataIndexer
parameter_list|()
throws|throws
name|InterruptedException
throws|,
name|IOException
block|{
try|try
block|{
operator|new
name|GDataIndexer
argument_list|(
literal|null
argument_list|,
name|dir
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"config is null"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|//
block|}
try|try
block|{
operator|new
name|GDataIndexer
argument_list|(
name|config
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"dir is null"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|//
block|}
name|GDataIndexer
name|in
init|=
operator|new
name|GDataIndexer
argument_list|(
name|config
argument_list|,
operator|new
name|RAMDirectory
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|in
operator|.
name|setIndexTask
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|in
operator|.
name|init
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|in
operator|.
name|indexTask
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|IndexTask
operator|.
name|class
argument_list|,
name|in
operator|.
name|indexTask
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.GDataIndexer.addIndexableDocumentTask(Future<IndexDocument>)'      */
DECL|method|testAddIndexableDocumentTask
specifier|public
name|void
name|testAddIndexableDocumentTask
parameter_list|()
throws|throws
name|InterruptedException
throws|,
name|IOException
block|{
name|String
name|id
init|=
literal|"myID"
decl_stmt|;
name|Field
name|f
init|=
operator|new
name|Field
argument_list|(
name|FIELD_ID
argument_list|,
name|id
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|,
name|Field
operator|.
name|Index
operator|.
name|UN_TOKENIZED
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|Term
name|delTerm
init|=
operator|new
name|Term
argument_list|(
name|FIELD_ID
argument_list|,
name|id
argument_list|)
decl_stmt|;
comment|/*          * Latch will be decremented in FutureStub#get() and          * IndexDocumentStub#getIndexable          */
name|CountDownLatch
name|l
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|IndexDocument
name|iDoc
init|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|INSERT
argument_list|,
name|l
argument_list|)
decl_stmt|;
name|Future
argument_list|<
name|IndexDocument
argument_list|>
name|future
init|=
operator|new
name|FutureStub
argument_list|<
name|IndexDocument
argument_list|>
argument_list|(
name|iDoc
argument_list|,
name|l
argument_list|)
decl_stmt|;
name|this
operator|.
name|indexer
operator|.
name|addIndexableDocumentTask
argument_list|(
name|future
argument_list|)
expr_stmt|;
comment|// wait for the latch do decrement
name|l
operator|.
name|await
argument_list|(
literal|5000
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|commit
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|IndexSearcher
name|s
init|=
operator|new
name|IndexSearcher
argument_list|(
name|this
operator|.
name|dir
argument_list|)
decl_stmt|;
name|Hits
name|h
init|=
name|s
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
name|delTerm
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|h
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// test for update
comment|/*          * Latch will be decremented in FutureStub#get() and          * IndexDocumentStub#getIndexable          */
name|l
operator|=
operator|new
name|CountDownLatch
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|UPDATE
argument_list|,
name|l
argument_list|)
expr_stmt|;
name|future
operator|=
operator|new
name|FutureStub
argument_list|<
name|IndexDocument
argument_list|>
argument_list|(
name|iDoc
argument_list|,
name|l
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|addIndexableDocumentTask
argument_list|(
name|future
argument_list|)
expr_stmt|;
name|l
operator|.
name|await
argument_list|(
literal|5000
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|commit
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|s
operator|=
operator|new
name|IndexSearcher
argument_list|(
name|this
operator|.
name|dir
argument_list|)
expr_stmt|;
name|h
operator|=
name|s
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
name|delTerm
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|h
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// test for delete
comment|/*          * Latch will be decremented in FutureStub#get()          */
name|l
operator|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|DELETE
argument_list|,
name|l
argument_list|)
expr_stmt|;
name|future
operator|=
operator|new
name|FutureStub
argument_list|<
name|IndexDocument
argument_list|>
argument_list|(
name|iDoc
argument_list|,
name|l
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|addIndexableDocumentTask
argument_list|(
name|future
argument_list|)
expr_stmt|;
comment|/*          * wait for the indexer task to add the deleted          */
while|while
condition|(
name|this
operator|.
name|indexer
operator|.
name|docsDeleted
operator|.
name|get
argument_list|()
operator|==
literal|0
condition|)
name|l
operator|.
name|await
argument_list|(
literal|5000
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|commit
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|s
operator|=
operator|new
name|IndexSearcher
argument_list|(
name|this
operator|.
name|dir
argument_list|)
expr_stmt|;
name|h
operator|=
name|s
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
name|delTerm
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|h
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.GDataIndexer.addDocument(IndexDocument)'      */
DECL|method|testAddDocument
specifier|public
name|void
name|testAddDocument
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|id
init|=
literal|"myID"
decl_stmt|;
name|Field
name|f
init|=
operator|new
name|Field
argument_list|(
name|FIELD_ID
argument_list|,
name|id
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|,
name|Field
operator|.
name|Index
operator|.
name|UN_TOKENIZED
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|Term
name|delTerm
init|=
operator|new
name|Term
argument_list|(
name|FIELD_ID
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|IndexDocument
name|iDoc
init|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|INSERT
argument_list|)
decl_stmt|;
name|this
operator|.
name|indexer
operator|.
name|addDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsAdded
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsDeleted
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsUpdated
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|addDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|commit
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|IndexSearcher
name|s
init|=
operator|new
name|IndexSearcher
argument_list|(
name|this
operator|.
name|dir
argument_list|)
decl_stmt|;
name|Hits
name|h
init|=
name|s
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
name|delTerm
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|h
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
try|try
block|{
name|this
operator|.
name|indexer
operator|.
name|addDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"document has not insert action "
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|GdataIndexerException
name|e
parameter_list|)
block|{                      }
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.GDataIndexer.updateDocument(IndexDocument)'      */
DECL|method|testUpdateDocument
specifier|public
name|void
name|testUpdateDocument
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|id
init|=
literal|"myID"
decl_stmt|;
name|Field
name|f
init|=
operator|new
name|Field
argument_list|(
name|FIELD_ID
argument_list|,
name|id
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|,
name|Field
operator|.
name|Index
operator|.
name|UN_TOKENIZED
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|Term
name|delTerm
init|=
operator|new
name|Term
argument_list|(
name|FIELD_ID
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|IndexDocument
name|iDoc
init|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|INSERT
argument_list|)
decl_stmt|;
comment|/*          * write doc to index          */
name|this
operator|.
name|indexer
operator|.
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|closeWriter
argument_list|()
expr_stmt|;
name|IndexSearcher
name|s
init|=
operator|new
name|IndexSearcher
argument_list|(
name|this
operator|.
name|dir
argument_list|)
decl_stmt|;
name|Hits
name|h
init|=
name|s
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
name|delTerm
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|h
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
name|String
name|testFieldName
init|=
literal|"someTestFieldupdate"
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|testFieldName
argument_list|,
literal|"someText"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|,
name|Field
operator|.
name|Index
operator|.
name|TOKENIZED
argument_list|)
argument_list|)
expr_stmt|;
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
comment|/*          * updateDoc via indexer           */
name|this
operator|.
name|indexer
operator|.
name|updateDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsAdded
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsDeleted
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsUpdated
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|commit
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|s
operator|=
operator|new
name|IndexSearcher
argument_list|(
name|this
operator|.
name|dir
argument_list|)
expr_stmt|;
name|h
operator|=
name|s
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
name|delTerm
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|h
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|h
operator|.
name|doc
argument_list|(
literal|0
argument_list|)
operator|.
name|getField
argument_list|(
name|testFieldName
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|DELETE
argument_list|)
expr_stmt|;
try|try
block|{
name|this
operator|.
name|indexer
operator|.
name|updateDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"document has not update action "
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|GdataIndexerException
name|e
parameter_list|)
block|{                      }
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.GDataIndexer.deleteDocument(IndexDocument)'      */
DECL|method|testDeleteDocument
specifier|public
name|void
name|testDeleteDocument
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|id
init|=
literal|"myID"
decl_stmt|;
name|Field
name|f
init|=
operator|new
name|Field
argument_list|(
name|FIELD_ID
argument_list|,
name|id
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|,
name|Field
operator|.
name|Index
operator|.
name|UN_TOKENIZED
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|Term
name|delTerm
init|=
operator|new
name|Term
argument_list|(
name|FIELD_ID
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|IndexDocument
name|iDoc
init|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|INSERT
argument_list|)
decl_stmt|;
comment|/*          * write doc to index          */
name|this
operator|.
name|indexer
operator|.
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|closeWriter
argument_list|()
expr_stmt|;
name|IndexSearcher
name|s
init|=
operator|new
name|IndexSearcher
argument_list|(
name|this
operator|.
name|dir
argument_list|)
decl_stmt|;
name|Hits
name|h
init|=
name|s
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
name|delTerm
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|h
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
comment|/*          * del doc via indexer          */
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|DELETE
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|deleteDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsAdded
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsDeleted
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsUpdated
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|commit
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|s
operator|=
operator|new
name|IndexSearcher
argument_list|(
name|this
operator|.
name|dir
argument_list|)
expr_stmt|;
name|h
operator|=
name|s
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
name|delTerm
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|h
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
comment|/*          * test insert / del without optimize          */
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|INSERT
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|addDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|DELETE
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|deleteDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|commit
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|s
operator|=
operator|new
name|IndexSearcher
argument_list|(
name|this
operator|.
name|dir
argument_list|)
expr_stmt|;
name|h
operator|=
name|s
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
name|delTerm
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|h
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
comment|/*          * test insert / del / update without optimize          */
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|INSERT
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|addDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|DELETE
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|deleteDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|INSERT
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|addDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|commit
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|s
operator|=
operator|new
name|IndexSearcher
argument_list|(
name|this
operator|.
name|dir
argument_list|)
expr_stmt|;
name|h
operator|=
name|s
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
name|delTerm
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|h
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
comment|/*          * test insert / update / del without optimize          */
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|INSERT
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|addDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|updateDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|DELETE
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|deleteDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|commit
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|s
operator|=
operator|new
name|IndexSearcher
argument_list|(
name|this
operator|.
name|dir
argument_list|)
expr_stmt|;
name|h
operator|=
name|s
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
name|delTerm
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|h
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
try|try
block|{
name|this
operator|.
name|indexer
operator|.
name|deleteDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"document has not delete action "
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|GdataIndexerException
name|e
parameter_list|)
block|{                      }
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.GDataIndexer.commit(boolean)'      */
DECL|method|testCommit
specifier|public
name|void
name|testCommit
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|id
init|=
literal|"myID"
decl_stmt|;
name|Field
name|f
init|=
operator|new
name|Field
argument_list|(
name|FIELD_ID
argument_list|,
name|id
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|,
name|Field
operator|.
name|Index
operator|.
name|UN_TOKENIZED
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|Term
name|delTerm
init|=
operator|new
name|Term
argument_list|(
name|FIELD_ID
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|IndexDocument
name|iDoc
init|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|INSERT
argument_list|)
decl_stmt|;
name|this
operator|.
name|indexer
operator|.
name|addDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|updateDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|updateDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|DELETE
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|deleteDocument
argument_list|(
name|iDoc
argument_list|)
expr_stmt|;
name|IndexEventListenerStub
name|evListener
init|=
operator|new
name|IndexEventListenerStub
argument_list|()
decl_stmt|;
name|this
operator|.
name|indexer
operator|.
name|registerIndexEventListener
argument_list|(
name|evListener
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsAdded
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsDeleted
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsUpdated
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|evListener
operator|.
name|getCalledCount
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|commit
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|commit
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|evListener
operator|.
name|getCalledCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsAdded
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsDeleted
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|this
operator|.
name|indexer
operator|.
name|docsUpdated
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|IndexSearcher
name|s
init|=
operator|new
name|IndexSearcher
argument_list|(
name|this
operator|.
name|dir
argument_list|)
decl_stmt|;
name|Hits
name|h
init|=
name|s
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
name|delTerm
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|h
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.GDataIndexer.registerIndexEventListener(IndexEventListener)'      */
DECL|method|testRegisterIndexEventListener
specifier|public
name|void
name|testRegisterIndexEventListener
parameter_list|()
block|{
name|IndexEventListenerStub
name|evListener
init|=
operator|new
name|IndexEventListenerStub
argument_list|()
decl_stmt|;
name|this
operator|.
name|indexer
operator|.
name|registerIndexEventListener
argument_list|(
name|evListener
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|registerIndexEventListener
argument_list|(
name|evListener
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|evListener
operator|.
name|getCalledCount
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|notifyCommitListeners
argument_list|(
literal|"someId"
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|notifyCommitListeners
argument_list|(
literal|"someId"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|evListener
operator|.
name|getCalledCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.GDataIndexer.removeIndexEventListener(IndexEventListener)'      */
DECL|method|testRemoveIndexEventListener
specifier|public
name|void
name|testRemoveIndexEventListener
parameter_list|()
block|{
name|IndexEventListenerStub
name|evListener
init|=
operator|new
name|IndexEventListenerStub
argument_list|()
decl_stmt|;
name|this
operator|.
name|indexer
operator|.
name|registerIndexEventListener
argument_list|(
name|evListener
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|evListener
operator|.
name|getCalledCount
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|notifyCommitListeners
argument_list|(
literal|"someId"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|evListener
operator|.
name|getCalledCount
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|removeIndexEventListener
argument_list|(
name|evListener
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|removeIndexEventListener
argument_list|(
name|evListener
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|notifyCommitListeners
argument_list|(
literal|"someId"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|evListener
operator|.
name|getCalledCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.GDataIndexer.notifyCommitListeners(String)'      */
DECL|method|testNotifyCommitListeners
specifier|public
name|void
name|testNotifyCommitListeners
parameter_list|()
block|{
name|IndexEventListenerStub
name|evListener
init|=
operator|new
name|IndexEventListenerStub
argument_list|()
decl_stmt|;
name|IndexEventListenerStub
name|evListener1
init|=
operator|new
name|IndexEventListenerStub
argument_list|()
decl_stmt|;
name|IndexEventListenerStub
name|evListener2
init|=
operator|new
name|IndexEventListenerStub
argument_list|()
decl_stmt|;
name|this
operator|.
name|indexer
operator|.
name|registerIndexEventListener
argument_list|(
name|evListener
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|registerIndexEventListener
argument_list|(
name|evListener1
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|registerIndexEventListener
argument_list|(
name|evListener2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|evListener
operator|.
name|getCalledCount
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|notifyCommitListeners
argument_list|(
literal|"someId"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|evListener
operator|.
name|getCalledCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|evListener1
operator|.
name|getCalledCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|evListener2
operator|.
name|getCalledCount
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|removeIndexEventListener
argument_list|(
name|evListener
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|notifyCommitListeners
argument_list|(
literal|"someId"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|evListener
operator|.
name|getCalledCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|evListener1
operator|.
name|getCalledCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|evListener2
operator|.
name|getCalledCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.GDataIndexer.closeWriter()'      */
DECL|method|testCloseWriter
specifier|public
name|void
name|testCloseWriter
parameter_list|()
throws|throws
name|IOException
block|{
name|assertNotNull
argument_list|(
name|this
operator|.
name|indexer
operator|.
name|writer
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|closeWriter
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|this
operator|.
name|indexer
operator|.
name|writer
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.GDataIndexer.closeSearcher()'      */
DECL|method|testCloseSearcher
specifier|public
name|void
name|testCloseSearcher
parameter_list|()
throws|throws
name|IOException
block|{
name|this
operator|.
name|indexer
operator|.
name|openSearcher
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|this
operator|.
name|indexer
operator|.
name|searcher
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|closeSearcher
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|this
operator|.
name|indexer
operator|.
name|searcher
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.GDataIndexer.openSearcher()'      */
DECL|method|testOpenSearcher
specifier|public
name|void
name|testOpenSearcher
parameter_list|()
throws|throws
name|IOException
block|{
name|this
operator|.
name|indexer
operator|.
name|searcher
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|openSearcher
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|this
operator|.
name|indexer
operator|.
name|searcher
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.GDataIndexer.openWriter()'      */
DECL|method|testOpenWriter
specifier|public
name|void
name|testOpenWriter
parameter_list|()
throws|throws
name|IOException
block|{
name|this
operator|.
name|indexer
operator|.
name|closeWriter
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|this
operator|.
name|indexer
operator|.
name|writer
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|openWriter
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|this
operator|.
name|indexer
operator|.
name|writer
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test method for      * 'org.apache.lucene.gdata.search.index.GDataIndexer.destroy()'      */
DECL|method|testDestroy
specifier|public
name|void
name|testDestroy
parameter_list|()
throws|throws
name|InterruptedException
throws|,
name|IOException
block|{
name|this
operator|.
name|indexer
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|String
name|id
init|=
literal|"myID"
decl_stmt|;
name|Field
name|f
init|=
operator|new
name|Field
argument_list|(
name|FIELD_ID
argument_list|,
name|id
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|,
name|Field
operator|.
name|Index
operator|.
name|UN_TOKENIZED
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|Term
name|delTerm
init|=
operator|new
name|Term
argument_list|(
name|FIELD_ID
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|IndexDocument
name|iDoc
init|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|INSERT
argument_list|)
decl_stmt|;
name|Future
argument_list|<
name|IndexDocument
argument_list|>
name|future
init|=
operator|new
name|FutureStub
argument_list|<
name|IndexDocument
argument_list|>
argument_list|(
name|iDoc
argument_list|)
decl_stmt|;
try|try
block|{
name|this
operator|.
name|indexer
operator|.
name|addIndexableDocumentTask
argument_list|(
name|future
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"indexer already closed exc. expected"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{}
name|this
operator|.
name|indexer
operator|=
name|GDataIndexer
operator|.
name|createGdataIndexer
argument_list|(
name|config
argument_list|,
name|dir
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|CountDownLatch
name|documentLatch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|iDoc
operator|=
operator|new
name|IndexDocumentStub
argument_list|(
name|doc
argument_list|,
name|delTerm
argument_list|,
name|IndexAction
operator|.
name|INSERT
argument_list|,
name|documentLatch
argument_list|)
expr_stmt|;
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|future
operator|=
operator|new
name|FutureStub
argument_list|<
name|IndexDocument
argument_list|>
argument_list|(
name|iDoc
argument_list|,
name|latch
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|addIndexableDocumentTask
argument_list|(
name|future
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexer
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
name|documentLatch
operator|.
name|await
argument_list|(
literal|5000
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
comment|// wait active for the commit
while|while
condition|(
name|this
operator|.
name|indexer
operator|.
name|writer
operator|!=
literal|null
condition|)
block|{}
name|IndexSearcher
name|s
init|=
operator|new
name|IndexSearcher
argument_list|(
name|this
operator|.
name|dir
argument_list|)
decl_stmt|;
name|Hits
name|h
init|=
name|s
operator|.
name|search
argument_list|(
operator|new
name|TermQuery
argument_list|(
name|delTerm
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|h
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testInnerClassFuture
specifier|public
name|void
name|testInnerClassFuture
parameter_list|()
throws|throws
name|InterruptedException
throws|,
name|ExecutionException
throws|,
name|TimeoutException
block|{
name|Future
name|f
init|=
operator|new
name|GDataIndexer
operator|.
name|FinishingFuture
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|f
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|f
operator|.
name|get
argument_list|(
literal|0
argument_list|,
name|TimeUnit
operator|.
name|MICROSECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|f
operator|.
name|isDone
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|f
operator|.
name|isCancelled
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|f
operator|.
name|cancel
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
