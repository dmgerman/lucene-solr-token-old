begin_unit
begin_comment
comment|/**   * Copyright 2004 The Apache Software Foundation   *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   *     http://www.apache.org/licenses/LICENSE-2.0   *   * Unless required by applicable law or agreed to in writing, software   * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.storage.lucenestorage
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
operator|.
name|lucenestorage
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
operator|.
name|Storage
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
operator|.
name|StorageException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
operator|.
name|lucenestorage
operator|.
name|StorageEntryWrapper
operator|.
name|StorageOperation
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
operator|.
name|lucenestorage
operator|.
name|util
operator|.
name|ReferenceCounter
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|BaseEntry
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|BaseFeed
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|ExtensionProfile
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|Feed
import|;
end_import
begin_comment
comment|/**   * This is an implementation of the   * {@link org.apache.lucene.gdata.storage.Storage} interface. The   * StorageImplementation provides access to the   * {@link org.apache.lucene.gdata.storage.lucenestorage.StorageQuery} and the   * {@link org.apache.lucene.gdata.storage.lucenestorage.StorageModifier}. This   * class will be instanciated per client request.   *    *    *    * @author Simon Willnauer   *    */
end_comment
begin_class
DECL|class|StorageImplementation
specifier|public
class|class
name|StorageImplementation
implements|implements
name|Storage
block|{
DECL|field|controller
specifier|private
specifier|final
name|StorageCoreController
name|controller
decl_stmt|;
DECL|field|profile
specifier|private
name|ExtensionProfile
name|profile
decl_stmt|;
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|StorageImplementation
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**       * Creates a new StorageImplementation       *        * @throws StorageException -       *             if the       *             {@link org.apache.lucene.gdata.storage.StorageController} can       *             not be created       * @throws IOException -       *             if the       *             {@link org.apache.lucene.gdata.storage.StorageController} can       *             not be created       * @see StorageCoreController#getStorageCoreController()       *        */
DECL|method|StorageImplementation
specifier|public
name|StorageImplementation
parameter_list|()
throws|throws
name|IOException
throws|,
name|StorageException
block|{
name|this
operator|.
name|controller
operator|=
name|StorageCoreController
operator|.
name|getStorageCoreController
argument_list|()
expr_stmt|;
block|}
comment|/**       * @see org.apache.lucene.gdata.storage.Storage#storeEntry(com.google.gdata.data.BaseEntry,       *      java.lang.String)       */
DECL|method|storeEntry
specifier|public
name|BaseEntry
name|storeEntry
parameter_list|(
name|BaseEntry
name|entry
parameter_list|,
name|String
name|feedId
parameter_list|)
throws|throws
name|StorageException
block|{
if|if
condition|(
name|this
operator|.
name|profile
operator|==
literal|null
condition|)
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"Can process ExtensionProfile not set -- is null"
argument_list|)
throw|;
if|if
condition|(
name|feedId
operator|==
literal|null
condition|)
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"No feed ID specified -- is null"
argument_list|)
throw|;
name|StorageModifier
name|modifier
init|=
name|this
operator|.
name|controller
operator|.
name|getStorageModifier
argument_list|()
decl_stmt|;
name|String
name|id
init|=
name|this
operator|.
name|controller
operator|.
name|releaseID
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setId
argument_list|(
name|feedId
operator|+
name|id
argument_list|)
expr_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isInfoEnabled
argument_list|()
condition|)
name|LOG
operator|.
name|info
argument_list|(
literal|"Store entry "
operator|+
name|id
operator|+
literal|" -- feed: "
operator|+
name|feedId
argument_list|)
expr_stmt|;
try|try
block|{
name|StorageEntryWrapper
name|wrapper
init|=
operator|new
name|StorageEntryWrapper
argument_list|(
name|entry
argument_list|,
name|feedId
argument_list|,
name|StorageOperation
operator|.
name|INSERT
argument_list|,
name|this
operator|.
name|profile
argument_list|)
decl_stmt|;
name|modifier
operator|.
name|insertEntry
argument_list|(
name|wrapper
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|StorageException
name|ex
init|=
operator|new
name|StorageException
argument_list|(
literal|"Can't create Entry -- "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
decl_stmt|;
name|ex
operator|.
name|setStackTrace
argument_list|(
name|e
operator|.
name|getStackTrace
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
name|ex
throw|;
block|}
return|return
name|entry
return|;
block|}
comment|/**       * @see org.apache.lucene.gdata.storage.Storage#deleteEntry(java.lang.String,       *      java.lang.String)       */
DECL|method|deleteEntry
specifier|public
name|void
name|deleteEntry
parameter_list|(
name|String
name|entryId
parameter_list|,
name|String
name|feedId
parameter_list|)
throws|throws
name|StorageException
block|{
if|if
condition|(
name|this
operator|.
name|profile
operator|==
literal|null
condition|)
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"Can process ExtensionProfile not set -- is null"
argument_list|)
throw|;
if|if
condition|(
name|feedId
operator|==
literal|null
condition|)
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"No feed ID specified -- is null"
argument_list|)
throw|;
if|if
condition|(
name|entryId
operator|==
literal|null
condition|)
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"No entry ID specified -- is null"
argument_list|)
throw|;
if|if
condition|(
name|LOG
operator|.
name|isInfoEnabled
argument_list|()
condition|)
name|LOG
operator|.
name|info
argument_list|(
literal|"delete entry "
operator|+
name|entryId
operator|+
literal|" -- feed: "
operator|+
name|feedId
argument_list|)
expr_stmt|;
name|StorageModifier
name|modifier
init|=
name|this
operator|.
name|controller
operator|.
name|getStorageModifier
argument_list|()
decl_stmt|;
name|modifier
operator|.
name|deleteEntry
argument_list|(
name|entryId
argument_list|,
name|feedId
argument_list|)
expr_stmt|;
block|}
comment|/**       * @see org.apache.lucene.gdata.storage.Storage#updateEntry(com.google.gdata.data.BaseEntry,       *      java.lang.String)       */
DECL|method|updateEntry
specifier|public
name|BaseEntry
name|updateEntry
parameter_list|(
name|BaseEntry
name|entry
parameter_list|,
name|String
name|feedId
parameter_list|)
throws|throws
name|StorageException
block|{
if|if
condition|(
name|this
operator|.
name|profile
operator|==
literal|null
condition|)
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"Can process ExtensionProfile not set -- is null"
argument_list|)
throw|;
if|if
condition|(
name|feedId
operator|==
literal|null
condition|)
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"No feed ID specified -- is null"
argument_list|)
throw|;
if|if
condition|(
name|entry
operator|==
literal|null
condition|)
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"enrty is null"
argument_list|)
throw|;
if|if
condition|(
name|entry
operator|.
name|getId
argument_list|()
operator|==
literal|null
condition|)
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"No entry ID specified -- is null"
argument_list|)
throw|;
if|if
condition|(
name|LOG
operator|.
name|isInfoEnabled
argument_list|()
condition|)
name|LOG
operator|.
name|info
argument_list|(
literal|"update entry "
operator|+
name|entry
operator|.
name|getId
argument_list|()
operator|+
literal|" -- feed: "
operator|+
name|feedId
argument_list|)
expr_stmt|;
name|StorageModifier
name|modifier
init|=
name|this
operator|.
name|controller
operator|.
name|getStorageModifier
argument_list|()
decl_stmt|;
try|try
block|{
name|StorageEntryWrapper
name|wrapper
init|=
operator|new
name|StorageEntryWrapper
argument_list|(
name|entry
argument_list|,
name|feedId
argument_list|,
name|StorageOperation
operator|.
name|UPDATE
argument_list|,
name|this
operator|.
name|profile
argument_list|)
decl_stmt|;
name|modifier
operator|.
name|updateEntry
argument_list|(
name|wrapper
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Can't update entry for feedID: "
operator|+
name|feedId
operator|+
literal|"; entryId: "
operator|+
name|entry
operator|.
name|getId
argument_list|()
operator|+
literal|" -- "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|StorageException
name|ex
init|=
operator|new
name|StorageException
argument_list|(
literal|"Can't create Entry -- "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
decl_stmt|;
name|ex
operator|.
name|setStackTrace
argument_list|(
name|e
operator|.
name|getStackTrace
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
name|ex
throw|;
block|}
return|return
name|entry
return|;
block|}
comment|/**       * @see org.apache.lucene.gdata.storage.Storage#getFeed(java.lang.String,       *      int, int)       */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getFeed
specifier|public
name|BaseFeed
name|getFeed
parameter_list|(
name|String
name|feedId
parameter_list|,
name|int
name|startIndex
parameter_list|,
name|int
name|resultCount
parameter_list|)
throws|throws
name|StorageException
block|{
if|if
condition|(
name|this
operator|.
name|profile
operator|==
literal|null
condition|)
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"Can process ExtensionProfile not set -- is null"
argument_list|)
throw|;
if|if
condition|(
name|feedId
operator|==
literal|null
condition|)
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"No feed ID specified -- is null"
argument_list|)
throw|;
if|if
condition|(
name|LOG
operator|.
name|isInfoEnabled
argument_list|()
condition|)
name|LOG
operator|.
name|info
argument_list|(
literal|"get feed: "
operator|+
name|feedId
operator|+
literal|" startindex: "
operator|+
name|startIndex
operator|+
literal|" resultCount: "
operator|+
name|resultCount
argument_list|)
expr_stmt|;
name|ReferenceCounter
argument_list|<
name|StorageQuery
argument_list|>
name|query
init|=
literal|null
decl_stmt|;
try|try
block|{
name|query
operator|=
name|this
operator|.
name|controller
operator|.
name|getStorageQuery
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|BaseEntry
argument_list|>
name|resultList
init|=
name|query
operator|.
name|get
argument_list|()
operator|.
name|getLatestFeedQuery
argument_list|(
name|feedId
argument_list|,
name|resultCount
argument_list|,
name|startIndex
argument_list|,
name|this
operator|.
name|profile
argument_list|)
decl_stmt|;
name|BaseFeed
name|feed
init|=
operator|new
name|Feed
argument_list|()
decl_stmt|;
name|feed
operator|.
name|getEntries
argument_list|()
operator|.
name|addAll
argument_list|(
name|resultList
argument_list|)
expr_stmt|;
return|return
name|feed
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Can't get latest feed for feedID: "
operator|+
name|feedId
operator|+
literal|" -- "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|StorageException
name|ex
init|=
operator|new
name|StorageException
argument_list|(
literal|"Can't create Entry -- "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
decl_stmt|;
name|ex
operator|.
name|setStackTrace
argument_list|(
name|e
operator|.
name|getStackTrace
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
name|ex
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|query
operator|!=
literal|null
condition|)
name|query
operator|.
name|decrementRef
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**       * @see org.apache.lucene.gdata.storage.Storage#getEntry(java.lang.String,       *      java.lang.String)       */
DECL|method|getEntry
specifier|public
name|BaseEntry
name|getEntry
parameter_list|(
name|String
name|entryId
parameter_list|,
name|String
name|feedId
parameter_list|)
throws|throws
name|StorageException
block|{
if|if
condition|(
name|this
operator|.
name|profile
operator|==
literal|null
condition|)
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"Can process ExtensionProfile not set -- is null"
argument_list|)
throw|;
if|if
condition|(
name|feedId
operator|==
literal|null
condition|)
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"No feed ID specified -- is null"
argument_list|)
throw|;
if|if
condition|(
name|entryId
operator|==
literal|null
condition|)
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"No entry ID specified -- is null"
argument_list|)
throw|;
if|if
condition|(
name|LOG
operator|.
name|isInfoEnabled
argument_list|()
condition|)
name|LOG
operator|.
name|info
argument_list|(
literal|"get entry "
operator|+
name|entryId
operator|+
literal|" -- feed: "
operator|+
name|feedId
argument_list|)
expr_stmt|;
name|ReferenceCounter
argument_list|<
name|StorageQuery
argument_list|>
name|query
init|=
literal|null
decl_stmt|;
try|try
block|{
name|query
operator|=
name|this
operator|.
name|controller
operator|.
name|getStorageQuery
argument_list|()
expr_stmt|;
return|return
name|query
operator|.
name|get
argument_list|()
operator|.
name|singleEntryQuery
argument_list|(
name|entryId
argument_list|,
name|feedId
argument_list|,
name|this
operator|.
name|profile
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Can't get entry for feedID: "
operator|+
name|feedId
operator|+
literal|"; entryId: "
operator|+
name|entryId
operator|+
literal|" -- "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|StorageException
name|ex
init|=
operator|new
name|StorageException
argument_list|(
literal|"Can't create Entry -- "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
decl_stmt|;
name|ex
operator|.
name|setStackTrace
argument_list|(
name|e
operator|.
name|getStackTrace
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
name|ex
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|query
operator|!=
literal|null
condition|)
name|query
operator|.
name|decrementRef
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**       * @see org.apache.lucene.gdata.storage.Storage#getEntries(java.util.List,       *      java.lang.String)       */
DECL|method|getEntries
specifier|public
name|List
argument_list|<
name|BaseEntry
argument_list|>
name|getEntries
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|entryIdList
parameter_list|,
name|String
name|feedId
parameter_list|)
throws|throws
name|StorageException
block|{
throw|throw
operator|new
name|StorageException
argument_list|(
literal|"not implemented yet"
argument_list|)
throw|;
comment|// TODO implement this
block|}
comment|/**       * @see org.apache.lucene.gdata.storage.Storage#close()       */
DECL|method|close
specifier|public
name|void
name|close
parameter_list|()
block|{
comment|//
block|}
comment|/**       * @see org.apache.lucene.gdata.storage.Storage#setExtensionProfile(com.google.gdata.data.ExtensionProfile)       */
DECL|method|setExtensionProfile
specifier|public
name|void
name|setExtensionProfile
parameter_list|(
name|ExtensionProfile
name|profile
parameter_list|)
block|{
name|this
operator|.
name|profile
operator|=
name|profile
expr_stmt|;
block|}
block|}
end_class
end_unit
