begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.search.analysis
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|analysis
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilder
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPath
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPathConstants
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPathExpressionException
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPathFactory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|data
operator|.
name|ServerBaseEntry
import|;
end_import
begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import
begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|ExtensionProfile
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|util
operator|.
name|common
operator|.
name|xml
operator|.
name|XmlWriter
import|;
end_import
begin_comment
comment|/**  *<tt>Indexable</tt> implementation using the W3C Dom API and JAXP XPath  * engine  *   * @author Simon Willnauer  * @param<R> -  *            a subtype of {@link org.w3c.dom.Node} returned by the applyPath  *            method  * @param<I> -  *            a subtype of {@link org.apache.lucene.gdata.data.ServerBaseEntry}  */
end_comment
begin_class
DECL|class|DomIndexable
specifier|public
class|class
name|DomIndexable
parameter_list|<
name|R
extends|extends
name|Node
parameter_list|,
name|I
extends|extends
name|ServerBaseEntry
parameter_list|>
extends|extends
name|Indexable
argument_list|<
name|R
argument_list|,
name|I
argument_list|>
block|{
DECL|field|document
specifier|private
specifier|final
name|Document
name|document
decl_stmt|;
DECL|field|xPath
specifier|private
specifier|final
name|XPath
name|xPath
decl_stmt|;
comment|/**      * @param applyAble      * @throws NotIndexableException      */
DECL|method|DomIndexable
specifier|public
name|DomIndexable
parameter_list|(
name|I
name|applyAble
parameter_list|)
throws|throws
name|NotIndexableException
block|{
name|super
argument_list|(
name|applyAble
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|applyAble
operator|.
name|getServiceConfig
argument_list|()
operator|==
literal|null
condition|)
throw|throw
operator|new
name|NotIndexableException
argument_list|(
literal|"ServiceConfig is not set"
argument_list|)
throw|;
try|try
block|{
name|this
operator|.
name|document
operator|=
name|buildDomDocument
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParserConfigurationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|NotIndexableException
argument_list|(
literal|"Can not create document builder"
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|NotIndexableException
argument_list|(
literal|"IO Exception occurred while building indexable"
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|SAXException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|NotIndexableException
argument_list|(
literal|"Can not parse entry"
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|this
operator|.
name|xPath
operator|=
name|XPathFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|newXPath
argument_list|()
expr_stmt|;
block|}
DECL|method|buildDomDocument
specifier|private
name|Document
name|buildDomDocument
parameter_list|()
throws|throws
name|ParserConfigurationException
throws|,
name|IOException
throws|,
name|SAXException
block|{
name|StringWriter
name|stringWriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|ExtensionProfile
name|profile
init|=
name|this
operator|.
name|applyAble
operator|.
name|getServiceConfig
argument_list|()
operator|.
name|getExtensionProfile
argument_list|()
decl_stmt|;
if|if
condition|(
name|profile
operator|==
literal|null
condition|)
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"ExtensionProfile is not set"
argument_list|)
throw|;
name|XmlWriter
name|writer
init|=
operator|new
name|XmlWriter
argument_list|(
name|stringWriter
argument_list|)
decl_stmt|;
name|this
operator|.
name|applyAble
operator|.
name|generateAtom
argument_list|(
name|writer
argument_list|,
name|profile
argument_list|)
expr_stmt|;
name|DocumentBuilder
name|builder
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|newDocumentBuilder
argument_list|()
decl_stmt|;
return|return
name|builder
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|stringWriter
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * @see org.apache.lucene.gdata.search.analysis.Indexable#applyPath(java.lang.String)      */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
DECL|method|applyPath
specifier|public
name|R
name|applyPath
parameter_list|(
name|String
name|expression
parameter_list|)
throws|throws
name|XPathExpressionException
block|{
return|return
operator|(
name|R
operator|)
name|this
operator|.
name|xPath
operator|.
name|evaluate
argument_list|(
name|expression
argument_list|,
name|this
operator|.
name|document
argument_list|,
name|XPathConstants
operator|.
name|NODE
argument_list|)
return|;
block|}
block|}
end_class
end_unit
