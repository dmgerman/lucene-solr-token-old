begin_unit
begin_comment
comment|/**   * Copyright 2004 The Apache Software Foundation   *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   *     http://www.apache.org/licenses/LICENSE-2.0   *   * Unless required by applicable law or agreed to in writing, software   * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.server.administration
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
operator|.
name|administration
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|digester
operator|.
name|Digester
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|data
operator|.
name|GDataAccount
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|utils
operator|.
name|SimpleSaxErrorHandler
import|;
end_import
begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import
begin_comment
comment|/**  * Helperclass to create {@link org.apache.lucene.gdata.data.GDataAccount}  * instances from a xml stream provided via a {@link Reader} instance.  *   * @author Simon Willnauer  *   */
end_comment
begin_class
DECL|class|AccountBuilder
specifier|public
class|class
name|AccountBuilder
block|{
comment|/**      * Reads the xml from the provided reader and binds the values to the       * @param reader - the reader to read the xml from      * @return - the GDataAccount       * @throws IOException - if an IOException occures      * @throws SAXException - if the xml can not be parsed by the sax reader      */
DECL|method|buildAccount
specifier|public
specifier|static
name|GDataAccount
name|buildAccount
parameter_list|(
specifier|final
name|Reader
name|reader
parameter_list|)
throws|throws
name|IOException
throws|,
name|SAXException
block|{
if|if
condition|(
name|reader
operator|==
literal|null
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Reader must not be null"
argument_list|)
throw|;
name|String
name|schemaFile
init|=
name|AccountBuilder
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"/gdata-account.xsd"
argument_list|)
operator|.
name|getFile
argument_list|()
decl_stmt|;
name|GDataAccount
name|account
init|=
literal|null
decl_stmt|;
name|Digester
name|digester
init|=
operator|new
name|Digester
argument_list|()
decl_stmt|;
name|digester
operator|.
name|setValidating
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|digester
operator|.
name|setErrorHandler
argument_list|(
operator|new
name|SimpleSaxErrorHandler
argument_list|()
argument_list|)
expr_stmt|;
name|digester
operator|.
name|setSchema
argument_list|(
name|schemaFile
argument_list|)
expr_stmt|;
name|digester
operator|.
name|addObjectCreate
argument_list|(
literal|"account"
argument_list|,
name|GDataAccount
operator|.
name|class
argument_list|)
expr_stmt|;
name|digester
operator|.
name|addBeanPropertySetter
argument_list|(
literal|"account/account-name"
argument_list|,
literal|"name"
argument_list|)
expr_stmt|;
name|digester
operator|.
name|addBeanPropertySetter
argument_list|(
literal|"account/password"
argument_list|,
literal|"password"
argument_list|)
expr_stmt|;
name|digester
operator|.
name|addBeanPropertySetter
argument_list|(
literal|"account/account-role"
argument_list|,
literal|"rolesAsInt"
argument_list|)
expr_stmt|;
name|digester
operator|.
name|addBeanPropertySetter
argument_list|(
literal|"account/account-owner/name"
argument_list|,
literal|"authorname"
argument_list|)
expr_stmt|;
name|digester
operator|.
name|addBeanPropertySetter
argument_list|(
literal|"account/account-owner/email-address"
argument_list|,
literal|"authorMail"
argument_list|)
expr_stmt|;
name|digester
operator|.
name|addBeanPropertySetter
argument_list|(
literal|"account/account-owner/url"
argument_list|,
literal|"authorLink"
argument_list|)
expr_stmt|;
name|account
operator|=
operator|(
name|GDataAccount
operator|)
name|digester
operator|.
name|parse
argument_list|(
name|reader
argument_list|)
expr_stmt|;
return|return
name|account
return|;
block|}
block|}
end_class
end_unit
