begin_unit
begin_comment
comment|/**   * Copyright 2004 The Apache Software Foundation   *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   *     http://www.apache.org/licenses/LICENSE-2.0   *   * Unless required by applicable law or agreed to in writing, software   * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.storage.lucenestorage.configuration
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
operator|.
name|lucenestorage
operator|.
name|configuration
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import
begin_comment
comment|/**   * This clas loads the Storage configuration file and sets all properties. If   * the properties can not be loaded an {@link java.lang.Error} will be thrown.   * The configuration file<i>lucenestorage.properties.xml</i> should be available in the classpath.   *    * @author Simon Willnauer   *    */
end_comment
begin_class
DECL|class|StorageConfigurator
specifier|public
class|class
name|StorageConfigurator
block|{
DECL|field|storageBufferSize
specifier|private
specifier|final
name|int
name|storageBufferSize
decl_stmt|;
DECL|field|storagepersistFactor
specifier|private
specifier|final
name|int
name|storagepersistFactor
decl_stmt|;
DECL|field|storageDirectory
specifier|private
specifier|final
name|String
name|storageDirectory
decl_stmt|;
DECL|field|keepRecoveredFiles
specifier|private
specifier|final
name|boolean
name|keepRecoveredFiles
decl_stmt|;
DECL|field|recover
specifier|private
specifier|final
name|boolean
name|recover
decl_stmt|;
DECL|field|INSTANCE
specifier|private
specifier|static
name|StorageConfigurator
name|INSTANCE
init|=
literal|null
decl_stmt|;
DECL|field|indexOptimizeInterval
specifier|private
specifier|final
name|int
name|indexOptimizeInterval
decl_stmt|;
DECL|method|StorageConfigurator
specifier|private
name|StorageConfigurator
parameter_list|()
block|{
name|InputStream
name|stream
init|=
name|StorageConfigurator
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/lucenestorage.properties.xml"
argument_list|)
decl_stmt|;
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
try|try
block|{
name|properties
operator|.
name|loadFromXML
argument_list|(
name|stream
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|StorageConfigurationError
argument_list|(
literal|"Could not load properties"
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|this
operator|.
name|storageBufferSize
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"gdata.server.storage.lucene.buffersize"
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|storagepersistFactor
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"gdata.server.storage.lucene.persistFactor"
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|recover
operator|=
name|Boolean
operator|.
name|parseBoolean
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"gdata.server.storage.lucene.recover"
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|keepRecoveredFiles
operator|=
name|Boolean
operator|.
name|parseBoolean
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"gdata.server.storage.lucene.recover.keepFiles"
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|storageDirectory
operator|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"gdata.server.storage.lucene.directory"
argument_list|)
expr_stmt|;
name|this
operator|.
name|indexOptimizeInterval
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"gdata.server.storage.lucene.optimizeInterval"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**       * @return - the storage configurator       */
DECL|method|getStorageConfigurator
specifier|public
specifier|static
specifier|synchronized
name|StorageConfigurator
name|getStorageConfigurator
parameter_list|()
block|{
if|if
condition|(
name|INSTANCE
operator|==
literal|null
condition|)
name|INSTANCE
operator|=
operator|new
name|StorageConfigurator
argument_list|()
expr_stmt|;
return|return
name|INSTANCE
return|;
block|}
comment|/**       * Keep recovering files. -- will use a lot of disk space       *        * @return<code>true</code> if the storage is supposed to keep the       *         recovering files.       */
DECL|method|isKeepRecoveredFiles
specifier|public
name|boolean
name|isKeepRecoveredFiles
parameter_list|()
block|{
return|return
name|this
operator|.
name|keepRecoveredFiles
return|;
block|}
comment|/**       * @return<code>true</code> if the storage is supposed to use recovering.       * @see org.apache.lucene.gdata.storage.lucenestorage.StorageModifier       */
DECL|method|isRecover
specifier|public
name|boolean
name|isRecover
parameter_list|()
block|{
return|return
name|this
operator|.
name|recover
return|;
block|}
comment|/**       * @return - the configured storage buffer size       * @see org.apache.lucene.gdata.storage.lucenestorage.StorageBuffer       */
DECL|method|getStorageBufferSize
specifier|public
name|int
name|getStorageBufferSize
parameter_list|()
block|{
return|return
name|this
operator|.
name|storageBufferSize
return|;
block|}
comment|/**       * @return - the configured storage directory       * @see org.apache.lucene.gdata.storage.lucenestorage.StorageModifier       */
DECL|method|getStorageDirectory
specifier|public
name|String
name|getStorageDirectory
parameter_list|()
block|{
return|return
name|this
operator|.
name|storageDirectory
return|;
block|}
comment|/**       * @return - the persist factor       * @see org.apache.lucene.gdata.storage.lucenestorage.StorageModifier       */
DECL|method|getStoragepersistFactor
specifier|public
name|int
name|getStoragepersistFactor
parameter_list|()
block|{
return|return
name|this
operator|.
name|storagepersistFactor
return|;
block|}
DECL|class|StorageConfigurationError
specifier|protected
class|class
name|StorageConfigurationError
extends|extends
name|Error
block|{
comment|/**           *            */
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|5261674332036111464L
decl_stmt|;
DECL|method|StorageConfigurationError
specifier|protected
name|StorageConfigurationError
parameter_list|(
name|String
name|arg0
parameter_list|,
name|Throwable
name|arg1
parameter_list|)
block|{
name|super
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**       * @return - the optimize interval       * @see org.apache.lucene.gdata.storage.lucenestorage.StorageModifier       */
DECL|method|getIndexOptimizeInterval
specifier|public
name|int
name|getIndexOptimizeInterval
parameter_list|()
block|{
return|return
name|this
operator|.
name|indexOptimizeInterval
return|;
block|}
block|}
end_class
end_unit
