begin_unit
begin_comment
comment|/**  * Copyright 2004 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.search.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|search
operator|.
name|index
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|BlockingQueue
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import
begin_comment
comment|/**  * This {@link IndexTask} will idle the given time if no task is on the queue.  * If the idle time exceeds the task will force a commit on the index. The timer  * will be reset if a task is on the queue.  *   * @author Simon Willnauer  *   */
end_comment
begin_class
DECL|class|TimedIndexTask
class|class
name|TimedIndexTask
extends|extends
name|IndexTask
block|{
DECL|field|TIME_UNIT
specifier|protected
specifier|final
specifier|static
name|TimeUnit
name|TIME_UNIT
init|=
name|TimeUnit
operator|.
name|SECONDS
decl_stmt|;
DECL|field|DEFAULT_IDLE_TIME
specifier|protected
specifier|final
specifier|static
name|long
name|DEFAULT_IDLE_TIME
init|=
literal|30
decl_stmt|;
DECL|field|idleTime
specifier|private
specifier|final
name|long
name|idleTime
decl_stmt|;
DECL|method|TimedIndexTask
name|TimedIndexTask
parameter_list|(
specifier|final
name|GDataIndexer
name|indexer
parameter_list|,
specifier|final
name|BlockingQueue
argument_list|<
name|Future
argument_list|<
name|IndexDocument
argument_list|>
argument_list|>
name|taskQueue
parameter_list|,
specifier|final
name|long
name|idleTime
parameter_list|)
block|{
name|super
argument_list|(
name|indexer
argument_list|,
name|taskQueue
argument_list|)
expr_stmt|;
name|this
operator|.
name|idleTime
operator|=
name|idleTime
operator|<
name|DEFAULT_IDLE_TIME
condition|?
name|DEFAULT_IDLE_TIME
else|:
name|idleTime
expr_stmt|;
block|}
comment|/**      * @see org.apache.lucene.gdata.search.index.IndexTask#getTask()      */
annotation|@
name|Override
DECL|method|getTask
specifier|protected
name|Future
argument_list|<
name|IndexDocument
argument_list|>
name|getTask
parameter_list|()
throws|throws
name|InterruptedException
block|{
comment|/*          * wait for a certain time and return null if no task is on the queue.          * If return null --> commit will be called          */
name|Future
argument_list|<
name|IndexDocument
argument_list|>
name|retVal
init|=
name|this
operator|.
name|taskQueue
operator|.
name|poll
argument_list|(
name|this
operator|.
name|idleTime
argument_list|,
name|TIME_UNIT
argument_list|)
decl_stmt|;
if|if
condition|(
name|retVal
operator|==
literal|null
condition|)
name|this
operator|.
name|commit
operator|.
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|retVal
return|;
block|}
DECL|method|getIdleTime
specifier|protected
name|long
name|getIdleTime
parameter_list|()
block|{
return|return
name|this
operator|.
name|idleTime
return|;
block|}
block|}
end_class
end_unit
