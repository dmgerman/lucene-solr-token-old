begin_unit
begin_comment
comment|/**   * Copyright 2004 The Apache Software Foundation   *   * Licensed under the Apache License, Version 2.0 (the "License");   * you may not use this file except in compliance with the License.   * You may obtain a copy of the License at   *   *     http://www.apache.org/licenses/LICENSE-2.0   *   * Unless required by applicable law or agreed to in writing, software   * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License.   */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.storage
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|storage
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|BaseEntry
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|BaseFeed
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gdata
operator|.
name|data
operator|.
name|ExtensionProfile
import|;
end_import
begin_comment
comment|/**   * This is the main storage interface. The Storage represents the internal   * server storage. It acts as a Database to persist the feed data.   * This inferface is not public yet!!   *    * @author Simon Willnauer   *    */
end_comment
begin_interface
DECL|interface|Storage
specifier|public
interface|interface
name|Storage
block|{
comment|/**       * This stores an incoming entry for a later retrival.       * The Entry will be associated with the feedid.       * @param entry - the entry       * @param feedId - the feedID       * @return - the stored Entry       * @throws StorageException       */
DECL|method|storeEntry
specifier|public
specifier|abstract
name|BaseEntry
name|storeEntry
parameter_list|(
name|BaseEntry
name|entry
parameter_list|,
name|String
name|feedId
parameter_list|)
throws|throws
name|StorageException
function_decl|;
comment|/**       * @param entryId       * @param feedId       * @throws StorageException       */
DECL|method|deleteEntry
specifier|public
specifier|abstract
name|void
name|deleteEntry
parameter_list|(
name|String
name|entryId
parameter_list|,
name|String
name|feedId
parameter_list|)
throws|throws
name|StorageException
function_decl|;
comment|/**       * @param entry       * @param feedId       * @return        * @throws StorageException       */
DECL|method|updateEntry
specifier|public
specifier|abstract
name|BaseEntry
name|updateEntry
parameter_list|(
name|BaseEntry
name|entry
parameter_list|,
name|String
name|feedId
parameter_list|)
throws|throws
name|StorageException
function_decl|;
comment|/**       * @param feedId       * @param startIndex       * @param resultCount       * @return       * @throws StorageException       */
DECL|method|getFeed
specifier|public
specifier|abstract
name|BaseFeed
name|getFeed
parameter_list|(
name|String
name|feedId
parameter_list|,
name|int
name|startIndex
parameter_list|,
name|int
name|resultCount
parameter_list|)
throws|throws
name|StorageException
function_decl|;
comment|/**       * @param entryId       * @param feedId       * @return       * @throws StorageException       */
DECL|method|getEntry
specifier|public
specifier|abstract
name|BaseEntry
name|getEntry
parameter_list|(
name|String
name|entryId
parameter_list|,
name|String
name|feedId
parameter_list|)
throws|throws
name|StorageException
function_decl|;
comment|/**       * @param entryIdList       * @param feedId       * @return       * @throws StorageException       */
DECL|method|getEntries
specifier|public
specifier|abstract
name|List
argument_list|<
name|BaseEntry
argument_list|>
name|getEntries
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|entryIdList
parameter_list|,
name|String
name|feedId
parameter_list|)
throws|throws
name|StorageException
function_decl|;
comment|/**       * @param profile       */
DECL|method|setExtensionProfile
specifier|public
specifier|abstract
name|void
name|setExtensionProfile
parameter_list|(
specifier|final
name|ExtensionProfile
name|profile
parameter_list|)
function_decl|;
comment|/**       * close this storage instance       */
DECL|method|close
specifier|public
specifier|abstract
name|void
name|close
parameter_list|()
function_decl|;
block|}
end_interface
end_unit
