begin_unit
begin_comment
comment|/**  * Copyright 2004 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.gdata.server
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
operator|.
name|administration
operator|.
name|AdminService
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
operator|.
name|administration
operator|.
name|GDataAdminService
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
operator|.
name|registry
operator|.
name|Component
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
operator|.
name|registry
operator|.
name|ComponentType
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|gdata
operator|.
name|server
operator|.
name|registry
operator|.
name|ServerComponent
import|;
end_import
begin_comment
comment|/**  * The {@link ServiceFactory} creates {@link Service} implementations to access  * the GData - Server components.  * This class should not be access directy. The class will be registered in the {@link org.apache.lucene.gdata.server.registry.GDataServerRegistry}.  * Use {@link org.apache.lucene.gdata.server.registry.GDataServerRegistry#lookup(Class, ComponentType)}  *   * @author Simon Willnauer  *   */
end_comment
begin_class
annotation|@
name|Component
argument_list|(
name|componentType
operator|=
name|ComponentType
operator|.
name|SERVICEFACTORY
argument_list|)
DECL|class|ServiceFactory
specifier|public
class|class
name|ServiceFactory
implements|implements
name|ServerComponent
block|{
DECL|field|LOG
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|ServiceFactory
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/** 	 * public constructor to enable loading via the registry      * @see org.apache.lucene.gdata.server.registry.Component      * @see org.apache.lucene.gdata.server.registry.GDataServerRegistry 	 */
DECL|method|ServiceFactory
specifier|public
name|ServiceFactory
parameter_list|()
block|{
comment|//
block|}
comment|/** 	 * Creates a {@link Service} instance. 	 * @param request - the request for this service 	 *  	 * @return a Service instance 	 */
DECL|method|getService
specifier|public
name|Service
name|getService
parameter_list|(
name|GDataRequest
name|request
parameter_list|)
block|{
try|try
block|{
if|if
condition|(
name|request
operator|.
name|isSearchRequested
argument_list|()
condition|)
return|return
operator|new
name|GDataSearchService
argument_list|()
return|;
return|return
operator|new
name|GDataService
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|//
block|}
return|return
literal|null
return|;
block|}
comment|/**      * Creates a {@link AdminService} instance      * @return a AdminService instance      */
DECL|method|getAdminService
specifier|public
name|AdminService
name|getAdminService
parameter_list|()
block|{
try|try
block|{
return|return
operator|new
name|GDataAdminService
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ServiceException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Factory method can not create GDataAdminService returning null-- "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
comment|/**      * @see org.apache.lucene.gdata.server.registry.ServerComponent#initialize()      */
DECL|method|initialize
specifier|public
name|void
name|initialize
parameter_list|()
block|{
comment|//
block|}
comment|/**      * @see org.apache.lucene.gdata.server.registry.ServerComponent#destroy()      */
DECL|method|destroy
specifier|public
name|void
name|destroy
parameter_list|()
block|{
comment|//
block|}
block|}
end_class
end_unit
