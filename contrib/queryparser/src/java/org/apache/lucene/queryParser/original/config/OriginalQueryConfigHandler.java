begin_unit
begin_package
DECL|package|org.apache.lucene.queryParser.original.config
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queryParser
operator|.
name|original
operator|.
name|config
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queryParser
operator|.
name|core
operator|.
name|config
operator|.
name|QueryConfigHandler
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queryParser
operator|.
name|original
operator|.
name|processors
operator|.
name|OriginalQueryNodeProcessorPipeline
import|;
end_import
begin_comment
comment|/**  * This query configuration handler is used for almost every processor defined  * in the {@link OriginalQueryNodeProcessorPipeline} processor pipeline. It holds  * attributes that reproduces the configuration that could be set on the old  * lucene 2.4 QueryParser class.<br/>  *   * @see OriginalQueryNodeProcessorPipeline  */
end_comment
begin_class
DECL|class|OriginalQueryConfigHandler
specifier|public
class|class
name|OriginalQueryConfigHandler
extends|extends
name|QueryConfigHandler
block|{
DECL|method|OriginalQueryConfigHandler
specifier|public
name|OriginalQueryConfigHandler
parameter_list|()
block|{
comment|// Add listener that will build the FieldConfig attributes.
name|addFieldConfigListener
argument_list|(
operator|new
name|FieldBoostMapFCListener
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
name|addFieldConfigListener
argument_list|(
operator|new
name|FieldDateResolutionFCListener
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
comment|// Default Values
name|addAttribute
argument_list|(
name|RangeCollatorAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|addAttribute
argument_list|(
name|DefaultOperatorAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|addAttribute
argument_list|(
name|AnalyzerAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|addAttribute
argument_list|(
name|FuzzyAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|addAttribute
argument_list|(
name|LowercaseExpandedTermsAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|addAttribute
argument_list|(
name|MultiTermRewriteMethodAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|addAttribute
argument_list|(
name|AllowLeadingWildcardAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|addAttribute
argument_list|(
name|PositionIncrementsAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|addAttribute
argument_list|(
name|LocaleAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|addAttribute
argument_list|(
name|DefaultPhraseSlopAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
comment|//addAttribute(DateResolutionAttribute.class);
block|}
block|}
end_class
end_unit
