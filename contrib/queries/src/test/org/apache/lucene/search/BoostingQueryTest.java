begin_unit
begin_package
DECL|package|org.apache.lucene.search
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_class
DECL|class|BoostingQueryTest
specifier|public
class|class
name|BoostingQueryTest
extends|extends
name|TestCase
block|{
DECL|method|testBoostingQueryEquals
specifier|public
name|void
name|testBoostingQueryEquals
parameter_list|()
block|{
name|TermQuery
name|q1
init|=
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"subject:"
argument_list|,
literal|"java"
argument_list|)
argument_list|)
decl_stmt|;
name|TermQuery
name|q2
init|=
operator|new
name|TermQuery
argument_list|(
operator|new
name|Term
argument_list|(
literal|"subject:"
argument_list|,
literal|"java"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Two TermQueries with same attributes should be equal"
argument_list|,
name|q1
argument_list|,
name|q2
argument_list|)
expr_stmt|;
name|BoostingQuery
name|bq1
init|=
operator|new
name|BoostingQuery
argument_list|(
name|q1
argument_list|,
name|q2
argument_list|,
literal|0.1f
argument_list|)
decl_stmt|;
name|BoostingQuery
name|bq2
init|=
operator|new
name|BoostingQuery
argument_list|(
name|q1
argument_list|,
name|q2
argument_list|,
literal|0.1f
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"BoostingQuery with same attributes is not equal"
argument_list|,
name|bq1
argument_list|,
name|bq2
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
