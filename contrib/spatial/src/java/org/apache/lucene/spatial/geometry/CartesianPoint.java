begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.spatial.geometry
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|spatial
operator|.
name|geometry
package|;
end_package
begin_comment
comment|/**  * Represents lat/lngs as fixed point numbers translated so that all  * world coordinates are in the first quadrant.  The same fixed point  * scale as is used for FixedLatLng is employed.  */
end_comment
begin_class
DECL|class|CartesianPoint
specifier|public
class|class
name|CartesianPoint
block|{
DECL|field|x
specifier|private
name|int
name|x
decl_stmt|;
DECL|field|y
specifier|private
name|int
name|y
decl_stmt|;
DECL|method|CartesianPoint
specifier|public
name|CartesianPoint
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
block|{
name|this
operator|.
name|x
operator|=
name|x
expr_stmt|;
name|this
operator|.
name|y
operator|=
name|y
expr_stmt|;
block|}
DECL|method|getX
specifier|public
name|int
name|getX
parameter_list|()
block|{
return|return
name|x
return|;
block|}
DECL|method|getY
specifier|public
name|int
name|getY
parameter_list|()
block|{
return|return
name|y
return|;
block|}
annotation|@
name|Override
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Point("
operator|+
name|x
operator|+
literal|","
operator|+
name|y
operator|+
literal|")"
return|;
block|}
comment|/**    * Return a new point translated in the x and y dimensions    * @param i    * @param translation    * @return    */
DECL|method|translate
specifier|public
name|CartesianPoint
name|translate
parameter_list|(
name|int
name|deltaX
parameter_list|,
name|int
name|deltaY
parameter_list|)
block|{
return|return
operator|new
name|CartesianPoint
argument_list|(
name|this
operator|.
name|x
operator|+
name|deltaX
argument_list|,
name|this
operator|.
name|y
operator|+
name|deltaY
argument_list|)
return|;
block|}
block|}
end_class
end_unit
