begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.spatial.tier
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|spatial
operator|.
name|tier
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_comment
comment|/**  *  */
end_comment
begin_class
DECL|class|Shape
specifier|public
class|class
name|Shape
block|{
DECL|field|area
specifier|private
name|List
argument_list|<
name|Double
argument_list|>
name|area
init|=
operator|new
name|ArrayList
argument_list|<
name|Double
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|tierId
specifier|private
name|String
name|tierId
decl_stmt|;
DECL|method|Shape
specifier|public
name|Shape
parameter_list|(
name|String
name|tierId
parameter_list|)
block|{
name|this
operator|.
name|tierId
operator|=
name|tierId
expr_stmt|;
block|}
DECL|method|addBox
specifier|public
name|void
name|addBox
parameter_list|(
name|double
name|boxId
parameter_list|)
block|{
name|area
operator|.
name|add
argument_list|(
name|boxId
argument_list|)
expr_stmt|;
block|}
DECL|method|getArea
specifier|public
name|List
argument_list|<
name|Double
argument_list|>
name|getArea
parameter_list|()
block|{
return|return
name|area
return|;
block|}
DECL|method|getTierId
specifier|public
name|String
name|getTierId
parameter_list|()
block|{
return|return
name|tierId
return|;
block|}
DECL|method|isInside
specifier|public
name|boolean
name|isInside
parameter_list|(
name|double
name|boxId
parameter_list|)
block|{
return|return
name|area
operator|.
name|contains
argument_list|(
name|boxId
argument_list|)
return|;
block|}
block|}
end_class
end_unit
