begin_unit
begin_package
DECL|package|org.apache.lucene.search.highlight
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|highlight
package|;
end_package
begin_comment
comment|/**  * Copyright 2002-2004 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/**  * Simple {@link Formatter} implementation to highlight terms with a pre and post tag  * @author MAHarwood  *  */
end_comment
begin_class
DECL|class|SimpleHTMLFormatter
specifier|public
class|class
name|SimpleHTMLFormatter
implements|implements
name|Formatter
block|{
DECL|field|preTag
name|String
name|preTag
decl_stmt|;
DECL|field|postTag
name|String
name|postTag
decl_stmt|;
DECL|method|SimpleHTMLFormatter
specifier|public
name|SimpleHTMLFormatter
parameter_list|(
name|String
name|preTag
parameter_list|,
name|String
name|postTag
parameter_list|)
block|{
name|this
operator|.
name|preTag
operator|=
name|preTag
expr_stmt|;
name|this
operator|.
name|postTag
operator|=
name|postTag
expr_stmt|;
block|}
comment|/** 	 * Default constructor uses HTML:&lt;B&gt; tags to markup terms 	 *  	 **/
DECL|method|SimpleHTMLFormatter
specifier|public
name|SimpleHTMLFormatter
parameter_list|()
block|{
name|this
operator|.
name|preTag
operator|=
literal|"<B>"
expr_stmt|;
name|this
operator|.
name|postTag
operator|=
literal|"</B>"
expr_stmt|;
block|}
comment|/* (non-Javadoc) 	 * @see org.apache.lucene.search.highlight.Formatter#highlightTerm(java.lang.String, org.apache.lucene.search.highlight.TokenGroup) 	 */
DECL|method|highlightTerm
specifier|public
name|String
name|highlightTerm
parameter_list|(
name|String
name|originalText
parameter_list|,
name|TokenGroup
name|tokenGroup
parameter_list|)
block|{
name|StringBuffer
name|returnBuffer
decl_stmt|;
if|if
condition|(
name|tokenGroup
operator|.
name|getTotalScore
argument_list|()
operator|>
literal|0
condition|)
block|{
name|returnBuffer
operator|=
operator|new
name|StringBuffer
argument_list|()
expr_stmt|;
name|returnBuffer
operator|.
name|append
argument_list|(
name|preTag
argument_list|)
expr_stmt|;
name|returnBuffer
operator|.
name|append
argument_list|(
name|originalText
argument_list|)
expr_stmt|;
name|returnBuffer
operator|.
name|append
argument_list|(
name|postTag
argument_list|)
expr_stmt|;
return|return
name|returnBuffer
operator|.
name|toString
argument_list|()
return|;
block|}
return|return
name|originalText
return|;
block|}
block|}
end_class
end_unit
