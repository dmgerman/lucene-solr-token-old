begin_unit
begin_package
DECL|package|org.apache.lucene.benchmark.byTask.feeds
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|benchmark
operator|.
name|byTask
operator|.
name|feeds
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|benchmark
operator|.
name|byTask
operator|.
name|utils
operator|.
name|Config
import|;
end_import
begin_comment
comment|/**  * Adds fields appropriate for sorting.  *   */
end_comment
begin_class
DECL|class|SortableSimpleDocMaker
specifier|public
class|class
name|SortableSimpleDocMaker
extends|extends
name|SimpleDocMaker
block|{
DECL|field|sortRange
specifier|private
name|int
name|sortRange
decl_stmt|;
DECL|method|getNextDocData
specifier|protected
name|DocData
name|getNextDocData
parameter_list|()
throws|throws
name|NoMoreDataException
block|{
name|DocData
name|doc
init|=
name|super
operator|.
name|getNextDocData
argument_list|()
decl_stmt|;
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"sort_field"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|getRandomNumber
argument_list|(
literal|0
argument_list|,
name|sortRange
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setProps
argument_list|(
name|props
argument_list|)
expr_stmt|;
return|return
name|doc
return|;
block|}
comment|/*    * (non-Javadoc)    *     * @see SimpleDocMaker#setConfig(java.util.Properties)    */
DECL|method|setConfig
specifier|public
name|void
name|setConfig
parameter_list|(
name|Config
name|config
parameter_list|)
block|{
name|super
operator|.
name|setConfig
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|sortRange
operator|=
name|config
operator|.
name|get
argument_list|(
literal|"sort.rng"
argument_list|,
literal|20000
argument_list|)
expr_stmt|;
block|}
DECL|method|getRandomNumber
specifier|private
name|int
name|getRandomNumber
parameter_list|(
specifier|final
name|int
name|low
parameter_list|,
specifier|final
name|int
name|high
parameter_list|)
block|{
name|Random
name|r
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
name|int
name|randInt
init|=
operator|(
name|Math
operator|.
name|abs
argument_list|(
name|r
operator|.
name|nextInt
argument_list|()
argument_list|)
operator|%
operator|(
name|high
operator|-
name|low
operator|)
operator|)
operator|+
name|low
decl_stmt|;
return|return
name|randInt
return|;
block|}
block|}
end_class
end_unit
