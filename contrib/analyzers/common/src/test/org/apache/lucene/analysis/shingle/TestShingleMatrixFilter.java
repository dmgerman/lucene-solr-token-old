begin_unit
begin_package
DECL|package|org.apache.lucene.analysis.shingle
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|shingle
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|*
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|standard
operator|.
name|StandardTokenizer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|miscellaneous
operator|.
name|EmptyTokenStream
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|miscellaneous
operator|.
name|PrefixAndSuffixAwareTokenFilter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|miscellaneous
operator|.
name|SingleTokenTokenStream
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|payloads
operator|.
name|PayloadHelper
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|shingle
operator|.
name|ShingleMatrixFilter
operator|.
name|Matrix
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|shingle
operator|.
name|ShingleMatrixFilter
operator|.
name|Matrix
operator|.
name|Column
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|tokenattributes
operator|.
name|*
import|;
end_import
begin_class
DECL|class|TestShingleMatrixFilter
specifier|public
class|class
name|TestShingleMatrixFilter
extends|extends
name|BaseTokenStreamTestCase
block|{
DECL|method|TestShingleMatrixFilter
specifier|public
name|TestShingleMatrixFilter
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|testIterator
specifier|public
name|void
name|testIterator
parameter_list|()
throws|throws
name|IOException
block|{
name|WhitespaceTokenizer
name|wst
init|=
operator|new
name|WhitespaceTokenizer
argument_list|(
operator|new
name|StringReader
argument_list|(
literal|"one two three four five"
argument_list|)
argument_list|)
decl_stmt|;
name|ShingleMatrixFilter
name|smf
init|=
operator|new
name|ShingleMatrixFilter
argument_list|(
name|wst
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|'_'
argument_list|,
literal|false
argument_list|,
operator|new
name|ShingleMatrixFilter
operator|.
name|OneDimensionalNonWeightedTokenSettingsCodec
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|smf
operator|.
name|incrementToken
argument_list|()
condition|;
name|i
operator|++
control|)
empty_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|i
argument_list|)
expr_stmt|;
comment|// call next once more. this should return false again rather than throwing an exception (LUCENE-1939)
name|assertFalse
argument_list|(
name|smf
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
block|}
DECL|method|testBehavingAsShingleFilter
specifier|public
name|void
name|testBehavingAsShingleFilter
parameter_list|()
throws|throws
name|IOException
block|{
name|ShingleMatrixFilter
operator|.
name|defaultSettingsCodec
operator|=
literal|null
expr_stmt|;
name|TokenStream
name|ts
decl_stmt|;
name|ts
operator|=
operator|new
name|ShingleMatrixFilter
argument_list|(
operator|new
name|EmptyTokenStream
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
operator|new
name|Character
argument_list|(
literal|' '
argument_list|)
argument_list|,
literal|false
argument_list|,
operator|new
name|ShingleMatrixFilter
operator|.
name|OneDimensionalNonWeightedTokenSettingsCodec
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|ts
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
name|TokenListStream
name|tls
decl_stmt|;
name|LinkedList
name|tokens
decl_stmt|;
comment|// test a plain old token stream with synonyms translated to rows.
name|tokens
operator|=
operator|new
name|LinkedList
argument_list|()
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|createToken
argument_list|(
literal|"please"
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|createToken
argument_list|(
literal|"divide"
argument_list|,
literal|7
argument_list|,
literal|13
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|createToken
argument_list|(
literal|"this"
argument_list|,
literal|14
argument_list|,
literal|18
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|createToken
argument_list|(
literal|"sentence"
argument_list|,
literal|19
argument_list|,
literal|27
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|createToken
argument_list|(
literal|"into"
argument_list|,
literal|28
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|createToken
argument_list|(
literal|"shingles"
argument_list|,
literal|33
argument_list|,
literal|39
argument_list|)
argument_list|)
expr_stmt|;
name|tls
operator|=
operator|new
name|TokenListStream
argument_list|(
name|tokens
argument_list|)
expr_stmt|;
comment|// bi-grams
name|ts
operator|=
operator|new
name|ShingleMatrixFilter
argument_list|(
name|tls
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
operator|new
name|Character
argument_list|(
literal|' '
argument_list|)
argument_list|,
literal|false
argument_list|,
operator|new
name|ShingleMatrixFilter
operator|.
name|OneDimensionalNonWeightedTokenSettingsCodec
argument_list|()
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"please"
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"please divide"
argument_list|,
literal|0
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"divide"
argument_list|,
literal|7
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"divide this"
argument_list|,
literal|7
argument_list|,
literal|18
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"this"
argument_list|,
literal|14
argument_list|,
literal|18
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"this sentence"
argument_list|,
literal|14
argument_list|,
literal|27
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"sentence"
argument_list|,
literal|19
argument_list|,
literal|27
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"sentence into"
argument_list|,
literal|19
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"into"
argument_list|,
literal|28
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"into shingles"
argument_list|,
literal|28
argument_list|,
literal|39
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"shingles"
argument_list|,
literal|33
argument_list|,
literal|39
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|ts
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Extracts a matrix from a token stream.    * @throws IOException    */
DECL|method|testTokenStream
specifier|public
name|void
name|testTokenStream
parameter_list|()
throws|throws
name|IOException
block|{
name|ShingleMatrixFilter
operator|.
name|defaultSettingsCodec
operator|=
literal|null
expr_stmt|;
comment|//new ShingleMatrixFilter.SimpleThreeDimensionalTokenSettingsCodec();
name|TokenStream
name|ts
decl_stmt|;
name|TokenStream
name|tls
decl_stmt|;
name|LinkedList
name|tokens
decl_stmt|;
comment|// test a plain old token stream with synonyms tranlated to rows.
name|tokens
operator|=
operator|new
name|LinkedList
argument_list|()
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"hello"
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"greetings"
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"world"
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"earth"
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"tellus"
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|tls
operator|=
operator|new
name|TokenListStream
argument_list|(
name|tokens
argument_list|)
expr_stmt|;
comment|// bi-grams
name|ts
operator|=
operator|new
name|ShingleMatrixFilter
argument_list|(
name|tls
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
operator|new
name|Character
argument_list|(
literal|'_'
argument_list|)
argument_list|,
literal|false
argument_list|,
operator|new
name|ShingleMatrixFilter
operator|.
name|TwoDimensionalNonWeightedSynonymTokenSettingsCodec
argument_list|()
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_world"
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_world"
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_earth"
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_earth"
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_tellus"
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_tellus"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|ts
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
comment|// bi-grams with no spacer character, start offset, end offset
name|tls
operator|.
name|reset
argument_list|()
expr_stmt|;
name|ts
operator|=
operator|new
name|ShingleMatrixFilter
argument_list|(
name|tls
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
operator|new
name|ShingleMatrixFilter
operator|.
name|TwoDimensionalNonWeightedSynonymTokenSettingsCodec
argument_list|()
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"helloworld"
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetingsworld"
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"helloearth"
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetingsearth"
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hellotellus"
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetingstellus"
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|ts
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
comment|// add ^_prefix_and_suffix_$
comment|//
comment|// using 3d codec as it supports weights
name|ShingleMatrixFilter
operator|.
name|defaultSettingsCodec
operator|=
operator|new
name|ShingleMatrixFilter
operator|.
name|SimpleThreeDimensionalTokenSettingsCodec
argument_list|()
expr_stmt|;
name|tokens
operator|=
operator|new
name|LinkedList
argument_list|()
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"hello"
argument_list|,
literal|1
argument_list|,
literal|1f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
name|ShingleMatrixFilter
operator|.
name|TokenPositioner
operator|.
name|newColumn
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"greetings"
argument_list|,
literal|0
argument_list|,
literal|1f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
name|ShingleMatrixFilter
operator|.
name|TokenPositioner
operator|.
name|newRow
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"world"
argument_list|,
literal|1
argument_list|,
literal|1f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
name|ShingleMatrixFilter
operator|.
name|TokenPositioner
operator|.
name|newColumn
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"earth"
argument_list|,
literal|0
argument_list|,
literal|1f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
name|ShingleMatrixFilter
operator|.
name|TokenPositioner
operator|.
name|newRow
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"tellus"
argument_list|,
literal|0
argument_list|,
literal|1f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
name|ShingleMatrixFilter
operator|.
name|TokenPositioner
operator|.
name|newRow
argument_list|)
argument_list|)
expr_stmt|;
name|tls
operator|=
operator|new
name|TokenListStream
argument_list|(
name|tokens
argument_list|)
expr_stmt|;
name|ts
operator|=
operator|new
name|PrefixAndSuffixAwareTokenFilter
argument_list|(
operator|new
name|SingleTokenTokenStream
argument_list|(
name|tokenFactory
argument_list|(
literal|"^"
argument_list|,
literal|1
argument_list|,
literal|100f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|tls
argument_list|,
operator|new
name|SingleTokenTokenStream
argument_list|(
name|tokenFactory
argument_list|(
literal|"$"
argument_list|,
literal|1
argument_list|,
literal|50f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|tls
operator|=
operator|new
name|CachingTokenFilter
argument_list|(
name|ts
argument_list|)
expr_stmt|;
comment|// bi-grams, position incrememnt, weight, start offset, end offset
name|ts
operator|=
operator|new
name|ShingleMatrixFilter
argument_list|(
name|tls
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
operator|new
name|Character
argument_list|(
literal|'_'
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//
comment|//    for (Token token = ts.next(new Token()); token != null; token = ts.next(token)) {
comment|//      System.out.println("assertNext(ts, \"" + token.term() + "\", " + token.getPositionIncrement() + ", " + (token.getPayload() == null ? "1.0" : PayloadHelper.decodeFloat(token.getPayload().getData())) + "f, " + token.startOffset() + ", " + token.endOffset() + ");");
comment|//      token.clear();
comment|//    }
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello"
argument_list|,
literal|1
argument_list|,
literal|10.049875f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings"
argument_list|,
literal|1
argument_list|,
literal|10.049875f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_world"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_world"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_earth"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_earth"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_tellus"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_tellus"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"world_$"
argument_list|,
literal|1
argument_list|,
literal|7.1414285f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"earth_$"
argument_list|,
literal|1
argument_list|,
literal|7.1414285f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"tellus_$"
argument_list|,
literal|1
argument_list|,
literal|7.1414285f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|ts
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
comment|// test unlimited size and allow single boundary token as shingle
name|tls
operator|.
name|reset
argument_list|()
expr_stmt|;
name|ts
operator|=
operator|new
name|ShingleMatrixFilter
argument_list|(
name|tls
argument_list|,
literal|1
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|,
operator|new
name|Character
argument_list|(
literal|'_'
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//
comment|//  for (Token token = ts.next(new Token()); token != null; token = ts.next(token)) {
comment|//      System.out.println("assertNext(ts, \"" + token.term() + "\", " + token.getPositionIncrement() + ", " + (token.getPayload() == null ? "1.0" : PayloadHelper.decodeFloat(token.getPayload().getData())) + "f, " + token.startOffset() + ", " + token.endOffset() + ");");
comment|//      token.clear();
comment|//    }
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^"
argument_list|,
literal|1
argument_list|,
literal|10.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello"
argument_list|,
literal|1
argument_list|,
literal|10.049875f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello_world"
argument_list|,
literal|1
argument_list|,
literal|10.099504f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello_world_$"
argument_list|,
literal|1
argument_list|,
literal|12.328828f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello"
argument_list|,
literal|1
argument_list|,
literal|1.0f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_world"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_world_$"
argument_list|,
literal|1
argument_list|,
literal|7.2111025f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"world"
argument_list|,
literal|1
argument_list|,
literal|1.0f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"world_$"
argument_list|,
literal|1
argument_list|,
literal|7.1414285f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"$"
argument_list|,
literal|1
argument_list|,
literal|7.071068f
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings"
argument_list|,
literal|1
argument_list|,
literal|10.049875f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings_world"
argument_list|,
literal|1
argument_list|,
literal|10.099504f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings_world_$"
argument_list|,
literal|1
argument_list|,
literal|12.328828f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings"
argument_list|,
literal|1
argument_list|,
literal|1.0f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_world"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_world_$"
argument_list|,
literal|1
argument_list|,
literal|7.2111025f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello_earth"
argument_list|,
literal|1
argument_list|,
literal|10.099504f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello_earth_$"
argument_list|,
literal|1
argument_list|,
literal|12.328828f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_earth"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_earth_$"
argument_list|,
literal|1
argument_list|,
literal|7.2111025f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"earth"
argument_list|,
literal|1
argument_list|,
literal|1.0f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"earth_$"
argument_list|,
literal|1
argument_list|,
literal|7.1414285f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings_earth"
argument_list|,
literal|1
argument_list|,
literal|10.099504f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings_earth_$"
argument_list|,
literal|1
argument_list|,
literal|12.328828f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_earth"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_earth_$"
argument_list|,
literal|1
argument_list|,
literal|7.2111025f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello_tellus"
argument_list|,
literal|1
argument_list|,
literal|10.099504f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello_tellus_$"
argument_list|,
literal|1
argument_list|,
literal|12.328828f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_tellus"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_tellus_$"
argument_list|,
literal|1
argument_list|,
literal|7.2111025f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"tellus"
argument_list|,
literal|1
argument_list|,
literal|1.0f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"tellus_$"
argument_list|,
literal|1
argument_list|,
literal|7.1414285f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings_tellus"
argument_list|,
literal|1
argument_list|,
literal|10.099504f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings_tellus_$"
argument_list|,
literal|1
argument_list|,
literal|12.328828f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_tellus"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_tellus_$"
argument_list|,
literal|1
argument_list|,
literal|7.2111025f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|ts
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
comment|// test unlimited size but don't allow single boundary token as shingle
name|tls
operator|.
name|reset
argument_list|()
expr_stmt|;
name|ts
operator|=
operator|new
name|ShingleMatrixFilter
argument_list|(
name|tls
argument_list|,
literal|1
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|,
operator|new
name|Character
argument_list|(
literal|'_'
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//  for (Token token = ts.next(new Token()); token != null; token = ts.next(token)) {
comment|//      System.out.println("assertNext(ts, \"" + token.term() + "\", " + token.getPositionIncrement() + ", " + (token.getPayload() == null ? "1.0" : PayloadHelper.decodeFloat(token.getPayload().getData())) + "f, " + token.startOffset() + ", " + token.endOffset() + ");");
comment|//      token.clear();
comment|//    }
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello"
argument_list|,
literal|1
argument_list|,
literal|10.049875f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello_world"
argument_list|,
literal|1
argument_list|,
literal|10.099504f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello_world_$"
argument_list|,
literal|1
argument_list|,
literal|12.328828f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello"
argument_list|,
literal|1
argument_list|,
literal|1.0f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_world"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_world_$"
argument_list|,
literal|1
argument_list|,
literal|7.2111025f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"world"
argument_list|,
literal|1
argument_list|,
literal|1.0f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"world_$"
argument_list|,
literal|1
argument_list|,
literal|7.1414285f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings"
argument_list|,
literal|1
argument_list|,
literal|10.049875f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings_world"
argument_list|,
literal|1
argument_list|,
literal|10.099504f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings_world_$"
argument_list|,
literal|1
argument_list|,
literal|12.328828f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings"
argument_list|,
literal|1
argument_list|,
literal|1.0f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_world"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_world_$"
argument_list|,
literal|1
argument_list|,
literal|7.2111025f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello_earth"
argument_list|,
literal|1
argument_list|,
literal|10.099504f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello_earth_$"
argument_list|,
literal|1
argument_list|,
literal|12.328828f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_earth"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_earth_$"
argument_list|,
literal|1
argument_list|,
literal|7.2111025f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"earth"
argument_list|,
literal|1
argument_list|,
literal|1.0f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"earth_$"
argument_list|,
literal|1
argument_list|,
literal|7.1414285f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings_earth"
argument_list|,
literal|1
argument_list|,
literal|10.099504f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings_earth_$"
argument_list|,
literal|1
argument_list|,
literal|12.328828f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_earth"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_earth_$"
argument_list|,
literal|1
argument_list|,
literal|7.2111025f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello_tellus"
argument_list|,
literal|1
argument_list|,
literal|10.099504f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_hello_tellus_$"
argument_list|,
literal|1
argument_list|,
literal|12.328828f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_tellus"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_tellus_$"
argument_list|,
literal|1
argument_list|,
literal|7.2111025f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"tellus"
argument_list|,
literal|1
argument_list|,
literal|1.0f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"tellus_$"
argument_list|,
literal|1
argument_list|,
literal|7.1414285f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings_tellus"
argument_list|,
literal|1
argument_list|,
literal|10.099504f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"^_greetings_tellus_$"
argument_list|,
literal|1
argument_list|,
literal|12.328828f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_tellus"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_tellus_$"
argument_list|,
literal|1
argument_list|,
literal|7.2111025f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|ts
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
comment|// multi-token synonyms
comment|//
comment|// Token[][][] {
comment|//    {{hello}, {greetings, and, salutations},
comment|//    {{world}, {earth}, {tellus}}
comment|// }
comment|//
name|tokens
operator|=
operator|new
name|LinkedList
argument_list|()
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"hello"
argument_list|,
literal|1
argument_list|,
literal|1f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
name|ShingleMatrixFilter
operator|.
name|TokenPositioner
operator|.
name|newColumn
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"greetings"
argument_list|,
literal|1
argument_list|,
literal|1f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
name|ShingleMatrixFilter
operator|.
name|TokenPositioner
operator|.
name|newRow
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"and"
argument_list|,
literal|1
argument_list|,
literal|1f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
name|ShingleMatrixFilter
operator|.
name|TokenPositioner
operator|.
name|sameRow
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"salutations"
argument_list|,
literal|1
argument_list|,
literal|1f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
name|ShingleMatrixFilter
operator|.
name|TokenPositioner
operator|.
name|sameRow
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"world"
argument_list|,
literal|1
argument_list|,
literal|1f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
name|ShingleMatrixFilter
operator|.
name|TokenPositioner
operator|.
name|newColumn
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"earth"
argument_list|,
literal|1
argument_list|,
literal|1f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
name|ShingleMatrixFilter
operator|.
name|TokenPositioner
operator|.
name|newRow
argument_list|)
argument_list|)
expr_stmt|;
name|tokens
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"tellus"
argument_list|,
literal|1
argument_list|,
literal|1f
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
name|ShingleMatrixFilter
operator|.
name|TokenPositioner
operator|.
name|newRow
argument_list|)
argument_list|)
expr_stmt|;
name|tls
operator|=
operator|new
name|TokenListStream
argument_list|(
name|tokens
argument_list|)
expr_stmt|;
comment|// 2-3 grams
name|ts
operator|=
operator|new
name|ShingleMatrixFilter
argument_list|(
name|tls
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
operator|new
name|Character
argument_list|(
literal|'_'
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//  for (Token token = ts.next(new Token()); token != null; token = ts.next(token)) {
comment|//      System.out.println("assertNext(ts, \"" + token.term() + "\", " + token.getPositionIncrement() + ", " + (token.getPayload() == null ? "1.0" : PayloadHelper.decodeFloat(token.getPayload().getData())) + "f, " + token.startOffset() + ", " + token.endOffset() + ");");
comment|//      token.clear();
comment|//    }
comment|// shingle, position increment, weight, start offset, end offset
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_world"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_and"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"greetings_and_salutations"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"and_salutations"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"and_salutations_world"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"salutations_world"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_earth"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"and_salutations_earth"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"salutations_earth"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"hello_tellus"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"and_salutations_tellus"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"salutations_tellus"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|ts
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
block|}
comment|/**    * Tests creat shingles from a pre-assembled matrix    *    * Tests the row token z-axis, multi token synonyms.    *    * @throws IOException    */
DECL|method|testMatrix
specifier|public
name|void
name|testMatrix
parameter_list|()
throws|throws
name|IOException
block|{
comment|// some other tests set this to null.
comment|// set it here in case tests are run out of the usual order.
name|ShingleMatrixFilter
operator|.
name|defaultSettingsCodec
operator|=
operator|new
name|ShingleMatrixFilter
operator|.
name|SimpleThreeDimensionalTokenSettingsCodec
argument_list|()
expr_stmt|;
name|Matrix
name|matrix
init|=
operator|new
name|Matrix
argument_list|()
decl_stmt|;
name|matrix
operator|.
expr|new
name|Column
argument_list|(
name|tokenFactory
argument_list|(
literal|"no"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|matrix
operator|.
expr|new
name|Column
argument_list|(
name|tokenFactory
argument_list|(
literal|"surprise"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|matrix
operator|.
expr|new
name|Column
argument_list|(
name|tokenFactory
argument_list|(
literal|"to"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|matrix
operator|.
expr|new
name|Column
argument_list|(
name|tokenFactory
argument_list|(
literal|"see"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|matrix
operator|.
expr|new
name|Column
argument_list|(
name|tokenFactory
argument_list|(
literal|"england"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|matrix
operator|.
expr|new
name|Column
argument_list|(
name|tokenFactory
argument_list|(
literal|"manager"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Column
name|col
init|=
name|matrix
operator|.
expr|new
name|Column
argument_list|()
decl_stmt|;
comment|// sven gÃ¶ran eriksson is a multi token synonym to svennis
name|col
operator|.
expr|new
name|Row
argument_list|()
operator|.
name|getTokens
argument_list|()
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"svennis"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Column
operator|.
name|Row
name|row
init|=
name|col
operator|.
expr|new
name|Row
argument_list|()
decl_stmt|;
name|row
operator|.
name|getTokens
argument_list|()
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"sven"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|getTokens
argument_list|()
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"gÃ¶ran"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|getTokens
argument_list|()
operator|.
name|add
argument_list|(
name|tokenFactory
argument_list|(
literal|"eriksson"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|matrix
operator|.
expr|new
name|Column
argument_list|(
name|tokenFactory
argument_list|(
literal|"in"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|matrix
operator|.
expr|new
name|Column
argument_list|(
name|tokenFactory
argument_list|(
literal|"the"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|matrix
operator|.
expr|new
name|Column
argument_list|(
name|tokenFactory
argument_list|(
literal|"croud"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|TokenStream
name|ts
init|=
operator|new
name|ShingleMatrixFilter
argument_list|(
name|matrix
argument_list|,
literal|2
argument_list|,
literal|4
argument_list|,
operator|new
name|Character
argument_list|(
literal|'_'
argument_list|)
argument_list|,
literal|true
argument_list|,
operator|new
name|ShingleMatrixFilter
operator|.
name|SimpleThreeDimensionalTokenSettingsCodec
argument_list|()
argument_list|)
decl_stmt|;
comment|//  for (Token token = ts.next(new Token()); token != null; token = ts.next(token)) {
comment|//      System.out.println("assertNext(ts, \"" + token.term() + "\", " + token.getPositionIncrement() + ", " + (token.getPayload() == null ? "1.0" : PayloadHelper.decodeFloat(token.getPayload().getData())) + "f, " + token.startOffset() + ", " + token.endOffset() + ");");
comment|//      token.clear();
comment|//    }
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"no_surprise"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"no_surprise_to"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"no_surprise_to_see"
argument_list|,
literal|1
argument_list|,
literal|2.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"surprise_to"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"surprise_to_see"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"surprise_to_see_england"
argument_list|,
literal|1
argument_list|,
literal|2.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"to_see"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"to_see_england"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"to_see_england_manager"
argument_list|,
literal|1
argument_list|,
literal|2.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"see_england"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"see_england_manager"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"see_england_manager_svennis"
argument_list|,
literal|1
argument_list|,
literal|2.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"england_manager"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"england_manager_svennis"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"england_manager_svennis_in"
argument_list|,
literal|1
argument_list|,
literal|2.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"manager_svennis"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"manager_svennis_in"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"manager_svennis_in_the"
argument_list|,
literal|1
argument_list|,
literal|2.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"svennis_in"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"svennis_in_the"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"svennis_in_the_croud"
argument_list|,
literal|1
argument_list|,
literal|2.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"in_the"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"in_the_croud"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"the_croud"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"see_england_manager_sven"
argument_list|,
literal|1
argument_list|,
literal|2.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"england_manager_sven"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"england_manager_sven_gÃ¶ran"
argument_list|,
literal|1
argument_list|,
literal|2.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"manager_sven"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"manager_sven_gÃ¶ran"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"manager_sven_gÃ¶ran_eriksson"
argument_list|,
literal|1
argument_list|,
literal|2.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"sven_gÃ¶ran"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"sven_gÃ¶ran_eriksson"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"sven_gÃ¶ran_eriksson_in"
argument_list|,
literal|1
argument_list|,
literal|2.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"gÃ¶ran_eriksson"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"gÃ¶ran_eriksson_in"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"gÃ¶ran_eriksson_in_the"
argument_list|,
literal|1
argument_list|,
literal|2.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"eriksson_in"
argument_list|,
literal|1
argument_list|,
literal|1.4142135f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"eriksson_in_the"
argument_list|,
literal|1
argument_list|,
literal|1.7320508f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNext
argument_list|(
name|ts
argument_list|,
literal|"eriksson_in_the_croud"
argument_list|,
literal|1
argument_list|,
literal|2.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|ts
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|tokenFactory
specifier|private
name|Token
name|tokenFactory
parameter_list|(
name|String
name|text
parameter_list|,
name|int
name|startOffset
parameter_list|,
name|int
name|endOffset
parameter_list|)
block|{
return|return
name|tokenFactory
argument_list|(
name|text
argument_list|,
literal|1
argument_list|,
literal|1f
argument_list|,
name|startOffset
argument_list|,
name|endOffset
argument_list|)
return|;
block|}
DECL|method|tokenFactory
specifier|private
name|Token
name|tokenFactory
parameter_list|(
name|String
name|text
parameter_list|,
name|int
name|posIncr
parameter_list|,
name|int
name|startOffset
parameter_list|,
name|int
name|endOffset
parameter_list|)
block|{
name|Token
name|token
init|=
operator|new
name|Token
argument_list|(
name|startOffset
argument_list|,
name|endOffset
argument_list|)
decl_stmt|;
name|token
operator|.
name|setTermBuffer
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|token
operator|.
name|setPositionIncrement
argument_list|(
name|posIncr
argument_list|)
expr_stmt|;
return|return
name|token
return|;
block|}
DECL|method|tokenFactory
specifier|private
name|Token
name|tokenFactory
parameter_list|(
name|String
name|text
parameter_list|,
name|int
name|posIncr
parameter_list|)
block|{
return|return
name|tokenFactory
argument_list|(
name|text
argument_list|,
name|posIncr
argument_list|,
literal|1f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
DECL|method|tokenFactory
specifier|private
name|Token
name|tokenFactory
parameter_list|(
name|String
name|text
parameter_list|,
name|int
name|posIncr
parameter_list|,
name|float
name|weight
parameter_list|)
block|{
return|return
name|tokenFactory
argument_list|(
name|text
argument_list|,
name|posIncr
argument_list|,
name|weight
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
DECL|method|tokenFactory
specifier|private
name|Token
name|tokenFactory
parameter_list|(
name|String
name|text
parameter_list|,
name|int
name|posIncr
parameter_list|,
name|float
name|weight
parameter_list|,
name|int
name|startOffset
parameter_list|,
name|int
name|endOffset
parameter_list|)
block|{
name|Token
name|token
init|=
operator|new
name|Token
argument_list|(
name|startOffset
argument_list|,
name|endOffset
argument_list|)
decl_stmt|;
name|token
operator|.
name|setTermBuffer
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|token
operator|.
name|setPositionIncrement
argument_list|(
name|posIncr
argument_list|)
expr_stmt|;
name|ShingleMatrixFilter
operator|.
name|defaultSettingsCodec
operator|.
name|setWeight
argument_list|(
name|token
argument_list|,
name|weight
argument_list|)
expr_stmt|;
return|return
name|token
return|;
block|}
DECL|method|tokenFactory
specifier|private
name|Token
name|tokenFactory
parameter_list|(
name|String
name|text
parameter_list|,
name|int
name|posIncr
parameter_list|,
name|float
name|weight
parameter_list|,
name|int
name|startOffset
parameter_list|,
name|int
name|endOffset
parameter_list|,
name|ShingleMatrixFilter
operator|.
name|TokenPositioner
name|positioner
parameter_list|)
block|{
name|Token
name|token
init|=
operator|new
name|Token
argument_list|(
name|startOffset
argument_list|,
name|endOffset
argument_list|)
decl_stmt|;
name|token
operator|.
name|setTermBuffer
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|token
operator|.
name|setPositionIncrement
argument_list|(
name|posIncr
argument_list|)
expr_stmt|;
name|ShingleMatrixFilter
operator|.
name|defaultSettingsCodec
operator|.
name|setWeight
argument_list|(
name|token
argument_list|,
name|weight
argument_list|)
expr_stmt|;
name|ShingleMatrixFilter
operator|.
name|defaultSettingsCodec
operator|.
name|setTokenPositioner
argument_list|(
name|token
argument_list|,
name|positioner
argument_list|)
expr_stmt|;
return|return
name|token
return|;
block|}
comment|// assert-methods start here
DECL|method|assertNext
specifier|private
name|void
name|assertNext
parameter_list|(
name|TokenStream
name|ts
parameter_list|,
name|String
name|text
parameter_list|)
throws|throws
name|IOException
block|{
name|TermAttribute
name|termAtt
init|=
name|ts
operator|.
name|addAttribute
argument_list|(
name|TermAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ts
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|text
argument_list|,
name|termAtt
operator|.
name|term
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|assertNext
specifier|private
name|void
name|assertNext
parameter_list|(
name|TokenStream
name|ts
parameter_list|,
name|String
name|text
parameter_list|,
name|int
name|positionIncrement
parameter_list|,
name|float
name|boost
parameter_list|)
throws|throws
name|IOException
block|{
name|TermAttribute
name|termAtt
init|=
name|ts
operator|.
name|addAttribute
argument_list|(
name|TermAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|PositionIncrementAttribute
name|posIncrAtt
init|=
name|ts
operator|.
name|addAttribute
argument_list|(
name|PositionIncrementAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|PayloadAttribute
name|payloadAtt
init|=
name|ts
operator|.
name|addAttribute
argument_list|(
name|PayloadAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ts
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|text
argument_list|,
name|termAtt
operator|.
name|term
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|positionIncrement
argument_list|,
name|posIncrAtt
operator|.
name|getPositionIncrement
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|boost
argument_list|,
name|payloadAtt
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
condition|?
literal|1f
else|:
name|PayloadHelper
operator|.
name|decodeFloat
argument_list|(
name|payloadAtt
operator|.
name|getPayload
argument_list|()
operator|.
name|getData
argument_list|()
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|assertNext
specifier|private
name|void
name|assertNext
parameter_list|(
name|TokenStream
name|ts
parameter_list|,
name|String
name|text
parameter_list|,
name|int
name|positionIncrement
parameter_list|,
name|float
name|boost
parameter_list|,
name|int
name|startOffset
parameter_list|,
name|int
name|endOffset
parameter_list|)
throws|throws
name|IOException
block|{
name|TermAttribute
name|termAtt
init|=
name|ts
operator|.
name|addAttribute
argument_list|(
name|TermAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|PositionIncrementAttribute
name|posIncrAtt
init|=
name|ts
operator|.
name|addAttribute
argument_list|(
name|PositionIncrementAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|PayloadAttribute
name|payloadAtt
init|=
name|ts
operator|.
name|addAttribute
argument_list|(
name|PayloadAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|OffsetAttribute
name|offsetAtt
init|=
name|ts
operator|.
name|addAttribute
argument_list|(
name|OffsetAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ts
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|text
argument_list|,
name|termAtt
operator|.
name|term
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|positionIncrement
argument_list|,
name|posIncrAtt
operator|.
name|getPositionIncrement
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|boost
argument_list|,
name|payloadAtt
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
condition|?
literal|1f
else|:
name|PayloadHelper
operator|.
name|decodeFloat
argument_list|(
name|payloadAtt
operator|.
name|getPayload
argument_list|()
operator|.
name|getData
argument_list|()
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|startOffset
argument_list|,
name|offsetAtt
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|endOffset
argument_list|,
name|offsetAtt
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|assertNext
specifier|private
name|void
name|assertNext
parameter_list|(
name|TokenStream
name|ts
parameter_list|,
name|String
name|text
parameter_list|,
name|int
name|startOffset
parameter_list|,
name|int
name|endOffset
parameter_list|)
throws|throws
name|IOException
block|{
name|TermAttribute
name|termAtt
init|=
name|ts
operator|.
name|addAttribute
argument_list|(
name|TermAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|OffsetAttribute
name|offsetAtt
init|=
name|ts
operator|.
name|addAttribute
argument_list|(
name|OffsetAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ts
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|text
argument_list|,
name|termAtt
operator|.
name|term
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|startOffset
argument_list|,
name|offsetAtt
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|endOffset
argument_list|,
name|offsetAtt
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createToken
specifier|private
specifier|static
name|Token
name|createToken
parameter_list|(
name|String
name|term
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|offset
parameter_list|)
block|{
name|Token
name|token
init|=
operator|new
name|Token
argument_list|(
name|start
argument_list|,
name|offset
argument_list|)
decl_stmt|;
name|token
operator|.
name|setTermBuffer
argument_list|(
name|term
argument_list|)
expr_stmt|;
return|return
name|token
return|;
block|}
DECL|class|TokenListStream
specifier|public
specifier|static
class|class
name|TokenListStream
extends|extends
name|TokenStream
block|{
DECL|field|tokens
specifier|private
name|Collection
name|tokens
decl_stmt|;
DECL|field|termAtt
name|TermAttribute
name|termAtt
decl_stmt|;
DECL|field|posIncrAtt
name|PositionIncrementAttribute
name|posIncrAtt
decl_stmt|;
DECL|field|payloadAtt
name|PayloadAttribute
name|payloadAtt
decl_stmt|;
DECL|field|offsetAtt
name|OffsetAttribute
name|offsetAtt
decl_stmt|;
DECL|field|typeAtt
name|TypeAttribute
name|typeAtt
decl_stmt|;
DECL|field|flagsAtt
name|FlagsAttribute
name|flagsAtt
decl_stmt|;
DECL|method|TokenListStream
specifier|public
name|TokenListStream
parameter_list|(
name|Collection
name|tokens
parameter_list|)
block|{
name|this
operator|.
name|tokens
operator|=
name|tokens
expr_stmt|;
name|termAtt
operator|=
name|addAttribute
argument_list|(
name|TermAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|posIncrAtt
operator|=
name|addAttribute
argument_list|(
name|PositionIncrementAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|payloadAtt
operator|=
name|addAttribute
argument_list|(
name|PayloadAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|offsetAtt
operator|=
name|addAttribute
argument_list|(
name|OffsetAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|typeAtt
operator|=
name|addAttribute
argument_list|(
name|TypeAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|flagsAtt
operator|=
name|addAttribute
argument_list|(
name|FlagsAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
DECL|field|iterator
specifier|private
name|Iterator
name|iterator
decl_stmt|;
annotation|@
name|Override
DECL|method|incrementToken
specifier|public
name|boolean
name|incrementToken
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|iterator
operator|==
literal|null
condition|)
block|{
name|iterator
operator|=
name|tokens
operator|.
name|iterator
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|iterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|Token
name|prototype
init|=
operator|(
name|Token
operator|)
name|iterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|termAtt
operator|.
name|setTermBuffer
argument_list|(
name|prototype
operator|.
name|termBuffer
argument_list|()
argument_list|,
literal|0
argument_list|,
name|prototype
operator|.
name|termLength
argument_list|()
argument_list|)
expr_stmt|;
name|posIncrAtt
operator|.
name|setPositionIncrement
argument_list|(
name|prototype
operator|.
name|getPositionIncrement
argument_list|()
argument_list|)
expr_stmt|;
name|flagsAtt
operator|.
name|setFlags
argument_list|(
name|prototype
operator|.
name|getFlags
argument_list|()
argument_list|)
expr_stmt|;
name|offsetAtt
operator|.
name|setOffset
argument_list|(
name|prototype
operator|.
name|startOffset
argument_list|()
argument_list|,
name|prototype
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|typeAtt
operator|.
name|setType
argument_list|(
name|prototype
operator|.
name|type
argument_list|()
argument_list|)
expr_stmt|;
name|payloadAtt
operator|.
name|setPayload
argument_list|(
name|prototype
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|reset
specifier|public
name|void
name|reset
parameter_list|()
throws|throws
name|IOException
block|{
name|iterator
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
