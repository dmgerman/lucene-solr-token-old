begin_unit
begin_package
DECL|package|org.apache.lucenesandbox.xmlindexingdemo
package|package
name|org
operator|.
name|apache
operator|.
name|lucenesandbox
operator|.
name|xmlindexingdemo
package|;
end_package
begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|*
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|*
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_class
DECL|class|XMLDocumentHandlerSAX
specifier|public
class|class
name|XMLDocumentHandlerSAX
extends|extends
name|HandlerBase
block|{
comment|/** A buffer for each XML element */
DECL|field|elementBuffer
specifier|private
name|StringBuffer
name|elementBuffer
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
DECL|field|mDocument
specifier|private
name|Document
name|mDocument
decl_stmt|;
comment|// constructor
DECL|method|XMLDocumentHandlerSAX
specifier|public
name|XMLDocumentHandlerSAX
parameter_list|(
name|File
name|xmlFile
parameter_list|)
throws|throws
name|ParserConfigurationException
throws|,
name|SAXException
throws|,
name|IOException
block|{
name|SAXParserFactory
name|spf
init|=
name|SAXParserFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|SAXParser
name|parser
init|=
name|spf
operator|.
name|newSAXParser
argument_list|()
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|xmlFile
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
comment|// call at document start
DECL|method|startDocument
specifier|public
name|void
name|startDocument
parameter_list|()
block|{
name|mDocument
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
block|}
comment|// call at element start
DECL|method|startElement
specifier|public
name|void
name|startElement
parameter_list|(
name|String
name|localName
parameter_list|,
name|AttributeList
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|elementBuffer
operator|.
name|setLength
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
comment|// call when cdata found
DECL|method|characters
specifier|public
name|void
name|characters
parameter_list|(
name|char
index|[]
name|text
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|length
parameter_list|)
block|{
name|elementBuffer
operator|.
name|append
argument_list|(
name|text
argument_list|,
name|start
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
comment|// call at element end
DECL|method|endElement
specifier|public
name|void
name|endElement
parameter_list|(
name|String
name|localName
parameter_list|)
throws|throws
name|SAXException
block|{
name|mDocument
operator|.
name|add
argument_list|(
name|Field
operator|.
name|Text
argument_list|(
name|localName
argument_list|,
name|elementBuffer
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getDocument
specifier|public
name|Document
name|getDocument
parameter_list|()
block|{
return|return
name|mDocument
return|;
block|}
block|}
end_class
end_unit
