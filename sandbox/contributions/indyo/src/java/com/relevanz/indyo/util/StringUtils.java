begin_unit
begin_package
DECL|package|com.relevanz.indyo.util
package|package
name|com
operator|.
name|relevanz
operator|.
name|indyo
operator|.
name|util
package|;
end_package
begin_comment
comment|/* ====================================================================  * The Apache Software License, Version 1.1  *  * Copyright (c) 2001 The Apache Software Foundation.  All rights  * reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in  *    the documentation and/or other materials provided with the  *    distribution.  *  * 3. The end-user documentation included with the redistribution,  *    if any, must include the following acknowledgment:  *       "This product includes software developed by the  *        Apache Software Foundation (http://www.apache.org/)."  *    Alternately, this acknowledgment may appear in the software itself,  *    if and wherever such third-party acknowledgments normally appear.  *  * 4. The names "Apache" and "Apache Software Foundation" and  *    "Apache Lucene" must not be used to endorse or promote products  *    derived from this software without prior written permission. For  *    written permission, please contact apache@apache.org.  *  * 5. Products derived from this software may not be called "Apache",  *    "Apache Lucene", nor may "Apache" appear in their name, without  *    prior written permission of the Apache Software Foundation.  *  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR  * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF  * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  * ====================================================================  *  * This software consists of voluntary contributions made by many  * individuals on behalf of the Apache Software Foundation.  For more  * information on the Apache Software Foundation, please see  *<http://www.apache.org/>.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|oro
operator|.
name|text
operator|.
name|perl
operator|.
name|Perl5Util
import|;
end_import
begin_comment
comment|/**  * Utility String-related methods.  *  * @author<a href="mailto:kelvint@apache.org">Kelvin Tan</a>  * @version $Id$   */
end_comment
begin_class
DECL|class|StringUtils
specifier|public
specifier|final
class|class
name|StringUtils
block|{
DECL|field|EMPTY_STRING
specifier|public
specifier|static
specifier|final
name|String
name|EMPTY_STRING
init|=
literal|""
decl_stmt|;
DECL|field|QUOTE_ENCODE
specifier|private
specifier|static
specifier|final
name|char
index|[]
name|QUOTE_ENCODE
init|=
literal|"&quot;"
operator|.
name|toCharArray
argument_list|()
decl_stmt|;
DECL|field|AMP_ENCODE
specifier|private
specifier|static
specifier|final
name|char
index|[]
name|AMP_ENCODE
init|=
literal|"&amp;"
operator|.
name|toCharArray
argument_list|()
decl_stmt|;
DECL|field|LT_ENCODE
specifier|private
specifier|static
specifier|final
name|char
index|[]
name|LT_ENCODE
init|=
literal|"&lt;"
operator|.
name|toCharArray
argument_list|()
decl_stmt|;
DECL|field|GT_ENCODE
specifier|private
specifier|static
specifier|final
name|char
index|[]
name|GT_ENCODE
init|=
literal|"&gt;"
operator|.
name|toCharArray
argument_list|()
decl_stmt|;
DECL|field|APOS_ENCODE
specifier|private
specifier|static
specifier|final
name|char
index|[]
name|APOS_ENCODE
init|=
literal|"&apos;"
operator|.
name|toCharArray
argument_list|()
decl_stmt|;
comment|// Create a regular expression engine
DECL|field|perl5Util
specifier|private
specifier|static
name|Perl5Util
name|perl5Util
init|=
operator|new
name|Perl5Util
argument_list|()
decl_stmt|;
DECL|method|removeUnreadableCharacters
specifier|public
specifier|static
specifier|final
name|String
name|removeUnreadableCharacters
parameter_list|(
name|String
name|s
parameter_list|)
block|{
if|if
condition|(
name|perl5Util
operator|.
name|match
argument_list|(
literal|"/\\W+/"
argument_list|,
name|s
argument_list|)
condition|)
block|{
comment|// replace unreadable characters with a space
name|s
operator|=
name|perl5Util
operator|.
name|substitute
argument_list|(
literal|"s#[^a-zA-Z0-9_@]+# #gm"
argument_list|,
name|s
argument_list|)
expr_stmt|;
comment|// remove any single/double word characters
name|s
operator|=
name|perl5Util
operator|.
name|substitute
argument_list|(
literal|"s#\\b[a-zA-Z0-9_]{1,2}\\b##gm"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
return|return
name|trimWhitespace
argument_list|(
name|s
argument_list|)
return|;
block|}
DECL|method|trimWhitespace
specifier|public
specifier|static
specifier|final
name|String
name|trimWhitespace
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|s
operator|=
name|perl5Util
operator|.
name|substitute
argument_list|(
literal|"s#[\\s]{3,}# #m"
argument_list|,
name|s
argument_list|)
expr_stmt|;
return|return
name|s
return|;
block|}
block|}
end_class
end_unit
