begin_unit
begin_comment
comment|/*  * SearchBean.java  *  * Created on November 1, 2001, 10:31 AM  */
end_comment
begin_package
DECL|package|org.apache.lucene.beans
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|beans
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Searcher
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Hits
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|HitCollector
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|Analyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|StopAnalyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|standard
operator|.
name|StandardAnalyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queryParser
operator|.
name|QueryParser
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queryParser
operator|.
name|ParseException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|beans
operator|.
name|HitsIterator
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_comment
comment|//import org.apache.log4j.Logger;
end_comment
begin_comment
comment|/**  *  * @author  peter carlson  * @version 1.0  */
end_comment
begin_class
DECL|class|SearchBean
specifier|public
class|class
name|SearchBean
extends|extends
name|Object
block|{
DECL|field|SORT_FIELD_RELEVANCE
specifier|static
specifier|final
name|String
name|SORT_FIELD_RELEVANCE
init|=
literal|"relevance"
decl_stmt|;
DECL|field|queryString
specifier|private
name|String
name|queryString
init|=
literal|""
decl_stmt|;
DECL|field|querySortField
specifier|private
name|String
name|querySortField
init|=
name|SORT_FIELD_RELEVANCE
decl_stmt|;
comment|// default
DECL|field|queryType
specifier|private
name|String
name|queryType
init|=
literal|""
decl_stmt|;
DECL|field|directory
specifier|private
name|Directory
name|directory
decl_stmt|;
DECL|field|hitsIterator
specifier|private
name|HitsIterator
name|hitsIterator
init|=
literal|null
decl_stmt|;
DECL|field|defaultSearchField
specifier|private
name|String
name|defaultSearchField
init|=
literal|"text"
decl_stmt|;
DECL|field|searchTime
specifier|private
name|long
name|searchTime
init|=
literal|0
decl_stmt|;
DECL|field|searcher
specifier|private
name|Searcher
name|searcher
init|=
literal|null
decl_stmt|;
comment|// static Logger logger = Logger.getLogger(SearchBean.class.getName());
comment|// static Logger searchLogger = Logger.getLogger("searchLog");
DECL|method|SearchBean
specifier|private
name|SearchBean
parameter_list|()
block|{     }
comment|/** Creates new SearchBean      * @param path to index      */
DECL|method|SearchBean
specifier|public
name|SearchBean
parameter_list|(
name|Directory
name|directory
parameter_list|)
block|{
name|this
operator|.
name|directory
operator|=
name|directory
expr_stmt|;
block|}
comment|/** Creates new SearchBean      * @param directory index      * @param queryString string to search with      */
DECL|method|SearchBean
specifier|public
name|SearchBean
parameter_list|(
name|Directory
name|directory
parameter_list|,
name|String
name|queryString
parameter_list|)
block|{
name|this
argument_list|(
name|directory
argument_list|)
expr_stmt|;
name|setQueryString
argument_list|(
name|queryString
argument_list|)
expr_stmt|;
block|}
comment|/** Creates new SearchBean      * @param directory index      * @param queryString string to search with      * @param querySortField field to sort on      */
DECL|method|SearchBean
specifier|public
name|SearchBean
parameter_list|(
name|Directory
name|directory
parameter_list|,
name|String
name|queryString
parameter_list|,
name|String
name|querySortField
parameter_list|)
block|{
name|this
argument_list|(
name|directory
argument_list|)
expr_stmt|;
name|setQueryString
argument_list|(
name|queryString
argument_list|)
expr_stmt|;
name|setQuerySortField
argument_list|(
name|querySortField
argument_list|)
expr_stmt|;
block|}
comment|/** Creates new SearchBean      * @param directory index      * @param queryString string to search with      * @param querySortField field to sort on      * @param queryType used to indicate which index and default Field      */
DECL|method|SearchBean
specifier|public
name|SearchBean
parameter_list|(
name|Directory
name|directory
parameter_list|,
name|String
name|queryString
parameter_list|,
name|String
name|querySortField
parameter_list|,
name|String
name|queryType
parameter_list|)
block|{
name|this
argument_list|(
name|directory
argument_list|)
expr_stmt|;
name|setQueryString
argument_list|(
name|queryString
argument_list|)
expr_stmt|;
name|setQuerySortField
argument_list|(
name|querySortField
argument_list|)
expr_stmt|;
name|setQueryType
argument_list|(
name|queryType
argument_list|)
expr_stmt|;
block|}
comment|/** main search method      */
DECL|method|search
specifier|public
name|HitsIterator
name|search
parameter_list|()
throws|throws
name|IOException
throws|,
name|ParseException
block|{
return|return
name|search
argument_list|(
name|queryString
argument_list|,
name|querySortField
argument_list|)
return|;
block|}
comment|/** main search method      * @param queryString string to search with      */
DECL|method|search
specifier|public
name|HitsIterator
name|search
parameter_list|(
name|String
name|queryString
parameter_list|)
throws|throws
name|IOException
throws|,
name|ParseException
block|{
return|return
name|search
argument_list|(
name|queryString
argument_list|,
name|queryString
argument_list|)
return|;
block|}
comment|/** main search method      * @param queryString string to search with      * @param querySortField field to sort on      */
DECL|method|search
specifier|public
name|HitsIterator
name|search
parameter_list|(
name|String
name|queryString
parameter_list|,
name|String
name|querySortField
parameter_list|)
throws|throws
name|IOException
throws|,
name|ParseException
block|{
return|return
name|search
argument_list|(
name|queryString
argument_list|,
name|querySortField
argument_list|,
name|queryType
argument_list|)
return|;
block|}
comment|/** main search method      * @param queryString string to search with      * @param querySortField field to sort on      * @param queryType used to indicate the index to search      */
DECL|method|search
specifier|public
name|HitsIterator
name|search
parameter_list|(
name|String
name|queryString
parameter_list|,
name|String
name|querySortField
parameter_list|,
name|String
name|queryType
parameter_list|)
throws|throws
name|IOException
throws|,
name|ParseException
block|{
name|long
name|startTime
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|Hits
name|hits
init|=
name|searchHits
argument_list|(
name|queryString
argument_list|,
name|queryType
argument_list|)
decl_stmt|;
comment|//if (hits == null) {return null;}
comment|//if (hits.length() == 0) {return null;}
name|HitsIterator
name|hi
init|=
operator|new
name|HitsIterator
argument_list|(
name|hits
argument_list|,
name|querySortField
argument_list|)
decl_stmt|;
name|long
name|endTime
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|setSearchTime
argument_list|(
name|endTime
operator|-
name|startTime
argument_list|)
expr_stmt|;
name|setHitsIterator
argument_list|(
name|hi
argument_list|)
expr_stmt|;
comment|//searchLogger.info("queryString = "+queryString + "sort field = "+ querySortField +" #results = "+hits.length());
return|return
name|hi
return|;
block|}
comment|/** does the actual searching      */
DECL|method|searchHits
specifier|private
name|Hits
name|searchHits
parameter_list|(
name|String
name|queryString
parameter_list|,
name|String
name|queryType
parameter_list|)
throws|throws
name|IOException
throws|,
name|ParseException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"queryString = "
operator|+
name|queryString
argument_list|)
expr_stmt|;
if|if
condition|(
name|queryString
operator|==
literal|""
condition|)
block|{
return|return
literal|null
return|;
block|}
comment|// Provide for multiple indices in the future
name|searcher
operator|=
operator|new
name|IndexSearcher
argument_list|(
name|directory
argument_list|)
expr_stmt|;
name|Query
name|query
init|=
name|getQuery
argument_list|(
name|queryString
argument_list|,
name|defaultSearchField
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"###querystring= "
operator|+
name|query
operator|.
name|toString
argument_list|(
name|defaultSearchField
argument_list|)
argument_list|)
expr_stmt|;
name|Hits
name|hits
init|=
name|searcher
operator|.
name|search
argument_list|(
name|query
argument_list|)
decl_stmt|;
comment|//System.out.println("Number hits = "+hits.length());
comment|//logger.debug("queryString = "+query.toString(searchField)+" hits = "+hits.length()+" queryType = "+queryType+" indexPath = "+indexPath );
return|return
name|hits
return|;
block|}
comment|/**      * frees resources associated with SearchBean search      */
DECL|method|close
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|searcher
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|/**<queryString> |<queryType> |<querySortField>      */
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|queryString
operator|+
literal|"|"
operator|+
name|queryType
operator|+
literal|"|"
operator|+
name|querySortField
return|;
block|}
comment|/** setter for queryString      */
DECL|method|setQueryString
specifier|public
name|void
name|setQueryString
parameter_list|(
name|String
name|queryString
parameter_list|)
block|{
name|this
operator|.
name|queryString
operator|=
name|queryString
expr_stmt|;
block|}
comment|/** getter for queryString      */
DECL|method|getQueryString
specifier|public
name|String
name|getQueryString
parameter_list|()
block|{
return|return
name|queryString
return|;
block|}
comment|/** getter for Lucene Query      */
DECL|method|getQuery
specifier|private
name|Query
name|getQuery
parameter_list|(
name|String
name|queryString
parameter_list|,
name|String
name|searchField
parameter_list|)
throws|throws
name|ParseException
block|{
comment|//String defaultSearchField = "text";
name|Analyzer
name|analyzer
init|=
operator|new
name|StandardAnalyzer
argument_list|()
decl_stmt|;
name|Query
name|query
init|=
name|QueryParser
operator|.
name|parse
argument_list|(
name|queryString
argument_list|,
name|searchField
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
comment|//System.out.println(query.toString());
return|return
name|query
return|;
block|}
comment|/** Getter for property defaulSearchField.      * @return Value of property defaulSearchField.      */
DECL|method|getDefaultSearchField
specifier|public
name|String
name|getDefaultSearchField
parameter_list|()
block|{
return|return
name|defaultSearchField
return|;
block|}
comment|/** Setter for property defaulSearchField.      * @param defaulSearchField New value of property defaulSearchField.      */
DECL|method|setDefaultSearchField
specifier|public
name|void
name|setDefaultSearchField
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|defaultSearchField
parameter_list|)
block|{
name|this
operator|.
name|defaultSearchField
operator|=
name|defaultSearchField
expr_stmt|;
block|}
comment|/** Getter for property searchTime.      * @return Value of property searchTime.      */
DECL|method|getSearchTime
specifier|public
name|long
name|getSearchTime
parameter_list|()
block|{
return|return
name|searchTime
return|;
block|}
comment|/** Setter for property searchTime.      * @param searchTime New value of property searchTime.      */
DECL|method|setSearchTime
specifier|public
name|void
name|setSearchTime
parameter_list|(
name|long
name|searchTime
parameter_list|)
block|{
name|this
operator|.
name|searchTime
operator|=
name|searchTime
expr_stmt|;
block|}
comment|/** Getter for property querySortField.      * @return Value of property querySortField.      */
DECL|method|getQuerySortField
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getQuerySortField
parameter_list|()
block|{
return|return
name|querySortField
return|;
block|}
comment|/** Setter for property querySortField.      * @param querySortField New value of property querySortField.      */
DECL|method|setQuerySortField
specifier|public
name|void
name|setQuerySortField
parameter_list|(
name|String
name|querySortField
parameter_list|)
block|{
name|this
operator|.
name|querySortField
operator|=
name|querySortField
expr_stmt|;
block|}
comment|/** Getter for property hitsIterator.      * @return Value of property hitsIterator.      */
DECL|method|getHitsIterator
specifier|public
name|HitsIterator
name|getHitsIterator
parameter_list|()
block|{
return|return
name|hitsIterator
return|;
block|}
comment|/** Setter for property hitsIterator.      * @param hitsIterator New value of property hitsIterator.      */
DECL|method|setHitsIterator
specifier|public
name|void
name|setHitsIterator
parameter_list|(
name|HitsIterator
name|hitsIterator
parameter_list|)
block|{
name|this
operator|.
name|hitsIterator
operator|=
name|hitsIterator
expr_stmt|;
block|}
comment|/** Getter for property queryType.      * @return Value of property queryType.      */
DECL|method|getQueryType
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getQueryType
parameter_list|()
block|{
return|return
name|queryType
return|;
block|}
comment|/** Setter for property queryType.      * @param queryType New value of property queryType.      */
DECL|method|setQueryType
specifier|public
name|void
name|setQueryType
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|queryType
parameter_list|)
block|{
name|this
operator|.
name|queryType
operator|=
name|queryType
expr_stmt|;
block|}
comment|/** Getter for property directory.      * @return Value of property directory.      */
DECL|method|getDirectory
specifier|public
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
name|getDirectory
parameter_list|()
block|{
return|return
name|directory
return|;
block|}
comment|/** Setter for property directory.      * @param directory New value of property directory.      */
DECL|method|setDirectory
specifier|public
name|void
name|setDirectory
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
name|directory
parameter_list|)
block|{
name|this
operator|.
name|directory
operator|=
name|directory
expr_stmt|;
block|}
block|}
end_class
end_unit
