begin_unit
begin_package
DECL|package|de.lanlab.larm.fetcher
package|package
name|de
operator|.
name|lanlab
operator|.
name|larm
operator|.
name|fetcher
package|;
end_package
begin_import
import|import
name|de
operator|.
name|lanlab
operator|.
name|larm
operator|.
name|threads
operator|.
name|*
import|;
end_import
begin_import
import|import
name|de
operator|.
name|lanlab
operator|.
name|larm
operator|.
name|util
operator|.
name|*
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import
begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import
begin_comment
comment|/**  * this special kind of task queue reorders the incoming tasks so that every subsequent  * task is for a different host.  * This is done by a "HashedCircularLinkedList" which allows random adding while  * a differnet thread iterates through the collection circularly.  *  * @author    Clemens Marschner  * @created   23. November 2001  */
end_comment
begin_class
DECL|class|FetcherTaskQueue
specifier|public
class|class
name|FetcherTaskQueue
extends|extends
name|TaskQueue
block|{
comment|/**      * this is a hash that contains an entry for each server, which by itself is a      * CachingQueue that stores all tasks for this server      * @TODO probably link this to the host info structure      */
DECL|field|servers
name|HashedCircularLinkedList
name|servers
init|=
operator|new
name|HashedCircularLinkedList
argument_list|(
literal|100
argument_list|,
literal|0.75f
argument_list|)
decl_stmt|;
DECL|field|size
name|int
name|size
init|=
literal|0
decl_stmt|;
comment|/**      * Constructor for the FetcherTaskQueue object. Does nothing      */
DECL|method|FetcherTaskQueue
specifier|public
name|FetcherTaskQueue
parameter_list|()
block|{ }
comment|/**      * true if no task is queued      *      * @return   The empty value      */
DECL|method|isEmpty
specifier|public
name|boolean
name|isEmpty
parameter_list|()
block|{
return|return
operator|(
name|size
operator|==
literal|0
operator|)
return|;
block|}
comment|/**      * clear the queue. not synchronized.      */
DECL|method|clear
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|servers
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
comment|/**      * puts task into Queue.      * Warning: not synchronized      *      * @param t  the task to be added. must be a FetcherTask      */
DECL|method|insert
specifier|public
name|void
name|insert
parameter_list|(
name|Object
name|t
parameter_list|)
block|{
comment|// assert (t != null&& t.getURL() != null)
name|URLMessage
name|um
init|=
operator|(
operator|(
name|FetcherTask
operator|)
name|t
operator|)
operator|.
name|getActURLMessage
argument_list|()
decl_stmt|;
name|URL
name|act
init|=
name|um
operator|.
name|getUrl
argument_list|()
decl_stmt|;
name|String
name|host
init|=
name|act
operator|.
name|getHost
argument_list|()
decl_stmt|;
name|Queue
name|q
decl_stmt|;
name|q
operator|=
operator|(
operator|(
name|Queue
operator|)
name|servers
operator|.
name|get
argument_list|(
name|host
argument_list|)
operator|)
expr_stmt|;
if|if
condition|(
name|q
operator|==
literal|null
condition|)
block|{
comment|// add a new host to the queue
comment|//String host2 = host.replace(':', '_').replace('/', '_').replace('\\', '_');
comment|// make it file system ready
name|q
operator|=
operator|new
name|CachingQueue
argument_list|(
name|host
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|servers
operator|.
name|put
argument_list|(
name|host
argument_list|,
name|q
argument_list|)
expr_stmt|;
block|}
comment|// assert((q != null)&& (q instanceof FetcherTaskQueue));
name|q
operator|.
name|insert
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|size
operator|++
expr_stmt|;
block|}
comment|/**      * the size of the queue. make sure that insert() and size() calls are synchronized      * if the exact number matters.      *      * @return   Description of the Return Value      */
DECL|method|size
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|size
return|;
block|}
comment|/**      * the number of different hosts queued at the moment      */
DECL|method|getNumHosts
specifier|public
name|int
name|getNumHosts
parameter_list|()
block|{
return|return
name|servers
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      * get the next task. warning: not synchronized      *      * @return   Description of the Return Value      */
DECL|method|remove
specifier|public
name|Object
name|remove
parameter_list|()
block|{
name|FetcherTask
name|t
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|servers
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|Queue
name|q
init|=
operator|(
name|Queue
operator|)
name|servers
operator|.
name|next
argument_list|()
decl_stmt|;
comment|// assert(q != null&& q.size()> 0)
name|t
operator|=
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
expr_stmt|;
if|if
condition|(
name|q
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
name|servers
operator|.
name|removeCurrent
argument_list|()
expr_stmt|;
name|q
operator|=
literal|null
expr_stmt|;
block|}
name|size
operator|--
expr_stmt|;
block|}
return|return
name|t
return|;
block|}
comment|/**      * tests      *      * @param args  Description of the Parameter      */
DECL|method|main
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
name|args
index|[]
parameter_list|)
block|{
name|FetcherTaskQueue
name|q
init|=
operator|new
name|FetcherTaskQueue
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Test 1. put in 4 yahoos and 3 lmus. pull out LMU/Yahoo/LMU/Yahoo/LMU/Yahoo/Yahoo"
argument_list|)
expr_stmt|;
try|try
block|{
name|q
operator|.
name|insert
argument_list|(
operator|new
name|FetcherTask
argument_list|(
operator|new
name|URLMessage
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://www.lmu.de/1"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|insert
argument_list|(
operator|new
name|FetcherTask
argument_list|(
operator|new
name|URLMessage
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://www.lmu.de/2"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|insert
argument_list|(
operator|new
name|FetcherTask
argument_list|(
operator|new
name|URLMessage
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://www.yahoo.de/1"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|insert
argument_list|(
operator|new
name|FetcherTask
argument_list|(
operator|new
name|URLMessage
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://www.yahoo.de/2"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|insert
argument_list|(
operator|new
name|FetcherTask
argument_list|(
operator|new
name|URLMessage
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://www.yahoo.de/3"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|insert
argument_list|(
operator|new
name|FetcherTask
argument_list|(
operator|new
name|URLMessage
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://www.yahoo.de/4"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|insert
argument_list|(
operator|new
name|FetcherTask
argument_list|(
operator|new
name|URLMessage
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://www.lmu.de/3"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|t
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
operator|(
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
operator|(
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
operator|(
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
operator|(
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
operator|(
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
operator|(
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
operator|(
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Test 2. new Queue"
argument_list|)
expr_stmt|;
name|q
operator|=
operator|new
name|FetcherTaskQueue
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"size [0]:"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|q
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"put 3 lmus."
argument_list|)
expr_stmt|;
name|q
operator|.
name|insert
argument_list|(
operator|new
name|FetcherTask
argument_list|(
operator|new
name|URLMessage
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://www.lmu.de/1"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|insert
argument_list|(
operator|new
name|FetcherTask
argument_list|(
operator|new
name|URLMessage
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://www.lmu.de/2"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|insert
argument_list|(
operator|new
name|FetcherTask
argument_list|(
operator|new
name|URLMessage
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://www.lmu.de/3"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
literal|"pull out 1st element [lmu/1]: "
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
operator|(
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"size now [2]: "
operator|+
name|q
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
literal|"pull out 2nd element [lmu/2]: "
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
operator|(
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"size now [1]: "
operator|+
name|q
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"put in 3 yahoos"
argument_list|)
expr_stmt|;
name|q
operator|.
name|insert
argument_list|(
operator|new
name|FetcherTask
argument_list|(
operator|new
name|URLMessage
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://www.yahoo.de/1"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|insert
argument_list|(
operator|new
name|FetcherTask
argument_list|(
operator|new
name|URLMessage
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://www.yahoo.de/2"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|insert
argument_list|(
operator|new
name|FetcherTask
argument_list|(
operator|new
name|URLMessage
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://www.yahoo.de/3"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"remove [?]: "
operator|+
operator|(
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Size now [3]: "
operator|+
name|q
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"remove [?]: "
operator|+
operator|(
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Size now [2]: "
operator|+
name|q
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"remove [?]: "
operator|+
operator|(
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Size now [1]: "
operator|+
name|q
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"put in another Yahoo"
argument_list|)
expr_stmt|;
name|q
operator|.
name|insert
argument_list|(
operator|new
name|FetcherTask
argument_list|(
operator|new
name|URLMessage
argument_list|(
operator|new
name|URL
argument_list|(
literal|"http://www.yahoo.de/4"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"remove [?]: "
operator|+
operator|(
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Size now [1]: "
operator|+
name|q
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"remove [?]: "
operator|+
operator|(
operator|(
name|FetcherTask
operator|)
name|q
operator|.
name|remove
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Size now [0]: "
operator|+
name|q
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|t
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
