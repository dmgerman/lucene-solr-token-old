begin_unit
begin_package
DECL|package|de.lanlab.larm.fetcher
package|package
name|de
operator|.
name|lanlab
operator|.
name|larm
operator|.
name|fetcher
package|;
end_package
begin_comment
comment|/**  * Title: LARM Lanlab Retrieval Machine Description: Copyright: Copyright (c)  * Company:  *  * @author  * @version   1.0  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|*
import|;
end_import
begin_import
import|import
name|java
operator|.
name|net
operator|.
name|*
import|;
end_import
begin_comment
comment|/**  * Description of the Class  *  * @author    Administrator  * @created   28. Januar 2002  */
end_comment
begin_class
DECL|class|GZipTest
specifier|public
class|class
name|GZipTest
block|{
comment|/**      * Constructor for the GZipTest object      */
DECL|method|GZipTest
specifier|public
name|GZipTest
parameter_list|()
block|{ }
comment|/**      * The main program for the GZipTest class      *      * @param args  The command line arguments      */
DECL|method|main
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|String
name|url
init|=
literal|"http://speechdat.phonetik.uni-muenchen.de/speechdt//speechDB/FIXED1SL/BLOCK00/SES0006/A10006O5.aif"
decl_stmt|;
name|ByteArrayOutputStream
name|a
init|=
operator|new
name|ByteArrayOutputStream
argument_list|(
name|url
operator|.
name|length
argument_list|()
argument_list|)
decl_stmt|;
name|GZIPOutputStream
name|g
init|=
operator|new
name|GZIPOutputStream
argument_list|(
name|a
argument_list|)
decl_stmt|;
name|OutputStreamWriter
name|o
init|=
operator|new
name|OutputStreamWriter
argument_list|(
name|g
argument_list|,
literal|"ISO-8859-1"
argument_list|)
decl_stmt|;
name|o
operator|.
name|write
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|o
operator|.
name|close
argument_list|()
expr_stmt|;
name|g
operator|.
name|finish
argument_list|()
expr_stmt|;
name|byte
index|[]
name|array
init|=
name|a
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"URL: "
operator|+
name|url
operator|+
literal|" \n Length: "
operator|+
name|url
operator|.
name|length
argument_list|()
operator|+
literal|"\n zipped: "
operator|+
name|array
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
