begin_unit
begin_comment
comment|/* ====================================================================  * The Apache Software License, Version 1.1  *  * Copyright (c) 2001 The Apache Software Foundation.  All rights  * reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in  *    the documentation and/or other materials provided with the  *    distribution.  *  * 3. The end-user documentation included with the redistribution,  *    if any, must include the following acknowledgment:  *       "This product includes software developed by the  *        Apache Software Foundation (http://www.apache.org/)."  *    Alternately, this acknowledgment may appear in the software itself,  *    if and wherever such third-party acknowledgments normally appear.  *  * 4. The names "Apache" and "Apache Software Foundation" and  *    "Apache Lucene" must not be used to endorse or promote products  *    derived from this software without prior written permission. For  *    written permission, please contact apache@apache.org.  *  * 5. Products derived from this software may not be called "Apache",  *    "Apache Lucene", nor may "Apache" appear in their name, without  *    prior written permission of the Apache Software Foundation.  *  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR  * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF  * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  * ====================================================================  *  * This software consists of voluntary contributions made by many  * individuals on behalf of the Apache Software Foundation.  For more  * information on the Apache Software Foundation, please see  *<http://www.apache.org/>.  */
end_comment
begin_package
DECL|package|de.lanlab.larm.gui
package|package
name|de
operator|.
name|lanlab
operator|.
name|larm
operator|.
name|gui
package|;
end_package
begin_comment
comment|/*     This simple extension of the java.awt.Frame class     contains all the elements necessary to act as the     main window of an application.  */
end_comment
begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import
begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import
begin_comment
comment|//import com.sun.java.swing.*;
end_comment
begin_class
DECL|class|FetcherFrame
specifier|public
class|class
name|FetcherFrame
extends|extends
name|Frame
block|{
DECL|method|FetcherFrame
specifier|public
name|FetcherFrame
parameter_list|()
block|{
comment|// This code is automatically generated by Visual Cafe when you add
comment|// components to the visual environment. It instantiates and initializes
comment|// the components. To modify the code, only use code syntax that matches
comment|// what Visual Cafe can generate, or Visual Cafe may be unable to back
comment|// parse your Java file into its visual environment.
comment|//{{INIT_CONTROLS
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|setSize
argument_list|(
literal|800
argument_list|,
literal|600
argument_list|)
expr_stmt|;
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|openFileDialog1
operator|.
name|setMode
argument_list|(
name|FileDialog
operator|.
name|LOAD
argument_list|)
expr_stmt|;
name|openFileDialog1
operator|.
name|setTitle
argument_list|(
literal|"Ã–ffnen"
argument_list|)
expr_stmt|;
comment|//$$ openFileDialog1.move(24,312);
name|mainPanelWithBorders
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|add
argument_list|(
literal|"Center"
argument_list|,
name|mainPanelWithBorders
argument_list|)
expr_stmt|;
name|mainPanelWithBorders
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|800
argument_list|,
literal|600
argument_list|)
expr_stmt|;
name|northBorder
operator|.
name|setLayout
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|mainPanelWithBorders
operator|.
name|add
argument_list|(
literal|"North"
argument_list|,
name|northBorder
argument_list|)
expr_stmt|;
name|northBorder
operator|.
name|setBackground
argument_list|(
name|java
operator|.
name|awt
operator|.
name|Color
operator|.
name|lightGray
argument_list|)
expr_stmt|;
name|northBorder
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|800
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|southBorder
operator|.
name|setLayout
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|mainPanelWithBorders
operator|.
name|add
argument_list|(
literal|"South"
argument_list|,
name|southBorder
argument_list|)
expr_stmt|;
name|southBorder
operator|.
name|setBackground
argument_list|(
name|java
operator|.
name|awt
operator|.
name|Color
operator|.
name|lightGray
argument_list|)
expr_stmt|;
name|southBorder
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|597
argument_list|,
literal|800
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|westBorder
operator|.
name|setLayout
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|mainPanelWithBorders
operator|.
name|add
argument_list|(
literal|"West"
argument_list|,
name|westBorder
argument_list|)
expr_stmt|;
name|westBorder
operator|.
name|setBackground
argument_list|(
name|java
operator|.
name|awt
operator|.
name|Color
operator|.
name|lightGray
argument_list|)
expr_stmt|;
name|westBorder
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|,
literal|594
argument_list|)
expr_stmt|;
name|eastBorder
operator|.
name|setLayout
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|mainPanelWithBorders
operator|.
name|add
argument_list|(
literal|"East"
argument_list|,
name|eastBorder
argument_list|)
expr_stmt|;
name|eastBorder
operator|.
name|setBackground
argument_list|(
name|java
operator|.
name|awt
operator|.
name|Color
operator|.
name|lightGray
argument_list|)
expr_stmt|;
name|eastBorder
operator|.
name|setBounds
argument_list|(
literal|797
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|,
literal|594
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|mainPanelWithBorders
operator|.
name|add
argument_list|(
literal|"Center"
argument_list|,
name|mainPanel
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|setBackground
argument_list|(
name|java
operator|.
name|awt
operator|.
name|Color
operator|.
name|lightGray
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|setBounds
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
literal|794
argument_list|,
literal|594
argument_list|)
expr_stmt|;
name|upperPanel
operator|.
name|setLayout
argument_list|(
operator|new
name|GridLayout
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|add
argument_list|(
literal|"North"
argument_list|,
name|upperPanel
argument_list|)
expr_stmt|;
name|upperPanel
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|794
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|preferencesPanel
operator|.
name|setLayout
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|upperPanel
operator|.
name|add
argument_list|(
name|preferencesPanel
argument_list|)
expr_stmt|;
name|preferencesPanel
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|397
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|startURLlabel
operator|.
name|setText
argument_list|(
literal|"Start-URL"
argument_list|)
expr_stmt|;
name|preferencesPanel
operator|.
name|add
argument_list|(
name|startURLlabel
argument_list|)
expr_stmt|;
name|startURLlabel
operator|.
name|setBounds
argument_list|(
literal|12
argument_list|,
literal|0
argument_list|,
literal|121
argument_list|,
literal|24
argument_list|)
expr_stmt|;
name|startURL
operator|.
name|setText
argument_list|(
literal|"uni-muenchen.de"
argument_list|)
expr_stmt|;
name|preferencesPanel
operator|.
name|add
argument_list|(
name|startURL
argument_list|)
expr_stmt|;
name|startURL
operator|.
name|setBounds
argument_list|(
literal|132
argument_list|,
literal|0
argument_list|,
literal|133
argument_list|,
literal|24
argument_list|)
expr_stmt|;
name|startButton
operator|.
name|setLabel
argument_list|(
literal|"Start"
argument_list|)
expr_stmt|;
name|preferencesPanel
operator|.
name|add
argument_list|(
name|startButton
argument_list|)
expr_stmt|;
name|startButton
operator|.
name|setFont
argument_list|(
operator|new
name|Font
argument_list|(
literal|"Dialog"
argument_list|,
name|Font
operator|.
name|BOLD
argument_list|,
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|startButton
operator|.
name|setBounds
argument_list|(
literal|288
argument_list|,
literal|36
argument_list|,
literal|99
argument_list|,
literal|24
argument_list|)
expr_stmt|;
name|restrictToLabel
operator|.
name|setText
argument_list|(
literal|"Restrict host to"
argument_list|)
expr_stmt|;
name|preferencesPanel
operator|.
name|add
argument_list|(
name|restrictToLabel
argument_list|)
expr_stmt|;
name|restrictToLabel
operator|.
name|setBounds
argument_list|(
literal|12
argument_list|,
literal|36
argument_list|,
literal|121
argument_list|,
literal|28
argument_list|)
expr_stmt|;
name|preferencesPanel
operator|.
name|add
argument_list|(
name|restrictTo
argument_list|)
expr_stmt|;
name|restrictTo
operator|.
name|setBounds
argument_list|(
literal|133
argument_list|,
literal|36
argument_list|,
literal|133
argument_list|,
literal|24
argument_list|)
expr_stmt|;
name|logPanel
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|upperPanel
operator|.
name|add
argument_list|(
name|logPanel
argument_list|)
expr_stmt|;
name|logPanel
operator|.
name|setBounds
argument_list|(
literal|397
argument_list|,
literal|0
argument_list|,
literal|397
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|logPanel
operator|.
name|add
argument_list|(
literal|"Center"
argument_list|,
name|logList
argument_list|)
expr_stmt|;
name|logList
operator|.
name|setBackground
argument_list|(
name|java
operator|.
name|awt
operator|.
name|Color
operator|.
name|white
argument_list|)
expr_stmt|;
name|logList
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|397
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|lowerPanel
operator|.
name|setLayout
argument_list|(
operator|new
name|GridLayout
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|mainPanel
operator|.
name|add
argument_list|(
literal|"Center"
argument_list|,
name|lowerPanel
argument_list|)
expr_stmt|;
name|lowerPanel
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|153
argument_list|,
literal|794
argument_list|,
literal|441
argument_list|)
expr_stmt|;
name|urlQueuePanel
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lowerPanel
operator|.
name|add
argument_list|(
name|urlQueuePanel
argument_list|)
expr_stmt|;
name|urlQueuePanel
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|196
argument_list|,
literal|441
argument_list|)
expr_stmt|;
name|urlQueueLabel
operator|.
name|setText
argument_list|(
literal|"URLQueue"
argument_list|)
expr_stmt|;
name|urlQueuePanel
operator|.
name|add
argument_list|(
literal|"North"
argument_list|,
name|urlQueueLabel
argument_list|)
expr_stmt|;
name|urlQueueLabel
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|196
argument_list|,
literal|23
argument_list|)
expr_stmt|;
name|urlQueuePanel
operator|.
name|add
argument_list|(
literal|"Center"
argument_list|,
name|urlQueueList
argument_list|)
expr_stmt|;
name|urlQueueList
operator|.
name|setBackground
argument_list|(
name|java
operator|.
name|awt
operator|.
name|Color
operator|.
name|white
argument_list|)
expr_stmt|;
name|urlQueueList
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|23
argument_list|,
literal|196
argument_list|,
literal|418
argument_list|)
expr_stmt|;
name|urlThreadPanel
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lowerPanel
operator|.
name|add
argument_list|(
name|urlThreadPanel
argument_list|)
expr_stmt|;
name|urlThreadPanel
operator|.
name|setBounds
argument_list|(
literal|199
argument_list|,
literal|0
argument_list|,
literal|196
argument_list|,
literal|441
argument_list|)
expr_stmt|;
name|urlThreadLabel
operator|.
name|setText
argument_list|(
literal|"URLThreads"
argument_list|)
expr_stmt|;
name|urlThreadPanel
operator|.
name|add
argument_list|(
literal|"North"
argument_list|,
name|urlThreadLabel
argument_list|)
expr_stmt|;
name|urlThreadLabel
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|196
argument_list|,
literal|23
argument_list|)
expr_stmt|;
name|urlThreadPanel
operator|.
name|add
argument_list|(
literal|"Center"
argument_list|,
name|urlThreadList
argument_list|)
expr_stmt|;
name|urlThreadList
operator|.
name|setBackground
argument_list|(
name|java
operator|.
name|awt
operator|.
name|Color
operator|.
name|white
argument_list|)
expr_stmt|;
name|urlThreadList
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|23
argument_list|,
literal|196
argument_list|,
literal|418
argument_list|)
expr_stmt|;
name|docQueuePanel
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lowerPanel
operator|.
name|add
argument_list|(
name|docQueuePanel
argument_list|)
expr_stmt|;
name|docQueuePanel
operator|.
name|setBounds
argument_list|(
literal|398
argument_list|,
literal|0
argument_list|,
literal|196
argument_list|,
literal|441
argument_list|)
expr_stmt|;
name|docQueueLabel
operator|.
name|setText
argument_list|(
literal|"DocQueue"
argument_list|)
expr_stmt|;
name|docQueuePanel
operator|.
name|add
argument_list|(
literal|"North"
argument_list|,
name|docQueueLabel
argument_list|)
expr_stmt|;
name|docQueueLabel
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|196
argument_list|,
literal|23
argument_list|)
expr_stmt|;
name|docQueuePanel
operator|.
name|add
argument_list|(
literal|"Center"
argument_list|,
name|docQueueList
argument_list|)
expr_stmt|;
name|docQueueList
operator|.
name|setBackground
argument_list|(
name|java
operator|.
name|awt
operator|.
name|Color
operator|.
name|white
argument_list|)
expr_stmt|;
name|docQueueList
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|23
argument_list|,
literal|196
argument_list|,
literal|418
argument_list|)
expr_stmt|;
name|docThreadPanel
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lowerPanel
operator|.
name|add
argument_list|(
name|docThreadPanel
argument_list|)
expr_stmt|;
name|docThreadPanel
operator|.
name|setBounds
argument_list|(
literal|597
argument_list|,
literal|0
argument_list|,
literal|196
argument_list|,
literal|441
argument_list|)
expr_stmt|;
name|docThreadLabel
operator|.
name|setText
argument_list|(
literal|"DocThreads"
argument_list|)
expr_stmt|;
name|docThreadPanel
operator|.
name|add
argument_list|(
literal|"North"
argument_list|,
name|docThreadLabel
argument_list|)
expr_stmt|;
name|docThreadLabel
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|196
argument_list|,
literal|23
argument_list|)
expr_stmt|;
name|docThreadPanel
operator|.
name|add
argument_list|(
literal|"Center"
argument_list|,
name|docThreadList
argument_list|)
expr_stmt|;
name|docThreadList
operator|.
name|setBackground
argument_list|(
name|java
operator|.
name|awt
operator|.
name|Color
operator|.
name|white
argument_list|)
expr_stmt|;
name|docThreadList
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|23
argument_list|,
literal|196
argument_list|,
literal|418
argument_list|)
expr_stmt|;
name|setTitle
argument_list|(
literal|"LARM - Fetcher"
argument_list|)
expr_stmt|;
comment|//}}
comment|//{{INIT_MENUS
name|menu1
operator|.
name|setLabel
argument_list|(
literal|"Datei"
argument_list|)
expr_stmt|;
name|menu1
operator|.
name|add
argument_list|(
name|newMenuItem
argument_list|)
expr_stmt|;
name|newMenuItem
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|newMenuItem
operator|.
name|setLabel
argument_list|(
literal|"Neu"
argument_list|)
expr_stmt|;
name|newMenuItem
operator|.
name|setShortcut
argument_list|(
operator|new
name|MenuShortcut
argument_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|KeyEvent
operator|.
name|VK_N
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|menu1
operator|.
name|add
argument_list|(
name|openMenuItem
argument_list|)
expr_stmt|;
name|openMenuItem
operator|.
name|setLabel
argument_list|(
literal|"Ã–ffnen..."
argument_list|)
expr_stmt|;
name|openMenuItem
operator|.
name|setShortcut
argument_list|(
operator|new
name|MenuShortcut
argument_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|KeyEvent
operator|.
name|VK_O
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|menu1
operator|.
name|add
argument_list|(
name|saveMenuItem
argument_list|)
expr_stmt|;
name|saveMenuItem
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|saveMenuItem
operator|.
name|setLabel
argument_list|(
literal|"Speichern"
argument_list|)
expr_stmt|;
name|saveMenuItem
operator|.
name|setShortcut
argument_list|(
operator|new
name|MenuShortcut
argument_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|KeyEvent
operator|.
name|VK_S
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|menu1
operator|.
name|add
argument_list|(
name|saveAsMenuItem
argument_list|)
expr_stmt|;
name|saveAsMenuItem
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|saveAsMenuItem
operator|.
name|setLabel
argument_list|(
literal|"Speichern unter..."
argument_list|)
expr_stmt|;
name|menu1
operator|.
name|add
argument_list|(
name|separatorMenuItem
argument_list|)
expr_stmt|;
name|separatorMenuItem
operator|.
name|setLabel
argument_list|(
literal|"-"
argument_list|)
expr_stmt|;
name|menu1
operator|.
name|add
argument_list|(
name|exitMenuItem
argument_list|)
expr_stmt|;
name|exitMenuItem
operator|.
name|setLabel
argument_list|(
literal|"Beenden"
argument_list|)
expr_stmt|;
name|mainMenuBar
operator|.
name|add
argument_list|(
name|menu1
argument_list|)
expr_stmt|;
name|menu2
operator|.
name|setLabel
argument_list|(
literal|"Bearbeiten"
argument_list|)
expr_stmt|;
name|menu2
operator|.
name|add
argument_list|(
name|cutMenuItem
argument_list|)
expr_stmt|;
name|cutMenuItem
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|cutMenuItem
operator|.
name|setLabel
argument_list|(
literal|"Ausschneiden"
argument_list|)
expr_stmt|;
name|cutMenuItem
operator|.
name|setShortcut
argument_list|(
operator|new
name|MenuShortcut
argument_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|KeyEvent
operator|.
name|VK_X
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|menu2
operator|.
name|add
argument_list|(
name|copyMenuItem
argument_list|)
expr_stmt|;
name|copyMenuItem
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|copyMenuItem
operator|.
name|setLabel
argument_list|(
literal|"Kopieren"
argument_list|)
expr_stmt|;
name|copyMenuItem
operator|.
name|setShortcut
argument_list|(
operator|new
name|MenuShortcut
argument_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|KeyEvent
operator|.
name|VK_C
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|menu2
operator|.
name|add
argument_list|(
name|pasteMenuItem
argument_list|)
expr_stmt|;
name|pasteMenuItem
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|pasteMenuItem
operator|.
name|setLabel
argument_list|(
literal|"EinfÃ¼gen"
argument_list|)
expr_stmt|;
name|pasteMenuItem
operator|.
name|setShortcut
argument_list|(
operator|new
name|MenuShortcut
argument_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|KeyEvent
operator|.
name|VK_V
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|mainMenuBar
operator|.
name|add
argument_list|(
name|menu2
argument_list|)
expr_stmt|;
name|menu3
operator|.
name|setLabel
argument_list|(
literal|"Hilfe"
argument_list|)
expr_stmt|;
name|menu3
operator|.
name|add
argument_list|(
name|aboutMenuItem
argument_list|)
expr_stmt|;
name|aboutMenuItem
operator|.
name|setLabel
argument_list|(
literal|"Info..."
argument_list|)
expr_stmt|;
name|mainMenuBar
operator|.
name|add
argument_list|(
name|menu3
argument_list|)
expr_stmt|;
comment|//$$ mainMenuBar.move(0,312);
name|setMenuBar
argument_list|(
name|mainMenuBar
argument_list|)
expr_stmt|;
comment|//}}
comment|//{{REGISTER_LISTENERS
name|SymWindow
name|aSymWindow
init|=
operator|new
name|SymWindow
argument_list|()
decl_stmt|;
name|this
operator|.
name|addWindowListener
argument_list|(
name|aSymWindow
argument_list|)
expr_stmt|;
name|SymAction
name|lSymAction
init|=
operator|new
name|SymAction
argument_list|()
decl_stmt|;
name|openMenuItem
operator|.
name|addActionListener
argument_list|(
name|lSymAction
argument_list|)
expr_stmt|;
name|exitMenuItem
operator|.
name|addActionListener
argument_list|(
name|lSymAction
argument_list|)
expr_stmt|;
name|aboutMenuItem
operator|.
name|addActionListener
argument_list|(
name|lSymAction
argument_list|)
expr_stmt|;
name|startButton
operator|.
name|addActionListener
argument_list|(
name|lSymAction
argument_list|)
expr_stmt|;
comment|//}}
block|}
DECL|method|FetcherFrame
specifier|public
name|FetcherFrame
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
block|}
comment|/**      * Shows or hides the component depending on the boolean flag b.      * @param b  if true, show the component; otherwise, hide the component.      * @see java.awt.Component#isVisible      */
DECL|method|setVisible
specifier|public
name|void
name|setVisible
parameter_list|(
name|boolean
name|b
parameter_list|)
block|{
if|if
condition|(
name|b
condition|)
block|{
name|setLocation
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
block|}
name|super
operator|.
name|setVisible
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
DECL|method|main
specifier|static
specifier|public
name|void
name|main
parameter_list|(
name|String
name|args
index|[]
parameter_list|)
block|{
try|try
block|{
comment|//Create a new instance of our application's frame, and make it visible.
operator|(
operator|new
name|FetcherFrame
argument_list|()
operator|)
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|t
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
comment|//Ensure the application exits with an error condition.
name|System
operator|.
name|exit
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|addNotify
specifier|public
name|void
name|addNotify
parameter_list|()
block|{
comment|// Record the size of the window prior to calling parents addNotify.
name|Dimension
name|d
init|=
name|getSize
argument_list|()
decl_stmt|;
name|super
operator|.
name|addNotify
argument_list|()
expr_stmt|;
if|if
condition|(
name|fComponentsAdjusted
condition|)
return|return;
comment|// Adjust components according to the insets
name|setSize
argument_list|(
name|getInsets
argument_list|()
operator|.
name|left
operator|+
name|getInsets
argument_list|()
operator|.
name|right
operator|+
name|d
operator|.
name|width
argument_list|,
name|getInsets
argument_list|()
operator|.
name|top
operator|+
name|getInsets
argument_list|()
operator|.
name|bottom
operator|+
name|d
operator|.
name|height
argument_list|)
expr_stmt|;
name|Component
name|components
index|[]
init|=
name|getComponents
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|components
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Point
name|p
init|=
name|components
index|[
name|i
index|]
operator|.
name|getLocation
argument_list|()
decl_stmt|;
name|p
operator|.
name|translate
argument_list|(
name|getInsets
argument_list|()
operator|.
name|left
argument_list|,
name|getInsets
argument_list|()
operator|.
name|top
argument_list|)
expr_stmt|;
name|components
index|[
name|i
index|]
operator|.
name|setLocation
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
name|fComponentsAdjusted
operator|=
literal|true
expr_stmt|;
block|}
comment|// Used for addNotify check.
DECL|field|fComponentsAdjusted
name|boolean
name|fComponentsAdjusted
init|=
literal|false
decl_stmt|;
comment|//{{DECLARE_CONTROLS
DECL|field|openFileDialog1
name|java
operator|.
name|awt
operator|.
name|FileDialog
name|openFileDialog1
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|FileDialog
argument_list|(
name|this
argument_list|)
decl_stmt|;
DECL|field|mainPanelWithBorders
name|java
operator|.
name|awt
operator|.
name|Panel
name|mainPanelWithBorders
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Panel
argument_list|()
decl_stmt|;
DECL|field|northBorder
name|java
operator|.
name|awt
operator|.
name|Panel
name|northBorder
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Panel
argument_list|()
decl_stmt|;
DECL|field|southBorder
name|java
operator|.
name|awt
operator|.
name|Panel
name|southBorder
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Panel
argument_list|()
decl_stmt|;
DECL|field|westBorder
name|java
operator|.
name|awt
operator|.
name|Panel
name|westBorder
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Panel
argument_list|()
decl_stmt|;
DECL|field|eastBorder
name|java
operator|.
name|awt
operator|.
name|Panel
name|eastBorder
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Panel
argument_list|()
decl_stmt|;
DECL|field|mainPanel
name|java
operator|.
name|awt
operator|.
name|Panel
name|mainPanel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Panel
argument_list|()
decl_stmt|;
DECL|field|upperPanel
name|java
operator|.
name|awt
operator|.
name|Panel
name|upperPanel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Panel
argument_list|()
decl_stmt|;
DECL|field|preferencesPanel
name|java
operator|.
name|awt
operator|.
name|Panel
name|preferencesPanel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Panel
argument_list|()
decl_stmt|;
DECL|field|startURLlabel
name|java
operator|.
name|awt
operator|.
name|Label
name|startURLlabel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Label
argument_list|()
decl_stmt|;
DECL|field|startURL
name|java
operator|.
name|awt
operator|.
name|TextField
name|startURL
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|TextField
argument_list|(
literal|30
argument_list|)
decl_stmt|;
DECL|field|startButton
name|java
operator|.
name|awt
operator|.
name|Button
name|startButton
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Button
argument_list|()
decl_stmt|;
DECL|field|restrictToLabel
name|java
operator|.
name|awt
operator|.
name|Label
name|restrictToLabel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Label
argument_list|()
decl_stmt|;
DECL|field|restrictTo
name|java
operator|.
name|awt
operator|.
name|TextField
name|restrictTo
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|TextField
argument_list|()
decl_stmt|;
DECL|field|logPanel
name|java
operator|.
name|awt
operator|.
name|Panel
name|logPanel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Panel
argument_list|()
decl_stmt|;
DECL|field|logList
name|java
operator|.
name|awt
operator|.
name|List
name|logList
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|List
argument_list|(
literal|8
argument_list|)
decl_stmt|;
DECL|field|lowerPanel
name|java
operator|.
name|awt
operator|.
name|Panel
name|lowerPanel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Panel
argument_list|()
decl_stmt|;
DECL|field|urlQueuePanel
name|java
operator|.
name|awt
operator|.
name|Panel
name|urlQueuePanel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Panel
argument_list|()
decl_stmt|;
DECL|field|urlQueueLabel
name|java
operator|.
name|awt
operator|.
name|Label
name|urlQueueLabel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Label
argument_list|()
decl_stmt|;
DECL|field|urlQueueList
name|java
operator|.
name|awt
operator|.
name|List
name|urlQueueList
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|List
argument_list|(
literal|5
argument_list|)
decl_stmt|;
DECL|field|urlThreadPanel
name|java
operator|.
name|awt
operator|.
name|Panel
name|urlThreadPanel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Panel
argument_list|()
decl_stmt|;
DECL|field|urlThreadLabel
name|java
operator|.
name|awt
operator|.
name|Label
name|urlThreadLabel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Label
argument_list|()
decl_stmt|;
DECL|field|urlThreadList
name|java
operator|.
name|awt
operator|.
name|List
name|urlThreadList
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|List
argument_list|(
literal|4
argument_list|)
decl_stmt|;
DECL|field|docQueuePanel
name|java
operator|.
name|awt
operator|.
name|Panel
name|docQueuePanel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Panel
argument_list|()
decl_stmt|;
DECL|field|docQueueLabel
name|java
operator|.
name|awt
operator|.
name|Label
name|docQueueLabel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Label
argument_list|()
decl_stmt|;
DECL|field|docQueueList
name|java
operator|.
name|awt
operator|.
name|List
name|docQueueList
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|List
argument_list|(
literal|4
argument_list|)
decl_stmt|;
DECL|field|docThreadPanel
name|java
operator|.
name|awt
operator|.
name|Panel
name|docThreadPanel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Panel
argument_list|()
decl_stmt|;
DECL|field|docThreadLabel
name|java
operator|.
name|awt
operator|.
name|Label
name|docThreadLabel
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Label
argument_list|()
decl_stmt|;
DECL|field|docThreadList
name|java
operator|.
name|awt
operator|.
name|List
name|docThreadList
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|List
argument_list|(
literal|4
argument_list|)
decl_stmt|;
comment|//}}
comment|//{{DECLARE_MENUS
DECL|field|mainMenuBar
name|java
operator|.
name|awt
operator|.
name|MenuBar
name|mainMenuBar
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|MenuBar
argument_list|()
decl_stmt|;
DECL|field|menu1
name|java
operator|.
name|awt
operator|.
name|Menu
name|menu1
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Menu
argument_list|()
decl_stmt|;
DECL|field|newMenuItem
name|java
operator|.
name|awt
operator|.
name|MenuItem
name|newMenuItem
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|MenuItem
argument_list|()
decl_stmt|;
DECL|field|openMenuItem
name|java
operator|.
name|awt
operator|.
name|MenuItem
name|openMenuItem
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|MenuItem
argument_list|()
decl_stmt|;
DECL|field|saveMenuItem
name|java
operator|.
name|awt
operator|.
name|MenuItem
name|saveMenuItem
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|MenuItem
argument_list|()
decl_stmt|;
DECL|field|saveAsMenuItem
name|java
operator|.
name|awt
operator|.
name|MenuItem
name|saveAsMenuItem
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|MenuItem
argument_list|()
decl_stmt|;
DECL|field|separatorMenuItem
name|java
operator|.
name|awt
operator|.
name|MenuItem
name|separatorMenuItem
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|MenuItem
argument_list|()
decl_stmt|;
DECL|field|exitMenuItem
name|java
operator|.
name|awt
operator|.
name|MenuItem
name|exitMenuItem
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|MenuItem
argument_list|()
decl_stmt|;
DECL|field|menu2
name|java
operator|.
name|awt
operator|.
name|Menu
name|menu2
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Menu
argument_list|()
decl_stmt|;
DECL|field|cutMenuItem
name|java
operator|.
name|awt
operator|.
name|MenuItem
name|cutMenuItem
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|MenuItem
argument_list|()
decl_stmt|;
DECL|field|copyMenuItem
name|java
operator|.
name|awt
operator|.
name|MenuItem
name|copyMenuItem
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|MenuItem
argument_list|()
decl_stmt|;
DECL|field|pasteMenuItem
name|java
operator|.
name|awt
operator|.
name|MenuItem
name|pasteMenuItem
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|MenuItem
argument_list|()
decl_stmt|;
DECL|field|menu3
name|java
operator|.
name|awt
operator|.
name|Menu
name|menu3
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Menu
argument_list|()
decl_stmt|;
DECL|field|aboutMenuItem
name|java
operator|.
name|awt
operator|.
name|MenuItem
name|aboutMenuItem
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|MenuItem
argument_list|()
decl_stmt|;
comment|//}}
DECL|class|SymWindow
class|class
name|SymWindow
extends|extends
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowAdapter
block|{
DECL|method|windowClosing
specifier|public
name|void
name|windowClosing
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
name|event
parameter_list|)
block|{
name|Object
name|object
init|=
name|event
operator|.
name|getSource
argument_list|()
decl_stmt|;
if|if
condition|(
name|object
operator|==
name|FetcherFrame
operator|.
name|this
condition|)
name|FetcherFrame_WindowClosing
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|FetcherFrame_WindowClosing
name|void
name|FetcherFrame_WindowClosing
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
name|event
parameter_list|)
block|{
comment|// to do: code goes here.
name|FetcherFrame_WindowClosing_Interaction1
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|FetcherFrame_WindowClosing_Interaction1
name|void
name|FetcherFrame_WindowClosing_Interaction1
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
name|event
parameter_list|)
block|{
try|try
block|{
comment|// QuitDialog Create and show as modal
operator|(
operator|new
name|QuitDialog
argument_list|(
name|this
argument_list|,
literal|true
argument_list|)
operator|)
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{         }
block|}
DECL|class|SymAction
class|class
name|SymAction
implements|implements
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
block|{
DECL|method|actionPerformed
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|event
parameter_list|)
block|{
name|Object
name|object
init|=
name|event
operator|.
name|getSource
argument_list|()
decl_stmt|;
if|if
condition|(
name|object
operator|==
name|openMenuItem
condition|)
name|openMenuItem_ActionPerformed
argument_list|(
name|event
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|object
operator|==
name|aboutMenuItem
condition|)
name|aboutMenuItem_ActionPerformed
argument_list|(
name|event
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|object
operator|==
name|exitMenuItem
condition|)
name|exitMenuItem_ActionPerformed
argument_list|(
name|event
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|object
operator|==
name|startButton
condition|)
name|startButton_ActionPerformed
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|openMenuItem_ActionPerformed
name|void
name|openMenuItem_ActionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|event
parameter_list|)
block|{
comment|// to do: code goes here.
name|openMenuItem_ActionPerformed_Interaction1
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|openMenuItem_ActionPerformed_Interaction1
name|void
name|openMenuItem_ActionPerformed_Interaction1
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|event
parameter_list|)
block|{
try|try
block|{
comment|// OpenFileDialog Create and show as modal
name|int
name|defMode
init|=
name|openFileDialog1
operator|.
name|getMode
argument_list|()
decl_stmt|;
name|String
name|defTitle
init|=
name|openFileDialog1
operator|.
name|getTitle
argument_list|()
decl_stmt|;
name|String
name|defDirectory
init|=
name|openFileDialog1
operator|.
name|getDirectory
argument_list|()
decl_stmt|;
name|String
name|defFile
init|=
name|openFileDialog1
operator|.
name|getFile
argument_list|()
decl_stmt|;
name|openFileDialog1
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|FileDialog
argument_list|(
name|this
argument_list|,
name|defTitle
argument_list|,
name|defMode
argument_list|)
expr_stmt|;
name|openFileDialog1
operator|.
name|setDirectory
argument_list|(
name|defDirectory
argument_list|)
expr_stmt|;
name|openFileDialog1
operator|.
name|setFile
argument_list|(
name|defFile
argument_list|)
expr_stmt|;
name|openFileDialog1
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{         }
block|}
DECL|method|aboutMenuItem_ActionPerformed
name|void
name|aboutMenuItem_ActionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|event
parameter_list|)
block|{
comment|// to do: code goes here.
name|aboutMenuItem_ActionPerformed_Interaction1
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|aboutMenuItem_ActionPerformed_Interaction1
name|void
name|aboutMenuItem_ActionPerformed_Interaction1
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|event
parameter_list|)
block|{
try|try
block|{
comment|// AboutDialog Create and show as modal
operator|(
operator|new
name|AboutDialog
argument_list|(
name|this
argument_list|,
literal|true
argument_list|)
operator|)
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{         }
block|}
DECL|method|exitMenuItem_ActionPerformed
name|void
name|exitMenuItem_ActionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|event
parameter_list|)
block|{
comment|// to do: code goes here.
name|exitMenuItem_ActionPerformed_Interaction1
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|exitMenuItem_ActionPerformed_Interaction1
name|void
name|exitMenuItem_ActionPerformed_Interaction1
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|event
parameter_list|)
block|{
try|try
block|{
comment|// QuitDialog Create and show as modal
operator|(
operator|new
name|QuitDialog
argument_list|(
name|this
argument_list|,
literal|true
argument_list|)
operator|)
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{         }
block|}
DECL|method|startButton_ActionPerformed
specifier|public
name|void
name|startButton_ActionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|event
parameter_list|)
block|{
comment|// to do: code goes here.
block|}
DECL|method|addUrlQueueItem
specifier|public
name|void
name|addUrlQueueItem
parameter_list|(
name|String
name|item
parameter_list|)
block|{
name|urlQueueList
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
DECL|method|removeUrlQueueItem
specifier|public
name|void
name|removeUrlQueueItem
parameter_list|(
name|String
name|item
parameter_list|)
block|{
name|urlQueueList
operator|.
name|remove
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
DECL|method|addDocQueueItem
specifier|public
name|void
name|addDocQueueItem
parameter_list|(
name|String
name|item
parameter_list|)
block|{
name|docQueueList
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
DECL|method|removeDocQueueItem
specifier|public
name|void
name|removeDocQueueItem
parameter_list|(
name|String
name|item
parameter_list|)
block|{
name|docQueueList
operator|.
name|remove
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
DECL|method|addUrlThreadItem
specifier|public
specifier|synchronized
name|int
name|addUrlThreadItem
parameter_list|(
name|String
name|item
parameter_list|)
block|{
name|urlThreadList
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
return|return
name|urlThreadList
operator|.
name|getItemCount
argument_list|()
return|;
block|}
DECL|method|addUrlThreadItem
specifier|public
specifier|synchronized
name|int
name|addUrlThreadItem
parameter_list|(
name|String
name|item
parameter_list|,
name|int
name|pos
parameter_list|)
block|{
name|urlThreadList
operator|.
name|add
argument_list|(
name|item
argument_list|,
name|pos
argument_list|)
expr_stmt|;
return|return
name|urlThreadList
operator|.
name|getItemCount
argument_list|()
return|;
block|}
DECL|method|replaceUrlThreadItem
specifier|public
name|void
name|replaceUrlThreadItem
parameter_list|(
name|String
name|item
parameter_list|,
name|int
name|index
parameter_list|)
block|{
name|urlThreadList
operator|.
name|replaceItem
argument_list|(
name|item
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
DECL|method|addDocThreadItem
specifier|public
specifier|synchronized
name|int
name|addDocThreadItem
parameter_list|(
name|String
name|item
parameter_list|)
block|{
name|docThreadList
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
return|return
name|docThreadList
operator|.
name|getItemCount
argument_list|()
return|;
block|}
DECL|method|replaceDocThreadItem
specifier|public
name|void
name|replaceDocThreadItem
parameter_list|(
name|String
name|item
parameter_list|,
name|int
name|index
parameter_list|)
block|{
name|docThreadList
operator|.
name|replaceItem
argument_list|(
name|item
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
DECL|method|addLogEntry
specifier|public
name|void
name|addLogEntry
parameter_list|(
name|String
name|entry
parameter_list|)
block|{
name|logList
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|logList
operator|.
name|makeVisible
argument_list|(
name|logList
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
DECL|method|clearLog
specifier|public
name|void
name|clearLog
parameter_list|()
block|{
name|logList
operator|.
name|removeAll
argument_list|()
expr_stmt|;
block|}
DECL|method|addStartButtonListener
specifier|public
name|void
name|addStartButtonListener
parameter_list|(
name|ActionListener
name|a
parameter_list|)
block|{
name|startButton
operator|.
name|addActionListener
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
DECL|method|getRestrictTo
specifier|public
name|String
name|getRestrictTo
parameter_list|()
block|{
return|return
name|restrictTo
operator|.
name|getText
argument_list|()
return|;
block|}
DECL|method|setRestrictTo
specifier|public
name|void
name|setRestrictTo
parameter_list|(
name|String
name|restrictTo
parameter_list|)
block|{
name|this
operator|.
name|restrictTo
operator|.
name|setText
argument_list|(
name|restrictTo
argument_list|)
expr_stmt|;
block|}
DECL|method|getStartURL
specifier|public
name|String
name|getStartURL
parameter_list|()
block|{
return|return
name|startURL
operator|.
name|getText
argument_list|()
return|;
block|}
DECL|method|setStartURL
specifier|public
name|void
name|setStartURL
parameter_list|(
name|String
name|startURL
parameter_list|)
block|{
name|this
operator|.
name|startURL
operator|.
name|setText
argument_list|(
name|startURL
argument_list|)
expr_stmt|;
block|}
comment|//public void setInfoText(String text)
comment|//{
comment|//    thi
comment|//}
block|}
end_class
end_unit
