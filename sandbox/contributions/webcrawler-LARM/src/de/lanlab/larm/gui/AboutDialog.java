begin_unit
begin_package
DECL|package|de.lanlab.larm.gui
package|package
name|de
operator|.
name|lanlab
operator|.
name|larm
operator|.
name|gui
package|;
end_package
begin_comment
comment|/* 	A basic extension of the java.awt.Dialog class  */
end_comment
begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import
begin_class
DECL|class|AboutDialog
specifier|public
class|class
name|AboutDialog
extends|extends
name|Dialog
block|{
DECL|method|AboutDialog
specifier|public
name|AboutDialog
parameter_list|(
name|Frame
name|parent
parameter_list|,
name|boolean
name|modal
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|,
name|modal
argument_list|)
expr_stmt|;
comment|// This code is automatically generated by Visual Cafe when you add
comment|// components to the visual environment. It instantiates and initializes
comment|// the components. To modify the code, only use code syntax that matches
comment|// what Visual Cafe can generate, or Visual Cafe may be unable to back
comment|// parse your Java file into its visual environment.
comment|//{{INIT_CONTROLS
name|setLayout
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|setSize
argument_list|(
literal|249
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|label1
operator|.
name|setText
argument_list|(
literal|"LARM - LANLab Retrieval Machine"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|label1
argument_list|)
expr_stmt|;
name|label1
operator|.
name|setBounds
argument_list|(
literal|12
argument_list|,
literal|12
argument_list|,
literal|228
argument_list|,
literal|24
argument_list|)
expr_stmt|;
name|okButton
operator|.
name|setLabel
argument_list|(
literal|"OK"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|okButton
argument_list|)
expr_stmt|;
name|okButton
operator|.
name|setBounds
argument_list|(
literal|95
argument_list|,
literal|85
argument_list|,
literal|66
argument_list|,
literal|27
argument_list|)
expr_stmt|;
name|label2
operator|.
name|setText
argument_list|(
literal|"(C) 2000 Clemens Marschner"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|label2
argument_list|)
expr_stmt|;
name|label2
operator|.
name|setBounds
argument_list|(
literal|12
argument_list|,
literal|36
argument_list|,
literal|228
argument_list|,
literal|24
argument_list|)
expr_stmt|;
name|setTitle
argument_list|(
literal|"AWT-Anwendung - Info"
argument_list|)
expr_stmt|;
comment|//}}
comment|//{{REGISTER_LISTENERS
name|SymWindow
name|aSymWindow
init|=
operator|new
name|SymWindow
argument_list|()
decl_stmt|;
name|this
operator|.
name|addWindowListener
argument_list|(
name|aSymWindow
argument_list|)
expr_stmt|;
name|SymAction
name|lSymAction
init|=
operator|new
name|SymAction
argument_list|()
decl_stmt|;
name|okButton
operator|.
name|addActionListener
argument_list|(
name|lSymAction
argument_list|)
expr_stmt|;
comment|//}}
block|}
DECL|method|AboutDialog
specifier|public
name|AboutDialog
parameter_list|(
name|Frame
name|parent
parameter_list|,
name|String
name|title
parameter_list|,
name|boolean
name|modal
parameter_list|)
block|{
name|this
argument_list|(
name|parent
argument_list|,
name|modal
argument_list|)
expr_stmt|;
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
block|}
DECL|method|addNotify
specifier|public
name|void
name|addNotify
parameter_list|()
block|{
comment|// Record the size of the window prior to calling parents addNotify.
name|Dimension
name|d
init|=
name|getSize
argument_list|()
decl_stmt|;
name|super
operator|.
name|addNotify
argument_list|()
expr_stmt|;
comment|// Only do this once.
if|if
condition|(
name|fComponentsAdjusted
condition|)
return|return;
comment|// Adjust components according to the insets
name|Insets
name|insets
init|=
name|getInsets
argument_list|()
decl_stmt|;
name|setSize
argument_list|(
name|insets
operator|.
name|left
operator|+
name|insets
operator|.
name|right
operator|+
name|d
operator|.
name|width
argument_list|,
name|insets
operator|.
name|top
operator|+
name|insets
operator|.
name|bottom
operator|+
name|d
operator|.
name|height
argument_list|)
expr_stmt|;
name|Component
name|components
index|[]
init|=
name|getComponents
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|components
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Point
name|p
init|=
name|components
index|[
name|i
index|]
operator|.
name|getLocation
argument_list|()
decl_stmt|;
name|p
operator|.
name|translate
argument_list|(
name|insets
operator|.
name|left
argument_list|,
name|insets
operator|.
name|top
argument_list|)
expr_stmt|;
name|components
index|[
name|i
index|]
operator|.
name|setLocation
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
comment|// Used for addNotify check.
name|fComponentsAdjusted
operator|=
literal|true
expr_stmt|;
block|}
DECL|method|setVisible
specifier|public
name|void
name|setVisible
parameter_list|(
name|boolean
name|b
parameter_list|)
block|{
if|if
condition|(
name|b
condition|)
block|{
name|Rectangle
name|bounds
init|=
name|getParent
argument_list|()
operator|.
name|getBounds
argument_list|()
decl_stmt|;
name|Rectangle
name|abounds
init|=
name|getBounds
argument_list|()
decl_stmt|;
name|setLocation
argument_list|(
name|bounds
operator|.
name|x
operator|+
operator|(
name|bounds
operator|.
name|width
operator|-
name|abounds
operator|.
name|width
operator|)
operator|/
literal|2
argument_list|,
name|bounds
operator|.
name|y
operator|+
operator|(
name|bounds
operator|.
name|height
operator|-
name|abounds
operator|.
name|height
operator|)
operator|/
literal|2
argument_list|)
expr_stmt|;
block|}
name|super
operator|.
name|setVisible
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
comment|//{{DECLARE_CONTROLS
DECL|field|label1
name|java
operator|.
name|awt
operator|.
name|Label
name|label1
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Label
argument_list|()
decl_stmt|;
DECL|field|okButton
name|java
operator|.
name|awt
operator|.
name|Button
name|okButton
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Button
argument_list|()
decl_stmt|;
DECL|field|label2
name|java
operator|.
name|awt
operator|.
name|Label
name|label2
init|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Label
argument_list|()
decl_stmt|;
comment|//}}
comment|// Used for addNotify check.
DECL|field|fComponentsAdjusted
name|boolean
name|fComponentsAdjusted
init|=
literal|false
decl_stmt|;
DECL|class|SymAction
class|class
name|SymAction
implements|implements
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
block|{
DECL|method|actionPerformed
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|event
parameter_list|)
block|{
name|Object
name|object
init|=
name|event
operator|.
name|getSource
argument_list|()
decl_stmt|;
if|if
condition|(
name|object
operator|==
name|okButton
condition|)
name|okButton_ActionPerformed
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|okButton_ActionPerformed
name|void
name|okButton_ActionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|event
parameter_list|)
block|{
comment|// to do: code goes here.
name|okButton_ActionPerformed_Interaction1
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|okButton_ActionPerformed_Interaction1
name|void
name|okButton_ActionPerformed_Interaction1
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|event
parameter_list|)
block|{
try|try
block|{
name|this
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{ 		}
block|}
DECL|class|SymWindow
class|class
name|SymWindow
extends|extends
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowAdapter
block|{
DECL|method|windowClosing
specifier|public
name|void
name|windowClosing
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
name|event
parameter_list|)
block|{
name|Object
name|object
init|=
name|event
operator|.
name|getSource
argument_list|()
decl_stmt|;
if|if
condition|(
name|object
operator|==
name|AboutDialog
operator|.
name|this
condition|)
name|AboutDialog_WindowClosing
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|AboutDialog_WindowClosing
name|void
name|AboutDialog_WindowClosing
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
name|event
parameter_list|)
block|{
comment|// to do: code goes here.
name|AboutDialog_WindowClosing_Interaction1
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|AboutDialog_WindowClosing_Interaction1
name|void
name|AboutDialog_WindowClosing_Interaction1
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
name|event
parameter_list|)
block|{
try|try
block|{
name|this
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{ 		}
block|}
block|}
end_class
end_unit
