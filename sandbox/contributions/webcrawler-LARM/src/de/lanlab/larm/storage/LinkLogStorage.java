begin_unit
begin_comment
comment|/* ====================================================================  * The Apache Software License, Version 1.1  *  * Copyright (c) 2002 The Apache Software Foundation.  All rights  * reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in  *    the documentation and/or other materials provided with the  *    distribution.  *  * 3. The end-user documentation included with the redistribution,  *    if any, must include the following acknowledgment:  *       "This product includes software developed by the  *        Apache Software Foundation (http://www.apache.org/)."  *    Alternately, this acknowledgment may appear in the software itself,  *    if and wherever such third-party acknowledgments normally appear.  *  * 4. The names "Apache" and "Apache Software Foundation" and  *    "Apache Lucene" must not be used to endorse or promote products  *    derived from this software without prior written permission. For  *    written permission, please contact apache@apache.org.  *  * 5. Products derived from this software may not be called "Apache",  *    "Apache Lucene", nor may "Apache" appear in their name, without  *    prior written permission of the Apache Software Foundation.  *  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR  * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF  * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  * ====================================================================  *  * This software consists of voluntary contributions made by many  * individuals on behalf of the Apache Software Foundation.  For more  * information on the Apache Software Foundation, please see  *<http://www.apache.org/>.  */
end_comment
begin_package
DECL|package|de.lanlab.larm.storage
package|package
name|de
operator|.
name|lanlab
operator|.
name|larm
operator|.
name|storage
package|;
end_package
begin_import
import|import
name|de
operator|.
name|lanlab
operator|.
name|larm
operator|.
name|storage
operator|.
name|LinkStorage
import|;
end_import
begin_import
import|import
name|de
operator|.
name|lanlab
operator|.
name|larm
operator|.
name|util
operator|.
name|SimpleLogger
import|;
end_import
begin_import
import|import
name|de
operator|.
name|lanlab
operator|.
name|larm
operator|.
name|fetcher
operator|.
name|URLMessage
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import
begin_comment
comment|/**  * Description of the Class  *  * @author    Administrator  * @created   1. Juni 2002  * @version $Id$  */
end_comment
begin_class
DECL|class|LinkLogStorage
specifier|public
class|class
name|LinkLogStorage
implements|implements
name|LinkStorage
block|{
DECL|field|log
specifier|private
name|SimpleLogger
name|log
decl_stmt|;
comment|/**      * Creates a new<code>LinkLogStorage</code> instance.      *      * @param logFile an instance of<code>SimpleLogger</code>      */
DECL|method|LinkLogStorage
specifier|public
name|LinkLogStorage
parameter_list|(
name|SimpleLogger
name|logFile
parameter_list|)
block|{
name|this
operator|.
name|log
operator|=
name|logFile
expr_stmt|;
block|}
comment|/**      * Describe<code>openLinkStorage</code> method here.      *      */
DECL|method|openLinkStorage
specifier|public
name|void
name|openLinkStorage
parameter_list|()
block|{     }
comment|/**      * Description of the Method      *      * @param c  Description of the Parameter      * @return   Description of the Return Value      */
DECL|method|storeLinks
specifier|public
name|Collection
name|storeLinks
parameter_list|(
name|Collection
name|c
parameter_list|)
block|{
synchronized|synchronized
init|(
name|log
init|)
block|{
for|for
control|(
name|Iterator
name|it
init|=
name|c
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|log
operator|.
name|log
argument_list|(
operator|(
operator|(
name|URLMessage
operator|)
name|it
operator|.
name|next
argument_list|()
operator|)
operator|.
name|getInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|c
return|;
block|}
block|}
end_class
end_unit
