begin_unit
begin_comment
comment|/* ====================================================================  * The Apache Software License, Version 1.1  *  * Copyright (c) 2001 The Apache Software Foundation.  All rights  * reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in  *    the documentation and/or other materials provided with the  *    distribution.  *  * 3. The end-user documentation included with the redistribution,  *    if any, must include the following acknowledgment:  *       "This product includes software developed by the  *        Apache Software Foundation (http://www.apache.org/)."  *    Alternately, this acknowledgment may appear in the software itself,  *    if and wherever such third-party acknowledgments normally appear.  *  * 4. The names "Apache" and "Apache Software Foundation" and  *    "Apache Lucene" must not be used to endorse or promote products  *    derived from this software without prior written permission. For  *    written permission, please contact apache@apache.org.  *  * 5. Products derived from this software may not be called "Apache",  *    "Apache Lucene", nor may "Apache" appear in their name, without  *    prior written permission of the Apache Software Foundation.  *  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR  * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF  * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  * ====================================================================  *  * This software consists of voluntary contributions made by many  * individuals on behalf of the Apache Software Foundation.  For more  * information on the Apache Software Foundation, please see  *<http://www.apache.org/>.  */
end_comment
begin_package
DECL|package|de.lanlab.larm.net
package|package
name|de
operator|.
name|lanlab
operator|.
name|larm
operator|.
name|net
package|;
end_package
begin_import
import|import
name|java
operator|.
name|net
operator|.
name|*
import|;
end_import
begin_comment
comment|/**  *  Description of the Class  *  *@author     cmarschn  *@created    2. Mai 2001  */
end_comment
begin_class
DECL|class|HttpTimeoutFactory
specifier|public
class|class
name|HttpTimeoutFactory
implements|implements
name|URLStreamHandlerFactory
block|{
DECL|field|fiTimeoutVal
name|int
name|fiTimeoutVal
decl_stmt|;
comment|/**      *  Constructor for the HttpTimeoutFactory object      *      *@param  iT  Description of Parameter      */
DECL|method|HttpTimeoutFactory
specifier|public
name|HttpTimeoutFactory
parameter_list|(
name|int
name|iT
parameter_list|)
block|{
name|fiTimeoutVal
operator|=
name|iT
expr_stmt|;
block|}
comment|/**      *  Description of the Method      *      *@param  str  Description of Parameter      *@return      Description of the Returned Value      */
DECL|method|createURLStreamHandler
specifier|public
name|URLStreamHandler
name|createURLStreamHandler
parameter_list|(
name|String
name|str
parameter_list|)
block|{
return|return
operator|new
name|HttpTimeoutHandler
argument_list|(
name|fiTimeoutVal
argument_list|)
return|;
block|}
DECL|field|instance
specifier|static
name|HttpTimeoutFactory
name|instance
init|=
literal|null
decl_stmt|;
comment|/**      * gets an instance. only the first call will create it. In subsequent calls the iT      * parameter doesn't have a meaning.      */
DECL|method|getInstance
specifier|public
specifier|static
name|HttpTimeoutFactory
name|getInstance
parameter_list|(
name|int
name|iT
parameter_list|)
block|{
if|if
condition|(
name|instance
operator|==
literal|null
condition|)
block|{
name|instance
operator|=
operator|new
name|HttpTimeoutFactory
argument_list|(
name|iT
argument_list|)
expr_stmt|;
block|}
return|return
name|instance
return|;
block|}
block|}
end_class
end_unit
