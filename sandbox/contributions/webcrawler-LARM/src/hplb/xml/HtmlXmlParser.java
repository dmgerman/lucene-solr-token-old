begin_unit
begin_comment
comment|/*  * $Id$  *   * Copyright 1997 Hewlett-Packard Company  *   * This file may be copied, modified and distributed only in  * accordance with the terms of the limited licence contained  * in the accompanying file LICENSE.TXT.  */
end_comment
begin_package
DECL|package|hplb.xml
package|package
name|hplb
operator|.
name|xml
package|;
end_package
begin_comment
comment|/**   * The HtmlXmlParser is a Parser with some HTML specific<i>hacks</i>  * applied to it which means it will more or less correctly parse most  * HTML pages, also when they arbitrary embedded XML markup. It is  * very forgiving as is commonly the case with HTML parsers.  *   * @author  Anders Kristensen  */
end_comment
begin_class
DECL|class|HtmlXmlParser
specifier|public
class|class
name|HtmlXmlParser
extends|extends
name|Parser
block|{
DECL|method|HtmlXmlParser
specifier|public
name|HtmlXmlParser
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|HTML
operator|.
name|applyHacks
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|tok
operator|.
name|rcgnzCDATA
operator|=
literal|false
expr_stmt|;
block|}
comment|// for debugging
DECL|method|main
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|Parser
name|parser
init|=
operator|new
name|HtmlXmlParser
argument_list|()
decl_stmt|;
name|hplb
operator|.
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
name|doc
init|=
name|parser
operator|.
name|parse
argument_list|(
name|System
operator|.
name|in
argument_list|)
decl_stmt|;
name|Utils
operator|.
name|pp
argument_list|(
name|doc
argument_list|,
name|System
operator|.
name|out
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
