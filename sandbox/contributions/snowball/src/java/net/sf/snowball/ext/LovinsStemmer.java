begin_unit
begin_comment
comment|// This file was generated automatically by the Snowball to Java compiler
end_comment
begin_package
DECL|package|net.sf.snowball.ext
package|package
name|net
operator|.
name|sf
operator|.
name|snowball
operator|.
name|ext
package|;
end_package
begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|snowball
operator|.
name|SnowballProgram
import|;
end_import
begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|snowball
operator|.
name|Among
import|;
end_import
begin_comment
comment|/**  * Generated class implementing code defined by a snowball script.  */
end_comment
begin_class
DECL|class|LovinsStemmer
specifier|public
class|class
name|LovinsStemmer
extends|extends
name|SnowballProgram
block|{
DECL|field|a_0
specifier|private
name|Among
name|a_0
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"d"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"f"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ph"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"th"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"l"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"er"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"or"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"es"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"t"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|}
decl_stmt|;
DECL|field|a_1
specifier|private
name|Among
name|a_1
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"s'"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"a"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ia"
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ata"
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ic"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"aic"
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"allic"
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|"r_BB"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"aric"
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"atic"
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"itic"
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|"r_H"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"antic"
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|"r_C"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"istic"
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"alistic"
argument_list|,
literal|11
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"aristic"
argument_list|,
literal|11
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ivistic"
argument_list|,
literal|11
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ed"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"anced"
argument_list|,
literal|15
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"enced"
argument_list|,
literal|15
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ished"
argument_list|,
literal|15
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ied"
argument_list|,
literal|15
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ened"
argument_list|,
literal|15
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ioned"
argument_list|,
literal|15
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ated"
argument_list|,
literal|15
argument_list|,
literal|1
argument_list|,
literal|"r_I"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ented"
argument_list|,
literal|15
argument_list|,
literal|1
argument_list|,
literal|"r_C"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ized"
argument_list|,
literal|15
argument_list|,
literal|1
argument_list|,
literal|"r_F"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"arized"
argument_list|,
literal|24
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"oid"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"aroid"
argument_list|,
literal|26
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"hood"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ehood"
argument_list|,
literal|28
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ihood"
argument_list|,
literal|28
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"elihood"
argument_list|,
literal|30
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ward"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"e"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ae"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ance"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"icance"
argument_list|,
literal|35
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ence"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ide"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_L"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"icide"
argument_list|,
literal|38
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"otide"
argument_list|,
literal|38
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"age"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"able"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"atable"
argument_list|,
literal|42
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"izable"
argument_list|,
literal|42
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"arizable"
argument_list|,
literal|44
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ible"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"encible"
argument_list|,
literal|46
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ene"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ine"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_M"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"idine"
argument_list|,
literal|49
argument_list|,
literal|1
argument_list|,
literal|"r_I"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"one"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_R"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ature"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"eature"
argument_list|,
literal|52
argument_list|,
literal|1
argument_list|,
literal|"r_Z"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ese"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"wise"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ate"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"entiate"
argument_list|,
literal|56
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"inate"
argument_list|,
literal|56
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ionate"
argument_list|,
literal|56
argument_list|,
literal|1
argument_list|,
literal|"r_D"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ite"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_AA"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ive"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ative"
argument_list|,
literal|61
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ize"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|"r_F"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"alize"
argument_list|,
literal|63
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"icalize"
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ialize"
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"entialize"
argument_list|,
literal|66
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ionalize"
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"arize"
argument_list|,
literal|63
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ing"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_N"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ancing"
argument_list|,
literal|70
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"encing"
argument_list|,
literal|70
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"aging"
argument_list|,
literal|70
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ening"
argument_list|,
literal|70
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ioning"
argument_list|,
literal|70
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ating"
argument_list|,
literal|70
argument_list|,
literal|1
argument_list|,
literal|"r_I"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"enting"
argument_list|,
literal|70
argument_list|,
literal|1
argument_list|,
literal|"r_C"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ying"
argument_list|,
literal|70
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"izing"
argument_list|,
literal|70
argument_list|,
literal|1
argument_list|,
literal|"r_F"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"arizing"
argument_list|,
literal|79
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ish"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_C"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"yish"
argument_list|,
literal|81
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"i"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"al"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_BB"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ical"
argument_list|,
literal|84
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"aical"
argument_list|,
literal|85
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"istical"
argument_list|,
literal|85
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"oidal"
argument_list|,
literal|84
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"eal"
argument_list|,
literal|84
argument_list|,
literal|1
argument_list|,
literal|"r_Y"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ial"
argument_list|,
literal|84
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ancial"
argument_list|,
literal|90
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"arial"
argument_list|,
literal|90
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ential"
argument_list|,
literal|90
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ional"
argument_list|,
literal|84
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ational"
argument_list|,
literal|94
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"izational"
argument_list|,
literal|95
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ental"
argument_list|,
literal|84
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ful"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"eful"
argument_list|,
literal|98
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"iful"
argument_list|,
literal|98
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"yl"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_R"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ism"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"icism"
argument_list|,
literal|102
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"oidism"
argument_list|,
literal|102
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"alism"
argument_list|,
literal|102
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"icalism"
argument_list|,
literal|105
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ionalism"
argument_list|,
literal|105
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"inism"
argument_list|,
literal|102
argument_list|,
literal|1
argument_list|,
literal|"r_J"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ativism"
argument_list|,
literal|102
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"um"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_U"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ium"
argument_list|,
literal|110
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ian"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ician"
argument_list|,
literal|112
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"en"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_F"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ogen"
argument_list|,
literal|114
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"on"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_S"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ion"
argument_list|,
literal|116
argument_list|,
literal|1
argument_list|,
literal|"r_Q"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ation"
argument_list|,
literal|117
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ication"
argument_list|,
literal|118
argument_list|,
literal|1
argument_list|,
literal|"r_G"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"entiation"
argument_list|,
literal|118
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ination"
argument_list|,
literal|118
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"isation"
argument_list|,
literal|118
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"arisation"
argument_list|,
literal|122
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"entation"
argument_list|,
literal|118
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ization"
argument_list|,
literal|118
argument_list|,
literal|1
argument_list|,
literal|"r_F"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"arization"
argument_list|,
literal|125
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"action"
argument_list|,
literal|117
argument_list|,
literal|1
argument_list|,
literal|"r_G"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"o"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ar"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_X"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ear"
argument_list|,
literal|129
argument_list|,
literal|1
argument_list|,
literal|"r_Y"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ier"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ariser"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"izer"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_F"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"arizer"
argument_list|,
literal|133
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"or"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_T"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ator"
argument_list|,
literal|135
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"s"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_W"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"'s"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"as"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ics"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"istics"
argument_list|,
literal|140
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"es"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ances"
argument_list|,
literal|142
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ences"
argument_list|,
literal|142
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ides"
argument_list|,
literal|142
argument_list|,
literal|1
argument_list|,
literal|"r_L"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"oides"
argument_list|,
literal|145
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ages"
argument_list|,
literal|142
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ies"
argument_list|,
literal|142
argument_list|,
literal|1
argument_list|,
literal|"r_P"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"acies"
argument_list|,
literal|148
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ancies"
argument_list|,
literal|148
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"encies"
argument_list|,
literal|148
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"aries"
argument_list|,
literal|148
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ities"
argument_list|,
literal|148
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"alities"
argument_list|,
literal|153
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ivities"
argument_list|,
literal|153
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ines"
argument_list|,
literal|142
argument_list|,
literal|1
argument_list|,
literal|"r_M"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"nesses"
argument_list|,
literal|142
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ates"
argument_list|,
literal|142
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"atives"
argument_list|,
literal|142
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ings"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_N"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"is"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"als"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_BB"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ials"
argument_list|,
literal|162
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"entials"
argument_list|,
literal|163
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ionals"
argument_list|,
literal|162
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"isms"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ians"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"icians"
argument_list|,
literal|167
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ions"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ations"
argument_list|,
literal|169
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"arisations"
argument_list|,
literal|170
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"entations"
argument_list|,
literal|170
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"izations"
argument_list|,
literal|170
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"arizations"
argument_list|,
literal|173
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ars"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_O"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"iers"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"izers"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_F"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ators"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"less"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"eless"
argument_list|,
literal|179
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ness"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"eness"
argument_list|,
literal|181
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ableness"
argument_list|,
literal|182
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"eableness"
argument_list|,
literal|183
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ibleness"
argument_list|,
literal|182
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ateness"
argument_list|,
literal|182
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"iteness"
argument_list|,
literal|182
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"iveness"
argument_list|,
literal|182
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ativeness"
argument_list|,
literal|188
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ingness"
argument_list|,
literal|181
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ishness"
argument_list|,
literal|181
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"iness"
argument_list|,
literal|181
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ariness"
argument_list|,
literal|192
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"alness"
argument_list|,
literal|181
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"icalness"
argument_list|,
literal|194
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"antialness"
argument_list|,
literal|194
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"entialness"
argument_list|,
literal|194
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ionalness"
argument_list|,
literal|194
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"fulness"
argument_list|,
literal|181
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"lessness"
argument_list|,
literal|181
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ousness"
argument_list|,
literal|181
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"eousness"
argument_list|,
literal|201
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"iousness"
argument_list|,
literal|201
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"itousness"
argument_list|,
literal|201
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"entness"
argument_list|,
literal|181
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ants"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ists"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"icists"
argument_list|,
literal|207
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"us"
argument_list|,
literal|137
argument_list|,
literal|1
argument_list|,
literal|"r_V"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ous"
argument_list|,
literal|209
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"eous"
argument_list|,
literal|210
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"aceous"
argument_list|,
literal|211
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"antaneous"
argument_list|,
literal|211
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ious"
argument_list|,
literal|210
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"acious"
argument_list|,
literal|214
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"itous"
argument_list|,
literal|210
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ant"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"icant"
argument_list|,
literal|217
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ent"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_C"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ement"
argument_list|,
literal|219
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"izement"
argument_list|,
literal|220
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ist"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"icist"
argument_list|,
literal|222
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"alist"
argument_list|,
literal|222
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"icalist"
argument_list|,
literal|224
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ialist"
argument_list|,
literal|224
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ionist"
argument_list|,
literal|222
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"entist"
argument_list|,
literal|222
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"y"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"acy"
argument_list|,
literal|229
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ancy"
argument_list|,
literal|229
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ency"
argument_list|,
literal|229
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ly"
argument_list|,
literal|229
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ealy"
argument_list|,
literal|233
argument_list|,
literal|1
argument_list|,
literal|"r_Y"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ably"
argument_list|,
literal|233
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ibly"
argument_list|,
literal|233
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"edly"
argument_list|,
literal|233
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"iedly"
argument_list|,
literal|237
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ely"
argument_list|,
literal|233
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ately"
argument_list|,
literal|239
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ively"
argument_list|,
literal|239
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"atively"
argument_list|,
literal|241
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ingly"
argument_list|,
literal|233
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"atingly"
argument_list|,
literal|243
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ily"
argument_list|,
literal|233
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"lily"
argument_list|,
literal|245
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"arily"
argument_list|,
literal|245
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ally"
argument_list|,
literal|233
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ically"
argument_list|,
literal|248
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"aically"
argument_list|,
literal|249
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"allically"
argument_list|,
literal|249
argument_list|,
literal|1
argument_list|,
literal|"r_C"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"istically"
argument_list|,
literal|249
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"alistically"
argument_list|,
literal|252
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"oidally"
argument_list|,
literal|248
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ially"
argument_list|,
literal|248
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"entially"
argument_list|,
literal|255
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ionally"
argument_list|,
literal|248
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ationally"
argument_list|,
literal|257
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"izationally"
argument_list|,
literal|258
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"entally"
argument_list|,
literal|248
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"fully"
argument_list|,
literal|233
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"efully"
argument_list|,
literal|261
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ifully"
argument_list|,
literal|261
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"enly"
argument_list|,
literal|233
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"arly"
argument_list|,
literal|233
argument_list|,
literal|1
argument_list|,
literal|"r_K"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"early"
argument_list|,
literal|265
argument_list|,
literal|1
argument_list|,
literal|"r_Y"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"lessly"
argument_list|,
literal|233
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ously"
argument_list|,
literal|233
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"eously"
argument_list|,
literal|268
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"iously"
argument_list|,
literal|268
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ently"
argument_list|,
literal|233
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ary"
argument_list|,
literal|229
argument_list|,
literal|1
argument_list|,
literal|"r_F"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ery"
argument_list|,
literal|229
argument_list|,
literal|1
argument_list|,
literal|"r_E"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"icianry"
argument_list|,
literal|229
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"atory"
argument_list|,
literal|229
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ity"
argument_list|,
literal|229
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"acity"
argument_list|,
literal|276
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"icity"
argument_list|,
literal|276
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"eity"
argument_list|,
literal|276
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ality"
argument_list|,
literal|276
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"icality"
argument_list|,
literal|280
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"iality"
argument_list|,
literal|280
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"antiality"
argument_list|,
literal|282
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"entiality"
argument_list|,
literal|282
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ionality"
argument_list|,
literal|280
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"elity"
argument_list|,
literal|276
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ability"
argument_list|,
literal|276
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"izability"
argument_list|,
literal|287
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"arizability"
argument_list|,
literal|288
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ibility"
argument_list|,
literal|276
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"inity"
argument_list|,
literal|276
argument_list|,
literal|1
argument_list|,
literal|"r_CC"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"arity"
argument_list|,
literal|276
argument_list|,
literal|1
argument_list|,
literal|"r_B"
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ivity"
argument_list|,
literal|276
argument_list|,
literal|1
argument_list|,
literal|"r_A"
argument_list|,
name|this
argument_list|)
block|}
decl_stmt|;
DECL|field|a_2
specifier|private
name|Among
name|a_2
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"bb"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"dd"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"gg"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ll"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"mm"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"nn"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"pp"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"rr"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ss"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"tt"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|}
decl_stmt|;
DECL|field|a_3
specifier|private
name|Among
name|a_3
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"uad"
argument_list|,
operator|-
literal|1
argument_list|,
literal|18
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"vad"
argument_list|,
operator|-
literal|1
argument_list|,
literal|19
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"cid"
argument_list|,
operator|-
literal|1
argument_list|,
literal|20
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"lid"
argument_list|,
operator|-
literal|1
argument_list|,
literal|21
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"erid"
argument_list|,
operator|-
literal|1
argument_list|,
literal|22
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"pand"
argument_list|,
operator|-
literal|1
argument_list|,
literal|23
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"end"
argument_list|,
operator|-
literal|1
argument_list|,
literal|24
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ond"
argument_list|,
operator|-
literal|1
argument_list|,
literal|25
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"lud"
argument_list|,
operator|-
literal|1
argument_list|,
literal|26
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"rud"
argument_list|,
operator|-
literal|1
argument_list|,
literal|27
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ul"
argument_list|,
operator|-
literal|1
argument_list|,
literal|9
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"her"
argument_list|,
operator|-
literal|1
argument_list|,
literal|28
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"metr"
argument_list|,
operator|-
literal|1
argument_list|,
literal|7
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"istr"
argument_list|,
operator|-
literal|1
argument_list|,
literal|6
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"urs"
argument_list|,
operator|-
literal|1
argument_list|,
literal|5
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"uct"
argument_list|,
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"et"
argument_list|,
operator|-
literal|1
argument_list|,
literal|32
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"mit"
argument_list|,
operator|-
literal|1
argument_list|,
literal|29
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ent"
argument_list|,
operator|-
literal|1
argument_list|,
literal|30
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"umpt"
argument_list|,
operator|-
literal|1
argument_list|,
literal|3
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"rpt"
argument_list|,
operator|-
literal|1
argument_list|,
literal|4
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ert"
argument_list|,
operator|-
literal|1
argument_list|,
literal|31
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"yt"
argument_list|,
operator|-
literal|1
argument_list|,
literal|33
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"iev"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"olv"
argument_list|,
operator|-
literal|1
argument_list|,
literal|8
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ax"
argument_list|,
operator|-
literal|1
argument_list|,
literal|14
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ex"
argument_list|,
operator|-
literal|1
argument_list|,
literal|15
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"bex"
argument_list|,
literal|26
argument_list|,
literal|10
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"dex"
argument_list|,
literal|26
argument_list|,
literal|11
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"pex"
argument_list|,
literal|26
argument_list|,
literal|12
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"tex"
argument_list|,
literal|26
argument_list|,
literal|13
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ix"
argument_list|,
operator|-
literal|1
argument_list|,
literal|16
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"lux"
argument_list|,
operator|-
literal|1
argument_list|,
literal|17
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"yz"
argument_list|,
operator|-
literal|1
argument_list|,
literal|34
argument_list|,
literal|""
argument_list|,
name|this
argument_list|)
block|}
decl_stmt|;
DECL|method|copy_from
specifier|private
name|void
name|copy_from
parameter_list|(
name|LovinsStemmer
name|other
parameter_list|)
block|{
name|super
operator|.
name|copy_from
argument_list|(
name|other
argument_list|)
expr_stmt|;
block|}
DECL|method|r_A
specifier|private
name|boolean
name|r_A
parameter_list|()
block|{
comment|// (, line 21
comment|// hop, line 21
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_B
specifier|private
name|boolean
name|r_B
parameter_list|()
block|{
comment|// (, line 22
comment|// hop, line 22
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|3
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_C
specifier|private
name|boolean
name|r_C
parameter_list|()
block|{
comment|// (, line 23
comment|// hop, line 23
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|4
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_D
specifier|private
name|boolean
name|r_D
parameter_list|()
block|{
comment|// (, line 24
comment|// hop, line 24
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|5
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_E
specifier|private
name|boolean
name|r_E
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
comment|// (, line 25
comment|// test, line 25
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 25
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// not, line 25
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// literal, line 25
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"e"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab0
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_F
specifier|private
name|boolean
name|r_F
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
comment|// (, line 26
comment|// test, line 26
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 26
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|3
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// not, line 26
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// literal, line 26
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"e"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab0
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_G
specifier|private
name|boolean
name|r_G
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
comment|// (, line 27
comment|// test, line 27
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 27
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|3
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// literal, line 27
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"f"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_H
specifier|private
name|boolean
name|r_H
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
comment|// (, line 28
comment|// test, line 28
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 28
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// or, line 28
name|lab0
label|:
do|do
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 28
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"t"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// literal, line 28
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|2
argument_list|,
literal|"ll"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_I
specifier|private
name|boolean
name|r_I
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
comment|// (, line 29
comment|// test, line 29
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 29
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// not, line 29
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// literal, line 29
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"o"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab0
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
block|}
comment|// not, line 29
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 29
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"e"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_J
specifier|private
name|boolean
name|r_J
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
comment|// (, line 30
comment|// test, line 30
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 30
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// not, line 30
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// literal, line 30
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"a"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab0
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
block|}
comment|// not, line 30
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 30
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"e"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_K
specifier|private
name|boolean
name|r_K
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
comment|// (, line 31
comment|// test, line 31
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 31
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|3
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// or, line 31
name|lab0
label|:
do|do
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 31
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"l"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// literal, line 31
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"i"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// (, line 31
comment|// literal, line 31
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"e"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// next, line 31
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|--
expr_stmt|;
comment|// literal, line 31
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"u"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_L
specifier|private
name|boolean
name|r_L
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
name|int
name|v_4
decl_stmt|;
name|int
name|v_5
decl_stmt|;
comment|// (, line 32
comment|// test, line 32
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 32
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// not, line 32
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// literal, line 32
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"u"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab0
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
block|}
comment|// not, line 32
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 32
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"x"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
block|}
comment|// not, line 32
block|{
name|v_4
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// (, line 32
comment|// literal, line 32
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"s"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
comment|// not, line 32
block|{
name|v_5
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab3
label|:
do|do
block|{
comment|// literal, line 32
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"o"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab3
break|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_M
specifier|private
name|boolean
name|r_M
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
name|int
name|v_4
decl_stmt|;
name|int
name|v_5
decl_stmt|;
comment|// (, line 33
comment|// test, line 33
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 33
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// not, line 33
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// literal, line 33
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"a"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab0
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
block|}
comment|// not, line 33
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 33
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"c"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
block|}
comment|// not, line 33
block|{
name|v_4
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// literal, line 33
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"e"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
block|}
comment|// not, line 33
block|{
name|v_5
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab3
label|:
do|do
block|{
comment|// literal, line 33
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"m"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab3
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_N
specifier|private
name|boolean
name|r_N
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
comment|// (, line 34
comment|// test, line 34
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 34
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|3
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// (, line 34
comment|// hop, line 34
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
comment|// or, line 34
name|lab0
label|:
do|do
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// not, line 34
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// literal, line 34
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"s"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
break|break
name|lab1
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// hop, line 34
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_O
specifier|private
name|boolean
name|r_O
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
comment|// (, line 35
comment|// test, line 35
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 35
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// or, line 35
name|lab0
label|:
do|do
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 35
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"l"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// literal, line 35
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"i"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_P
specifier|private
name|boolean
name|r_P
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
comment|// (, line 36
comment|// test, line 36
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 36
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// not, line 36
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// literal, line 36
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"c"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab0
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_Q
specifier|private
name|boolean
name|r_Q
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
name|int
name|v_4
decl_stmt|;
comment|// (, line 37
comment|// test, line 37
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 37
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// test, line 37
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 37
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|3
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// not, line 37
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// literal, line 37
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"l"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab0
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
block|}
comment|// not, line 37
block|{
name|v_4
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 37
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"n"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_R
specifier|private
name|boolean
name|r_R
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
comment|// (, line 38
comment|// test, line 38
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 38
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// or, line 38
name|lab0
label|:
do|do
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 38
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"n"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// literal, line 38
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"r"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_S
specifier|private
name|boolean
name|r_S
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
comment|// (, line 39
comment|// test, line 39
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 39
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// or, line 39
name|lab0
label|:
do|do
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 39
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|2
argument_list|,
literal|"dr"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// (, line 39
comment|// literal, line 39
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"t"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// not, line 39
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// literal, line 39
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"t"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_T
specifier|private
name|boolean
name|r_T
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
comment|// (, line 40
comment|// test, line 40
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 40
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// or, line 40
name|lab0
label|:
do|do
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 40
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"s"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// (, line 40
comment|// literal, line 40
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"t"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// not, line 40
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// literal, line 40
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"o"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_U
specifier|private
name|boolean
name|r_U
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
comment|// (, line 41
comment|// test, line 41
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 41
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// or, line 41
name|lab0
label|:
do|do
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 41
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"l"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// literal, line 41
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"m"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
name|lab3
label|:
do|do
block|{
comment|// literal, line 41
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"n"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab3
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// literal, line 41
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"r"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_V
specifier|private
name|boolean
name|r_V
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
comment|// (, line 42
comment|// test, line 42
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 42
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// literal, line 42
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"c"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_W
specifier|private
name|boolean
name|r_W
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
comment|// (, line 43
comment|// test, line 43
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 43
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// not, line 43
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// literal, line 43
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"s"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab0
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
block|}
comment|// not, line 43
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 43
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"u"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_X
specifier|private
name|boolean
name|r_X
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
comment|// (, line 44
comment|// test, line 44
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 44
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// or, line 44
name|lab0
label|:
do|do
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 44
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"l"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// literal, line 44
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"i"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// (, line 44
comment|// literal, line 44
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"e"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// next, line 44
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|--
expr_stmt|;
comment|// literal, line 44
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"u"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_Y
specifier|private
name|boolean
name|r_Y
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
comment|// (, line 45
comment|// test, line 45
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 45
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// literal, line 45
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|2
argument_list|,
literal|"in"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_Z
specifier|private
name|boolean
name|r_Z
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
comment|// (, line 46
comment|// test, line 46
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 46
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// not, line 46
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// literal, line 46
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"f"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab0
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_AA
specifier|private
name|boolean
name|r_AA
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
comment|// (, line 47
comment|// test, line 47
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 47
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// among, line 47
if|if
condition|(
name|find_among_b
argument_list|(
name|a_0
argument_list|,
literal|9
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_BB
specifier|private
name|boolean
name|r_BB
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
comment|// (, line 48
comment|// test, line 48
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 48
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|3
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// not, line 48
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// literal, line 48
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|3
argument_list|,
literal|"met"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab0
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
block|}
comment|// not, line 48
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 48
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|4
argument_list|,
literal|"ryst"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_CC
specifier|private
name|boolean
name|r_CC
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
comment|// (, line 49
comment|// test, line 49
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// hop, line 49
block|{
name|int
name|c
init|=
name|cursor
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|limit_backward
operator|>
name|c
operator|||
name|c
operator|>
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|c
expr_stmt|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// literal, line 49
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"l"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_endings
specifier|private
name|boolean
name|r_endings
parameter_list|()
block|{
name|int
name|among_var
decl_stmt|;
comment|// (, line 54
comment|// [, line 55
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// substring, line 55
name|among_var
operator|=
name|find_among_b
argument_list|(
name|a_1
argument_list|,
literal|294
argument_list|)
expr_stmt|;
if|if
condition|(
name|among_var
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// ], line 55
name|bra
operator|=
name|cursor
expr_stmt|;
switch|switch
condition|(
name|among_var
condition|)
block|{
case|case
literal|0
case|:
return|return
literal|false
return|;
case|case
literal|1
case|:
comment|// (, line 144
comment|// delete, line 144
name|slice_del
argument_list|()
expr_stmt|;
break|break;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_undouble
specifier|private
name|boolean
name|r_undouble
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
comment|// (, line 150
comment|// test, line 151
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// substring, line 151
if|if
condition|(
name|find_among_b
argument_list|(
name|a_2
argument_list|,
literal|10
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// [, line 152
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// next, line 152
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|--
expr_stmt|;
comment|// ], line 152
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 152
name|slice_del
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|method|r_respell
specifier|private
name|boolean
name|r_respell
parameter_list|()
block|{
name|int
name|among_var
decl_stmt|;
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
name|int
name|v_4
decl_stmt|;
name|int
name|v_5
decl_stmt|;
name|int
name|v_6
decl_stmt|;
name|int
name|v_7
decl_stmt|;
name|int
name|v_8
decl_stmt|;
comment|// (, line 157
comment|// [, line 158
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// substring, line 158
name|among_var
operator|=
name|find_among_b
argument_list|(
name|a_3
argument_list|,
literal|34
argument_list|)
expr_stmt|;
if|if
condition|(
name|among_var
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// ], line 158
name|bra
operator|=
name|cursor
expr_stmt|;
switch|switch
condition|(
name|among_var
condition|)
block|{
case|case
literal|0
case|:
return|return
literal|false
return|;
case|case
literal|1
case|:
comment|// (, line 159
comment|//<-, line 159
name|slice_from
argument_list|(
literal|"ief"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|2
case|:
comment|// (, line 160
comment|//<-, line 160
name|slice_from
argument_list|(
literal|"uc"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|3
case|:
comment|// (, line 161
comment|//<-, line 161
name|slice_from
argument_list|(
literal|"um"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|4
case|:
comment|// (, line 162
comment|//<-, line 162
name|slice_from
argument_list|(
literal|"rb"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|5
case|:
comment|// (, line 163
comment|//<-, line 163
name|slice_from
argument_list|(
literal|"ur"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|6
case|:
comment|// (, line 164
comment|//<-, line 164
name|slice_from
argument_list|(
literal|"ister"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|7
case|:
comment|// (, line 165
comment|//<-, line 165
name|slice_from
argument_list|(
literal|"meter"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|8
case|:
comment|// (, line 166
comment|//<-, line 166
name|slice_from
argument_list|(
literal|"olut"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|9
case|:
comment|// (, line 167
comment|// not, line 167
block|{
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// literal, line 167
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"a"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab0
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
block|}
comment|// not, line 167
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 167
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"i"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
block|}
comment|// not, line 167
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// literal, line 167
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"o"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
block|}
comment|//<-, line 167
name|slice_from
argument_list|(
literal|"l"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|10
case|:
comment|// (, line 168
comment|//<-, line 168
name|slice_from
argument_list|(
literal|"bic"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|11
case|:
comment|// (, line 169
comment|//<-, line 169
name|slice_from
argument_list|(
literal|"dic"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|12
case|:
comment|// (, line 170
comment|//<-, line 170
name|slice_from
argument_list|(
literal|"pic"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|13
case|:
comment|// (, line 171
comment|//<-, line 171
name|slice_from
argument_list|(
literal|"tic"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|14
case|:
comment|// (, line 172
comment|//<-, line 172
name|slice_from
argument_list|(
literal|"ac"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|15
case|:
comment|// (, line 173
comment|//<-, line 173
name|slice_from
argument_list|(
literal|"ec"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|16
case|:
comment|// (, line 174
comment|//<-, line 174
name|slice_from
argument_list|(
literal|"ic"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|17
case|:
comment|// (, line 175
comment|//<-, line 175
name|slice_from
argument_list|(
literal|"luc"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|18
case|:
comment|// (, line 176
comment|//<-, line 176
name|slice_from
argument_list|(
literal|"uas"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|19
case|:
comment|// (, line 177
comment|//<-, line 177
name|slice_from
argument_list|(
literal|"vas"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|20
case|:
comment|// (, line 178
comment|//<-, line 178
name|slice_from
argument_list|(
literal|"cis"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|21
case|:
comment|// (, line 179
comment|//<-, line 179
name|slice_from
argument_list|(
literal|"lis"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|22
case|:
comment|// (, line 180
comment|//<-, line 180
name|slice_from
argument_list|(
literal|"eris"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|23
case|:
comment|// (, line 181
comment|//<-, line 181
name|slice_from
argument_list|(
literal|"pans"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|24
case|:
comment|// (, line 182
comment|// not, line 182
block|{
name|v_4
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab3
label|:
do|do
block|{
comment|// literal, line 182
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"s"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab3
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
block|}
comment|//<-, line 182
name|slice_from
argument_list|(
literal|"ens"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|25
case|:
comment|// (, line 183
comment|//<-, line 183
name|slice_from
argument_list|(
literal|"ons"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|26
case|:
comment|// (, line 184
comment|//<-, line 184
name|slice_from
argument_list|(
literal|"lus"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|27
case|:
comment|// (, line 185
comment|//<-, line 185
name|slice_from
argument_list|(
literal|"rus"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|28
case|:
comment|// (, line 186
comment|// not, line 186
block|{
name|v_5
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab4
label|:
do|do
block|{
comment|// literal, line 186
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"p"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab4
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
block|}
comment|// not, line 186
block|{
name|v_6
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab5
label|:
do|do
block|{
comment|// literal, line 186
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"t"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab5
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_6
expr_stmt|;
block|}
comment|//<-, line 186
name|slice_from
argument_list|(
literal|"hes"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|29
case|:
comment|// (, line 187
comment|//<-, line 187
name|slice_from
argument_list|(
literal|"mis"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|30
case|:
comment|// (, line 188
comment|// not, line 188
block|{
name|v_7
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab6
label|:
do|do
block|{
comment|// literal, line 188
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"m"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab6
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
block|}
comment|//<-, line 188
name|slice_from
argument_list|(
literal|"ens"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|31
case|:
comment|// (, line 189
comment|//<-, line 189
name|slice_from
argument_list|(
literal|"ers"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|32
case|:
comment|// (, line 190
comment|// not, line 190
block|{
name|v_8
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab7
label|:
do|do
block|{
comment|// literal, line 190
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"n"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab7
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_8
expr_stmt|;
block|}
comment|//<-, line 190
name|slice_from
argument_list|(
literal|"es"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|33
case|:
comment|// (, line 191
comment|//<-, line 191
name|slice_from
argument_list|(
literal|"ys"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|34
case|:
comment|// (, line 192
comment|//<-, line 192
name|slice_from
argument_list|(
literal|"ys"
argument_list|)
expr_stmt|;
break|break;
block|}
return|return
literal|true
return|;
block|}
DECL|method|stem
specifier|public
name|boolean
name|stem
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
comment|// (, line 197
comment|// backwards, line 199
name|limit_backward
operator|=
name|cursor
expr_stmt|;
name|cursor
operator|=
name|limit
expr_stmt|;
comment|// (, line 199
comment|// do, line 200
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// call endings, line 200
if|if
condition|(
operator|!
name|r_endings
argument_list|()
condition|)
block|{
break|break
name|lab0
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// do, line 201
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// call undouble, line 201
if|if
condition|(
operator|!
name|r_undouble
argument_list|()
condition|)
block|{
break|break
name|lab1
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// do, line 202
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// call respell, line 202
if|if
condition|(
operator|!
name|r_respell
argument_list|()
condition|)
block|{
break|break
name|lab2
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
name|cursor
operator|=
name|limit_backward
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
end_class
end_unit
