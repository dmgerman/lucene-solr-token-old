begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.core
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|RequestHandlerBase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrRequestHandler
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|AbstractSolrTestCase
import|;
end_import
begin_class
DECL|class|SolrCoreTest
specifier|public
class|class
name|SolrCoreTest
extends|extends
name|AbstractSolrTestCase
block|{
DECL|method|getSchemaFile
specifier|public
name|String
name|getSchemaFile
parameter_list|()
block|{
return|return
literal|"schema.xml"
return|;
block|}
DECL|method|getSolrConfigFile
specifier|public
name|String
name|getSolrConfigFile
parameter_list|()
block|{
return|return
literal|"solrconfig.xml"
return|;
block|}
DECL|method|testRequestHandlerRegistry
specifier|public
name|void
name|testRequestHandlerRegistry
parameter_list|()
block|{
comment|// property values defined in build.xml
name|SolrCore
name|core
init|=
name|h
operator|.
name|getCore
argument_list|()
decl_stmt|;
name|EmptyRequestHandler
name|handler1
init|=
operator|new
name|EmptyRequestHandler
argument_list|()
decl_stmt|;
name|EmptyRequestHandler
name|handler2
init|=
operator|new
name|EmptyRequestHandler
argument_list|()
decl_stmt|;
name|String
name|path
init|=
literal|"/this/is A path /that won't be registered!"
decl_stmt|;
name|SolrRequestHandler
name|old
init|=
name|core
operator|.
name|registerRequestHandler
argument_list|(
name|path
argument_list|,
name|handler1
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|old
argument_list|)
expr_stmt|;
comment|// should not be anything...
name|assertEquals
argument_list|(
name|core
operator|.
name|getRequestHandlers
argument_list|()
operator|.
name|get
argument_list|(
name|path
argument_list|)
argument_list|,
name|handler1
argument_list|)
expr_stmt|;
name|old
operator|=
name|core
operator|.
name|registerRequestHandler
argument_list|(
name|path
argument_list|,
name|handler2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|old
argument_list|,
name|handler1
argument_list|)
expr_stmt|;
comment|// should pop out the old one
name|assertEquals
argument_list|(
name|core
operator|.
name|getRequestHandlers
argument_list|()
operator|.
name|get
argument_list|(
name|path
argument_list|)
argument_list|,
name|handler2
argument_list|)
expr_stmt|;
block|}
block|}
end_class
begin_comment
comment|/**  * An empty handler for testing  */
end_comment
begin_class
DECL|class|EmptyRequestHandler
class|class
name|EmptyRequestHandler
extends|extends
name|RequestHandlerBase
block|{
annotation|@
name|Override
DECL|method|handleRequestBody
specifier|public
name|void
name|handleRequestBody
parameter_list|(
name|SolrQueryRequest
name|req
parameter_list|,
name|SolrQueryResponse
name|rsp
parameter_list|)
throws|throws
name|Exception
block|{
comment|// nothing!
block|}
DECL|method|getDescription
annotation|@
name|Override
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
DECL|method|getSource
annotation|@
name|Override
specifier|public
name|String
name|getSource
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
DECL|method|getSourceId
annotation|@
name|Override
specifier|public
name|String
name|getSourceId
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
DECL|method|getVersion
annotation|@
name|Override
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
end_class
end_unit
