begin_unit
begin_package
DECL|package|org.apache.solr.search
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
package|;
end_package
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_comment
comment|/**  * Test for FastLRUCache  *  * @version $Id$  * @see org.apache.solr.search.FastLRUCache  * @since solr 1.4  */
end_comment
begin_class
DECL|class|TestFastLRUCache
specifier|public
class|class
name|TestFastLRUCache
extends|extends
name|TestCase
block|{
DECL|method|testSimple
specifier|public
name|void
name|testSimple
parameter_list|()
throws|throws
name|IOException
block|{
name|FastLRUCache
name|sc
init|=
operator|new
name|FastLRUCache
argument_list|()
decl_stmt|;
name|Map
name|l
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|l
operator|.
name|put
argument_list|(
literal|"size"
argument_list|,
literal|"100"
argument_list|)
expr_stmt|;
name|l
operator|.
name|put
argument_list|(
literal|"initialSize"
argument_list|,
literal|"10"
argument_list|)
expr_stmt|;
name|l
operator|.
name|put
argument_list|(
literal|"autowarmCount"
argument_list|,
literal|"25"
argument_list|)
expr_stmt|;
name|CacheRegenerator
name|cr
init|=
operator|new
name|CacheRegenerator
argument_list|()
block|{
specifier|public
name|boolean
name|regenerateItem
parameter_list|(
name|SolrIndexSearcher
name|newSearcher
parameter_list|,
name|SolrCache
name|newCache
parameter_list|,
name|SolrCache
name|oldCache
parameter_list|,
name|Object
name|oldKey
parameter_list|,
name|Object
name|oldVal
parameter_list|)
throws|throws
name|IOException
block|{
name|newCache
operator|.
name|put
argument_list|(
name|oldKey
argument_list|,
name|oldVal
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
decl_stmt|;
name|Object
name|o
init|=
name|sc
operator|.
name|init
argument_list|(
name|l
argument_list|,
literal|null
argument_list|,
name|cr
argument_list|)
decl_stmt|;
name|sc
operator|.
name|setState
argument_list|(
name|SolrCache
operator|.
name|State
operator|.
name|LIVE
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|101
condition|;
name|i
operator|++
control|)
block|{
name|sc
operator|.
name|put
argument_list|(
name|i
operator|+
literal|1
argument_list|,
literal|""
operator|+
operator|(
name|i
operator|+
literal|1
operator|)
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|"25"
argument_list|,
name|sc
operator|.
name|get
argument_list|(
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|sc
operator|.
name|get
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|NamedList
name|nl
init|=
name|sc
operator|.
name|getStatistics
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|nl
operator|.
name|get
argument_list|(
literal|"lookups"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|nl
operator|.
name|get
argument_list|(
literal|"hits"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|101L
argument_list|,
name|nl
operator|.
name|get
argument_list|(
literal|"inserts"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11L
argument_list|,
name|nl
operator|.
name|get
argument_list|(
literal|"evictions"
argument_list|)
argument_list|)
expr_stmt|;
name|FastLRUCache
name|scNew
init|=
operator|new
name|FastLRUCache
argument_list|()
decl_stmt|;
name|scNew
operator|.
name|init
argument_list|(
name|l
argument_list|,
name|o
argument_list|,
name|cr
argument_list|)
expr_stmt|;
name|scNew
operator|.
name|warm
argument_list|(
literal|null
argument_list|,
name|sc
argument_list|)
expr_stmt|;
name|scNew
operator|.
name|setState
argument_list|(
name|SolrCache
operator|.
name|State
operator|.
name|LIVE
argument_list|)
expr_stmt|;
name|scNew
operator|.
name|put
argument_list|(
literal|103
argument_list|,
literal|"103"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"90"
argument_list|,
name|scNew
operator|.
name|get
argument_list|(
literal|90
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|scNew
operator|.
name|get
argument_list|(
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|nl
operator|=
name|scNew
operator|.
name|getStatistics
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|nl
operator|.
name|get
argument_list|(
literal|"lookups"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|nl
operator|.
name|get
argument_list|(
literal|"hits"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|nl
operator|.
name|get
argument_list|(
literal|"inserts"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|nl
operator|.
name|get
argument_list|(
literal|"evictions"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4L
argument_list|,
name|nl
operator|.
name|get
argument_list|(
literal|"cumulative_lookups"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|nl
operator|.
name|get
argument_list|(
literal|"cumulative_hits"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|102L
argument_list|,
name|nl
operator|.
name|get
argument_list|(
literal|"cumulative_inserts"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11L
argument_list|,
name|nl
operator|.
name|get
argument_list|(
literal|"cumulative_evictions"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
