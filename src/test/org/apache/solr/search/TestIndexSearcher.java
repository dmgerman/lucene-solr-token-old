begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.search
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|AbstractSolrTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import
begin_class
DECL|class|TestIndexSearcher
specifier|public
class|class
name|TestIndexSearcher
extends|extends
name|AbstractSolrTestCase
block|{
DECL|method|getSchemaFile
specifier|public
name|String
name|getSchemaFile
parameter_list|()
block|{
return|return
literal|"schema11.xml"
return|;
block|}
DECL|method|getSolrConfigFile
specifier|public
name|String
name|getSolrConfigFile
parameter_list|()
block|{
return|return
literal|"solrconfig.xml"
return|;
block|}
DECL|method|getCoreName
specifier|public
name|String
name|getCoreName
parameter_list|()
block|{
return|return
literal|"basic"
return|;
block|}
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
comment|// if you override setUp or tearDown, you better call
comment|// the super classes version
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
comment|// if you override setUp or tearDown, you better call
comment|// the super classes version
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
DECL|method|testReopen
specifier|public
name|void
name|testReopen
parameter_list|()
block|{
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"1"
argument_list|,
literal|"v_t"
argument_list|,
literal|"Hello Dude"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"2"
argument_list|,
literal|"v_t"
argument_list|,
literal|"Hello Yonik"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|SolrQueryRequest
name|sr1
init|=
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|SolrIndexReader
name|r1
init|=
name|sr1
operator|.
name|getSearcher
argument_list|()
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"3"
argument_list|,
literal|"v_s"
argument_list|,
literal|"{!literal}"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"4"
argument_list|,
literal|"v_s"
argument_list|,
literal|"other stuff"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|SolrQueryRequest
name|sr2
init|=
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|SolrIndexReader
name|r2
init|=
name|sr2
operator|.
name|getSearcher
argument_list|()
operator|.
name|getReader
argument_list|()
decl_stmt|;
comment|// make sure the readers share the first segment
comment|// Didn't work w/ older versions of lucene2.9 going from segment -> multi
name|assertEquals
argument_list|(
name|r1
operator|.
name|getLeafReaders
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|r2
operator|.
name|getLeafReaders
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"5"
argument_list|,
literal|"v_f"
argument_list|,
literal|"3.14159"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"6"
argument_list|,
literal|"v_f"
argument_list|,
literal|"8983"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|SolrQueryRequest
name|sr3
init|=
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|SolrIndexReader
name|r3
init|=
name|sr3
operator|.
name|getSearcher
argument_list|()
operator|.
name|getReader
argument_list|()
decl_stmt|;
comment|// make sure the readers share segments
comment|// assertEquals(r1.getLeafReaders()[0], r3.getLeafReaders()[0]);
name|assertEquals
argument_list|(
name|r2
operator|.
name|getLeafReaders
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|r3
operator|.
name|getLeafReaders
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
operator|.
name|getLeafReaders
argument_list|()
index|[
literal|1
index|]
argument_list|,
name|r3
operator|.
name|getLeafReaders
argument_list|()
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|sr1
operator|.
name|close
argument_list|()
expr_stmt|;
name|sr2
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// should currently be 1, but this could change depending on future index management
name|int
name|baseRefCount
init|=
name|r3
operator|.
name|getRefCount
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|baseRefCount
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|SolrQueryRequest
name|sr4
init|=
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|SolrIndexReader
name|r4
init|=
name|sr4
operator|.
name|getSearcher
argument_list|()
operator|.
name|getReader
argument_list|()
decl_stmt|;
comment|// force an index change so the registered searcher won't be the one we are testing (and
comment|// then we should be able to test the refCount going all the way to 0
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"7"
argument_list|,
literal|"v_f"
argument_list|,
literal|"7574"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
comment|// test that reader didn't change (according to equals at least... which uses the wrapped reader)
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|r4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|baseRefCount
operator|+
literal|1
argument_list|,
name|r4
operator|.
name|getRefCount
argument_list|()
argument_list|)
expr_stmt|;
name|sr3
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|baseRefCount
argument_list|,
name|r4
operator|.
name|getRefCount
argument_list|()
argument_list|)
expr_stmt|;
name|sr4
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|baseRefCount
operator|-
literal|1
argument_list|,
name|r4
operator|.
name|getRefCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
