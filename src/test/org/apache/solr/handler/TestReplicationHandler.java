begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.handler
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
package|;
end_package
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|TestDistributedSearch
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServerException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|embedded
operator|.
name|JettySolrRunner
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|CommonsHttpSolrServer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|QueryResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrDocument
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrDocumentList
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputDocument
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ModifiableSolrParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|SimpleOrderedMap
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|AbstractSolrTestCase
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import
begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import
begin_comment
comment|/**  * Test for ReplicationHandler  *  * @version $Id$  * @since 1.4  */
end_comment
begin_class
DECL|class|TestReplicationHandler
specifier|public
class|class
name|TestReplicationHandler
extends|extends
name|TestCase
block|{
DECL|field|masterJetty
DECL|field|slaveJetty
name|JettySolrRunner
name|masterJetty
decl_stmt|,
name|slaveJetty
decl_stmt|;
DECL|field|masterClient
DECL|field|slaveClient
name|SolrServer
name|masterClient
decl_stmt|,
name|slaveClient
decl_stmt|;
DECL|field|master
DECL|field|slave
name|SolrInstance
name|master
init|=
literal|null
decl_stmt|,
name|slave
init|=
literal|null
decl_stmt|;
DECL|field|context
name|String
name|context
init|=
literal|"/solr"
decl_stmt|;
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|master
operator|=
operator|new
name|SolrInstance
argument_list|(
literal|"master"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|slave
operator|=
operator|new
name|SolrInstance
argument_list|(
literal|"slave"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|master
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|slave
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|masterJetty
operator|=
name|createJetty
argument_list|(
name|master
argument_list|,
literal|9999
argument_list|)
expr_stmt|;
name|masterClient
operator|=
name|createNewSolrServer
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slaveJetty
operator|=
name|createJetty
argument_list|(
name|slave
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|slaveClient
operator|=
name|createNewSolrServer
argument_list|(
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|destroyServers
argument_list|()
expr_stmt|;
name|master
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|slave
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
DECL|method|destroyServers
specifier|private
name|void
name|destroyServers
parameter_list|()
throws|throws
name|Exception
block|{
name|masterJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|slaveJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|method|createJetty
specifier|private
name|JettySolrRunner
name|createJetty
parameter_list|(
name|SolrInstance
name|instance
parameter_list|,
name|int
name|port
parameter_list|)
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.solr.home"
argument_list|,
name|instance
operator|.
name|getHomeDir
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.data.dir"
argument_list|,
name|instance
operator|.
name|getDataDir
argument_list|()
argument_list|)
expr_stmt|;
name|JettySolrRunner
name|jetty
init|=
operator|new
name|JettySolrRunner
argument_list|(
literal|"/solr"
argument_list|,
name|port
argument_list|)
decl_stmt|;
name|jetty
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
name|jetty
return|;
block|}
DECL|method|createNewSolrServer
specifier|protected
name|SolrServer
name|createNewSolrServer
parameter_list|(
name|int
name|port
parameter_list|)
block|{
try|try
block|{
comment|// setup the server...
name|String
name|url
init|=
literal|"http://localhost:"
operator|+
name|port
operator|+
name|context
decl_stmt|;
name|CommonsHttpSolrServer
name|s
init|=
operator|new
name|CommonsHttpSolrServer
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|s
operator|.
name|setDefaultMaxConnectionsPerHost
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|s
operator|.
name|setMaxTotalConnections
argument_list|(
literal|100
argument_list|)
expr_stmt|;
return|return
name|s
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
DECL|method|index
name|int
name|index
parameter_list|(
name|SolrServer
name|s
parameter_list|,
name|Object
modifier|...
name|fields
parameter_list|)
throws|throws
name|Exception
block|{
name|SolrInputDocument
name|doc
init|=
operator|new
name|SolrInputDocument
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|fields
operator|.
name|length
condition|;
name|i
operator|+=
literal|2
control|)
block|{
name|doc
operator|.
name|addField
argument_list|(
call|(
name|String
call|)
argument_list|(
name|fields
index|[
name|i
index|]
argument_list|)
argument_list|,
name|fields
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
return|return
name|s
operator|.
name|add
argument_list|(
name|doc
argument_list|)
operator|.
name|getStatus
argument_list|()
return|;
block|}
DECL|method|query
name|NamedList
name|query
parameter_list|(
name|String
name|query
parameter_list|,
name|SolrServer
name|s
parameter_list|)
throws|throws
name|SolrServerException
block|{
name|NamedList
name|res
init|=
operator|new
name|SimpleOrderedMap
argument_list|()
decl_stmt|;
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"q"
argument_list|,
name|query
argument_list|)
expr_stmt|;
name|QueryResponse
name|qres
init|=
name|s
operator|.
name|query
argument_list|(
name|params
argument_list|)
decl_stmt|;
name|res
operator|=
name|qres
operator|.
name|getResponse
argument_list|()
expr_stmt|;
return|return
name|res
return|;
block|}
DECL|method|testIndexAndConfigReplication
specifier|public
name|void
name|testIndexAndConfigReplication
parameter_list|()
throws|throws
name|Exception
block|{
comment|//add 500 docs to master
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|500
condition|;
name|i
operator|++
control|)
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
name|i
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|NamedList
name|masterQueryRsp
init|=
name|query
argument_list|(
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|masterQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|masterQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|masterQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//sleep for pollinterval time 4s, to let slave pull data.
name|Thread
operator|.
name|sleep
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
comment|//get docs from slave and check if number is equal to master
name|NamedList
name|slaveQueryRsp
init|=
name|query
argument_list|(
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|slaveQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//compare results
name|String
name|cmp
init|=
name|TestDistributedSearch
operator|.
name|compare
argument_list|(
name|masterQueryResult
argument_list|,
name|slaveQueryResult
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|cmp
argument_list|)
expr_stmt|;
comment|//start config files replication test
name|masterClient
operator|.
name|deleteByQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|//change the schema on master
name|copyFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"."
operator|+
name|File
operator|.
name|separator
operator|+
literal|"solr"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"conf"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"schema-replication2.xml"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|master
operator|.
name|getConfDir
argument_list|()
argument_list|,
literal|"schema.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|masterJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|masterJetty
operator|=
name|createJetty
argument_list|(
name|master
argument_list|,
literal|9999
argument_list|)
expr_stmt|;
name|masterClient
operator|=
name|createNewSolrServer
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
comment|//add a doc with new field and commit on master to trigger snappull from slave.
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
literal|"2000"
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
literal|2000
argument_list|,
literal|"newname"
argument_list|,
literal|"newname = "
operator|+
literal|2000
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|//sleep for 4s for replication to happen.
name|Thread
operator|.
name|sleep
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
name|slaveQueryRsp
operator|=
name|query
argument_list|(
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
expr_stmt|;
name|SolrDocument
name|d
init|=
operator|(
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"newname = 2000"
argument_list|,
operator|(
name|String
operator|)
name|d
operator|.
name|getFieldValue
argument_list|(
literal|"newname"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testIndexAndConfigAliasReplication
specifier|public
name|void
name|testIndexAndConfigAliasReplication
parameter_list|()
throws|throws
name|Exception
block|{
comment|//add 500 docs to master
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|500
condition|;
name|i
operator|++
control|)
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
name|i
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|NamedList
name|masterQueryRsp
init|=
name|query
argument_list|(
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|masterQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|masterQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|masterQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//sleep for pollinterval time 3s, to let slave pull data.
name|Thread
operator|.
name|sleep
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
comment|//get docs from slave and check if number is equal to master
name|NamedList
name|slaveQueryRsp
init|=
name|query
argument_list|(
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|slaveQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//compare results
name|String
name|cmp
init|=
name|TestDistributedSearch
operator|.
name|compare
argument_list|(
name|masterQueryResult
argument_list|,
name|slaveQueryResult
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|cmp
argument_list|)
expr_stmt|;
comment|//start config files replication test
comment|//clear master index
name|masterClient
operator|.
name|deleteByQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|//change solrconfig on master
name|copyFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"."
operator|+
name|File
operator|.
name|separator
operator|+
literal|"solr"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"conf"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"solrconfig-master1.xml"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|master
operator|.
name|getConfDir
argument_list|()
argument_list|,
literal|"solrconfig.xml"
argument_list|)
argument_list|)
expr_stmt|;
comment|//change schema on master
name|copyFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"."
operator|+
name|File
operator|.
name|separator
operator|+
literal|"solr"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"conf"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"schema-replication2.xml"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|master
operator|.
name|getConfDir
argument_list|()
argument_list|,
literal|"schema.xml"
argument_list|)
argument_list|)
expr_stmt|;
comment|//keep a copy of the new schema
name|copyFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"."
operator|+
name|File
operator|.
name|separator
operator|+
literal|"solr"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"conf"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"schema-replication2.xml"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|master
operator|.
name|getConfDir
argument_list|()
argument_list|,
literal|"schema-replication2.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|masterJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|masterJetty
operator|=
name|createJetty
argument_list|(
name|master
argument_list|,
literal|9999
argument_list|)
expr_stmt|;
name|masterClient
operator|=
name|createNewSolrServer
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
comment|//add a doc with new field and commit on master to trigger snappull from slave.
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
literal|"2000"
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
literal|2000
argument_list|,
literal|"newname"
argument_list|,
literal|"newname = "
operator|+
literal|2000
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|//sleep for 3s for replication to happen.
name|Thread
operator|.
name|sleep
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
name|index
argument_list|(
name|slaveClient
argument_list|,
literal|"id"
argument_list|,
literal|"2000"
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
literal|2001
argument_list|,
literal|"newname"
argument_list|,
literal|"newname = "
operator|+
literal|2001
argument_list|)
expr_stmt|;
name|slaveClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|slaveQueryRsp
operator|=
name|query
argument_list|(
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
expr_stmt|;
name|SolrDocument
name|d
init|=
operator|(
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"newname = 2001"
argument_list|,
operator|(
name|String
operator|)
name|d
operator|.
name|getFieldValue
argument_list|(
literal|"newname"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testStopPoll
specifier|public
name|void
name|testStopPoll
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Test:
comment|// setup master/slave.
comment|// stop polling on slave, add a doc to master and verify slave hasn't picked it.
comment|//add 500 docs to master
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|500
condition|;
name|i
operator|++
control|)
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
name|i
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|NamedList
name|masterQueryRsp
init|=
name|query
argument_list|(
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|masterQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|masterQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|masterQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//sleep for pollinterval time 3s, to let slave pull data.
name|Thread
operator|.
name|sleep
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
comment|//get docs from slave and check if number is equal to master
name|NamedList
name|slaveQueryRsp
init|=
name|query
argument_list|(
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|slaveQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//compare results
name|String
name|cmp
init|=
name|TestDistributedSearch
operator|.
name|compare
argument_list|(
name|masterQueryResult
argument_list|,
name|slaveQueryResult
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|cmp
argument_list|)
expr_stmt|;
comment|// start stop polling test
name|String
name|masterUrl
init|=
literal|"http://localhost:"
operator|+
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
operator|+
literal|"/solr/replication?command=disablepoll"
decl_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|masterUrl
argument_list|)
decl_stmt|;
name|InputStream
name|stream
init|=
name|url
operator|.
name|openStream
argument_list|()
decl_stmt|;
try|try
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|//e.printStackTrace();
block|}
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
literal|501
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
literal|501
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|//sleep for pollinterval time 3s, to let slave pull data.
name|Thread
operator|.
name|sleep
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
comment|//get docs from slave and check if number is equal to master
name|slaveQueryRsp
operator|=
name|query
argument_list|(
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
expr_stmt|;
name|slaveQueryResult
operator|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//get docs from slave and check if number is equal to master
name|slaveQueryRsp
operator|=
name|query
argument_list|(
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
expr_stmt|;
name|slaveQueryResult
operator|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|501
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testSnapPullWithMasterUrl
specifier|public
name|void
name|testSnapPullWithMasterUrl
parameter_list|()
throws|throws
name|Exception
block|{
comment|//change solrconfig on slave
comment|//this has no entry for pollinginterval
name|copyFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"."
operator|+
name|File
operator|.
name|separator
operator|+
literal|"solr"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"conf"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"solrconfig-slave1.xml"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|slave
operator|.
name|getConfDir
argument_list|()
argument_list|,
literal|"solrconfig.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|slaveJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|slaveJetty
operator|=
name|createJetty
argument_list|(
name|slave
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|slaveClient
operator|=
name|createNewSolrServer
argument_list|(
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
comment|//add 500 docs to master
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|500
condition|;
name|i
operator|++
control|)
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
name|i
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|NamedList
name|masterQueryRsp
init|=
name|query
argument_list|(
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|masterQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|masterQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|masterQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|// snappull
name|String
name|masterUrl
init|=
literal|"http://localhost:"
operator|+
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
operator|+
literal|"/solr/replication?command=snappull&masterUrl="
decl_stmt|;
name|masterUrl
operator|+=
literal|"http://localhost:"
operator|+
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
operator|+
literal|"/solr/replication"
expr_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|masterUrl
argument_list|)
decl_stmt|;
name|InputStream
name|stream
init|=
name|url
operator|.
name|openStream
argument_list|()
decl_stmt|;
try|try
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|//e.printStackTrace();
block|}
name|Thread
operator|.
name|sleep
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
comment|//get docs from slave and check if number is equal to master
name|NamedList
name|slaveQueryRsp
init|=
name|query
argument_list|(
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|slaveQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//compare results
name|String
name|cmp
init|=
name|TestDistributedSearch
operator|.
name|compare
argument_list|(
name|masterQueryResult
argument_list|,
name|slaveQueryResult
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|cmp
argument_list|)
expr_stmt|;
block|}
DECL|method|copyFile
name|void
name|copyFile
parameter_list|(
name|File
name|src
parameter_list|,
name|File
name|dst
parameter_list|)
throws|throws
name|IOException
block|{
name|InputStream
name|in
init|=
operator|new
name|FileInputStream
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|OutputStream
name|out
init|=
operator|new
name|FileOutputStream
argument_list|(
name|dst
argument_list|)
decl_stmt|;
name|byte
index|[]
name|buf
init|=
operator|new
name|byte
index|[
literal|1024
index|]
decl_stmt|;
name|int
name|len
decl_stmt|;
while|while
condition|(
operator|(
name|len
operator|=
name|in
operator|.
name|read
argument_list|(
name|buf
argument_list|)
operator|)
operator|>
literal|0
condition|)
name|out
operator|.
name|write
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
name|len
argument_list|)
expr_stmt|;
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|class|SolrInstance
specifier|private
class|class
name|SolrInstance
extends|extends
name|AbstractSolrTestCase
block|{
DECL|field|name
name|String
name|name
decl_stmt|;
DECL|field|type
name|int
name|type
decl_stmt|;
DECL|field|homeDir
name|File
name|homeDir
decl_stmt|;
DECL|field|confDir
name|File
name|confDir
decl_stmt|;
DECL|method|SolrInstance
specifier|public
name|SolrInstance
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|type
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
DECL|method|getHomeDir
specifier|public
name|String
name|getHomeDir
parameter_list|()
block|{
return|return
name|homeDir
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getSchemaFile
specifier|public
name|String
name|getSchemaFile
parameter_list|()
block|{
return|return
literal|"."
operator|+
name|File
operator|.
name|separator
operator|+
literal|"solr"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"conf"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"schema-replication1.xml"
return|;
block|}
DECL|method|getConfDir
specifier|public
name|String
name|getConfDir
parameter_list|()
block|{
return|return
name|confDir
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|getDataDir
specifier|public
name|String
name|getDataDir
parameter_list|()
block|{
return|return
name|dataDir
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getSolrConfigFile
specifier|public
name|String
name|getSolrConfigFile
parameter_list|()
block|{
name|String
name|fname
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|type
operator|==
literal|1
condition|)
name|fname
operator|=
literal|"."
operator|+
name|File
operator|.
name|separator
operator|+
literal|"solr"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"conf"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"solrconfig-master.xml"
expr_stmt|;
if|if
condition|(
name|type
operator|==
literal|0
condition|)
name|fname
operator|=
literal|"."
operator|+
name|File
operator|.
name|separator
operator|+
literal|"solr"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"conf"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"solrconfig-slave.xml"
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|fname
argument_list|)
expr_stmt|;
return|return
name|fname
return|;
block|}
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.test.sys.prop1"
argument_list|,
literal|"propone"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.test.sys.prop2"
argument_list|,
literal|"proptwo"
argument_list|)
expr_stmt|;
name|String
name|home
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
operator|+
name|File
operator|.
name|separator
operator|+
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"-"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
if|if
condition|(
name|type
operator|==
literal|1
condition|)
block|{
name|homeDir
operator|=
operator|new
name|File
argument_list|(
name|home
operator|+
literal|"master"
argument_list|)
expr_stmt|;
name|dataDir
operator|=
operator|new
name|File
argument_list|(
name|home
operator|+
literal|"master"
argument_list|,
literal|"data"
argument_list|)
expr_stmt|;
name|confDir
operator|=
operator|new
name|File
argument_list|(
name|home
operator|+
literal|"master"
argument_list|,
literal|"conf"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|type
operator|==
literal|0
condition|)
block|{
name|homeDir
operator|=
operator|new
name|File
argument_list|(
name|home
operator|+
literal|"slave"
argument_list|)
expr_stmt|;
name|dataDir
operator|=
operator|new
name|File
argument_list|(
name|home
operator|+
literal|"slave"
argument_list|,
literal|"data"
argument_list|)
expr_stmt|;
name|confDir
operator|=
operator|new
name|File
argument_list|(
name|home
operator|+
literal|"slave"
argument_list|,
literal|"conf"
argument_list|)
expr_stmt|;
block|}
name|homeDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|dataDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|confDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|File
name|f
init|=
operator|new
name|File
argument_list|(
name|confDir
argument_list|,
literal|"solrconfig.xml"
argument_list|)
decl_stmt|;
name|copyFile
argument_list|(
operator|new
name|File
argument_list|(
name|getSolrConfigFile
argument_list|()
argument_list|)
argument_list|,
name|f
argument_list|)
expr_stmt|;
name|f
operator|=
operator|new
name|File
argument_list|(
name|confDir
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
name|copyFile
argument_list|(
operator|new
name|File
argument_list|(
name|getSchemaFile
argument_list|()
argument_list|)
argument_list|,
name|f
argument_list|)
expr_stmt|;
block|}
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|AbstractSolrTestCase
operator|.
name|recurseDelete
argument_list|(
name|homeDir
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
