begin_unit
begin_package
DECL|package|org.apache.lucene.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
package|;
end_package
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_class
DECL|class|TestTerm
specifier|public
class|class
name|TestTerm
extends|extends
name|TestCase
block|{
DECL|method|testEquals
specifier|public
name|void
name|testEquals
parameter_list|()
block|{
specifier|final
name|Term
name|base
init|=
operator|new
name|Term
argument_list|(
literal|"same"
argument_list|,
literal|"same"
argument_list|)
decl_stmt|;
specifier|final
name|Term
name|same
init|=
operator|new
name|Term
argument_list|(
literal|"same"
argument_list|,
literal|"same"
argument_list|)
decl_stmt|;
specifier|final
name|Term
name|differentField
init|=
operator|new
name|Term
argument_list|(
literal|"different"
argument_list|,
literal|"same"
argument_list|)
decl_stmt|;
specifier|final
name|Term
name|differentText
init|=
operator|new
name|Term
argument_list|(
literal|"same"
argument_list|,
literal|"different"
argument_list|)
decl_stmt|;
specifier|final
name|String
name|differentType
init|=
literal|"AString"
decl_stmt|;
name|assertEquals
argument_list|(
name|base
argument_list|,
name|base
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|base
argument_list|,
name|same
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|base
operator|.
name|equals
argument_list|(
name|differentField
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|base
operator|.
name|equals
argument_list|(
name|differentText
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|base
operator|.
name|equals
argument_list|(
name|differentType
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
