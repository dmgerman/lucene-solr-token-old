begin_unit
begin_package
DECL|package|org.apache.lucene.analysis
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import
begin_comment
comment|/**   * Base class for all Lucene unit tests that use TokenStreams.    *<p>  * This class runs all tests twice, one time with {@link TokenStream#setOnlyUseNewAPI}<code>false</code>  * and after that one time with<code>true</code>.  */
end_comment
begin_class
DECL|class|BaseTokenStreamTestCase
specifier|public
specifier|abstract
class|class
name|BaseTokenStreamTestCase
extends|extends
name|LuceneTestCase
block|{
DECL|field|onlyUseNewAPI
specifier|private
name|boolean
name|onlyUseNewAPI
init|=
literal|false
decl_stmt|;
DECL|field|testWithNewAPI
specifier|private
specifier|final
name|Set
name|testWithNewAPI
decl_stmt|;
DECL|method|BaseTokenStreamTestCase
specifier|public
name|BaseTokenStreamTestCase
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|testWithNewAPI
operator|=
literal|null
expr_stmt|;
comment|// run all tests also with onlyUseNewAPI
block|}
DECL|method|BaseTokenStreamTestCase
specifier|public
name|BaseTokenStreamTestCase
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|this
operator|.
name|testWithNewAPI
operator|=
literal|null
expr_stmt|;
comment|// run all tests also with onlyUseNewAPI
block|}
DECL|method|BaseTokenStreamTestCase
specifier|public
name|BaseTokenStreamTestCase
parameter_list|(
name|Set
name|testWithNewAPI
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|testWithNewAPI
operator|=
name|testWithNewAPI
expr_stmt|;
block|}
DECL|method|BaseTokenStreamTestCase
specifier|public
name|BaseTokenStreamTestCase
parameter_list|(
name|String
name|name
parameter_list|,
name|Set
name|testWithNewAPI
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|this
operator|.
name|testWithNewAPI
operator|=
name|testWithNewAPI
expr_stmt|;
block|}
comment|// @Override
DECL|method|setUp
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|TokenStream
operator|.
name|setOnlyUseNewAPI
argument_list|(
name|onlyUseNewAPI
argument_list|)
expr_stmt|;
block|}
comment|// @Override
DECL|method|runBare
specifier|public
name|void
name|runBare
parameter_list|()
throws|throws
name|Throwable
block|{
comment|// Do the test with onlyUseNewAPI=false (default)
try|try
block|{
name|onlyUseNewAPI
operator|=
literal|false
expr_stmt|;
name|super
operator|.
name|runBare
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Test failure of "
operator|+
name|getName
argument_list|()
operator|+
literal|" occurred with onlyUseNewAPI=false"
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
if|if
condition|(
name|testWithNewAPI
operator|==
literal|null
operator|||
name|testWithNewAPI
operator|.
name|contains
argument_list|(
name|getName
argument_list|()
argument_list|)
condition|)
block|{
comment|// Do the test again with onlyUseNewAPI=true
try|try
block|{
name|onlyUseNewAPI
operator|=
literal|true
expr_stmt|;
name|super
operator|.
name|runBare
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Test failure of "
operator|+
name|getName
argument_list|()
operator|+
literal|" occurred with onlyUseNewAPI=true"
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
block|}
block|}
end_class
end_unit
