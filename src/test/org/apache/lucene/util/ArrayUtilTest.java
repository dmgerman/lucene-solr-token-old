begin_unit
begin_package
DECL|package|org.apache.lucene.util
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
package|;
end_package
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_comment
comment|/**  *  *  **/
end_comment
begin_class
DECL|class|ArrayUtilTest
specifier|public
class|class
name|ArrayUtilTest
extends|extends
name|TestCase
block|{
DECL|method|testParseInt
specifier|public
name|void
name|testParseInt
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|test
decl_stmt|;
try|try
block|{
name|test
operator|=
name|ArrayUtil
operator|.
name|parseInt
argument_list|(
literal|""
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
comment|//expected
block|}
try|try
block|{
name|test
operator|=
name|ArrayUtil
operator|.
name|parseInt
argument_list|(
literal|"foo"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
comment|//expected
block|}
try|try
block|{
name|test
operator|=
name|ArrayUtil
operator|.
name|parseInt
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|)
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
comment|//expected
block|}
try|try
block|{
name|test
operator|=
name|ArrayUtil
operator|.
name|parseInt
argument_list|(
literal|"0.34"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
comment|//expected
block|}
try|try
block|{
name|test
operator|=
name|ArrayUtil
operator|.
name|parseInt
argument_list|(
literal|"1"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|test
operator|+
literal|" does not equal: "
operator|+
literal|1
argument_list|,
name|test
operator|==
literal|1
argument_list|)
expr_stmt|;
name|test
operator|=
name|ArrayUtil
operator|.
name|parseInt
argument_list|(
literal|"-10000"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|test
operator|+
literal|" does not equal: "
operator|+
operator|-
literal|10000
argument_list|,
name|test
operator|==
operator|-
literal|10000
argument_list|)
expr_stmt|;
name|test
operator|=
name|ArrayUtil
operator|.
name|parseInt
argument_list|(
literal|"1923"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|test
operator|+
literal|" does not equal: "
operator|+
literal|1923
argument_list|,
name|test
operator|==
literal|1923
argument_list|)
expr_stmt|;
name|test
operator|=
name|ArrayUtil
operator|.
name|parseInt
argument_list|(
literal|"-1"
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|test
operator|+
literal|" does not equal: "
operator|+
operator|-
literal|1
argument_list|,
name|test
operator|==
operator|-
literal|1
argument_list|)
expr_stmt|;
name|test
operator|=
name|ArrayUtil
operator|.
name|parseInt
argument_list|(
literal|"foo 1923 bar"
operator|.
name|toCharArray
argument_list|()
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|test
operator|+
literal|" does not equal: "
operator|+
literal|1923
argument_list|,
name|test
operator|==
literal|1923
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
