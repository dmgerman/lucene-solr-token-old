begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.servlet.cache
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|servlet
operator|.
name|cache
package|;
end_package
begin_enum
DECL|enum|Method
specifier|public
enum|enum
name|Method
block|{
DECL|enum constant|GET
DECL|enum constant|POST
DECL|enum constant|HEAD
DECL|enum constant|OTHER
name|GET
argument_list|(
literal|"GET"
argument_list|)
block|,
name|POST
argument_list|(
literal|"POST"
argument_list|)
block|,
name|HEAD
argument_list|(
literal|"HEAD"
argument_list|)
block|,
name|OTHER
argument_list|(
literal|""
argument_list|)
block|;
DECL|field|method
specifier|private
specifier|final
name|String
name|method
decl_stmt|;
DECL|method|Method
name|Method
parameter_list|(
name|String
name|method
parameter_list|)
block|{
name|this
operator|.
name|method
operator|=
name|method
operator|.
name|intern
argument_list|()
expr_stmt|;
block|}
DECL|method|getMethod
specifier|public
specifier|static
name|Method
name|getMethod
parameter_list|(
name|String
name|method
parameter_list|)
block|{
name|method
operator|=
name|method
operator|.
name|toUpperCase
argument_list|()
operator|.
name|intern
argument_list|()
expr_stmt|;
for|for
control|(
name|Method
name|m
range|:
name|Method
operator|.
name|values
argument_list|()
control|)
block|{
comment|// we can use == because we interned the String objects
if|if
condition|(
name|m
operator|.
name|method
operator|==
name|method
condition|)
block|{
return|return
name|m
return|;
block|}
block|}
return|return
name|OTHER
return|;
block|}
block|}
end_enum
end_unit
