begin_unit
begin_package
DECL|package|org.apache.lucene.util
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|jar
operator|.
name|Manifest
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|jar
operator|.
name|Attributes
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import
begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import
begin_comment
comment|/**  * Some useful constants.  *  *  * @version $Id$  **/
end_comment
begin_class
DECL|class|Constants
specifier|public
specifier|final
class|class
name|Constants
block|{
DECL|method|Constants
specifier|private
name|Constants
parameter_list|()
block|{}
comment|// can't construct
comment|/** The value of<tt>System.getProperty("java.version")<tt>. **/
DECL|field|JAVA_VERSION
specifier|public
specifier|static
specifier|final
name|String
name|JAVA_VERSION
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.version"
argument_list|)
decl_stmt|;
comment|/** True iff this is Java version 1.1. */
DECL|field|JAVA_1_1
specifier|public
specifier|static
specifier|final
name|boolean
name|JAVA_1_1
init|=
name|JAVA_VERSION
operator|.
name|startsWith
argument_list|(
literal|"1.1."
argument_list|)
decl_stmt|;
comment|/** True iff this is Java version 1.2. */
DECL|field|JAVA_1_2
specifier|public
specifier|static
specifier|final
name|boolean
name|JAVA_1_2
init|=
name|JAVA_VERSION
operator|.
name|startsWith
argument_list|(
literal|"1.2."
argument_list|)
decl_stmt|;
comment|/** True iff this is Java version 1.3. */
DECL|field|JAVA_1_3
specifier|public
specifier|static
specifier|final
name|boolean
name|JAVA_1_3
init|=
name|JAVA_VERSION
operator|.
name|startsWith
argument_list|(
literal|"1.3."
argument_list|)
decl_stmt|;
comment|/** The value of<tt>System.getProperty("os.name")<tt>. **/
DECL|field|OS_NAME
specifier|public
specifier|static
specifier|final
name|String
name|OS_NAME
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.name"
argument_list|)
decl_stmt|;
comment|/** True iff running on Linux. */
DECL|field|LINUX
specifier|public
specifier|static
specifier|final
name|boolean
name|LINUX
init|=
name|OS_NAME
operator|.
name|startsWith
argument_list|(
literal|"Linux"
argument_list|)
decl_stmt|;
comment|/** True iff running on Windows. */
DECL|field|WINDOWS
specifier|public
specifier|static
specifier|final
name|boolean
name|WINDOWS
init|=
name|OS_NAME
operator|.
name|startsWith
argument_list|(
literal|"Windows"
argument_list|)
decl_stmt|;
comment|/** True iff running on SunOS. */
DECL|field|SUN_OS
specifier|public
specifier|static
specifier|final
name|boolean
name|SUN_OS
init|=
name|OS_NAME
operator|.
name|startsWith
argument_list|(
literal|"SunOS"
argument_list|)
decl_stmt|;
DECL|field|OS_ARCH
specifier|public
specifier|static
specifier|final
name|String
name|OS_ARCH
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.arch"
argument_list|)
decl_stmt|;
DECL|field|OS_VERSION
specifier|public
specifier|static
specifier|final
name|String
name|OS_VERSION
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.version"
argument_list|)
decl_stmt|;
DECL|field|JAVA_VENDOR
specifier|public
specifier|static
specifier|final
name|String
name|JAVA_VENDOR
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.vendor"
argument_list|)
decl_stmt|;
DECL|field|LUCENE_VERSION
specifier|public
specifier|static
specifier|final
name|String
name|LUCENE_VERSION
decl_stmt|;
DECL|field|LUCENE_MAIN_VERSION
specifier|public
specifier|static
specifier|final
name|String
name|LUCENE_MAIN_VERSION
init|=
literal|"2.9-dev"
decl_stmt|;
static|static
block|{
name|String
name|v
init|=
name|LUCENE_MAIN_VERSION
decl_stmt|;
try|try
block|{
comment|// TODO: this should have worked, but doesn't seem to?
comment|// Package.getPackage("org.apache.lucene.util").getImplementationVersion();
name|String
name|classContainer
init|=
name|Constants
operator|.
name|class
operator|.
name|getProtectionDomain
argument_list|()
operator|.
name|getCodeSource
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|URL
name|manifestUrl
init|=
operator|new
name|URL
argument_list|(
literal|"jar:"
operator|+
name|classContainer
operator|+
literal|"!/META-INF/MANIFEST.MF"
argument_list|)
decl_stmt|;
name|InputStream
name|s
init|=
name|manifestUrl
operator|.
name|openStream
argument_list|()
decl_stmt|;
try|try
block|{
name|Manifest
name|manifest
init|=
operator|new
name|Manifest
argument_list|(
name|s
argument_list|)
decl_stmt|;
name|Attributes
name|attr
init|=
name|manifest
operator|.
name|getMainAttributes
argument_list|()
decl_stmt|;
name|v
operator|=
name|attr
operator|.
name|getValue
argument_list|(
name|Attributes
operator|.
name|Name
operator|.
name|IMPLEMENTATION_VERSION
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
comment|// ignore
block|}
name|LUCENE_VERSION
operator|=
name|v
expr_stmt|;
block|}
block|}
end_class
end_unit
