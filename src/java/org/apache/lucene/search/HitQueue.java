begin_unit
begin_package
DECL|package|org.apache.lucene.search
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|PriorityQueue
import|;
end_import
begin_class
DECL|class|HitQueue
specifier|final
class|class
name|HitQueue
extends|extends
name|PriorityQueue
block|{
DECL|method|HitQueue
name|HitQueue
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|initialize
argument_list|(
name|size
argument_list|)
expr_stmt|;
block|}
DECL|method|lessThan
specifier|protected
specifier|final
name|boolean
name|lessThan
parameter_list|(
name|Object
name|a
parameter_list|,
name|Object
name|b
parameter_list|)
block|{
name|ScoreDoc
name|hitA
init|=
operator|(
name|ScoreDoc
operator|)
name|a
decl_stmt|;
name|ScoreDoc
name|hitB
init|=
operator|(
name|ScoreDoc
operator|)
name|b
decl_stmt|;
if|if
condition|(
name|hitA
operator|.
name|score
operator|==
name|hitB
operator|.
name|score
condition|)
return|return
name|hitA
operator|.
name|doc
operator|>
name|hitB
operator|.
name|doc
return|;
else|else
return|return
name|hitA
operator|.
name|score
operator|<
name|hitB
operator|.
name|score
return|;
block|}
block|}
end_class
end_unit
