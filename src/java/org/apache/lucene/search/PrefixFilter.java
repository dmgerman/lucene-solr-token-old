begin_unit
begin_package
DECL|package|org.apache.lucene.search
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import
begin_comment
comment|/**  * A Filter that restricts search results to values that have a matching prefix in a given  * field.  */
end_comment
begin_class
DECL|class|PrefixFilter
specifier|public
class|class
name|PrefixFilter
extends|extends
name|MultiTermQueryWrapperFilter
block|{
DECL|method|PrefixFilter
specifier|public
name|PrefixFilter
parameter_list|(
name|Term
name|prefix
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|PrefixQuery
argument_list|(
name|prefix
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getPrefix
specifier|public
name|Term
name|getPrefix
parameter_list|()
block|{
return|return
operator|(
operator|(
name|PrefixQuery
operator|)
name|query
operator|)
operator|.
name|getPrefix
argument_list|()
return|;
block|}
comment|/** Prints a user-readable version of this query. */
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuffer
name|buffer
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|buffer
operator|.
name|append
argument_list|(
literal|"PrefixFilter("
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|append
argument_list|(
name|getPrefix
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|append
argument_list|(
literal|")"
argument_list|)
expr_stmt|;
return|return
name|buffer
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class
end_unit
