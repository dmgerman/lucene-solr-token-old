begin_unit
begin_package
DECL|package|org.apache.lucene.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_comment
comment|/**  *  *  **/
end_comment
begin_class
DECL|class|CheckIndexStatus
specifier|public
class|class
name|CheckIndexStatus
block|{
DECL|field|clean
specifier|public
name|boolean
name|clean
decl_stmt|;
DECL|field|missingSegments
specifier|public
name|boolean
name|missingSegments
decl_stmt|;
DECL|field|cantOpenSegments
specifier|public
name|boolean
name|cantOpenSegments
decl_stmt|;
DECL|field|missingSegmentVersion
specifier|public
name|boolean
name|missingSegmentVersion
decl_stmt|;
DECL|field|segmentsFileName
specifier|public
name|String
name|segmentsFileName
decl_stmt|;
DECL|field|numSegments
specifier|public
name|int
name|numSegments
decl_stmt|;
DECL|field|segmentFormat
specifier|public
name|String
name|segmentFormat
decl_stmt|;
DECL|field|segmentsChecked
specifier|public
name|List
comment|/*<String>*/
name|segmentsChecked
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
DECL|field|toolOutOfDate
specifier|public
name|boolean
name|toolOutOfDate
decl_stmt|;
DECL|field|segmentInfos
specifier|public
name|List
comment|/*<SegmentInfoStatus*/
name|segmentInfos
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
DECL|field|dir
specifier|public
name|Directory
name|dir
decl_stmt|;
DECL|field|newSegments
specifier|public
name|SegmentInfos
name|newSegments
decl_stmt|;
DECL|field|totLoseDocCount
specifier|public
name|int
name|totLoseDocCount
decl_stmt|;
DECL|field|numBadSegments
specifier|public
name|int
name|numBadSegments
decl_stmt|;
DECL|class|SegmentInfoStatus
specifier|public
specifier|static
class|class
name|SegmentInfoStatus
block|{
DECL|field|name
specifier|public
name|String
name|name
decl_stmt|;
DECL|field|docCount
specifier|public
name|int
name|docCount
decl_stmt|;
DECL|field|compound
specifier|public
name|boolean
name|compound
decl_stmt|;
DECL|field|numFiles
specifier|public
name|int
name|numFiles
decl_stmt|;
DECL|field|sizeMB
specifier|public
name|double
name|sizeMB
decl_stmt|;
DECL|field|docStoreOffset
specifier|public
name|int
name|docStoreOffset
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|docStoreSegment
specifier|public
name|String
name|docStoreSegment
decl_stmt|;
DECL|field|docStoreCompoundFile
specifier|public
name|boolean
name|docStoreCompoundFile
decl_stmt|;
DECL|field|hasDeletions
specifier|public
name|boolean
name|hasDeletions
decl_stmt|;
DECL|field|deletionsFileName
specifier|public
name|String
name|deletionsFileName
decl_stmt|;
DECL|field|numDeleted
specifier|public
name|int
name|numDeleted
decl_stmt|;
DECL|field|openReaderPassed
specifier|public
name|boolean
name|openReaderPassed
decl_stmt|;
DECL|field|numFields
name|int
name|numFields
decl_stmt|;
DECL|field|hasProx
specifier|public
name|boolean
name|hasProx
decl_stmt|;
block|}
block|}
end_class
end_unit
