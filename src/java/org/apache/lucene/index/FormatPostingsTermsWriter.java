begin_unit
begin_package
DECL|package|org.apache.lucene.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_class
DECL|class|FormatPostingsTermsWriter
specifier|final
class|class
name|FormatPostingsTermsWriter
extends|extends
name|FormatPostingsTermsConsumer
block|{
DECL|field|parent
specifier|final
name|FormatPostingsFieldsWriter
name|parent
decl_stmt|;
DECL|field|docsWriter
specifier|final
name|FormatPostingsDocsWriter
name|docsWriter
decl_stmt|;
DECL|field|termsOut
specifier|final
name|TermInfosWriter
name|termsOut
decl_stmt|;
DECL|field|fieldInfo
name|FieldInfo
name|fieldInfo
decl_stmt|;
DECL|method|FormatPostingsTermsWriter
name|FormatPostingsTermsWriter
parameter_list|(
name|SegmentWriteState
name|state
parameter_list|,
name|FormatPostingsFieldsWriter
name|parent
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|parent
operator|=
name|parent
expr_stmt|;
name|termsOut
operator|=
name|parent
operator|.
name|termsOut
expr_stmt|;
name|docsWriter
operator|=
operator|new
name|FormatPostingsDocsWriter
argument_list|(
name|state
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
DECL|method|setField
name|void
name|setField
parameter_list|(
name|FieldInfo
name|fieldInfo
parameter_list|)
block|{
name|this
operator|.
name|fieldInfo
operator|=
name|fieldInfo
expr_stmt|;
name|docsWriter
operator|.
name|setField
argument_list|(
name|fieldInfo
argument_list|)
expr_stmt|;
block|}
DECL|field|currentTerm
name|char
index|[]
name|currentTerm
decl_stmt|;
DECL|field|currentTermStart
name|int
name|currentTermStart
decl_stmt|;
DECL|field|freqStart
name|long
name|freqStart
decl_stmt|;
DECL|field|proxStart
name|long
name|proxStart
decl_stmt|;
comment|/** Adds a new term in this field */
DECL|method|addTerm
name|FormatPostingsDocsConsumer
name|addTerm
parameter_list|(
name|char
index|[]
name|text
parameter_list|,
name|int
name|start
parameter_list|)
block|{
name|currentTerm
operator|=
name|text
expr_stmt|;
name|currentTermStart
operator|=
name|start
expr_stmt|;
comment|// TODO: this is abstraction violation -- ideally this
comment|// terms writer is not so "invasive", looking for file
comment|// pointers in its child consumers.
name|freqStart
operator|=
name|docsWriter
operator|.
name|out
operator|.
name|getFilePointer
argument_list|()
expr_stmt|;
if|if
condition|(
name|docsWriter
operator|.
name|posWriter
operator|.
name|out
operator|!=
literal|null
condition|)
name|proxStart
operator|=
name|docsWriter
operator|.
name|posWriter
operator|.
name|out
operator|.
name|getFilePointer
argument_list|()
expr_stmt|;
name|parent
operator|.
name|skipListWriter
operator|.
name|resetSkip
argument_list|()
expr_stmt|;
return|return
name|docsWriter
return|;
block|}
comment|/** Called when we are done adding terms to this field */
DECL|method|finish
name|void
name|finish
parameter_list|()
block|{   }
DECL|method|close
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|docsWriter
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class
end_unit
