begin_unit
begin_package
DECL|package|org.apache.solr.util
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
package|;
end_package
begin_comment
comment|/**  *  *  **/
end_comment
begin_comment
comment|//Since Arrays.equals doesn't implement offsets for equals
end_comment
begin_class
DECL|class|ArraysUtils
specifier|public
class|class
name|ArraysUtils
block|{
comment|/**    * See if two array slices are the same.    *    * @param left        The left array to compare    * @param offsetLeft  The offset into the array.  Must be positive    * @param right       The right array to compare    * @param offsetRight the offset into the right array.  Must be positive    * @param length      The length of the section of the array to compare    * @return true if the two arrays, starting at their respective offsets, are equal    *     * @see java.util.Arrays#equals(char[], char[])    */
DECL|method|equals
specifier|public
specifier|static
name|boolean
name|equals
parameter_list|(
name|char
index|[]
name|left
parameter_list|,
name|int
name|offsetLeft
parameter_list|,
name|char
index|[]
name|right
parameter_list|,
name|int
name|offsetRight
parameter_list|,
name|int
name|length
parameter_list|)
block|{
if|if
condition|(
operator|(
name|offsetLeft
operator|+
name|length
operator|<=
name|left
operator|.
name|length
operator|)
operator|&&
operator|(
name|offsetRight
operator|+
name|length
operator|<=
name|right
operator|.
name|length
operator|)
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|left
index|[
name|offsetLeft
operator|+
name|i
index|]
operator|!=
name|right
index|[
name|offsetRight
operator|+
name|i
index|]
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
end_class
end_unit
