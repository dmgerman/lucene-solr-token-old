begin_unit
begin_comment
comment|/**  * Copyright 2006 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.core
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
package|;
end_package
begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|*
import|;
end_import
begin_comment
comment|/**  * @author ronp  * @version $Id: SolrInfo.java,v 1.3 2005/05/02 19:04:59 ronp Exp $  */
end_comment
begin_comment
comment|// MBean pattern for holding various ui friendly strings and URLs
end_comment
begin_comment
comment|// for use by objects which are 'plugable' to make administering
end_comment
begin_comment
comment|// production use easier
end_comment
begin_comment
comment|// name        - simple common usage name, e.g. BasicQueryHandler
end_comment
begin_comment
comment|// version     - simple common usage version, e.g. 2.0
end_comment
begin_comment
comment|// description - simple one or two line description
end_comment
begin_comment
comment|// cvsId       - yes, really the CVS Id      (type 'man co')
end_comment
begin_comment
comment|// cvsName     - yes, really the CVS Name    (type 'man co')
end_comment
begin_comment
comment|// cvsSource   - yes, really the CVS Source  (type 'man co')
end_comment
begin_comment
comment|// docs        - URL list: TWIKI, Faq, Design doc, something! :)
end_comment
begin_class
DECL|class|SolrInfo
specifier|abstract
class|class
name|SolrInfo
implements|implements
name|SolrInfoMBean
block|{
DECL|field|_cvsId
specifier|public
specifier|static
name|String
name|_cvsId
init|=
literal|"$Id: SolrInfo.java,v 1.3 2005/05/02 19:04:59 ronp Exp $"
decl_stmt|;
DECL|field|_cvsSource
specifier|public
specifier|static
name|String
name|_cvsSource
init|=
literal|"$Source: /cvs/main/searching/solr/solarcore/src/solr/SolrInfo.java,v $"
decl_stmt|;
DECL|field|_cvsName
specifier|public
specifier|static
name|String
name|_cvsName
init|=
literal|"$Name:  $"
decl_stmt|;
DECL|method|getName
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|this
operator|.
name|name
return|;
block|}
DECL|method|getVersion
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
return|return
name|this
operator|.
name|version
return|;
block|}
DECL|method|getDescription
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|this
operator|.
name|description
return|;
block|}
DECL|method|getCategory
specifier|public
name|Category
name|getCategory
parameter_list|()
block|{
return|return
name|SolrInfoMBean
operator|.
name|Category
operator|.
name|QUERYHANDLER
return|;
block|}
DECL|method|getCvsId
specifier|public
name|String
name|getCvsId
parameter_list|()
block|{
return|return
name|this
operator|.
name|cvsId
return|;
block|}
DECL|method|getCvsName
specifier|public
name|String
name|getCvsName
parameter_list|()
block|{
return|return
name|this
operator|.
name|cvsName
return|;
block|}
DECL|method|getCvsSource
specifier|public
name|String
name|getCvsSource
parameter_list|()
block|{
return|return
name|this
operator|.
name|cvsSource
return|;
block|}
DECL|method|getDocs
specifier|public
name|URL
index|[]
name|getDocs
parameter_list|()
block|{
return|return
name|this
operator|.
name|docs
return|;
block|}
DECL|method|getStatistics
specifier|public
name|NamedList
name|getStatistics
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
DECL|method|setName
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
DECL|method|setVersion
specifier|public
name|void
name|setVersion
parameter_list|(
name|String
name|vers
parameter_list|)
block|{
name|this
operator|.
name|version
operator|=
name|vers
expr_stmt|;
block|}
DECL|method|setDescription
specifier|public
name|void
name|setDescription
parameter_list|(
name|String
name|desc
parameter_list|)
block|{
name|this
operator|.
name|description
operator|=
name|desc
expr_stmt|;
block|}
DECL|method|setCvsId
specifier|public
name|void
name|setCvsId
parameter_list|(
name|String
name|cvsId
parameter_list|)
block|{
name|this
operator|.
name|cvsId
operator|=
name|cvsId
expr_stmt|;
block|}
DECL|method|setCvsName
specifier|public
name|void
name|setCvsName
parameter_list|(
name|String
name|cvsName
parameter_list|)
block|{
name|this
operator|.
name|cvsName
operator|=
name|cvsName
expr_stmt|;
block|}
DECL|method|setCvsSource
specifier|public
name|void
name|setCvsSource
parameter_list|(
name|String
name|cvsSource
parameter_list|)
block|{
name|this
operator|.
name|cvsSource
operator|=
name|cvsSource
expr_stmt|;
block|}
DECL|method|setDocs
specifier|public
name|void
name|setDocs
parameter_list|(
name|URL
index|[]
name|docs
parameter_list|)
block|{
name|this
operator|.
name|docs
operator|=
name|docs
expr_stmt|;
block|}
DECL|method|addDoc
specifier|public
name|void
name|addDoc
parameter_list|(
name|URL
name|doc
parameter_list|)
block|{
if|if
condition|(
name|doc
operator|==
literal|null
condition|)
block|{
comment|// should throw runtime exception
return|return;
block|}
if|if
condition|(
name|docs
operator|!=
literal|null
condition|)
block|{
name|URL
index|[]
name|newDocs
init|=
operator|new
name|URL
index|[
name|docs
operator|.
name|length
operator|+
literal|1
index|]
decl_stmt|;
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|docs
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|newDocs
index|[
name|i
index|]
operator|=
name|docs
index|[
name|i
index|]
expr_stmt|;
block|}
name|newDocs
index|[
name|i
index|]
operator|=
name|doc
expr_stmt|;
name|docs
operator|=
name|newDocs
expr_stmt|;
block|}
else|else
block|{
name|docs
operator|=
operator|new
name|URL
index|[
literal|1
index|]
expr_stmt|;
name|docs
index|[
literal|0
index|]
operator|=
name|doc
expr_stmt|;
block|}
block|}
DECL|method|addDoc
specifier|public
name|void
name|addDoc
parameter_list|(
name|String
name|doc
parameter_list|)
block|{
if|if
condition|(
name|doc
operator|==
literal|null
condition|)
block|{
comment|// should throw runtime exception
return|return;
block|}
try|try
block|{
name|URL
name|docURL
init|=
operator|new
name|URL
argument_list|(
name|doc
argument_list|)
decl_stmt|;
name|addDoc
argument_list|(
name|docURL
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// ignore for now
block|}
block|}
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
DECL|field|version
specifier|private
name|String
name|version
decl_stmt|;
DECL|field|description
specifier|private
name|String
name|description
decl_stmt|;
DECL|field|cvsId
specifier|public
name|String
name|cvsId
decl_stmt|;
DECL|field|cvsSource
specifier|public
name|String
name|cvsSource
decl_stmt|;
DECL|field|cvsName
specifier|public
name|String
name|cvsName
decl_stmt|;
DECL|field|docs
specifier|private
name|URL
index|[]
name|docs
decl_stmt|;
block|}
end_class
end_unit
