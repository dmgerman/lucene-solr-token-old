begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.handler
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|SolrCore
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|WeakHashMap
import|;
end_import
begin_comment
comment|/**  *<p/>  * Provides functionality equivalent to the snapshooter script  *</p>  *  * @version $Id$  * @since solr 1.4  */
end_comment
begin_class
DECL|class|SnapShooter
specifier|public
class|class
name|SnapShooter
block|{
DECL|field|snapDir
specifier|private
name|String
name|snapDir
init|=
literal|null
decl_stmt|;
DECL|field|solrCore
specifier|private
name|SolrCore
name|solrCore
decl_stmt|;
DECL|method|SnapShooter
specifier|public
name|SnapShooter
parameter_list|(
name|SolrCore
name|core
parameter_list|)
block|{
name|solrCore
operator|=
name|core
expr_stmt|;
block|}
DECL|method|createSnapAsync
name|void
name|createSnapAsync
parameter_list|(
specifier|final
name|Collection
argument_list|<
name|String
argument_list|>
name|files
parameter_list|)
block|{
operator|new
name|Thread
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
name|createSnapshot
argument_list|(
name|files
argument_list|)
expr_stmt|;
block|}
block|}
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
DECL|method|createSnapshot
name|void
name|createSnapshot
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|files
parameter_list|)
block|{
name|File
name|lockFile
init|=
literal|null
decl_stmt|;
name|File
name|snapShotDir
init|=
literal|null
decl_stmt|;
name|String
name|directoryName
init|=
literal|null
decl_stmt|;
try|try
block|{
name|lockFile
operator|=
operator|new
name|File
argument_list|(
name|snapDir
argument_list|,
name|directoryName
operator|+
literal|".lock"
argument_list|)
expr_stmt|;
if|if
condition|(
name|lockFile
operator|.
name|exists
argument_list|()
condition|)
block|{
return|return;
block|}
name|SimpleDateFormat
name|fmt
init|=
operator|new
name|SimpleDateFormat
argument_list|(
name|DATE_FMT
argument_list|)
decl_stmt|;
name|directoryName
operator|=
literal|"snapshot."
operator|+
name|fmt
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
name|snapShotDir
operator|=
operator|new
name|File
argument_list|(
name|snapDir
argument_list|,
name|directoryName
argument_list|)
expr_stmt|;
name|lockFile
operator|.
name|createNewFile
argument_list|()
expr_stmt|;
name|snapShotDir
operator|.
name|mkdir
argument_list|()
expr_stmt|;
for|for
control|(
name|String
name|indexFile
range|:
name|files
control|)
block|{
name|copyFile2Dir
argument_list|(
operator|new
name|File
argument_list|(
name|solrCore
operator|.
name|getIndexDir
argument_list|()
argument_list|,
name|indexFile
argument_list|)
argument_list|,
name|snapShotDir
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|SnapPuller
operator|.
name|delTree
argument_list|(
name|snapShotDir
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|SolrException
argument_list|(
name|SolrException
operator|.
name|ErrorCode
operator|.
name|SERVER_ERROR
argument_list|,
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|lockFile
operator|!=
literal|null
condition|)
block|{
name|lockFile
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
block|}
block|}
DECL|method|copyFile2Dir
specifier|static
name|void
name|copyFile2Dir
parameter_list|(
name|File
name|file
parameter_list|,
name|File
name|toDir
parameter_list|)
throws|throws
name|IOException
block|{
name|FileInputStream
name|fis
init|=
literal|null
decl_stmt|;
name|FileOutputStream
name|fos
init|=
literal|null
decl_stmt|;
try|try
block|{
name|fis
operator|=
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|File
name|destFile
init|=
operator|new
name|File
argument_list|(
name|toDir
argument_list|,
name|file
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|fos
operator|=
operator|new
name|FileOutputStream
argument_list|(
name|destFile
argument_list|)
expr_stmt|;
name|fis
operator|.
name|getChannel
argument_list|()
operator|.
name|transferTo
argument_list|(
literal|0
argument_list|,
name|fis
operator|.
name|available
argument_list|()
argument_list|,
name|fos
operator|.
name|getChannel
argument_list|()
argument_list|)
expr_stmt|;
name|destFile
operator|.
name|setLastModified
argument_list|(
name|file
operator|.
name|lastModified
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|ReplicationHandler
operator|.
name|closeNoExp
argument_list|(
name|fis
argument_list|)
expr_stmt|;
name|ReplicationHandler
operator|.
name|closeNoExp
argument_list|(
name|fos
argument_list|)
expr_stmt|;
block|}
block|}
DECL|field|SNAP_DIR
specifier|public
specifier|static
specifier|final
name|String
name|SNAP_DIR
init|=
literal|"snapDir"
decl_stmt|;
DECL|field|DATE_FMT
specifier|public
specifier|static
specifier|final
name|String
name|DATE_FMT
init|=
literal|"yyyyMMddhhmmss"
decl_stmt|;
DECL|field|SNAP_DIRS
specifier|private
specifier|static
name|WeakHashMap
argument_list|<
name|SolrCore
argument_list|,
name|SnapShooter
argument_list|>
name|SNAP_DIRS
init|=
operator|new
name|WeakHashMap
argument_list|<
name|SolrCore
argument_list|,
name|SnapShooter
argument_list|>
argument_list|()
decl_stmt|;
block|}
end_class
end_unit
