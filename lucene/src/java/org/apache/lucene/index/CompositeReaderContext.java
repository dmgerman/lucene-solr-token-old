begin_unit
begin_package
DECL|package|org.apache.lucene.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/**  * {@link IndexReaderContext} for {@link CompositeReader} instance.  * @lucene.experimental  */
end_comment
begin_class
DECL|class|CompositeReaderContext
specifier|public
specifier|final
class|class
name|CompositeReaderContext
extends|extends
name|IndexReaderContext
block|{
DECL|field|children
specifier|private
specifier|final
name|IndexReaderContext
index|[]
name|children
decl_stmt|;
DECL|field|leaves
specifier|private
specifier|final
name|AtomicReaderContext
index|[]
name|leaves
decl_stmt|;
DECL|field|reader
specifier|private
specifier|final
name|CompositeReader
name|reader
decl_stmt|;
comment|/**    * Creates a {@link CompositeReaderContext} for intermediate readers that aren't    * not top-level readers in the current context    */
DECL|method|CompositeReaderContext
name|CompositeReaderContext
parameter_list|(
name|CompositeReaderContext
name|parent
parameter_list|,
name|CompositeReader
name|reader
parameter_list|,
name|int
name|ordInParent
parameter_list|,
name|int
name|docbaseInParent
parameter_list|,
name|IndexReaderContext
index|[]
name|children
parameter_list|)
block|{
name|this
argument_list|(
name|parent
argument_list|,
name|reader
argument_list|,
name|ordInParent
argument_list|,
name|docbaseInParent
argument_list|,
name|children
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**    * Creates a {@link CompositeReaderContext} for top-level readers with parent set to<code>null</code>    */
DECL|method|CompositeReaderContext
name|CompositeReaderContext
parameter_list|(
name|CompositeReader
name|reader
parameter_list|,
name|IndexReaderContext
index|[]
name|children
parameter_list|,
name|AtomicReaderContext
index|[]
name|leaves
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
name|reader
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|children
argument_list|,
name|leaves
argument_list|)
expr_stmt|;
block|}
DECL|method|CompositeReaderContext
specifier|private
name|CompositeReaderContext
parameter_list|(
name|CompositeReaderContext
name|parent
parameter_list|,
name|CompositeReader
name|reader
parameter_list|,
name|int
name|ordInParent
parameter_list|,
name|int
name|docbaseInParent
parameter_list|,
name|IndexReaderContext
index|[]
name|children
parameter_list|,
name|AtomicReaderContext
index|[]
name|leaves
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|,
name|ordInParent
argument_list|,
name|docbaseInParent
argument_list|)
expr_stmt|;
name|this
operator|.
name|children
operator|=
name|children
expr_stmt|;
name|this
operator|.
name|leaves
operator|=
name|leaves
expr_stmt|;
name|this
operator|.
name|reader
operator|=
name|reader
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|leaves
specifier|public
name|AtomicReaderContext
index|[]
name|leaves
parameter_list|()
block|{
return|return
name|leaves
return|;
block|}
annotation|@
name|Override
DECL|method|children
specifier|public
name|IndexReaderContext
index|[]
name|children
parameter_list|()
block|{
return|return
name|children
return|;
block|}
annotation|@
name|Override
DECL|method|reader
specifier|public
name|CompositeReader
name|reader
parameter_list|()
block|{
return|return
name|reader
return|;
block|}
block|}
end_class
end_unit
