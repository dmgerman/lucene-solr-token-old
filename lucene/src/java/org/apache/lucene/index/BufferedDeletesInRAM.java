begin_unit
begin_package
DECL|package|org.apache.lucene.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|ThreadSafeCloneableSortedMap
import|;
end_import
begin_class
DECL|class|BufferedDeletesInRAM
specifier|public
class|class
name|BufferedDeletesInRAM
block|{
DECL|class|Delete
specifier|static
class|class
name|Delete
block|{
DECL|field|flushCount
name|int
name|flushCount
decl_stmt|;
DECL|method|Delete
specifier|public
name|Delete
parameter_list|(
name|int
name|flushCount
parameter_list|)
block|{
name|this
operator|.
name|flushCount
operator|=
name|flushCount
expr_stmt|;
block|}
block|}
DECL|class|DeleteTerm
specifier|final
specifier|static
class|class
name|DeleteTerm
extends|extends
name|Delete
block|{
DECL|field|term
specifier|final
name|Term
name|term
decl_stmt|;
DECL|method|DeleteTerm
specifier|public
name|DeleteTerm
parameter_list|(
name|Term
name|term
parameter_list|,
name|int
name|flushCount
parameter_list|)
block|{
name|super
argument_list|(
name|flushCount
argument_list|)
expr_stmt|;
name|this
operator|.
name|term
operator|=
name|term
expr_stmt|;
block|}
block|}
DECL|class|DeleteTerms
specifier|final
specifier|static
class|class
name|DeleteTerms
extends|extends
name|Delete
block|{
DECL|field|terms
specifier|final
name|Term
index|[]
name|terms
decl_stmt|;
DECL|method|DeleteTerms
specifier|public
name|DeleteTerms
parameter_list|(
name|Term
index|[]
name|terms
parameter_list|,
name|int
name|flushCount
parameter_list|)
block|{
name|super
argument_list|(
name|flushCount
argument_list|)
expr_stmt|;
name|this
operator|.
name|terms
operator|=
name|terms
expr_stmt|;
block|}
block|}
DECL|class|DeleteQuery
specifier|final
specifier|static
class|class
name|DeleteQuery
extends|extends
name|Delete
block|{
DECL|field|query
specifier|final
name|Query
name|query
decl_stmt|;
DECL|method|DeleteQuery
specifier|public
name|DeleteQuery
parameter_list|(
name|Query
name|query
parameter_list|,
name|int
name|flushCount
parameter_list|)
block|{
name|super
argument_list|(
name|flushCount
argument_list|)
expr_stmt|;
name|this
operator|.
name|query
operator|=
name|query
expr_stmt|;
block|}
block|}
DECL|field|deletes
specifier|final
name|ThreadSafeCloneableSortedMap
argument_list|<
name|Long
argument_list|,
name|Delete
argument_list|>
name|deletes
init|=
name|ThreadSafeCloneableSortedMap
operator|.
name|getThreadSafeSortedMap
argument_list|(
operator|new
name|TreeMap
argument_list|<
name|Long
argument_list|,
name|Delete
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
DECL|method|addDeleteTerm
specifier|final
name|void
name|addDeleteTerm
parameter_list|(
name|Term
name|term
parameter_list|,
name|long
name|sequenceID
parameter_list|,
name|int
name|numThreadStates
parameter_list|)
block|{
name|deletes
operator|.
name|put
argument_list|(
name|sequenceID
argument_list|,
operator|new
name|DeleteTerm
argument_list|(
name|term
argument_list|,
name|numThreadStates
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|addDeleteTerms
specifier|final
name|void
name|addDeleteTerms
parameter_list|(
name|Term
index|[]
name|terms
parameter_list|,
name|long
name|sequenceID
parameter_list|,
name|int
name|numThreadStates
parameter_list|)
block|{
name|deletes
operator|.
name|put
argument_list|(
name|sequenceID
argument_list|,
operator|new
name|DeleteTerms
argument_list|(
name|terms
argument_list|,
name|numThreadStates
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|addDeleteQuery
specifier|final
name|void
name|addDeleteQuery
parameter_list|(
name|Query
name|query
parameter_list|,
name|long
name|sequenceID
parameter_list|,
name|int
name|numThreadStates
parameter_list|)
block|{
name|deletes
operator|.
name|put
argument_list|(
name|sequenceID
argument_list|,
operator|new
name|DeleteQuery
argument_list|(
name|query
argument_list|,
name|numThreadStates
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|hasDeletes
name|boolean
name|hasDeletes
parameter_list|()
block|{
return|return
operator|!
name|deletes
operator|.
name|isEmpty
argument_list|()
return|;
block|}
DECL|method|clear
name|void
name|clear
parameter_list|()
block|{
name|deletes
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
DECL|method|getNumDeletes
name|int
name|getNumDeletes
parameter_list|()
block|{
return|return
name|this
operator|.
name|deletes
operator|.
name|size
argument_list|()
return|;
block|}
block|}
end_class
end_unit
