begin_unit
begin_package
DECL|package|org.apache.lucene.util
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|codecs
operator|.
name|CodecProvider
import|;
end_import
begin_comment
comment|/**  * Base test class for Lucene test classes that to test across  * all core codecs.  */
end_comment
begin_class
DECL|class|MultiCodecTestCase
specifier|public
specifier|abstract
class|class
name|MultiCodecTestCase
extends|extends
name|LuceneTestCase
block|{
annotation|@
name|Override
DECL|method|runBare
specifier|public
name|void
name|runBare
parameter_list|()
throws|throws
name|Throwable
block|{
specifier|final
name|String
name|savedDefaultCodec
init|=
name|CodecProvider
operator|.
name|getDefaultCodec
argument_list|()
decl_stmt|;
try|try
block|{
for|for
control|(
name|String
name|codec
range|:
name|CodecProvider
operator|.
name|CORE_CODECS
control|)
block|{
name|CodecProvider
operator|.
name|setDefaultCodec
argument_list|(
name|codec
argument_list|)
expr_stmt|;
try|try
block|{
name|super
operator|.
name|runBare
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Test failure of '"
operator|+
name|getName
argument_list|()
operator|+
literal|"' occurred with \""
operator|+
name|codec
operator|+
literal|"\" codec"
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
block|}
finally|finally
block|{
name|CodecProvider
operator|.
name|setDefaultCodec
argument_list|(
name|savedDefaultCodec
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
