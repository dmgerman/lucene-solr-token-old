begin_unit
begin_package
DECL|package|org.apache.lucene.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|MockAnalyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|FieldType
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|TextField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriterConfig
operator|.
name|OpenMode
import|;
end_import
begin_comment
comment|/**  * Some tests for {@link ParallelReader}s with empty indexes  *   * @author Christian Kohlschuetter  */
end_comment
begin_class
DECL|class|TestParallelReaderEmptyIndex
specifier|public
class|class
name|TestParallelReaderEmptyIndex
extends|extends
name|LuceneTestCase
block|{
comment|/**    * Creates two empty indexes and wraps a ParallelReader around. Adding this    * reader to a new index should not throw any exception.    *     * @throws IOException    */
DECL|method|testEmptyIndex
specifier|public
name|void
name|testEmptyIndex
parameter_list|()
throws|throws
name|IOException
block|{
name|Directory
name|rd1
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|iw
init|=
operator|new
name|IndexWriter
argument_list|(
name|rd1
argument_list|,
name|newIndexWriterConfig
argument_list|(
name|TEST_VERSION_CURRENT
argument_list|,
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
name|Directory
name|rd2
init|=
name|newDirectory
argument_list|(
name|rd1
argument_list|)
decl_stmt|;
name|Directory
name|rdOut
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|iwOut
init|=
operator|new
name|IndexWriter
argument_list|(
name|rdOut
argument_list|,
name|newIndexWriterConfig
argument_list|(
name|TEST_VERSION_CURRENT
argument_list|,
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|ParallelReader
name|pr
init|=
operator|new
name|ParallelReader
argument_list|()
decl_stmt|;
name|pr
operator|.
name|add
argument_list|(
name|IndexReader
operator|.
name|open
argument_list|(
name|rd1
argument_list|)
argument_list|)
expr_stmt|;
name|pr
operator|.
name|add
argument_list|(
name|IndexReader
operator|.
name|open
argument_list|(
name|rd2
argument_list|)
argument_list|)
expr_stmt|;
comment|// When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)
name|iwOut
operator|.
name|addIndexes
argument_list|(
name|pr
argument_list|)
expr_stmt|;
name|iwOut
operator|.
name|forceMerge
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|iwOut
operator|.
name|close
argument_list|()
expr_stmt|;
name|rdOut
operator|.
name|close
argument_list|()
expr_stmt|;
name|rd1
operator|.
name|close
argument_list|()
expr_stmt|;
name|rd2
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|/**    * This method creates an empty index (numFields=0, numDocs=0) but is marked    * to have TermVectors. Adding this index to another index should not throw    * any exception.    */
comment|/* nocommit: Fix tests to use an id and delete by term   public void testEmptyIndexWithVectors() throws IOException {     Directory rd1 = newDirectory();     {       IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));       Document doc = new Document();       FieldType customType = new FieldType(TextField.TYPE_UNSTORED);       customType.setStoreTermVectors(true);       doc.add(newField("test", "", customType));       iw.addDocument(doc);       doc.add(newField("test", "", TextField.TYPE_UNSTORED));       iw.addDocument(doc);       iw.close();        IndexReader ir = IndexReader.open(rd1);       ir.deleteDocument(0);       ir.close();        iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));       iw.forceMerge(1);       iw.close();     }      Directory rd2 = newDirectory();     {       IndexWriter iw = new IndexWriter(rd2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));       Document doc = new Document();       iw.addDocument(doc);       iw.close();     }      Directory rdOut = newDirectory();      IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));     ParallelReader pr = new ParallelReader();     pr.add(IndexReader.open(rd1));     pr.add(IndexReader.open(rd2));      // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)     iwOut.addIndexes(pr);      // ParallelReader closes any IndexReader you added to it:     pr.close();      rd1.close();     rd2.close(); 		     iwOut.forceMerge(1);     iwOut.close();          rdOut.close();   }   */
block|}
end_class
end_unit
