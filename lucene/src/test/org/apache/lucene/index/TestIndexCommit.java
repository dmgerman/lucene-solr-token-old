begin_unit
begin_package
DECL|package|org.apache.lucene.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_class
DECL|class|TestIndexCommit
specifier|public
class|class
name|TestIndexCommit
extends|extends
name|LuceneTestCaseJ4
block|{
annotation|@
name|Test
DECL|method|testEqualsHashCode
specifier|public
name|void
name|testEqualsHashCode
parameter_list|()
throws|throws
name|Exception
block|{
comment|// LUCENE-2417: equals and hashCode() impl was inconsistent
specifier|final
name|Directory
name|dir
init|=
name|newDirectory
argument_list|(
name|newRandom
argument_list|()
argument_list|)
decl_stmt|;
name|IndexCommit
name|ic1
init|=
operator|new
name|IndexCommit
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getSegmentsFileName
parameter_list|()
block|{
return|return
literal|"a"
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getVersion
parameter_list|()
block|{
return|return
literal|12
return|;
block|}
annotation|@
name|Override
specifier|public
name|Directory
name|getDirectory
parameter_list|()
block|{
return|return
name|dir
return|;
block|}
annotation|@
name|Override
specifier|public
name|Collection
argument_list|<
name|String
argument_list|>
name|getFileNames
parameter_list|()
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|delete
parameter_list|()
block|{}
annotation|@
name|Override
specifier|public
name|long
name|getGeneration
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getTimestamp
parameter_list|()
throws|throws
name|IOException
block|{
return|return
literal|1
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getUserData
parameter_list|()
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isDeleted
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isOptimized
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
decl_stmt|;
name|IndexCommit
name|ic2
init|=
operator|new
name|IndexCommit
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getSegmentsFileName
parameter_list|()
block|{
return|return
literal|"b"
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getVersion
parameter_list|()
block|{
return|return
literal|12
return|;
block|}
annotation|@
name|Override
specifier|public
name|Directory
name|getDirectory
parameter_list|()
block|{
return|return
name|dir
return|;
block|}
annotation|@
name|Override
specifier|public
name|Collection
argument_list|<
name|String
argument_list|>
name|getFileNames
parameter_list|()
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|delete
parameter_list|()
block|{}
annotation|@
name|Override
specifier|public
name|long
name|getGeneration
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getTimestamp
parameter_list|()
throws|throws
name|IOException
block|{
return|return
literal|1
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getUserData
parameter_list|()
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isDeleted
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isOptimized
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
decl_stmt|;
name|assertEquals
argument_list|(
name|ic1
argument_list|,
name|ic2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hash codes are not equals"
argument_list|,
name|ic1
operator|.
name|hashCode
argument_list|()
argument_list|,
name|ic2
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class
end_unit
