begin_unit
begin_package
DECL|package|org.apache.lucene.index.codecs.intblock
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|codecs
operator|.
name|intblock
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|*
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|codecs
operator|.
name|sep
operator|.
name|*
import|;
end_import
begin_class
DECL|class|TestIntBlockCodec
specifier|public
class|class
name|TestIntBlockCodec
extends|extends
name|LuceneTestCase
block|{
DECL|method|testSimpleIntBlocks
specifier|public
name|void
name|testSimpleIntBlocks
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
operator|new
name|MockRAMDirectory
argument_list|()
decl_stmt|;
name|IntIndexOutput
name|out
init|=
operator|new
name|SimpleIntBlockIndexOutput
argument_list|(
name|dir
argument_list|,
literal|"test"
argument_list|,
literal|128
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|11777
condition|;
name|i
operator|++
control|)
block|{
name|out
operator|.
name|write
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|IntIndexInput
name|in
init|=
operator|new
name|SimpleIntBlockIndexInput
argument_list|(
name|dir
argument_list|,
literal|"test"
argument_list|,
literal|128
argument_list|)
decl_stmt|;
name|IntIndexInput
operator|.
name|Reader
name|r
init|=
name|in
operator|.
name|reader
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|11777
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
name|i
argument_list|,
name|r
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testEmptySimpleIntBlocks
specifier|public
name|void
name|testEmptySimpleIntBlocks
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
operator|new
name|MockRAMDirectory
argument_list|()
decl_stmt|;
name|IntIndexOutput
name|out
init|=
operator|new
name|SimpleIntBlockIndexOutput
argument_list|(
name|dir
argument_list|,
literal|"test"
argument_list|,
literal|128
argument_list|)
decl_stmt|;
comment|// write no ints
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|IntIndexInput
name|in
init|=
operator|new
name|SimpleIntBlockIndexInput
argument_list|(
name|dir
argument_list|,
literal|"test"
argument_list|,
literal|128
argument_list|)
decl_stmt|;
name|IntIndexInput
operator|.
name|Reader
name|r
init|=
name|in
operator|.
name|reader
argument_list|()
decl_stmt|;
comment|// read no ints
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class
end_unit
