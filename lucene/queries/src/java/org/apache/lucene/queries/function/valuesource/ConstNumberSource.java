begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.queries.function.valuesource
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queries
operator|.
name|function
operator|.
name|valuesource
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queries
operator|.
name|function
operator|.
name|ValueSource
import|;
end_import
begin_comment
comment|/**  *<code>ConstNumberSource</code> is the base class for all constant numbers  */
end_comment
begin_class
DECL|class|ConstNumberSource
specifier|public
specifier|abstract
class|class
name|ConstNumberSource
extends|extends
name|ValueSource
block|{
DECL|method|getInt
specifier|public
specifier|abstract
name|int
name|getInt
parameter_list|()
function_decl|;
DECL|method|getLong
specifier|public
specifier|abstract
name|long
name|getLong
parameter_list|()
function_decl|;
DECL|method|getFloat
specifier|public
specifier|abstract
name|float
name|getFloat
parameter_list|()
function_decl|;
DECL|method|getDouble
specifier|public
specifier|abstract
name|double
name|getDouble
parameter_list|()
function_decl|;
DECL|method|getNumber
specifier|public
specifier|abstract
name|Number
name|getNumber
parameter_list|()
function_decl|;
DECL|method|getBool
specifier|public
specifier|abstract
name|boolean
name|getBool
parameter_list|()
function_decl|;
block|}
end_class
end_unit
