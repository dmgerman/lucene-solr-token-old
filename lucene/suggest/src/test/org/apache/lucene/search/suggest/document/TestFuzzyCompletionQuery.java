begin_unit
begin_package
DECL|package|org.apache.lucene.search.suggest.document
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|suggest
operator|.
name|document
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|Analyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|MockAnalyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|RandomIndexWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|suggest
operator|.
name|document
operator|.
name|TestSuggestField
operator|.
name|Entry
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|suggest
operator|.
name|document
operator|.
name|TestSuggestField
operator|.
name|assertSuggestions
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|suggest
operator|.
name|document
operator|.
name|TestSuggestField
operator|.
name|iwcWithSuggestField
import|;
end_import
begin_class
DECL|class|TestFuzzyCompletionQuery
specifier|public
class|class
name|TestFuzzyCompletionQuery
extends|extends
name|LuceneTestCase
block|{
DECL|field|dir
specifier|public
name|Directory
name|dir
decl_stmt|;
annotation|@
name|Before
DECL|method|before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|dir
operator|=
name|newDirectory
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|after
specifier|public
name|void
name|after
parameter_list|()
throws|throws
name|Exception
block|{
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFuzzyQuery
specifier|public
name|void
name|testFuzzyQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"suggestion"
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"suaggestion"
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"ssuggestion"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|SuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"sugfoo"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
if|if
condition|(
name|rarely
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|SuggestIndexSearcher
name|suggestIndexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|CompletionQuery
name|query
init|=
operator|new
name|FuzzyCompletionQuery
argument_list|(
name|analyzer
argument_list|,
operator|new
name|Term
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"sugg"
argument_list|)
argument_list|)
decl_stmt|;
name|TopSuggestDocs
name|suggest
init|=
name|suggestIndexSearcher
operator|.
name|suggest
argument_list|(
name|query
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"suaggestion"
argument_list|,
literal|4
operator|*
literal|2
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"suggestion"
argument_list|,
literal|2
operator|*
literal|3
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"sugfoo"
argument_list|,
literal|1
operator|*
literal|3
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"ssuggestion"
argument_list|,
literal|1
operator|*
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFuzzyContextQuery
specifier|public
name|void
name|testFuzzyContextQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|ContextSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"type1"
argument_list|)
argument_list|,
literal|"sduggestion"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|ContextSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"type2"
argument_list|)
argument_list|,
literal|"sudggestion"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|ContextSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"type3"
argument_list|)
argument_list|,
literal|"sugdgestion"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|ContextSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"type4"
argument_list|)
argument_list|,
literal|"suggdestion"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|ContextSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"type4"
argument_list|)
argument_list|,
literal|"suggestion"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
if|if
condition|(
name|rarely
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|SuggestIndexSearcher
name|suggestIndexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|CompletionQuery
name|query
init|=
operator|new
name|ContextQuery
argument_list|(
operator|new
name|FuzzyCompletionQuery
argument_list|(
name|analyzer
argument_list|,
operator|new
name|Term
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"sugge"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|TopSuggestDocs
name|suggest
init|=
name|suggestIndexSearcher
operator|.
name|suggest
argument_list|(
name|query
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"suggestion"
argument_list|,
literal|"type4"
argument_list|,
literal|1
operator|+
literal|4
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"suggdestion"
argument_list|,
literal|"type4"
argument_list|,
literal|1
operator|+
literal|4
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"sugdgestion"
argument_list|,
literal|"type3"
argument_list|,
literal|1
operator|+
literal|3
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"sudggestion"
argument_list|,
literal|"type2"
argument_list|,
literal|1
operator|+
literal|2
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"sduggestion"
argument_list|,
literal|"type1"
argument_list|,
literal|1
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFuzzyFilteredContextQuery
specifier|public
name|void
name|testFuzzyFilteredContextQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|ContextSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"type1"
argument_list|)
argument_list|,
literal|"sduggestion"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|ContextSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"type2"
argument_list|)
argument_list|,
literal|"sudggestion"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|ContextSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"type3"
argument_list|)
argument_list|,
literal|"sugdgestion"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|ContextSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"type4"
argument_list|)
argument_list|,
literal|"suggdestion"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|ContextSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"type4"
argument_list|)
argument_list|,
literal|"suggestion"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
if|if
condition|(
name|rarely
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|SuggestIndexSearcher
name|suggestIndexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|CompletionQuery
name|fuzzyQuery
init|=
operator|new
name|FuzzyCompletionQuery
argument_list|(
name|analyzer
argument_list|,
operator|new
name|Term
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"sugge"
argument_list|)
argument_list|)
decl_stmt|;
name|ContextQuery
name|contextQuery
init|=
operator|new
name|ContextQuery
argument_list|(
name|fuzzyQuery
argument_list|)
decl_stmt|;
name|contextQuery
operator|.
name|addContext
argument_list|(
literal|"type1"
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|contextQuery
operator|.
name|addContext
argument_list|(
literal|"type3"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|TopSuggestDocs
name|suggest
init|=
name|suggestIndexSearcher
operator|.
name|suggest
argument_list|(
name|contextQuery
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"sduggestion"
argument_list|,
literal|"type1"
argument_list|,
literal|1
operator|*
operator|(
literal|1
operator|+
literal|6
operator|)
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"sugdgestion"
argument_list|,
literal|"type3"
argument_list|,
literal|1
operator|*
operator|(
literal|3
operator|+
literal|2
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class
end_unit
