begin_unit
begin_package
DECL|package|org.apache.lucene.search.suggest.document
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|suggest
operator|.
name|document
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CopyOnWriteArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CyclicBarrier
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|Analyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|MockAnalyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|MockTokenFilter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|MockTokenizer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|miscellaneous
operator|.
name|PerFieldAnalyzerWrapper
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|Codec
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|PostingsFormat
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene50
operator|.
name|Lucene50Codec
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|IntField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriterConfig
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|LeafReaderContext
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|RandomIndexWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|StoredDocument
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|Term
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queries
operator|.
name|TermsQuery
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|DocIdSet
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|DocIdSetIterator
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Filter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|NumericRangeQuery
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|QueryWrapperFilter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|ScoreDoc
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TopDocs
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BitDocIdSet
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Bits
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|FixedBitSet
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LineFileDocs
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|TestUtil
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|suggest
operator|.
name|document
operator|.
name|TopSuggestDocs
operator|.
name|*
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|IsEqual
operator|.
name|equalTo
import|;
end_import
begin_class
DECL|class|SuggestFieldTest
specifier|public
class|class
name|SuggestFieldTest
extends|extends
name|LuceneTestCase
block|{
DECL|field|dir
specifier|public
name|Directory
name|dir
decl_stmt|;
annotation|@
name|Before
DECL|method|before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|dir
operator|=
name|newDirectory
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|after
specifier|public
name|void
name|after
parameter_list|()
throws|throws
name|Exception
block|{
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSimple
specifier|public
name|void
name|testSimple
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc"
argument_list|,
literal|3l
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abd"
argument_list|,
literal|4l
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"The Foo Fighters"
argument_list|,
literal|2l
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abcdd"
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
if|if
condition|(
name|rarely
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|SuggestIndexSearcher
name|suggestIndexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
name|TopSuggestDocs
name|lookupDocs
init|=
name|suggestIndexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"ab"
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
name|lookupDocs
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"abcdd"
argument_list|,
literal|5
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"abd"
argument_list|,
literal|4
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"abc"
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultipleSuggestFieldsPerDoc
specifier|public
name|void
name|testMultipleSuggestFieldsPerDoc
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"sug_field_1"
argument_list|,
literal|"sug_field_2"
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"sug_field_1"
argument_list|,
literal|"apple"
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"sug_field_2"
argument_list|,
literal|"april"
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"sug_field_1"
argument_list|,
literal|"aples"
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"sug_field_2"
argument_list|,
literal|"apartment"
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
if|if
condition|(
name|rarely
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|SuggestIndexSearcher
name|suggestIndexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
name|TopSuggestDocs
name|suggestDocs1
init|=
name|suggestIndexSearcher
operator|.
name|suggest
argument_list|(
literal|"sug_field_1"
argument_list|,
literal|"ap"
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggestDocs1
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"apple"
argument_list|,
literal|4
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"aples"
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|TopSuggestDocs
name|suggestDocs2
init|=
name|suggestIndexSearcher
operator|.
name|suggest
argument_list|(
literal|"sug_field_2"
argument_list|,
literal|"ap"
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggestDocs2
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"april"
argument_list|,
literal|3
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"apartment"
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// check that the doc ids are consistent
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|suggestDocs1
operator|.
name|scoreDocs
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|ScoreDoc
name|suggestScoreDoc
init|=
name|suggestDocs1
operator|.
name|scoreDocs
index|[
name|i
index|]
decl_stmt|;
name|assertThat
argument_list|(
name|suggestScoreDoc
operator|.
name|doc
argument_list|,
name|equalTo
argument_list|(
name|suggestDocs2
operator|.
name|scoreDocs
index|[
name|i
index|]
operator|.
name|doc
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDupSuggestFieldValues
specifier|public
name|void
name|testDupSuggestFieldValues
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|num
init|=
name|Math
operator|.
name|min
argument_list|(
literal|1000
argument_list|,
name|atLeast
argument_list|(
literal|300
argument_list|)
argument_list|)
decl_stmt|;
name|long
index|[]
name|weights
init|=
operator|new
name|long
index|[
name|num
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|num
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|weights
index|[
name|i
index|]
operator|=
name|Math
operator|.
name|abs
argument_list|(
name|random
argument_list|()
operator|.
name|nextLong
argument_list|()
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc"
argument_list|,
name|weights
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
if|if
condition|(
name|usually
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|Entry
index|[]
name|expectedEntries
init|=
operator|new
name|Entry
index|[
name|num
index|]
decl_stmt|;
name|Arrays
operator|.
name|sort
argument_list|(
name|weights
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
name|num
condition|;
name|i
operator|++
control|)
block|{
name|expectedEntries
index|[
name|i
operator|-
literal|1
index|]
operator|=
operator|new
name|Entry
argument_list|(
literal|"abc"
argument_list|,
name|weights
index|[
name|num
operator|-
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|SuggestIndexSearcher
name|suggestIndexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
name|TopSuggestDocs
name|lookupDocs
init|=
name|suggestIndexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc"
argument_list|,
name|num
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
name|lookupDocs
argument_list|,
name|expectedEntries
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNRTDeletedDocFiltering
specifier|public
name|void
name|testNRTDeletedDocFiltering
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
comment|// using IndexWriter instead of RandomIndexWriter
name|IndexWriter
name|iw
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|num
init|=
name|Math
operator|.
name|min
argument_list|(
literal|1000
argument_list|,
name|atLeast
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|int
name|numLive
init|=
literal|0
decl_stmt|;
name|List
argument_list|<
name|Entry
argument_list|>
name|expectedEntries
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|num
condition|;
name|i
operator|++
control|)
block|{
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
operator|+
name|i
argument_list|,
name|num
operator|-
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|%
literal|2
operator|==
literal|0
condition|)
block|{
name|document
operator|.
name|add
argument_list|(
name|newStringField
argument_list|(
literal|"str_field"
argument_list|,
literal|"delete"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|numLive
operator|++
expr_stmt|;
name|expectedEntries
operator|.
name|add
argument_list|(
operator|new
name|Entry
argument_list|(
literal|"abc_"
operator|+
name|i
argument_list|,
name|num
operator|-
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newStringField
argument_list|(
literal|"str_field"
argument_list|,
literal|"no_delete"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|usually
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
name|iw
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"str_field"
argument_list|,
literal|"delete"
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|iw
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|SuggestIndexSearcher
name|indexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
name|TopSuggestDocs
name|suggest
init|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
argument_list|,
name|numLive
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
name|expectedEntries
operator|.
name|toArray
argument_list|(
operator|new
name|Entry
index|[
name|expectedEntries
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSuggestOnAllFilteredDocuments
specifier|public
name|void
name|testSuggestOnAllFilteredDocuments
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|num
init|=
name|Math
operator|.
name|min
argument_list|(
literal|1000
argument_list|,
name|atLeast
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|num
condition|;
name|i
operator|++
control|)
block|{
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
operator|+
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newStringField
argument_list|(
literal|"str_fld"
argument_list|,
literal|"deleted"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|usually
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
name|Filter
name|filter
init|=
operator|new
name|QueryWrapperFilter
argument_list|(
operator|new
name|TermsQuery
argument_list|(
literal|"str_fld"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"non_existent"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|SuggestIndexSearcher
name|indexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
comment|// no random access required;
comment|// calling suggest with filter that does not match any documents should early terminate
name|TopSuggestDocs
name|suggest
init|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
argument_list|,
name|num
argument_list|,
name|filter
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|suggest
operator|.
name|totalHits
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSuggestOnAllDeletedDocuments
specifier|public
name|void
name|testSuggestOnAllDeletedDocuments
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
comment|// using IndexWriter instead of RandomIndexWriter
name|IndexWriter
name|iw
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|num
init|=
name|Math
operator|.
name|min
argument_list|(
literal|1000
argument_list|,
name|atLeast
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|num
condition|;
name|i
operator|++
control|)
block|{
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
operator|+
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newStringField
argument_list|(
literal|"delete"
argument_list|,
literal|"delete"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|usually
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
name|iw
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"delete"
argument_list|,
literal|"delete"
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|iw
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|SuggestIndexSearcher
name|indexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
name|TopSuggestDocs
name|suggest
init|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
argument_list|,
name|num
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|suggest
operator|.
name|totalHits
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSuggestOnMostlyDeletedDocuments
specifier|public
name|void
name|testSuggestOnMostlyDeletedDocuments
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
comment|// using IndexWriter instead of RandomIndexWriter
name|IndexWriter
name|iw
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|num
init|=
name|Math
operator|.
name|min
argument_list|(
literal|1000
argument_list|,
name|atLeast
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
name|num
condition|;
name|i
operator|++
control|)
block|{
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
operator|+
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|IntField
argument_list|(
literal|"weight_fld"
argument_list|,
name|i
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|usually
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
name|iw
operator|.
name|deleteDocuments
argument_list|(
name|NumericRangeQuery
operator|.
name|newIntRange
argument_list|(
literal|"weight_fld"
argument_list|,
literal|2
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|iw
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|SuggestIndexSearcher
name|indexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
name|TopSuggestDocs
name|suggest
init|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"abc_1"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSuggestOnMostlyFilteredOutDocuments
specifier|public
name|void
name|testSuggestOnMostlyFilteredOutDocuments
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|num
init|=
name|Math
operator|.
name|min
argument_list|(
literal|1000
argument_list|,
name|atLeast
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|num
condition|;
name|i
operator|++
control|)
block|{
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
operator|+
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|IntField
argument_list|(
literal|"filter_int_fld"
argument_list|,
name|i
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|usually
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|SuggestIndexSearcher
name|indexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
name|int
name|topScore
init|=
name|num
operator|/
literal|2
decl_stmt|;
name|QueryWrapperFilter
name|filterWrapper
init|=
operator|new
name|QueryWrapperFilter
argument_list|(
name|NumericRangeQuery
operator|.
name|newIntRange
argument_list|(
literal|"filter_int_fld"
argument_list|,
literal|0
argument_list|,
name|topScore
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|Filter
name|filter
init|=
name|randomAccessFilter
argument_list|(
name|filterWrapper
argument_list|)
decl_stmt|;
comment|// if at most half of the top scoring documents have been filtered out
comment|// the search should be admissible for a single segment
name|TopSuggestDocs
name|suggest
init|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
argument_list|,
name|num
argument_list|,
name|filter
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|suggest
operator|.
name|totalHits
operator|>=
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|suggest
operator|.
name|scoreLookupDocs
argument_list|()
index|[
literal|0
index|]
operator|.
name|key
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"abc_"
operator|+
name|topScore
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|suggest
operator|.
name|scoreLookupDocs
argument_list|()
index|[
literal|0
index|]
operator|.
name|score
argument_list|,
name|equalTo
argument_list|(
operator|(
name|float
operator|)
name|topScore
argument_list|)
argument_list|)
expr_stmt|;
name|filterWrapper
operator|=
operator|new
name|QueryWrapperFilter
argument_list|(
name|NumericRangeQuery
operator|.
name|newIntRange
argument_list|(
literal|"filter_int_fld"
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|filter
operator|=
name|randomAccessFilter
argument_list|(
name|filterWrapper
argument_list|)
expr_stmt|;
comment|// if more than half of the top scoring documents have been filtered out
comment|// search is not admissible, so # of suggestions requested is num instead of 1
name|suggest
operator|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
argument_list|,
name|num
argument_list|,
name|filter
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"abc_0"
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|filterWrapper
operator|=
operator|new
name|QueryWrapperFilter
argument_list|(
name|NumericRangeQuery
operator|.
name|newIntRange
argument_list|(
literal|"filter_int_fld"
argument_list|,
name|num
operator|-
literal|1
argument_list|,
name|num
operator|-
literal|1
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|filter
operator|=
name|randomAccessFilter
argument_list|(
name|filterWrapper
argument_list|)
expr_stmt|;
comment|// if only lower scoring documents are filtered out
comment|// search is admissible
name|suggest
operator|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
argument_list|,
literal|1
argument_list|,
name|filter
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"abc_"
operator|+
operator|(
name|num
operator|-
literal|1
operator|)
argument_list|,
name|num
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEarlyTermination
specifier|public
name|void
name|testEarlyTermination
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|num
init|=
name|Math
operator|.
name|min
argument_list|(
literal|1000
argument_list|,
name|atLeast
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
comment|// have segments of 4 documents
comment|// with descending suggestion weights
comment|// suggest should early terminate for
comment|// segments with docs having lower suggestion weights
for|for
control|(
name|int
name|i
init|=
name|num
init|;
name|i
operator|>
literal|0
condition|;
name|i
operator|--
control|)
block|{
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
operator|+
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|i
operator|%
literal|4
operator|==
literal|0
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|SuggestIndexSearcher
name|indexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
name|TopSuggestDocs
name|suggest
init|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"abc_"
operator|+
name|num
argument_list|,
name|num
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultipleSegments
specifier|public
name|void
name|testMultipleSegments
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|num
init|=
name|Math
operator|.
name|min
argument_list|(
literal|1000
argument_list|,
name|atLeast
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Entry
argument_list|>
name|entries
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
comment|// ensure at least some segments have no suggest field
for|for
control|(
name|int
name|i
init|=
name|num
init|;
name|i
operator|>
literal|0
condition|;
name|i
operator|--
control|)
block|{
if|if
condition|(
name|random
argument_list|()
operator|.
name|nextInt
argument_list|(
literal|4
argument_list|)
operator|==
literal|1
condition|)
block|{
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
operator|+
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|entries
operator|.
name|add
argument_list|(
operator|new
name|Entry
argument_list|(
literal|"abc_"
operator|+
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|document
operator|.
name|add
argument_list|(
operator|new
name|IntField
argument_list|(
literal|"weight_fld"
argument_list|,
name|i
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|usually
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|SuggestIndexSearcher
name|indexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
name|TopSuggestDocs
name|suggest
init|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
argument_list|,
operator|(
name|entries
operator|.
name|size
argument_list|()
operator|==
literal|0
operator|)
condition|?
literal|1
else|:
name|entries
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
name|entries
operator|.
name|toArray
argument_list|(
operator|new
name|Entry
index|[
name|entries
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDocFiltering
specifier|public
name|void
name|testDocFiltering
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|IntField
argument_list|(
literal|"filter_int_fld"
argument_list|,
literal|9
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"apples"
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|IntField
argument_list|(
literal|"filter_int_fld"
argument_list|,
literal|10
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"applle"
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|IntField
argument_list|(
literal|"filter_int_fld"
argument_list|,
literal|4
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"apple"
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
if|if
condition|(
name|rarely
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|SuggestIndexSearcher
name|indexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
comment|// suggest without filter
name|TopSuggestDocs
name|suggest
init|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"app"
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"apple"
argument_list|,
literal|5
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"applle"
argument_list|,
literal|4
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"apples"
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
comment|// suggest with filter
name|QueryWrapperFilter
name|filterWrapper
init|=
operator|new
name|QueryWrapperFilter
argument_list|(
name|NumericRangeQuery
operator|.
name|newIntRange
argument_list|(
literal|"filter_int_fld"
argument_list|,
literal|5
argument_list|,
literal|12
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|Filter
name|filter
init|=
name|randomAccessFilter
argument_list|(
name|filterWrapper
argument_list|)
decl_stmt|;
name|suggest
operator|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"app"
argument_list|,
literal|3
argument_list|,
name|filter
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"applle"
argument_list|,
literal|4
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"apples"
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReturnedDocID
specifier|public
name|void
name|testReturnedDocID
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|int
name|num
init|=
name|Math
operator|.
name|min
argument_list|(
literal|1000
argument_list|,
name|atLeast
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|num
condition|;
name|i
operator|++
control|)
block|{
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
operator|+
name|i
argument_list|,
name|num
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
operator|new
name|IntField
argument_list|(
literal|"int_field"
argument_list|,
name|i
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|SuggestIndexSearcher
name|indexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
name|TopSuggestDocs
name|suggest
init|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
literal|"abc_"
argument_list|,
name|num
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|num
argument_list|,
name|suggest
operator|.
name|totalHits
argument_list|)
expr_stmt|;
for|for
control|(
name|SuggestScoreDoc
name|suggestScoreDoc
range|:
name|suggest
operator|.
name|scoreLookupDocs
argument_list|()
control|)
block|{
name|String
name|key
init|=
name|suggestScoreDoc
operator|.
name|key
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|key
operator|.
name|startsWith
argument_list|(
literal|"abc_"
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|substring
init|=
name|key
operator|.
name|substring
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|int
name|fieldValue
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|substring
argument_list|)
decl_stmt|;
name|StoredDocument
name|doc
init|=
name|reader
operator|.
name|document
argument_list|(
name|suggestScoreDoc
operator|.
name|doc
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|doc
operator|.
name|getField
argument_list|(
literal|"int_field"
argument_list|)
operator|.
name|numericValue
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|,
name|fieldValue
argument_list|)
expr_stmt|;
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCompletionAnalyzerOptions
specifier|public
name|void
name|testCompletionAnalyzerOptions
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|,
name|MockTokenizer
operator|.
name|WHITESPACE
argument_list|,
literal|true
argument_list|,
name|MockTokenFilter
operator|.
name|ENGLISH_STOPSET
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Analyzer
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"suggest_field_default"
argument_list|,
operator|new
name|CompletionAnalyzer
argument_list|(
name|analyzer
argument_list|)
argument_list|)
expr_stmt|;
name|CompletionAnalyzer
name|completionAnalyzer
init|=
operator|new
name|CompletionAnalyzer
argument_list|(
name|analyzer
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"suggest_field_no_p_sep"
argument_list|,
name|completionAnalyzer
argument_list|)
expr_stmt|;
name|completionAnalyzer
operator|=
operator|new
name|CompletionAnalyzer
argument_list|(
name|analyzer
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"suggest_field_no_p_pos_inc"
argument_list|,
name|completionAnalyzer
argument_list|)
expr_stmt|;
name|completionAnalyzer
operator|=
operator|new
name|CompletionAnalyzer
argument_list|(
name|analyzer
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"suggest_field_no_p_sep_or_pos_inc"
argument_list|,
name|completionAnalyzer
argument_list|)
expr_stmt|;
name|PerFieldAnalyzerWrapper
name|analyzerWrapper
init|=
operator|new
name|PerFieldAnalyzerWrapper
argument_list|(
name|analyzer
argument_list|,
name|map
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzerWrapper
argument_list|,
name|map
operator|.
name|keySet
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_default"
argument_list|,
literal|"foobar"
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_default"
argument_list|,
literal|"foo bar"
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_default"
argument_list|,
literal|"the fo"
argument_list|,
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_default"
argument_list|,
literal|"the foo bar"
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_no_p_sep"
argument_list|,
literal|"foobar"
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_no_p_sep"
argument_list|,
literal|"foo bar"
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_no_p_sep"
argument_list|,
literal|"the fo"
argument_list|,
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_no_p_sep"
argument_list|,
literal|"the foo bar"
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_no_p_pos_inc"
argument_list|,
literal|"foobar"
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_no_p_pos_inc"
argument_list|,
literal|"foo bar"
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_no_p_pos_inc"
argument_list|,
literal|"the fo"
argument_list|,
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_no_p_pos_inc"
argument_list|,
literal|"the foo bar"
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_no_p_sep_or_pos_inc"
argument_list|,
literal|"foobar"
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_no_p_sep_or_pos_inc"
argument_list|,
literal|"foo bar"
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_no_p_sep_or_pos_inc"
argument_list|,
literal|"the fo"
argument_list|,
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_no_p_sep_or_pos_inc"
argument_list|,
literal|"the foo bar"
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|SuggestIndexSearcher
name|indexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
name|TopSuggestDocs
name|suggest
decl_stmt|;
name|suggest
operator|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field_default"
argument_list|,
literal|"fo"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"foo bar"
argument_list|,
literal|8
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"foobar"
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|suggest
operator|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field_default"
argument_list|,
literal|"foob"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"foobar"
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|suggest
operator|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field_no_p_sep"
argument_list|,
literal|"fo"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// matches all 4
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"the foo bar"
argument_list|,
literal|10
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"the fo"
argument_list|,
literal|9
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"foo bar"
argument_list|,
literal|8
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"foobar"
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|suggest
operator|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field_no_p_sep"
argument_list|,
literal|"foob"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// except the fo
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"the foo bar"
argument_list|,
literal|10
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"foo bar"
argument_list|,
literal|8
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"foobar"
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|suggest
operator|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field_no_p_pos_inc"
argument_list|,
literal|"fo"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|//matches all 4
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"the foo bar"
argument_list|,
literal|10
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"the fo"
argument_list|,
literal|9
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"foo bar"
argument_list|,
literal|8
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"foobar"
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|suggest
operator|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field_no_p_pos_inc"
argument_list|,
literal|"foob"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// only foobar
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"foobar"
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|suggest
operator|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field_no_p_sep_or_pos_inc"
argument_list|,
literal|"fo"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// all 4
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"the foo bar"
argument_list|,
literal|10
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"the fo"
argument_list|,
literal|9
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"foo bar"
argument_list|,
literal|8
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"foobar"
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|suggest
operator|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field_no_p_sep_or_pos_inc"
argument_list|,
literal|"foob"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// not the fo
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"the foo bar"
argument_list|,
literal|10
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"foo bar"
argument_list|,
literal|8
argument_list|)
argument_list|,
operator|new
name|Entry
argument_list|(
literal|"foobar"
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testScoring
specifier|public
name|void
name|testScoring
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|num
init|=
name|Math
operator|.
name|min
argument_list|(
literal|1000
argument_list|,
name|atLeast
argument_list|(
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|String
index|[]
name|prefixes
init|=
block|{
literal|"abc"
block|,
literal|"bac"
block|,
literal|"cab"
block|}
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|mappings
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|num
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|String
name|suggest
init|=
name|prefixes
index|[
name|i
operator|%
literal|3
index|]
operator|+
name|TestUtil
operator|.
name|randomSimpleString
argument_list|(
name|random
argument_list|()
argument_list|,
literal|10
argument_list|)
operator|+
literal|"_"
operator|+
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|long
name|weight
init|=
name|Math
operator|.
name|abs
argument_list|(
name|random
argument_list|()
operator|.
name|nextLong
argument_list|()
argument_list|)
decl_stmt|;
name|document
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
name|suggest
argument_list|,
name|weight
argument_list|)
argument_list|)
expr_stmt|;
name|mappings
operator|.
name|put
argument_list|(
name|suggest
argument_list|,
name|weight
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
if|if
condition|(
name|usually
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|SuggestIndexSearcher
name|indexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|prefix
range|:
name|prefixes
control|)
block|{
name|TopSuggestDocs
name|suggest
init|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
name|prefix
argument_list|,
name|num
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|suggest
operator|.
name|totalHits
operator|>
literal|0
argument_list|)
expr_stmt|;
name|float
name|topScore
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|SuggestScoreDoc
name|scoreDoc
range|:
name|suggest
operator|.
name|scoreLookupDocs
argument_list|()
control|)
block|{
if|if
condition|(
name|topScore
operator|!=
operator|-
literal|1
condition|)
block|{
name|assertTrue
argument_list|(
name|topScore
operator|>=
name|scoreDoc
operator|.
name|score
argument_list|)
expr_stmt|;
block|}
name|topScore
operator|=
name|scoreDoc
operator|.
name|score
expr_stmt|;
name|assertThat
argument_list|(
operator|(
name|float
operator|)
name|mappings
operator|.
name|get
argument_list|(
name|scoreDoc
operator|.
name|key
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|equalTo
argument_list|(
name|scoreDoc
operator|.
name|score
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|mappings
operator|.
name|remove
argument_list|(
name|scoreDoc
operator|.
name|key
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|assertThat
argument_list|(
name|mappings
operator|.
name|size
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testRealisticKeys
specifier|public
name|void
name|testRealisticKeys
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field"
argument_list|)
argument_list|)
decl_stmt|;
name|LineFileDocs
name|lineFileDocs
init|=
operator|new
name|LineFileDocs
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|num
init|=
name|Math
operator|.
name|min
argument_list|(
literal|1000
argument_list|,
name|atLeast
argument_list|(
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|mappings
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|num
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|document
init|=
name|lineFileDocs
operator|.
name|nextDoc
argument_list|()
decl_stmt|;
name|String
name|title
init|=
name|document
operator|.
name|getField
argument_list|(
literal|"title"
argument_list|)
operator|.
name|stringValue
argument_list|()
decl_stmt|;
name|long
name|weight
init|=
name|Math
operator|.
name|abs
argument_list|(
name|random
argument_list|()
operator|.
name|nextLong
argument_list|()
argument_list|)
decl_stmt|;
name|Long
name|prevWeight
init|=
name|mappings
operator|.
name|get
argument_list|(
name|title
argument_list|)
decl_stmt|;
if|if
condition|(
name|prevWeight
operator|==
literal|null
operator|||
name|prevWeight
operator|<
name|weight
condition|)
block|{
name|mappings
operator|.
name|put
argument_list|(
name|title
argument_list|,
name|weight
argument_list|)
expr_stmt|;
block|}
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field"
argument_list|,
name|title
argument_list|,
name|weight
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
if|if
condition|(
name|rarely
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|SuggestIndexSearcher
name|indexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|entry
range|:
name|mappings
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|String
name|title
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|TopSuggestDocs
name|suggest
init|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field"
argument_list|,
name|title
argument_list|,
name|mappings
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|suggest
operator|.
name|totalHits
operator|>
literal|0
argument_list|)
expr_stmt|;
name|boolean
name|matched
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ScoreDoc
name|scoreDoc
range|:
name|suggest
operator|.
name|scoreDocs
control|)
block|{
name|matched
operator|=
name|Float
operator|.
name|compare
argument_list|(
name|scoreDoc
operator|.
name|score
argument_list|,
operator|(
name|float
operator|)
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
operator|==
literal|0
expr_stmt|;
if|if
condition|(
name|matched
condition|)
block|{
break|break;
block|}
block|}
name|assertTrue
argument_list|(
literal|"at least one of the entries should have the score"
argument_list|,
name|matched
argument_list|)
expr_stmt|;
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testThreads
specifier|public
name|void
name|testThreads
parameter_list|()
throws|throws
name|Exception
block|{
name|Analyzer
name|analyzer
init|=
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|iw
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dir
argument_list|,
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
literal|"suggest_field_1"
argument_list|,
literal|"suggest_field_2"
argument_list|,
literal|"suggest_field_3"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|num
init|=
name|Math
operator|.
name|min
argument_list|(
literal|1000
argument_list|,
name|atLeast
argument_list|(
literal|100
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|String
name|prefix1
init|=
literal|"abc1_"
decl_stmt|;
specifier|final
name|String
name|prefix2
init|=
literal|"abc2_"
decl_stmt|;
specifier|final
name|String
name|prefix3
init|=
literal|"abc3_"
decl_stmt|;
specifier|final
name|Entry
index|[]
name|entries1
init|=
operator|new
name|Entry
index|[
name|num
index|]
decl_stmt|;
specifier|final
name|Entry
index|[]
name|entries2
init|=
operator|new
name|Entry
index|[
name|num
index|]
decl_stmt|;
specifier|final
name|Entry
index|[]
name|entries3
init|=
operator|new
name|Entry
index|[
name|num
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|num
condition|;
name|i
operator|++
control|)
block|{
name|int
name|weight
init|=
name|num
operator|-
operator|(
name|i
operator|+
literal|1
operator|)
decl_stmt|;
name|entries1
index|[
name|i
index|]
operator|=
operator|new
name|Entry
argument_list|(
name|prefix1
operator|+
name|weight
argument_list|,
name|weight
argument_list|)
expr_stmt|;
name|entries2
index|[
name|i
index|]
operator|=
operator|new
name|Entry
argument_list|(
name|prefix2
operator|+
name|weight
argument_list|,
name|weight
argument_list|)
expr_stmt|;
name|entries3
index|[
name|i
index|]
operator|=
operator|new
name|Entry
argument_list|(
name|prefix3
operator|+
name|weight
argument_list|,
name|weight
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|num
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_1"
argument_list|,
name|prefix1
operator|+
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_2"
argument_list|,
name|prefix2
operator|+
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newSuggestField
argument_list|(
literal|"suggest_field_3"
argument_list|,
name|prefix3
operator|+
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
if|if
condition|(
name|rarely
argument_list|()
condition|)
block|{
name|iw
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
name|DirectoryReader
name|reader
init|=
name|iw
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|int
name|numThreads
init|=
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|7
argument_list|)
decl_stmt|;
name|Thread
name|threads
index|[]
init|=
operator|new
name|Thread
index|[
name|numThreads
index|]
decl_stmt|;
specifier|final
name|CyclicBarrier
name|startingGun
init|=
operator|new
name|CyclicBarrier
argument_list|(
name|numThreads
operator|+
literal|1
argument_list|)
decl_stmt|;
specifier|final
name|CopyOnWriteArrayList
argument_list|<
name|Throwable
argument_list|>
name|errors
init|=
operator|new
name|CopyOnWriteArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|final
name|SuggestIndexSearcher
name|indexSearcher
init|=
operator|new
name|SuggestIndexSearcher
argument_list|(
name|reader
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|threads
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|threads
index|[
name|i
index|]
operator|=
operator|new
name|Thread
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|startingGun
operator|.
name|await
argument_list|()
expr_stmt|;
name|TopSuggestDocs
name|suggest
init|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field_1"
argument_list|,
name|prefix1
argument_list|,
name|num
argument_list|)
decl_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
name|entries1
argument_list|)
expr_stmt|;
name|suggest
operator|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field_2"
argument_list|,
name|prefix2
argument_list|,
name|num
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
name|entries2
argument_list|)
expr_stmt|;
name|suggest
operator|=
name|indexSearcher
operator|.
name|suggest
argument_list|(
literal|"suggest_field_3"
argument_list|,
name|prefix3
argument_list|,
name|num
argument_list|)
expr_stmt|;
name|assertSuggestions
argument_list|(
name|suggest
argument_list|,
name|entries3
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|errors
operator|.
name|add
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
expr_stmt|;
name|threads
index|[
name|i
index|]
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
name|startingGun
operator|.
name|await
argument_list|()
expr_stmt|;
for|for
control|(
name|Thread
name|t
range|:
name|threads
control|)
block|{
name|t
operator|.
name|join
argument_list|()
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|errors
operator|.
name|toString
argument_list|()
argument_list|,
name|errors
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|class|RandomAccessFilter
specifier|private
specifier|static
class|class
name|RandomAccessFilter
extends|extends
name|Filter
block|{
DECL|field|in
specifier|private
specifier|final
name|Filter
name|in
decl_stmt|;
DECL|method|RandomAccessFilter
specifier|private
name|RandomAccessFilter
parameter_list|(
name|Filter
name|in
parameter_list|)
block|{
name|this
operator|.
name|in
operator|=
name|in
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getDocIdSet
specifier|public
name|DocIdSet
name|getDocIdSet
parameter_list|(
name|LeafReaderContext
name|context
parameter_list|,
name|Bits
name|acceptDocs
parameter_list|)
throws|throws
name|IOException
block|{
name|DocIdSet
name|docIdSet
init|=
name|in
operator|.
name|getDocIdSet
argument_list|(
name|context
argument_list|,
name|acceptDocs
argument_list|)
decl_stmt|;
name|DocIdSetIterator
name|iterator
init|=
name|docIdSet
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|FixedBitSet
name|bits
init|=
operator|new
name|FixedBitSet
argument_list|(
name|context
operator|.
name|reader
argument_list|()
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|iterator
operator|!=
literal|null
condition|)
block|{
name|bits
operator|.
name|or
argument_list|(
name|iterator
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|BitDocIdSet
argument_list|(
name|bits
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|(
name|String
name|field
parameter_list|)
block|{
return|return
name|in
operator|.
name|toString
argument_list|(
name|field
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|equals
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
operator|==
literal|false
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|in
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|RandomAccessFilter
operator|)
name|obj
operator|)
operator|.
name|in
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
literal|31
operator|*
name|super
operator|.
name|hashCode
argument_list|()
operator|+
name|in
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
DECL|method|randomAccessFilter
specifier|private
specifier|static
name|Filter
name|randomAccessFilter
parameter_list|(
name|Filter
name|filter
parameter_list|)
block|{
return|return
operator|new
name|RandomAccessFilter
argument_list|(
name|filter
argument_list|)
return|;
block|}
DECL|class|Entry
specifier|private
specifier|static
class|class
name|Entry
block|{
DECL|field|output
specifier|private
specifier|final
name|String
name|output
decl_stmt|;
DECL|field|value
specifier|private
specifier|final
name|float
name|value
decl_stmt|;
DECL|method|Entry
specifier|private
name|Entry
parameter_list|(
name|String
name|output
parameter_list|,
name|float
name|value
parameter_list|)
block|{
name|this
operator|.
name|output
operator|=
name|output
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
block|}
DECL|method|assertSuggestions
specifier|private
name|void
name|assertSuggestions
parameter_list|(
name|TopDocs
name|actual
parameter_list|,
name|Entry
modifier|...
name|expected
parameter_list|)
block|{
name|SuggestScoreDoc
index|[]
name|suggestScoreDocs
init|=
operator|(
name|SuggestScoreDoc
index|[]
operator|)
name|actual
operator|.
name|scoreDocs
decl_stmt|;
name|assertThat
argument_list|(
name|suggestScoreDocs
operator|.
name|length
argument_list|,
name|equalTo
argument_list|(
name|expected
operator|.
name|length
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|suggestScoreDocs
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|SuggestScoreDoc
name|lookupDoc
init|=
name|suggestScoreDocs
index|[
name|i
index|]
decl_stmt|;
name|assertThat
argument_list|(
name|lookupDoc
operator|.
name|key
operator|.
name|toString
argument_list|()
argument_list|,
name|equalTo
argument_list|(
name|expected
index|[
name|i
index|]
operator|.
name|output
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|lookupDoc
operator|.
name|score
argument_list|,
name|equalTo
argument_list|(
name|expected
index|[
name|i
index|]
operator|.
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|newSuggestField
specifier|private
name|SuggestField
name|newSuggestField
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|,
name|long
name|weight
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|SuggestField
argument_list|(
name|name
argument_list|,
name|value
argument_list|,
name|weight
argument_list|)
return|;
block|}
DECL|method|iwcWithSuggestField
specifier|private
name|IndexWriterConfig
name|iwcWithSuggestField
parameter_list|(
name|Analyzer
name|analyzer
parameter_list|,
name|String
modifier|...
name|suggestFields
parameter_list|)
block|{
return|return
name|iwcWithSuggestField
argument_list|(
name|analyzer
argument_list|,
name|asSet
argument_list|(
name|suggestFields
argument_list|)
argument_list|)
return|;
block|}
DECL|method|iwcWithSuggestField
specifier|private
name|IndexWriterConfig
name|iwcWithSuggestField
parameter_list|(
name|Analyzer
name|analyzer
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|suggestFields
parameter_list|)
block|{
name|IndexWriterConfig
name|iwc
init|=
name|newIndexWriterConfig
argument_list|(
name|random
argument_list|()
argument_list|,
name|analyzer
argument_list|)
decl_stmt|;
name|iwc
operator|.
name|setMergePolicy
argument_list|(
name|newLogMergePolicy
argument_list|()
argument_list|)
expr_stmt|;
name|Codec
name|filterCodec
init|=
operator|new
name|Lucene50Codec
argument_list|()
block|{
name|PostingsFormat
name|postingsFormat
init|=
operator|new
name|Completion50PostingsFormat
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|PostingsFormat
name|getPostingsFormatForField
parameter_list|(
name|String
name|field
parameter_list|)
block|{
if|if
condition|(
name|suggestFields
operator|.
name|contains
argument_list|(
name|field
argument_list|)
condition|)
block|{
return|return
name|postingsFormat
return|;
block|}
return|return
name|super
operator|.
name|getPostingsFormatForField
argument_list|(
name|field
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|iwc
operator|.
name|setCodec
argument_list|(
name|filterCodec
argument_list|)
expr_stmt|;
return|return
name|iwc
return|;
block|}
block|}
end_class
end_unit
