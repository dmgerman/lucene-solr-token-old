begin_unit
begin_package
DECL|package|org.apache.lucene.analysis.miscellaneous
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|miscellaneous
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|*
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import
begin_class
DECL|class|TestScandinavianNormalizationFilter
specifier|public
class|class
name|TestScandinavianNormalizationFilter
extends|extends
name|BaseTokenStreamTestCase
block|{
DECL|field|analyzer
specifier|private
name|Analyzer
name|analyzer
init|=
operator|new
name|Analyzer
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|TokenStreamComponents
name|createComponents
parameter_list|(
name|String
name|field
parameter_list|,
name|Reader
name|reader
parameter_list|)
block|{
specifier|final
name|Tokenizer
name|tokenizer
init|=
operator|new
name|MockTokenizer
argument_list|(
name|reader
argument_list|,
name|MockTokenizer
operator|.
name|WHITESPACE
argument_list|,
literal|false
argument_list|)
decl_stmt|;
specifier|final
name|TokenStream
name|stream
init|=
operator|new
name|ScandinavianNormalizationFilter
argument_list|(
name|tokenizer
argument_list|)
decl_stmt|;
return|return
operator|new
name|TokenStreamComponents
argument_list|(
name|tokenizer
argument_list|,
name|stream
argument_list|)
return|;
block|}
block|}
decl_stmt|;
DECL|method|test
specifier|public
name|void
name|test
parameter_list|()
throws|throws
name|Exception
block|{
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"aeÃ¤aeeea"
argument_list|,
literal|"Ã¦Ã¦Ã¦eea"
argument_list|)
expr_stmt|;
comment|// should not cause ArrayIndexOutOfBoundsException
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"aeÃ¤aeeeae"
argument_list|,
literal|"Ã¦Ã¦Ã¦eeÃ¦"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"aeaeeeae"
argument_list|,
literal|"Ã¦Ã¦eeÃ¦"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"bÃ¸en"
argument_list|,
literal|"bÃ¸en"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"bOEen"
argument_list|,
literal|"bÃen"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Ã¥ene"
argument_list|,
literal|"Ã¥ene"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"blÃ¥bÃ¦rsyltetÃ¸j"
argument_list|,
literal|"blÃ¥bÃ¦rsyltetÃ¸j"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"blaabaersyltetÃ¶j"
argument_list|,
literal|"blÃ¥bÃ¦rsyltetÃ¸j"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"rÃ¤ksmÃ¶rgÃ¥s"
argument_list|,
literal|"rÃ¦ksmÃ¸rgÃ¥s"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"raeksmÃ¶rgaos"
argument_list|,
literal|"rÃ¦ksmÃ¸rgÃ¥s"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"raeksmÃ¶rgaas"
argument_list|,
literal|"rÃ¦ksmÃ¸rgÃ¥s"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"raeksmoergÃ¥s"
argument_list|,
literal|"rÃ¦ksmÃ¸rgÃ¥s"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"ab"
argument_list|,
literal|"ab"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"ob"
argument_list|,
literal|"ob"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Ab"
argument_list|,
literal|"Ab"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Ob"
argument_list|,
literal|"Ob"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Ã¥"
argument_list|,
literal|"Ã¥"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"aa"
argument_list|,
literal|"Ã¥"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"aA"
argument_list|,
literal|"Ã¥"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"ao"
argument_list|,
literal|"Ã¥"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"aO"
argument_list|,
literal|"Ã¥"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"AA"
argument_list|,
literal|"Ã"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Aa"
argument_list|,
literal|"Ã"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Ao"
argument_list|,
literal|"Ã"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"AO"
argument_list|,
literal|"Ã"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Ã¦"
argument_list|,
literal|"Ã¦"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Ã¤"
argument_list|,
literal|"Ã¦"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Ã"
argument_list|,
literal|"Ã"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Ã"
argument_list|,
literal|"Ã"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"ae"
argument_list|,
literal|"Ã¦"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"aE"
argument_list|,
literal|"Ã¦"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Ae"
argument_list|,
literal|"Ã"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"AE"
argument_list|,
literal|"Ã"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Ã¶"
argument_list|,
literal|"Ã¸"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Ã¸"
argument_list|,
literal|"Ã¸"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Ã"
argument_list|,
literal|"Ã"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Ã"
argument_list|,
literal|"Ã"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"oo"
argument_list|,
literal|"Ã¸"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"oe"
argument_list|,
literal|"Ã¸"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"oO"
argument_list|,
literal|"Ã¸"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"oE"
argument_list|,
literal|"Ã¸"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Oo"
argument_list|,
literal|"Ã"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"Oe"
argument_list|,
literal|"Ã"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"OO"
argument_list|,
literal|"Ã"
argument_list|)
expr_stmt|;
name|checkOneTerm
argument_list|(
name|analyzer
argument_list|,
literal|"OE"
argument_list|,
literal|"Ã"
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
