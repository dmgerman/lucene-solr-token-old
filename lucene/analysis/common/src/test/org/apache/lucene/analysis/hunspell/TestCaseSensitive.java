begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.analysis.hunspell
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|hunspell
package|;
end_package
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_class
DECL|class|TestCaseSensitive
specifier|public
class|class
name|TestCaseSensitive
extends|extends
name|StemmerTestBase
block|{
annotation|@
name|BeforeClass
DECL|method|beforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|init
argument_list|(
literal|"casesensitive.aff"
argument_list|,
literal|"casesensitive.dic"
argument_list|)
expr_stmt|;
block|}
DECL|method|testAllPossibilities
specifier|public
name|void
name|testAllPossibilities
parameter_list|()
block|{
name|assertStemsTo
argument_list|(
literal|"drink"
argument_list|,
literal|"drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"drinks"
argument_list|,
literal|"drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"drinkS"
argument_list|,
literal|"drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"gooddrinks"
argument_list|,
literal|"drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"Gooddrinks"
argument_list|,
literal|"drink"
argument_list|,
literal|"drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GOODdrinks"
argument_list|,
literal|"drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"gooddrinkS"
argument_list|,
literal|"drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GooddrinkS"
argument_list|,
literal|"drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"gooddrink"
argument_list|,
literal|"drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"Gooddrink"
argument_list|,
literal|"drink"
argument_list|,
literal|"drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GOODdrink"
argument_list|,
literal|"drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"Drink"
argument_list|,
literal|"drink"
argument_list|,
literal|"Drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"Drinks"
argument_list|,
literal|"drink"
argument_list|,
literal|"Drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"DrinkS"
argument_list|,
literal|"Drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"goodDrinks"
argument_list|,
literal|"Drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GoodDrinks"
argument_list|,
literal|"Drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GOODDrinks"
argument_list|,
literal|"Drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"goodDrinkS"
argument_list|,
literal|"Drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GoodDrinkS"
argument_list|,
literal|"Drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GOODDrinkS"
argument_list|,
literal|"Drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"goodDrink"
argument_list|,
literal|"Drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GoodDrink"
argument_list|,
literal|"Drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GOODDrink"
argument_list|,
literal|"Drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"DRINK"
argument_list|,
literal|"DRINK"
argument_list|,
literal|"drink"
argument_list|,
literal|"Drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"DRINKs"
argument_list|,
literal|"DRINK"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"DRINKS"
argument_list|,
literal|"DRINK"
argument_list|,
literal|"drink"
argument_list|,
literal|"Drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"goodDRINKs"
argument_list|,
literal|"DRINK"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GoodDRINKs"
argument_list|,
literal|"DRINK"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GOODDRINKs"
argument_list|,
literal|"DRINK"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"goodDRINKS"
argument_list|,
literal|"DRINK"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GoodDRINKS"
argument_list|,
literal|"DRINK"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GOODDRINKS"
argument_list|,
literal|"DRINK"
argument_list|,
literal|"drink"
argument_list|,
literal|"drink"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"goodDRINK"
argument_list|,
literal|"DRINK"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GoodDRINK"
argument_list|,
literal|"DRINK"
argument_list|)
expr_stmt|;
name|assertStemsTo
argument_list|(
literal|"GOODDRINK"
argument_list|,
literal|"DRINK"
argument_list|,
literal|"drink"
argument_list|,
literal|"drink"
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
