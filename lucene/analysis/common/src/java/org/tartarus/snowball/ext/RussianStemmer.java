begin_unit
begin_comment
comment|// This file was generated automatically by the Snowball to Java compiler
end_comment
begin_package
DECL|package|org.tartarus.snowball.ext
package|package
name|org
operator|.
name|tartarus
operator|.
name|snowball
operator|.
name|ext
package|;
end_package
begin_import
import|import
name|org
operator|.
name|tartarus
operator|.
name|snowball
operator|.
name|Among
import|;
end_import
begin_import
import|import
name|org
operator|.
name|tartarus
operator|.
name|snowball
operator|.
name|SnowballProgram
import|;
end_import
begin_comment
comment|/**   * This class was automatically generated by a Snowball to Java compiler    * It implements the stemming algorithm defined by a snowball script.   */
end_comment
begin_class
DECL|class|RussianStemmer
specifier|public
class|class
name|RussianStemmer
extends|extends
name|SnowballProgram
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
DECL|field|methodObject
specifier|private
specifier|final
specifier|static
name|RussianStemmer
name|methodObject
init|=
operator|new
name|RussianStemmer
argument_list|()
decl_stmt|;
DECL|field|a_0
specifier|private
specifier|final
specifier|static
name|Among
name|a_0
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"\u0432"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0432"
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u0432"
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0432\u0448\u0438"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0432\u0448\u0438"
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u0432\u0448\u0438"
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0432\u0448\u0438\u0441\u044C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0432\u0448\u0438\u0441\u044C"
argument_list|,
literal|6
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u0432\u0448\u0438\u0441\u044C"
argument_list|,
literal|6
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_1
specifier|private
specifier|final
specifier|static
name|Among
name|a_1
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"\u0435\u0435"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0435"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043E\u0435"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u0435"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u043C\u0438"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u043C\u0438"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u0439"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0439"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043E\u0439"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u0439"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u043C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u043C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043E\u043C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u043C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u0433\u043E"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043E\u0433\u043E"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u043C\u0443"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043E\u043C\u0443"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0445"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u0445"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u044E"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043E\u044E"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0443\u044E"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044E\u044E"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0430\u044F"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044F\u044F"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_2
specifier|private
specifier|final
specifier|static
name|Among
name|a_2
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"\u0435\u043C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043D\u043D"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0432\u0448"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0432\u0448"
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u0432\u0448"
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0449"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044E\u0449"
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0443\u044E\u0449"
argument_list|,
literal|6
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_3
specifier|private
specifier|final
specifier|static
name|Among
name|a_3
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"\u0441\u044C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0441\u044F"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_4
specifier|private
specifier|final
specifier|static
name|Among
name|a_4
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"\u043B\u0430"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u043B\u0430"
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u043B\u0430"
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043D\u0430"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u043D\u0430"
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u0442\u0435"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0442\u0435"
argument_list|,
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0439\u0442\u0435"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u0439\u0442\u0435"
argument_list|,
literal|7
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0443\u0439\u0442\u0435"
argument_list|,
literal|7
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043B\u0438"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u043B\u0438"
argument_list|,
literal|10
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u043B\u0438"
argument_list|,
literal|10
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0439"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u0439"
argument_list|,
literal|13
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0443\u0439"
argument_list|,
literal|13
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043B"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u043B"
argument_list|,
literal|16
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u043B"
argument_list|,
literal|16
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u043C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u043C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u043C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043D"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u043D"
argument_list|,
literal|22
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043B\u043E"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u043B\u043E"
argument_list|,
literal|24
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u043B\u043E"
argument_list|,
literal|24
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043D\u043E"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u043D\u043E"
argument_list|,
literal|27
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043D\u043D\u043E"
argument_list|,
literal|27
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u0442"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0443\u0435\u0442"
argument_list|,
literal|30
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0442"
argument_list|,
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u0442"
argument_list|,
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044E\u0442"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0443\u044E\u0442"
argument_list|,
literal|34
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044F\u0442"
argument_list|,
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043D\u044B"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u043D\u044B"
argument_list|,
literal|37
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0442\u044C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0442\u044C"
argument_list|,
literal|39
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B\u0442\u044C"
argument_list|,
literal|39
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u0448\u044C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0448\u044C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044E"
argument_list|,
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0443\u044E"
argument_list|,
literal|44
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_5
specifier|private
specifier|final
specifier|static
name|Among
name|a_5
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"\u0430"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u0432"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043E\u0432"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0435"
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044C\u0435"
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u0438"
argument_list|,
literal|6
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0438"
argument_list|,
literal|6
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0430\u043C\u0438"
argument_list|,
literal|6
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044F\u043C\u0438"
argument_list|,
literal|6
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u044F\u043C\u0438"
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0439"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u0439"
argument_list|,
literal|12
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0435\u0439"
argument_list|,
literal|13
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0439"
argument_list|,
literal|12
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043E\u0439"
argument_list|,
literal|12
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0430\u043C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u043C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u0435\u043C"
argument_list|,
literal|18
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043E\u043C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044F\u043C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u044F\u043C"
argument_list|,
literal|21
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043E"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0443"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0430\u0445"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044F\u0445"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u044F\u0445"
argument_list|,
literal|26
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044B"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044E"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u044E"
argument_list|,
literal|30
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044C\u044E"
argument_list|,
literal|30
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044F"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0438\u044F"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044C\u044F"
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_6
specifier|private
specifier|final
specifier|static
name|Among
name|a_6
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"\u043E\u0441\u0442"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043E\u0441\u0442\u044C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_7
specifier|private
specifier|final
specifier|static
name|Among
name|a_7
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"\u0435\u0439\u0448\u0435"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u043D"
argument_list|,
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0435\u0439\u0448"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u044C"
argument_list|,
operator|-
literal|1
argument_list|,
literal|3
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|g_v
specifier|private
specifier|static
specifier|final
name|char
name|g_v
index|[]
init|=
block|{
literal|33
block|,
literal|65
block|,
literal|8
block|,
literal|232
block|}
decl_stmt|;
DECL|field|I_p2
specifier|private
name|int
name|I_p2
decl_stmt|;
DECL|field|I_pV
specifier|private
name|int
name|I_pV
decl_stmt|;
DECL|method|copy_from
specifier|private
name|void
name|copy_from
parameter_list|(
name|RussianStemmer
name|other
parameter_list|)
block|{
name|I_p2
operator|=
name|other
operator|.
name|I_p2
expr_stmt|;
name|I_pV
operator|=
name|other
operator|.
name|I_pV
expr_stmt|;
name|super
operator|.
name|copy_from
argument_list|(
name|other
argument_list|)
expr_stmt|;
block|}
DECL|method|r_mark_regions
specifier|private
name|boolean
name|r_mark_regions
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
comment|// (, line 57
name|I_pV
operator|=
name|limit
expr_stmt|;
name|I_p2
operator|=
name|limit
expr_stmt|;
comment|// do, line 61
name|v_1
operator|=
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// (, line 61
comment|// gopast, line 62
name|golab1
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|lab2
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping
argument_list|(
name|g_v
argument_list|,
literal|1072
argument_list|,
literal|1103
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
break|break
name|golab1
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
if|if
condition|(
name|cursor
operator|>=
name|limit
condition|)
block|{
break|break
name|lab0
break|;
block|}
name|cursor
operator|++
expr_stmt|;
block|}
comment|// setmark pV, line 62
name|I_pV
operator|=
name|cursor
expr_stmt|;
comment|// gopast, line 62
name|golab3
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|lab4
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|out_grouping
argument_list|(
name|g_v
argument_list|,
literal|1072
argument_list|,
literal|1103
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab4
break|;
block|}
break|break
name|golab3
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
if|if
condition|(
name|cursor
operator|>=
name|limit
condition|)
block|{
break|break
name|lab0
break|;
block|}
name|cursor
operator|++
expr_stmt|;
block|}
comment|// gopast, line 63
name|golab5
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|lab6
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping
argument_list|(
name|g_v
argument_list|,
literal|1072
argument_list|,
literal|1103
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab6
break|;
block|}
break|break
name|golab5
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
if|if
condition|(
name|cursor
operator|>=
name|limit
condition|)
block|{
break|break
name|lab0
break|;
block|}
name|cursor
operator|++
expr_stmt|;
block|}
comment|// gopast, line 63
name|golab7
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|lab8
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|out_grouping
argument_list|(
name|g_v
argument_list|,
literal|1072
argument_list|,
literal|1103
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab8
break|;
block|}
break|break
name|golab7
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
if|if
condition|(
name|cursor
operator|>=
name|limit
condition|)
block|{
break|break
name|lab0
break|;
block|}
name|cursor
operator|++
expr_stmt|;
block|}
comment|// setmark p2, line 63
name|I_p2
operator|=
name|cursor
expr_stmt|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|v_1
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|method|r_R2
specifier|private
name|boolean
name|r_R2
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
name|I_p2
operator|<=
name|cursor
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_perfective_gerund
specifier|private
name|boolean
name|r_perfective_gerund
parameter_list|()
block|{
name|int
name|among_var
decl_stmt|;
name|int
name|v_1
decl_stmt|;
comment|// (, line 71
comment|// [, line 72
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// substring, line 72
name|among_var
operator|=
name|find_among_b
argument_list|(
name|a_0
argument_list|,
literal|9
argument_list|)
expr_stmt|;
if|if
condition|(
name|among_var
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// ], line 72
name|bra
operator|=
name|cursor
expr_stmt|;
switch|switch
condition|(
name|among_var
condition|)
block|{
case|case
literal|0
case|:
return|return
literal|false
return|;
case|case
literal|1
case|:
comment|// (, line 76
comment|// or, line 76
name|lab0
label|:
do|do
block|{
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 76
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u0430"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// literal, line 76
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u044F"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// delete, line 76
name|slice_del
argument_list|()
expr_stmt|;
break|break;
case|case
literal|2
case|:
comment|// (, line 83
comment|// delete, line 83
name|slice_del
argument_list|()
expr_stmt|;
break|break;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_adjective
specifier|private
name|boolean
name|r_adjective
parameter_list|()
block|{
name|int
name|among_var
decl_stmt|;
comment|// (, line 87
comment|// [, line 88
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// substring, line 88
name|among_var
operator|=
name|find_among_b
argument_list|(
name|a_1
argument_list|,
literal|26
argument_list|)
expr_stmt|;
if|if
condition|(
name|among_var
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// ], line 88
name|bra
operator|=
name|cursor
expr_stmt|;
switch|switch
condition|(
name|among_var
condition|)
block|{
case|case
literal|0
case|:
return|return
literal|false
return|;
case|case
literal|1
case|:
comment|// (, line 97
comment|// delete, line 97
name|slice_del
argument_list|()
expr_stmt|;
break|break;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_adjectival
specifier|private
name|boolean
name|r_adjectival
parameter_list|()
block|{
name|int
name|among_var
decl_stmt|;
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
comment|// (, line 101
comment|// call adjective, line 102
if|if
condition|(
operator|!
name|r_adjective
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// try, line 109
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// (, line 109
comment|// [, line 110
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// substring, line 110
name|among_var
operator|=
name|find_among_b
argument_list|(
name|a_2
argument_list|,
literal|8
argument_list|)
expr_stmt|;
if|if
condition|(
name|among_var
operator|==
literal|0
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
break|break
name|lab0
break|;
block|}
comment|// ], line 110
name|bra
operator|=
name|cursor
expr_stmt|;
switch|switch
condition|(
name|among_var
condition|)
block|{
case|case
literal|0
case|:
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
break|break
name|lab0
break|;
case|case
literal|1
case|:
comment|// (, line 115
comment|// or, line 115
name|lab1
label|:
do|do
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// literal, line 115
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u0430"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
break|break
name|lab1
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// literal, line 115
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u044F"
argument_list|)
operator|)
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
break|break
name|lab0
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// delete, line 115
name|slice_del
argument_list|()
expr_stmt|;
break|break;
case|case
literal|2
case|:
comment|// (, line 122
comment|// delete, line 122
name|slice_del
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_reflexive
specifier|private
name|boolean
name|r_reflexive
parameter_list|()
block|{
name|int
name|among_var
decl_stmt|;
comment|// (, line 128
comment|// [, line 129
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// substring, line 129
name|among_var
operator|=
name|find_among_b
argument_list|(
name|a_3
argument_list|,
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
name|among_var
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// ], line 129
name|bra
operator|=
name|cursor
expr_stmt|;
switch|switch
condition|(
name|among_var
condition|)
block|{
case|case
literal|0
case|:
return|return
literal|false
return|;
case|case
literal|1
case|:
comment|// (, line 132
comment|// delete, line 132
name|slice_del
argument_list|()
expr_stmt|;
break|break;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_verb
specifier|private
name|boolean
name|r_verb
parameter_list|()
block|{
name|int
name|among_var
decl_stmt|;
name|int
name|v_1
decl_stmt|;
comment|// (, line 136
comment|// [, line 137
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// substring, line 137
name|among_var
operator|=
name|find_among_b
argument_list|(
name|a_4
argument_list|,
literal|46
argument_list|)
expr_stmt|;
if|if
condition|(
name|among_var
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// ], line 137
name|bra
operator|=
name|cursor
expr_stmt|;
switch|switch
condition|(
name|among_var
condition|)
block|{
case|case
literal|0
case|:
return|return
literal|false
return|;
case|case
literal|1
case|:
comment|// (, line 143
comment|// or, line 143
name|lab0
label|:
do|do
block|{
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 143
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u0430"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// literal, line 143
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u044F"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// delete, line 143
name|slice_del
argument_list|()
expr_stmt|;
break|break;
case|case
literal|2
case|:
comment|// (, line 151
comment|// delete, line 151
name|slice_del
argument_list|()
expr_stmt|;
break|break;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_noun
specifier|private
name|boolean
name|r_noun
parameter_list|()
block|{
name|int
name|among_var
decl_stmt|;
comment|// (, line 159
comment|// [, line 160
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// substring, line 160
name|among_var
operator|=
name|find_among_b
argument_list|(
name|a_5
argument_list|,
literal|36
argument_list|)
expr_stmt|;
if|if
condition|(
name|among_var
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// ], line 160
name|bra
operator|=
name|cursor
expr_stmt|;
switch|switch
condition|(
name|among_var
condition|)
block|{
case|case
literal|0
case|:
return|return
literal|false
return|;
case|case
literal|1
case|:
comment|// (, line 167
comment|// delete, line 167
name|slice_del
argument_list|()
expr_stmt|;
break|break;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_derivational
specifier|private
name|boolean
name|r_derivational
parameter_list|()
block|{
name|int
name|among_var
decl_stmt|;
comment|// (, line 175
comment|// [, line 176
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// substring, line 176
name|among_var
operator|=
name|find_among_b
argument_list|(
name|a_6
argument_list|,
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
name|among_var
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// ], line 176
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// call R2, line 176
if|if
condition|(
operator|!
name|r_R2
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
switch|switch
condition|(
name|among_var
condition|)
block|{
case|case
literal|0
case|:
return|return
literal|false
return|;
case|case
literal|1
case|:
comment|// (, line 179
comment|// delete, line 179
name|slice_del
argument_list|()
expr_stmt|;
break|break;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_tidy_up
specifier|private
name|boolean
name|r_tidy_up
parameter_list|()
block|{
name|int
name|among_var
decl_stmt|;
comment|// (, line 183
comment|// [, line 184
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// substring, line 184
name|among_var
operator|=
name|find_among_b
argument_list|(
name|a_7
argument_list|,
literal|4
argument_list|)
expr_stmt|;
if|if
condition|(
name|among_var
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// ], line 184
name|bra
operator|=
name|cursor
expr_stmt|;
switch|switch
condition|(
name|among_var
condition|)
block|{
case|case
literal|0
case|:
return|return
literal|false
return|;
case|case
literal|1
case|:
comment|// (, line 188
comment|// delete, line 188
name|slice_del
argument_list|()
expr_stmt|;
comment|// [, line 189
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// literal, line 189
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u043D"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// ], line 189
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// literal, line 189
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u043D"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// delete, line 189
name|slice_del
argument_list|()
expr_stmt|;
break|break;
case|case
literal|2
case|:
comment|// (, line 192
comment|// literal, line 192
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u043D"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// delete, line 192
name|slice_del
argument_list|()
expr_stmt|;
break|break;
case|case
literal|3
case|:
comment|// (, line 194
comment|// delete, line 194
name|slice_del
argument_list|()
expr_stmt|;
break|break;
block|}
return|return
literal|true
return|;
block|}
DECL|method|stem
specifier|public
name|boolean
name|stem
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
name|int
name|v_4
decl_stmt|;
name|int
name|v_5
decl_stmt|;
name|int
name|v_6
decl_stmt|;
name|int
name|v_7
decl_stmt|;
name|int
name|v_8
decl_stmt|;
name|int
name|v_9
decl_stmt|;
name|int
name|v_10
decl_stmt|;
comment|// (, line 199
comment|// do, line 201
name|v_1
operator|=
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// call mark_regions, line 201
if|if
condition|(
operator|!
name|r_mark_regions
argument_list|()
condition|)
block|{
break|break
name|lab0
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|v_1
expr_stmt|;
comment|// backwards, line 202
name|limit_backward
operator|=
name|cursor
expr_stmt|;
name|cursor
operator|=
name|limit
expr_stmt|;
comment|// setlimit, line 202
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// tomark, line 202
if|if
condition|(
name|cursor
operator|<
name|I_pV
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|I_pV
expr_stmt|;
name|v_3
operator|=
name|limit_backward
expr_stmt|;
name|limit_backward
operator|=
name|cursor
expr_stmt|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// (, line 202
comment|// do, line 203
name|v_4
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// (, line 203
comment|// or, line 204
name|lab2
label|:
do|do
block|{
name|v_5
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab3
label|:
do|do
block|{
comment|// call perfective_gerund, line 204
if|if
condition|(
operator|!
name|r_perfective_gerund
argument_list|()
condition|)
block|{
break|break
name|lab3
break|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
comment|// (, line 205
comment|// try, line 205
name|v_6
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab4
label|:
do|do
block|{
comment|// call reflexive, line 205
if|if
condition|(
operator|!
name|r_reflexive
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_6
expr_stmt|;
break|break
name|lab4
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// or, line 206
name|lab5
label|:
do|do
block|{
name|v_7
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab6
label|:
do|do
block|{
comment|// call adjectival, line 206
if|if
condition|(
operator|!
name|r_adjectival
argument_list|()
condition|)
block|{
break|break
name|lab6
break|;
block|}
break|break
name|lab5
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
name|lab7
label|:
do|do
block|{
comment|// call verb, line 206
if|if
condition|(
operator|!
name|r_verb
argument_list|()
condition|)
block|{
break|break
name|lab7
break|;
block|}
break|break
name|lab5
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
comment|// call noun, line 206
if|if
condition|(
operator|!
name|r_noun
argument_list|()
condition|)
block|{
break|break
name|lab1
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
comment|// try, line 209
name|v_8
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab8
label|:
do|do
block|{
comment|// (, line 209
comment|// [, line 209
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// literal, line 209
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u0438"
argument_list|)
operator|)
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_8
expr_stmt|;
break|break
name|lab8
break|;
block|}
comment|// ], line 209
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 209
name|slice_del
argument_list|()
expr_stmt|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// do, line 212
name|v_9
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab9
label|:
do|do
block|{
comment|// call derivational, line 212
if|if
condition|(
operator|!
name|r_derivational
argument_list|()
condition|)
block|{
break|break
name|lab9
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_9
expr_stmt|;
comment|// do, line 213
name|v_10
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab10
label|:
do|do
block|{
comment|// call tidy_up, line 213
if|if
condition|(
operator|!
name|r_tidy_up
argument_list|()
condition|)
block|{
break|break
name|lab10
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_10
expr_stmt|;
name|limit_backward
operator|=
name|v_3
expr_stmt|;
name|cursor
operator|=
name|limit_backward
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|method|equals
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|o
operator|instanceof
name|RussianStemmer
return|;
block|}
DECL|method|hashCode
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|RussianStemmer
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
end_class
end_unit
