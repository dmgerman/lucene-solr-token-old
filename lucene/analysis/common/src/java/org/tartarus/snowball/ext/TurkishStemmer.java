begin_unit
begin_comment
comment|// This file was generated automatically by the Snowball to Java compiler
end_comment
begin_package
DECL|package|org.tartarus.snowball.ext
package|package
name|org
operator|.
name|tartarus
operator|.
name|snowball
operator|.
name|ext
package|;
end_package
begin_import
import|import
name|org
operator|.
name|tartarus
operator|.
name|snowball
operator|.
name|Among
import|;
end_import
begin_import
import|import
name|org
operator|.
name|tartarus
operator|.
name|snowball
operator|.
name|SnowballProgram
import|;
end_import
begin_comment
comment|/**   * This class was automatically generated by a Snowball to Java compiler    * It implements the stemming algorithm defined by a snowball script.   */
end_comment
begin_class
DECL|class|TurkishStemmer
specifier|public
class|class
name|TurkishStemmer
extends|extends
name|SnowballProgram
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
DECL|field|methodObject
specifier|private
specifier|final
specifier|static
name|TurkishStemmer
name|methodObject
init|=
operator|new
name|TurkishStemmer
argument_list|()
decl_stmt|;
DECL|field|a_0
specifier|private
specifier|final
specifier|static
name|Among
name|a_0
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"m"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"n"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"miz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"niz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"muz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"nuz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"m\u00FCz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"n\u00FCz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"m\u0131z"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"n\u0131z"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_1
specifier|private
specifier|final
specifier|static
name|Among
name|a_1
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"leri"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"lar\u0131"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_2
specifier|private
specifier|final
specifier|static
name|Among
name|a_2
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"ni"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"nu"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"n\u00FC"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"n\u0131"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_3
specifier|private
specifier|final
specifier|static
name|Among
name|a_3
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"in"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"un"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u00FCn"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0131n"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_4
specifier|private
specifier|final
specifier|static
name|Among
name|a_4
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"a"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"e"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_5
specifier|private
specifier|final
specifier|static
name|Among
name|a_5
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"na"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ne"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_6
specifier|private
specifier|final
specifier|static
name|Among
name|a_6
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"da"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ta"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"de"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"te"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_7
specifier|private
specifier|final
specifier|static
name|Among
name|a_7
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"nda"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"nde"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_8
specifier|private
specifier|final
specifier|static
name|Among
name|a_8
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"dan"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"tan"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"den"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ten"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_9
specifier|private
specifier|final
specifier|static
name|Among
name|a_9
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"ndan"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"nden"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_10
specifier|private
specifier|final
specifier|static
name|Among
name|a_10
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"la"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"le"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_11
specifier|private
specifier|final
specifier|static
name|Among
name|a_11
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"ca"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ce"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_12
specifier|private
specifier|final
specifier|static
name|Among
name|a_12
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"im"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"um"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u00FCm"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0131m"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_13
specifier|private
specifier|final
specifier|static
name|Among
name|a_13
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"sin"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"sun"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"s\u00FCn"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"s\u0131n"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_14
specifier|private
specifier|final
specifier|static
name|Among
name|a_14
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"iz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"uz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u00FCz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u0131z"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_15
specifier|private
specifier|final
specifier|static
name|Among
name|a_15
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"siniz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"sunuz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"s\u00FCn\u00FCz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"s\u0131n\u0131z"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_16
specifier|private
specifier|final
specifier|static
name|Among
name|a_16
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"lar"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ler"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_17
specifier|private
specifier|final
specifier|static
name|Among
name|a_17
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"niz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"nuz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"n\u00FCz"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"n\u0131z"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_18
specifier|private
specifier|final
specifier|static
name|Among
name|a_18
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"dir"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"tir"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"dur"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"tur"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"d\u00FCr"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"t\u00FCr"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"d\u0131r"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"t\u0131r"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_19
specifier|private
specifier|final
specifier|static
name|Among
name|a_19
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"cas\u0131na"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"cesine"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_20
specifier|private
specifier|final
specifier|static
name|Among
name|a_20
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"di"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"ti"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"dik"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"tik"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"duk"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"tuk"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"d\u00FCk"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"t\u00FCk"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"d\u0131k"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"t\u0131k"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"dim"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"tim"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"dum"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"tum"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"d\u00FCm"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"t\u00FCm"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"d\u0131m"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"t\u0131m"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"din"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"tin"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"dun"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"tun"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"d\u00FCn"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"t\u00FCn"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"d\u0131n"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"t\u0131n"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"du"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"tu"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"d\u00FC"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"t\u00FC"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"d\u0131"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"t\u0131"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_21
specifier|private
specifier|final
specifier|static
name|Among
name|a_21
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"sa"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"se"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"sak"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"sek"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"sam"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"sem"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"san"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"sen"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_22
specifier|private
specifier|final
specifier|static
name|Among
name|a_22
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"mi\u015F"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"mu\u015F"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"m\u00FC\u015F"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"m\u0131\u015F"
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|a_23
specifier|private
specifier|final
specifier|static
name|Among
name|a_23
index|[]
init|=
block|{
operator|new
name|Among
argument_list|(
literal|"b"
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"c"
argument_list|,
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"d"
argument_list|,
operator|-
literal|1
argument_list|,
literal|3
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|,
operator|new
name|Among
argument_list|(
literal|"\u011F"
argument_list|,
operator|-
literal|1
argument_list|,
literal|4
argument_list|,
literal|""
argument_list|,
name|methodObject
argument_list|)
block|}
decl_stmt|;
DECL|field|g_vowel
specifier|private
specifier|static
specifier|final
name|char
name|g_vowel
index|[]
init|=
block|{
literal|17
block|,
literal|65
block|,
literal|16
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|32
block|,
literal|8
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
decl_stmt|;
DECL|field|g_U
specifier|private
specifier|static
specifier|final
name|char
name|g_U
index|[]
init|=
block|{
literal|1
block|,
literal|16
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|8
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
decl_stmt|;
DECL|field|g_vowel1
specifier|private
specifier|static
specifier|final
name|char
name|g_vowel1
index|[]
init|=
block|{
literal|1
block|,
literal|64
block|,
literal|16
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
decl_stmt|;
DECL|field|g_vowel2
specifier|private
specifier|static
specifier|final
name|char
name|g_vowel2
index|[]
init|=
block|{
literal|17
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|130
block|}
decl_stmt|;
DECL|field|g_vowel3
specifier|private
specifier|static
specifier|final
name|char
name|g_vowel3
index|[]
init|=
block|{
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|}
decl_stmt|;
DECL|field|g_vowel4
specifier|private
specifier|static
specifier|final
name|char
name|g_vowel4
index|[]
init|=
block|{
literal|17
block|}
decl_stmt|;
DECL|field|g_vowel5
specifier|private
specifier|static
specifier|final
name|char
name|g_vowel5
index|[]
init|=
block|{
literal|65
block|}
decl_stmt|;
DECL|field|g_vowel6
specifier|private
specifier|static
specifier|final
name|char
name|g_vowel6
index|[]
init|=
block|{
literal|65
block|}
decl_stmt|;
DECL|field|B_continue_stemming_noun_suffixes
specifier|private
name|boolean
name|B_continue_stemming_noun_suffixes
decl_stmt|;
DECL|field|I_strlen
specifier|private
name|int
name|I_strlen
decl_stmt|;
DECL|method|copy_from
specifier|private
name|void
name|copy_from
parameter_list|(
name|TurkishStemmer
name|other
parameter_list|)
block|{
name|B_continue_stemming_noun_suffixes
operator|=
name|other
operator|.
name|B_continue_stemming_noun_suffixes
expr_stmt|;
name|I_strlen
operator|=
name|other
operator|.
name|I_strlen
expr_stmt|;
name|super
operator|.
name|copy_from
argument_list|(
name|other
argument_list|)
expr_stmt|;
block|}
DECL|method|r_check_vowel_harmony
specifier|private
name|boolean
name|r_check_vowel_harmony
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
name|int
name|v_4
decl_stmt|;
name|int
name|v_5
decl_stmt|;
name|int
name|v_6
decl_stmt|;
name|int
name|v_7
decl_stmt|;
name|int
name|v_8
decl_stmt|;
name|int
name|v_9
decl_stmt|;
name|int
name|v_10
decl_stmt|;
name|int
name|v_11
decl_stmt|;
comment|// (, line 111
comment|// test, line 112
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// (, line 113
comment|// (, line 114
comment|// goto, line 114
name|golab0
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
break|break
name|golab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|--
expr_stmt|;
block|}
comment|// (, line 115
comment|// or, line 116
name|lab2
label|:
do|do
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab3
label|:
do|do
block|{
comment|// (, line 116
comment|// literal, line 116
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"a"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab3
break|;
block|}
comment|// goto, line 116
name|golab4
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|v_4
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab5
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel1
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab5
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
break|break
name|golab4
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
break|break
name|lab3
break|;
block|}
name|cursor
operator|--
expr_stmt|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
name|lab6
label|:
do|do
block|{
comment|// (, line 117
comment|// literal, line 117
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"e"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab6
break|;
block|}
comment|// goto, line 117
name|golab7
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|v_5
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab8
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel2
argument_list|,
literal|101
argument_list|,
literal|252
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab8
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
break|break
name|golab7
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
break|break
name|lab6
break|;
block|}
name|cursor
operator|--
expr_stmt|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
name|lab9
label|:
do|do
block|{
comment|// (, line 118
comment|// literal, line 118
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u0131"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab9
break|;
block|}
comment|// goto, line 118
name|golab10
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|v_6
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab11
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel3
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab11
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_6
expr_stmt|;
break|break
name|golab10
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_6
expr_stmt|;
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
break|break
name|lab9
break|;
block|}
name|cursor
operator|--
expr_stmt|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
name|lab12
label|:
do|do
block|{
comment|// (, line 119
comment|// literal, line 119
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"i"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab12
break|;
block|}
comment|// goto, line 119
name|golab13
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|v_7
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab14
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel4
argument_list|,
literal|101
argument_list|,
literal|105
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab14
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
break|break
name|golab13
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
break|break
name|lab12
break|;
block|}
name|cursor
operator|--
expr_stmt|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
name|lab15
label|:
do|do
block|{
comment|// (, line 120
comment|// literal, line 120
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"o"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab15
break|;
block|}
comment|// goto, line 120
name|golab16
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|v_8
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab17
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel5
argument_list|,
literal|111
argument_list|,
literal|117
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab17
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_8
expr_stmt|;
break|break
name|golab16
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_8
expr_stmt|;
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
break|break
name|lab15
break|;
block|}
name|cursor
operator|--
expr_stmt|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
name|lab18
label|:
do|do
block|{
comment|// (, line 121
comment|// literal, line 121
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u00F6"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab18
break|;
block|}
comment|// goto, line 121
name|golab19
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|v_9
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab20
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel6
argument_list|,
literal|246
argument_list|,
literal|252
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab20
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_9
expr_stmt|;
break|break
name|golab19
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_9
expr_stmt|;
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
break|break
name|lab18
break|;
block|}
name|cursor
operator|--
expr_stmt|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
name|lab21
label|:
do|do
block|{
comment|// (, line 122
comment|// literal, line 122
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"u"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab21
break|;
block|}
comment|// goto, line 122
name|golab22
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|v_10
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab23
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel5
argument_list|,
literal|111
argument_list|,
literal|117
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab23
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_10
expr_stmt|;
break|break
name|golab22
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_10
expr_stmt|;
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
break|break
name|lab21
break|;
block|}
name|cursor
operator|--
expr_stmt|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
comment|// (, line 123
comment|// literal, line 123
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u00FC"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// goto, line 123
name|golab24
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|v_11
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab25
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel6
argument_list|,
literal|246
argument_list|,
literal|252
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab25
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_11
expr_stmt|;
break|break
name|golab24
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_11
expr_stmt|;
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|--
expr_stmt|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|method|r_mark_suffix_with_optional_n_consonant
specifier|private
name|boolean
name|r_mark_suffix_with_optional_n_consonant
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
name|int
name|v_4
decl_stmt|;
name|int
name|v_5
decl_stmt|;
name|int
name|v_6
decl_stmt|;
name|int
name|v_7
decl_stmt|;
comment|// (, line 132
comment|// or, line 134
name|lab0
label|:
do|do
block|{
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// (, line 133
comment|// (, line 133
comment|// test, line 133
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// literal, line 133
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"n"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// next, line 133
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|--
expr_stmt|;
comment|// (, line 133
comment|// test, line 133
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// (, line 135
comment|// (, line 135
comment|// not, line 135
block|{
name|v_4
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// (, line 135
comment|// test, line 135
name|v_5
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// literal, line 135
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"n"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
block|}
comment|// test, line 135
name|v_6
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// (, line 135
comment|// next, line 135
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|--
expr_stmt|;
comment|// (, line 135
comment|// test, line 135
name|v_7
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
name|cursor
operator|=
name|limit
operator|-
name|v_6
expr_stmt|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_mark_suffix_with_optional_s_consonant
specifier|private
name|boolean
name|r_mark_suffix_with_optional_s_consonant
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
name|int
name|v_4
decl_stmt|;
name|int
name|v_5
decl_stmt|;
name|int
name|v_6
decl_stmt|;
name|int
name|v_7
decl_stmt|;
comment|// (, line 143
comment|// or, line 145
name|lab0
label|:
do|do
block|{
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// (, line 144
comment|// (, line 144
comment|// test, line 144
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// literal, line 144
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"s"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// next, line 144
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|--
expr_stmt|;
comment|// (, line 144
comment|// test, line 144
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// (, line 146
comment|// (, line 146
comment|// not, line 146
block|{
name|v_4
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// (, line 146
comment|// test, line 146
name|v_5
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// literal, line 146
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"s"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
block|}
comment|// test, line 146
name|v_6
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// (, line 146
comment|// next, line 146
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|--
expr_stmt|;
comment|// (, line 146
comment|// test, line 146
name|v_7
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
name|cursor
operator|=
name|limit
operator|-
name|v_6
expr_stmt|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_mark_suffix_with_optional_y_consonant
specifier|private
name|boolean
name|r_mark_suffix_with_optional_y_consonant
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
name|int
name|v_4
decl_stmt|;
name|int
name|v_5
decl_stmt|;
name|int
name|v_6
decl_stmt|;
name|int
name|v_7
decl_stmt|;
comment|// (, line 153
comment|// or, line 155
name|lab0
label|:
do|do
block|{
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// (, line 154
comment|// (, line 154
comment|// test, line 154
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// literal, line 154
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"y"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// next, line 154
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|--
expr_stmt|;
comment|// (, line 154
comment|// test, line 154
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// (, line 156
comment|// (, line 156
comment|// not, line 156
block|{
name|v_4
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// (, line 156
comment|// test, line 156
name|v_5
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// literal, line 156
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"y"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
block|}
comment|// test, line 156
name|v_6
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// (, line 156
comment|// next, line 156
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|--
expr_stmt|;
comment|// (, line 156
comment|// test, line 156
name|v_7
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
name|cursor
operator|=
name|limit
operator|-
name|v_6
expr_stmt|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_mark_suffix_with_optional_U_vowel
specifier|private
name|boolean
name|r_mark_suffix_with_optional_U_vowel
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
name|int
name|v_4
decl_stmt|;
name|int
name|v_5
decl_stmt|;
name|int
name|v_6
decl_stmt|;
name|int
name|v_7
decl_stmt|;
comment|// (, line 159
comment|// or, line 161
name|lab0
label|:
do|do
block|{
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// (, line 160
comment|// (, line 160
comment|// test, line 160
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_U
argument_list|,
literal|105
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// next, line 160
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|--
expr_stmt|;
comment|// (, line 160
comment|// test, line 160
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|out_grouping_b
argument_list|(
name|g_vowel
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// (, line 162
comment|// (, line 162
comment|// not, line 162
block|{
name|v_4
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// (, line 162
comment|// test, line 162
name|v_5
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_U
argument_list|,
literal|105
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab2
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
block|}
comment|// test, line 162
name|v_6
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// (, line 162
comment|// next, line 162
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|--
expr_stmt|;
comment|// (, line 162
comment|// test, line 162
name|v_7
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|out_grouping_b
argument_list|(
name|g_vowel
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
name|cursor
operator|=
name|limit
operator|-
name|v_6
expr_stmt|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_mark_possessives
specifier|private
name|boolean
name|r_mark_possessives
parameter_list|()
block|{
comment|// (, line 166
comment|// among, line 167
if|if
condition|(
name|find_among_b
argument_list|(
name|a_0
argument_list|,
literal|10
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 169
comment|// call mark_suffix_with_optional_U_vowel, line 169
if|if
condition|(
operator|!
name|r_mark_suffix_with_optional_U_vowel
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_sU
specifier|private
name|boolean
name|r_mark_sU
parameter_list|()
block|{
comment|// (, line 172
comment|// call check_vowel_harmony, line 173
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_U
argument_list|,
literal|105
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 175
comment|// call mark_suffix_with_optional_s_consonant, line 175
if|if
condition|(
operator|!
name|r_mark_suffix_with_optional_s_consonant
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_lArI
specifier|private
name|boolean
name|r_mark_lArI
parameter_list|()
block|{
comment|// (, line 178
comment|// among, line 179
if|if
condition|(
name|find_among_b
argument_list|(
name|a_1
argument_list|,
literal|2
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_yU
specifier|private
name|boolean
name|r_mark_yU
parameter_list|()
block|{
comment|// (, line 182
comment|// call check_vowel_harmony, line 183
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_U
argument_list|,
literal|105
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 185
comment|// call mark_suffix_with_optional_y_consonant, line 185
if|if
condition|(
operator|!
name|r_mark_suffix_with_optional_y_consonant
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_nU
specifier|private
name|boolean
name|r_mark_nU
parameter_list|()
block|{
comment|// (, line 188
comment|// call check_vowel_harmony, line 189
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 190
if|if
condition|(
name|find_among_b
argument_list|(
name|a_2
argument_list|,
literal|4
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_nUn
specifier|private
name|boolean
name|r_mark_nUn
parameter_list|()
block|{
comment|// (, line 193
comment|// call check_vowel_harmony, line 194
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 195
if|if
condition|(
name|find_among_b
argument_list|(
name|a_3
argument_list|,
literal|4
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 196
comment|// call mark_suffix_with_optional_n_consonant, line 196
if|if
condition|(
operator|!
name|r_mark_suffix_with_optional_n_consonant
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_yA
specifier|private
name|boolean
name|r_mark_yA
parameter_list|()
block|{
comment|// (, line 199
comment|// call check_vowel_harmony, line 200
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 201
if|if
condition|(
name|find_among_b
argument_list|(
name|a_4
argument_list|,
literal|2
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 202
comment|// call mark_suffix_with_optional_y_consonant, line 202
if|if
condition|(
operator|!
name|r_mark_suffix_with_optional_y_consonant
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_nA
specifier|private
name|boolean
name|r_mark_nA
parameter_list|()
block|{
comment|// (, line 205
comment|// call check_vowel_harmony, line 206
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 207
if|if
condition|(
name|find_among_b
argument_list|(
name|a_5
argument_list|,
literal|2
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_DA
specifier|private
name|boolean
name|r_mark_DA
parameter_list|()
block|{
comment|// (, line 210
comment|// call check_vowel_harmony, line 211
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 212
if|if
condition|(
name|find_among_b
argument_list|(
name|a_6
argument_list|,
literal|4
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_ndA
specifier|private
name|boolean
name|r_mark_ndA
parameter_list|()
block|{
comment|// (, line 215
comment|// call check_vowel_harmony, line 216
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 217
if|if
condition|(
name|find_among_b
argument_list|(
name|a_7
argument_list|,
literal|2
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_DAn
specifier|private
name|boolean
name|r_mark_DAn
parameter_list|()
block|{
comment|// (, line 220
comment|// call check_vowel_harmony, line 221
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 222
if|if
condition|(
name|find_among_b
argument_list|(
name|a_8
argument_list|,
literal|4
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_ndAn
specifier|private
name|boolean
name|r_mark_ndAn
parameter_list|()
block|{
comment|// (, line 225
comment|// call check_vowel_harmony, line 226
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 227
if|if
condition|(
name|find_among_b
argument_list|(
name|a_9
argument_list|,
literal|2
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_ylA
specifier|private
name|boolean
name|r_mark_ylA
parameter_list|()
block|{
comment|// (, line 230
comment|// call check_vowel_harmony, line 231
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 232
if|if
condition|(
name|find_among_b
argument_list|(
name|a_10
argument_list|,
literal|2
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 233
comment|// call mark_suffix_with_optional_y_consonant, line 233
if|if
condition|(
operator|!
name|r_mark_suffix_with_optional_y_consonant
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_ki
specifier|private
name|boolean
name|r_mark_ki
parameter_list|()
block|{
comment|// (, line 236
comment|// literal, line 237
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|2
argument_list|,
literal|"ki"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_ncA
specifier|private
name|boolean
name|r_mark_ncA
parameter_list|()
block|{
comment|// (, line 240
comment|// call check_vowel_harmony, line 241
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 242
if|if
condition|(
name|find_among_b
argument_list|(
name|a_11
argument_list|,
literal|2
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 243
comment|// call mark_suffix_with_optional_n_consonant, line 243
if|if
condition|(
operator|!
name|r_mark_suffix_with_optional_n_consonant
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_yUm
specifier|private
name|boolean
name|r_mark_yUm
parameter_list|()
block|{
comment|// (, line 246
comment|// call check_vowel_harmony, line 247
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 248
if|if
condition|(
name|find_among_b
argument_list|(
name|a_12
argument_list|,
literal|4
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 249
comment|// call mark_suffix_with_optional_y_consonant, line 249
if|if
condition|(
operator|!
name|r_mark_suffix_with_optional_y_consonant
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_sUn
specifier|private
name|boolean
name|r_mark_sUn
parameter_list|()
block|{
comment|// (, line 252
comment|// call check_vowel_harmony, line 253
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 254
if|if
condition|(
name|find_among_b
argument_list|(
name|a_13
argument_list|,
literal|4
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_yUz
specifier|private
name|boolean
name|r_mark_yUz
parameter_list|()
block|{
comment|// (, line 257
comment|// call check_vowel_harmony, line 258
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 259
if|if
condition|(
name|find_among_b
argument_list|(
name|a_14
argument_list|,
literal|4
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 260
comment|// call mark_suffix_with_optional_y_consonant, line 260
if|if
condition|(
operator|!
name|r_mark_suffix_with_optional_y_consonant
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_sUnUz
specifier|private
name|boolean
name|r_mark_sUnUz
parameter_list|()
block|{
comment|// (, line 263
comment|// among, line 264
if|if
condition|(
name|find_among_b
argument_list|(
name|a_15
argument_list|,
literal|4
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_lAr
specifier|private
name|boolean
name|r_mark_lAr
parameter_list|()
block|{
comment|// (, line 267
comment|// call check_vowel_harmony, line 268
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 269
if|if
condition|(
name|find_among_b
argument_list|(
name|a_16
argument_list|,
literal|2
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_nUz
specifier|private
name|boolean
name|r_mark_nUz
parameter_list|()
block|{
comment|// (, line 272
comment|// call check_vowel_harmony, line 273
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 274
if|if
condition|(
name|find_among_b
argument_list|(
name|a_17
argument_list|,
literal|4
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_DUr
specifier|private
name|boolean
name|r_mark_DUr
parameter_list|()
block|{
comment|// (, line 277
comment|// call check_vowel_harmony, line 278
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 279
if|if
condition|(
name|find_among_b
argument_list|(
name|a_18
argument_list|,
literal|8
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_cAsInA
specifier|private
name|boolean
name|r_mark_cAsInA
parameter_list|()
block|{
comment|// (, line 282
comment|// among, line 283
if|if
condition|(
name|find_among_b
argument_list|(
name|a_19
argument_list|,
literal|2
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_yDU
specifier|private
name|boolean
name|r_mark_yDU
parameter_list|()
block|{
comment|// (, line 286
comment|// call check_vowel_harmony, line 287
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 288
if|if
condition|(
name|find_among_b
argument_list|(
name|a_20
argument_list|,
literal|32
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 292
comment|// call mark_suffix_with_optional_y_consonant, line 292
if|if
condition|(
operator|!
name|r_mark_suffix_with_optional_y_consonant
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_ysA
specifier|private
name|boolean
name|r_mark_ysA
parameter_list|()
block|{
comment|// (, line 296
comment|// among, line 297
if|if
condition|(
name|find_among_b
argument_list|(
name|a_21
argument_list|,
literal|8
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 298
comment|// call mark_suffix_with_optional_y_consonant, line 298
if|if
condition|(
operator|!
name|r_mark_suffix_with_optional_y_consonant
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_ymUs_
specifier|private
name|boolean
name|r_mark_ymUs_
parameter_list|()
block|{
comment|// (, line 301
comment|// call check_vowel_harmony, line 302
if|if
condition|(
operator|!
name|r_check_vowel_harmony
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// among, line 303
if|if
condition|(
name|find_among_b
argument_list|(
name|a_22
argument_list|,
literal|4
argument_list|)
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 304
comment|// call mark_suffix_with_optional_y_consonant, line 304
if|if
condition|(
operator|!
name|r_mark_suffix_with_optional_y_consonant
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_mark_yken
specifier|private
name|boolean
name|r_mark_yken
parameter_list|()
block|{
comment|// (, line 307
comment|// literal, line 308
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|3
argument_list|,
literal|"ken"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 308
comment|// call mark_suffix_with_optional_y_consonant, line 308
if|if
condition|(
operator|!
name|r_mark_suffix_with_optional_y_consonant
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_stem_nominal_verb_suffixes
specifier|private
name|boolean
name|r_stem_nominal_verb_suffixes
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
name|int
name|v_4
decl_stmt|;
name|int
name|v_5
decl_stmt|;
name|int
name|v_6
decl_stmt|;
name|int
name|v_7
decl_stmt|;
name|int
name|v_8
decl_stmt|;
name|int
name|v_9
decl_stmt|;
name|int
name|v_10
decl_stmt|;
comment|// (, line 311
comment|// [, line 312
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// set continue_stemming_noun_suffixes, line 313
name|B_continue_stemming_noun_suffixes
operator|=
literal|true
expr_stmt|;
comment|// or, line 315
name|lab0
label|:
do|do
block|{
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// (, line 314
comment|// or, line 314
name|lab2
label|:
do|do
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab3
label|:
do|do
block|{
comment|// call mark_ymUs_, line 314
if|if
condition|(
operator|!
name|r_mark_ymUs_
argument_list|()
condition|)
block|{
break|break
name|lab3
break|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
name|lab4
label|:
do|do
block|{
comment|// call mark_yDU, line 314
if|if
condition|(
operator|!
name|r_mark_yDU
argument_list|()
condition|)
block|{
break|break
name|lab4
break|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
name|lab5
label|:
do|do
block|{
comment|// call mark_ysA, line 314
if|if
condition|(
operator|!
name|r_mark_ysA
argument_list|()
condition|)
block|{
break|break
name|lab5
break|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// call mark_yken, line 314
if|if
condition|(
operator|!
name|r_mark_yken
argument_list|()
condition|)
block|{
break|break
name|lab1
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
name|lab6
label|:
do|do
block|{
comment|// (, line 316
comment|// call mark_cAsInA, line 316
if|if
condition|(
operator|!
name|r_mark_cAsInA
argument_list|()
condition|)
block|{
break|break
name|lab6
break|;
block|}
comment|// (, line 316
comment|// or, line 316
name|lab7
label|:
do|do
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab8
label|:
do|do
block|{
comment|// call mark_sUnUz, line 316
if|if
condition|(
operator|!
name|r_mark_sUnUz
argument_list|()
condition|)
block|{
break|break
name|lab8
break|;
block|}
break|break
name|lab7
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
name|lab9
label|:
do|do
block|{
comment|// call mark_lAr, line 316
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
break|break
name|lab9
break|;
block|}
break|break
name|lab7
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
name|lab10
label|:
do|do
block|{
comment|// call mark_yUm, line 316
if|if
condition|(
operator|!
name|r_mark_yUm
argument_list|()
condition|)
block|{
break|break
name|lab10
break|;
block|}
break|break
name|lab7
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
name|lab11
label|:
do|do
block|{
comment|// call mark_sUn, line 316
if|if
condition|(
operator|!
name|r_mark_sUn
argument_list|()
condition|)
block|{
break|break
name|lab11
break|;
block|}
break|break
name|lab7
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
name|lab12
label|:
do|do
block|{
comment|// call mark_yUz, line 316
if|if
condition|(
operator|!
name|r_mark_yUz
argument_list|()
condition|)
block|{
break|break
name|lab12
break|;
block|}
break|break
name|lab7
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// call mark_ymUs_, line 316
if|if
condition|(
operator|!
name|r_mark_ymUs_
argument_list|()
condition|)
block|{
break|break
name|lab6
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
name|lab13
label|:
do|do
block|{
comment|// (, line 318
comment|// call mark_lAr, line 319
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
break|break
name|lab13
break|;
block|}
comment|// ], line 319
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 319
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 319
name|v_4
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab14
label|:
do|do
block|{
comment|// (, line 319
comment|// [, line 319
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// (, line 319
comment|// or, line 319
name|lab15
label|:
do|do
block|{
name|v_5
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab16
label|:
do|do
block|{
comment|// call mark_DUr, line 319
if|if
condition|(
operator|!
name|r_mark_DUr
argument_list|()
condition|)
block|{
break|break
name|lab16
break|;
block|}
break|break
name|lab15
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
name|lab17
label|:
do|do
block|{
comment|// call mark_yDU, line 319
if|if
condition|(
operator|!
name|r_mark_yDU
argument_list|()
condition|)
block|{
break|break
name|lab17
break|;
block|}
break|break
name|lab15
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
name|lab18
label|:
do|do
block|{
comment|// call mark_ysA, line 319
if|if
condition|(
operator|!
name|r_mark_ysA
argument_list|()
condition|)
block|{
break|break
name|lab18
break|;
block|}
break|break
name|lab15
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
comment|// call mark_ymUs_, line 319
if|if
condition|(
operator|!
name|r_mark_ymUs_
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
break|break
name|lab14
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// unset continue_stemming_noun_suffixes, line 320
name|B_continue_stemming_noun_suffixes
operator|=
literal|false
expr_stmt|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
name|lab19
label|:
do|do
block|{
comment|// (, line 323
comment|// call mark_nUz, line 323
if|if
condition|(
operator|!
name|r_mark_nUz
argument_list|()
condition|)
block|{
break|break
name|lab19
break|;
block|}
comment|// (, line 323
comment|// or, line 323
name|lab20
label|:
do|do
block|{
name|v_6
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab21
label|:
do|do
block|{
comment|// call mark_yDU, line 323
if|if
condition|(
operator|!
name|r_mark_yDU
argument_list|()
condition|)
block|{
break|break
name|lab21
break|;
block|}
break|break
name|lab20
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_6
expr_stmt|;
comment|// call mark_ysA, line 323
if|if
condition|(
operator|!
name|r_mark_ysA
argument_list|()
condition|)
block|{
break|break
name|lab19
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
name|lab22
label|:
do|do
block|{
comment|// (, line 325
comment|// (, line 325
comment|// or, line 325
name|lab23
label|:
do|do
block|{
name|v_7
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab24
label|:
do|do
block|{
comment|// call mark_sUnUz, line 325
if|if
condition|(
operator|!
name|r_mark_sUnUz
argument_list|()
condition|)
block|{
break|break
name|lab24
break|;
block|}
break|break
name|lab23
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
name|lab25
label|:
do|do
block|{
comment|// call mark_yUz, line 325
if|if
condition|(
operator|!
name|r_mark_yUz
argument_list|()
condition|)
block|{
break|break
name|lab25
break|;
block|}
break|break
name|lab23
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
name|lab26
label|:
do|do
block|{
comment|// call mark_sUn, line 325
if|if
condition|(
operator|!
name|r_mark_sUn
argument_list|()
condition|)
block|{
break|break
name|lab26
break|;
block|}
break|break
name|lab23
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
comment|// call mark_yUm, line 325
if|if
condition|(
operator|!
name|r_mark_yUm
argument_list|()
condition|)
block|{
break|break
name|lab22
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// ], line 325
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 325
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 325
name|v_8
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab27
label|:
do|do
block|{
comment|// (, line 325
comment|// [, line 325
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_ymUs_, line 325
if|if
condition|(
operator|!
name|r_mark_ymUs_
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_8
expr_stmt|;
break|break
name|lab27
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// (, line 327
comment|// call mark_DUr, line 327
if|if
condition|(
operator|!
name|r_mark_DUr
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// ], line 327
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 327
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 327
name|v_9
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab28
label|:
do|do
block|{
comment|// (, line 327
comment|// [, line 327
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// (, line 327
comment|// or, line 327
name|lab29
label|:
do|do
block|{
name|v_10
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab30
label|:
do|do
block|{
comment|// call mark_sUnUz, line 327
if|if
condition|(
operator|!
name|r_mark_sUnUz
argument_list|()
condition|)
block|{
break|break
name|lab30
break|;
block|}
break|break
name|lab29
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_10
expr_stmt|;
name|lab31
label|:
do|do
block|{
comment|// call mark_lAr, line 327
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
break|break
name|lab31
break|;
block|}
break|break
name|lab29
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_10
expr_stmt|;
name|lab32
label|:
do|do
block|{
comment|// call mark_yUm, line 327
if|if
condition|(
operator|!
name|r_mark_yUm
argument_list|()
condition|)
block|{
break|break
name|lab32
break|;
block|}
break|break
name|lab29
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_10
expr_stmt|;
name|lab33
label|:
do|do
block|{
comment|// call mark_sUn, line 327
if|if
condition|(
operator|!
name|r_mark_sUn
argument_list|()
condition|)
block|{
break|break
name|lab33
break|;
block|}
break|break
name|lab29
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_10
expr_stmt|;
name|lab34
label|:
do|do
block|{
comment|// call mark_yUz, line 327
if|if
condition|(
operator|!
name|r_mark_yUz
argument_list|()
condition|)
block|{
break|break
name|lab34
break|;
block|}
break|break
name|lab29
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_10
expr_stmt|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// call mark_ymUs_, line 327
if|if
condition|(
operator|!
name|r_mark_ymUs_
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_9
expr_stmt|;
break|break
name|lab28
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// ], line 328
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 328
name|slice_del
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|method|r_stem_suffix_chain_before_ki
specifier|private
name|boolean
name|r_stem_suffix_chain_before_ki
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
name|int
name|v_4
decl_stmt|;
name|int
name|v_5
decl_stmt|;
name|int
name|v_6
decl_stmt|;
name|int
name|v_7
decl_stmt|;
name|int
name|v_8
decl_stmt|;
name|int
name|v_9
decl_stmt|;
name|int
name|v_10
decl_stmt|;
name|int
name|v_11
decl_stmt|;
comment|// (, line 332
comment|// [, line 333
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_ki, line 334
if|if
condition|(
operator|!
name|r_mark_ki
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 335
comment|// or, line 342
name|lab0
label|:
do|do
block|{
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// (, line 336
comment|// call mark_DA, line 336
if|if
condition|(
operator|!
name|r_mark_DA
argument_list|()
condition|)
block|{
break|break
name|lab1
break|;
block|}
comment|// ], line 336
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 336
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 336
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// (, line 336
comment|// [, line 336
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// or, line 338
name|lab3
label|:
do|do
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab4
label|:
do|do
block|{
comment|// (, line 337
comment|// call mark_lAr, line 337
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
break|break
name|lab4
break|;
block|}
comment|// ], line 337
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 337
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 337
name|v_4
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab5
label|:
do|do
block|{
comment|// (, line 337
comment|// call stem_suffix_chain_before_ki, line 337
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
break|break
name|lab5
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab3
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
comment|// (, line 339
comment|// call mark_possessives, line 339
if|if
condition|(
operator|!
name|r_mark_possessives
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
break|break
name|lab2
break|;
block|}
comment|// ], line 339
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 339
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 339
name|v_5
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab6
label|:
do|do
block|{
comment|// (, line 339
comment|// [, line 339
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lAr, line 339
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
break|break
name|lab6
break|;
block|}
comment|// ], line 339
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 339
name|slice_del
argument_list|()
expr_stmt|;
comment|// call stem_suffix_chain_before_ki, line 339
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
break|break
name|lab6
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
name|lab7
label|:
do|do
block|{
comment|// (, line 343
comment|// call mark_nUn, line 343
if|if
condition|(
operator|!
name|r_mark_nUn
argument_list|()
condition|)
block|{
break|break
name|lab7
break|;
block|}
comment|// ], line 343
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 343
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 343
name|v_6
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab8
label|:
do|do
block|{
comment|// (, line 343
comment|// [, line 343
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// or, line 345
name|lab9
label|:
do|do
block|{
name|v_7
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab10
label|:
do|do
block|{
comment|// (, line 344
comment|// call mark_lArI, line 344
if|if
condition|(
operator|!
name|r_mark_lArI
argument_list|()
condition|)
block|{
break|break
name|lab10
break|;
block|}
comment|// ], line 344
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 344
name|slice_del
argument_list|()
expr_stmt|;
break|break
name|lab9
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
name|lab11
label|:
do|do
block|{
comment|// (, line 346
comment|// [, line 346
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// or, line 346
name|lab12
label|:
do|do
block|{
name|v_8
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab13
label|:
do|do
block|{
comment|// call mark_possessives, line 346
if|if
condition|(
operator|!
name|r_mark_possessives
argument_list|()
condition|)
block|{
break|break
name|lab13
break|;
block|}
break|break
name|lab12
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_8
expr_stmt|;
comment|// call mark_sU, line 346
if|if
condition|(
operator|!
name|r_mark_sU
argument_list|()
condition|)
block|{
break|break
name|lab11
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// ], line 346
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 346
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 346
name|v_9
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab14
label|:
do|do
block|{
comment|// (, line 346
comment|// [, line 346
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lAr, line 346
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_9
expr_stmt|;
break|break
name|lab14
break|;
block|}
comment|// ], line 346
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 346
name|slice_del
argument_list|()
expr_stmt|;
comment|// call stem_suffix_chain_before_ki, line 346
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_9
expr_stmt|;
break|break
name|lab14
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab9
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
comment|// (, line 348
comment|// call stem_suffix_chain_before_ki, line 348
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_6
expr_stmt|;
break|break
name|lab8
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// (, line 351
comment|// call mark_ndA, line 351
if|if
condition|(
operator|!
name|r_mark_ndA
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 351
comment|// or, line 353
name|lab15
label|:
do|do
block|{
name|v_10
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab16
label|:
do|do
block|{
comment|// (, line 352
comment|// call mark_lArI, line 352
if|if
condition|(
operator|!
name|r_mark_lArI
argument_list|()
condition|)
block|{
break|break
name|lab16
break|;
block|}
comment|// ], line 352
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 352
name|slice_del
argument_list|()
expr_stmt|;
break|break
name|lab15
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_10
expr_stmt|;
name|lab17
label|:
do|do
block|{
comment|// (, line 354
comment|// (, line 354
comment|// call mark_sU, line 354
if|if
condition|(
operator|!
name|r_mark_sU
argument_list|()
condition|)
block|{
break|break
name|lab17
break|;
block|}
comment|// ], line 354
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 354
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 354
name|v_11
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab18
label|:
do|do
block|{
comment|// (, line 354
comment|// [, line 354
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lAr, line 354
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_11
expr_stmt|;
break|break
name|lab18
break|;
block|}
comment|// ], line 354
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 354
name|slice_del
argument_list|()
expr_stmt|;
comment|// call stem_suffix_chain_before_ki, line 354
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_11
expr_stmt|;
break|break
name|lab18
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab15
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_10
expr_stmt|;
comment|// (, line 356
comment|// call stem_suffix_chain_before_ki, line 356
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_stem_noun_suffixes
specifier|private
name|boolean
name|r_stem_noun_suffixes
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
name|int
name|v_4
decl_stmt|;
name|int
name|v_5
decl_stmt|;
name|int
name|v_6
decl_stmt|;
name|int
name|v_7
decl_stmt|;
name|int
name|v_8
decl_stmt|;
name|int
name|v_9
decl_stmt|;
name|int
name|v_10
decl_stmt|;
name|int
name|v_11
decl_stmt|;
name|int
name|v_12
decl_stmt|;
name|int
name|v_13
decl_stmt|;
name|int
name|v_14
decl_stmt|;
name|int
name|v_15
decl_stmt|;
name|int
name|v_16
decl_stmt|;
name|int
name|v_17
decl_stmt|;
name|int
name|v_18
decl_stmt|;
name|int
name|v_19
decl_stmt|;
name|int
name|v_20
decl_stmt|;
name|int
name|v_21
decl_stmt|;
name|int
name|v_22
decl_stmt|;
name|int
name|v_23
decl_stmt|;
name|int
name|v_24
decl_stmt|;
name|int
name|v_25
decl_stmt|;
name|int
name|v_26
decl_stmt|;
name|int
name|v_27
decl_stmt|;
comment|// (, line 361
comment|// or, line 363
name|lab0
label|:
do|do
block|{
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// (, line 362
comment|// [, line 362
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lAr, line 362
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
break|break
name|lab1
break|;
block|}
comment|// ], line 362
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 362
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 362
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// (, line 362
comment|// call stem_suffix_chain_before_ki, line 362
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
break|break
name|lab2
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
name|lab3
label|:
do|do
block|{
comment|// (, line 364
comment|// [, line 364
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_ncA, line 364
if|if
condition|(
operator|!
name|r_mark_ncA
argument_list|()
condition|)
block|{
break|break
name|lab3
break|;
block|}
comment|// ], line 364
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 364
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 365
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab4
label|:
do|do
block|{
comment|// (, line 365
comment|// or, line 367
name|lab5
label|:
do|do
block|{
name|v_4
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab6
label|:
do|do
block|{
comment|// (, line 366
comment|// [, line 366
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lArI, line 366
if|if
condition|(
operator|!
name|r_mark_lArI
argument_list|()
condition|)
block|{
break|break
name|lab6
break|;
block|}
comment|// ], line 366
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 366
name|slice_del
argument_list|()
expr_stmt|;
break|break
name|lab5
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
name|lab7
label|:
do|do
block|{
comment|// (, line 368
comment|// [, line 368
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// or, line 368
name|lab8
label|:
do|do
block|{
name|v_5
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab9
label|:
do|do
block|{
comment|// call mark_possessives, line 368
if|if
condition|(
operator|!
name|r_mark_possessives
argument_list|()
condition|)
block|{
break|break
name|lab9
break|;
block|}
break|break
name|lab8
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
comment|// call mark_sU, line 368
if|if
condition|(
operator|!
name|r_mark_sU
argument_list|()
condition|)
block|{
break|break
name|lab7
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// ], line 368
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 368
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 368
name|v_6
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab10
label|:
do|do
block|{
comment|// (, line 368
comment|// [, line 368
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lAr, line 368
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_6
expr_stmt|;
break|break
name|lab10
break|;
block|}
comment|// ], line 368
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 368
name|slice_del
argument_list|()
expr_stmt|;
comment|// call stem_suffix_chain_before_ki, line 368
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_6
expr_stmt|;
break|break
name|lab10
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab5
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
comment|// (, line 370
comment|// [, line 370
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lAr, line 370
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
break|break
name|lab4
break|;
block|}
comment|// ], line 370
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 370
name|slice_del
argument_list|()
expr_stmt|;
comment|// call stem_suffix_chain_before_ki, line 370
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
break|break
name|lab4
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
name|lab11
label|:
do|do
block|{
comment|// (, line 374
comment|// [, line 374
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// (, line 374
comment|// or, line 374
name|lab12
label|:
do|do
block|{
name|v_7
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab13
label|:
do|do
block|{
comment|// call mark_ndA, line 374
if|if
condition|(
operator|!
name|r_mark_ndA
argument_list|()
condition|)
block|{
break|break
name|lab13
break|;
block|}
break|break
name|lab12
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
comment|// call mark_nA, line 374
if|if
condition|(
operator|!
name|r_mark_nA
argument_list|()
condition|)
block|{
break|break
name|lab11
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// (, line 375
comment|// or, line 377
name|lab14
label|:
do|do
block|{
name|v_8
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab15
label|:
do|do
block|{
comment|// (, line 376
comment|// call mark_lArI, line 376
if|if
condition|(
operator|!
name|r_mark_lArI
argument_list|()
condition|)
block|{
break|break
name|lab15
break|;
block|}
comment|// ], line 376
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 376
name|slice_del
argument_list|()
expr_stmt|;
break|break
name|lab14
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_8
expr_stmt|;
name|lab16
label|:
do|do
block|{
comment|// (, line 378
comment|// call mark_sU, line 378
if|if
condition|(
operator|!
name|r_mark_sU
argument_list|()
condition|)
block|{
break|break
name|lab16
break|;
block|}
comment|// ], line 378
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 378
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 378
name|v_9
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab17
label|:
do|do
block|{
comment|// (, line 378
comment|// [, line 378
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lAr, line 378
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_9
expr_stmt|;
break|break
name|lab17
break|;
block|}
comment|// ], line 378
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 378
name|slice_del
argument_list|()
expr_stmt|;
comment|// call stem_suffix_chain_before_ki, line 378
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_9
expr_stmt|;
break|break
name|lab17
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab14
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_8
expr_stmt|;
comment|// (, line 380
comment|// call stem_suffix_chain_before_ki, line 380
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
break|break
name|lab11
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
name|lab18
label|:
do|do
block|{
comment|// (, line 384
comment|// [, line 384
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// (, line 384
comment|// or, line 384
name|lab19
label|:
do|do
block|{
name|v_10
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab20
label|:
do|do
block|{
comment|// call mark_ndAn, line 384
if|if
condition|(
operator|!
name|r_mark_ndAn
argument_list|()
condition|)
block|{
break|break
name|lab20
break|;
block|}
break|break
name|lab19
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_10
expr_stmt|;
comment|// call mark_nU, line 384
if|if
condition|(
operator|!
name|r_mark_nU
argument_list|()
condition|)
block|{
break|break
name|lab18
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// (, line 384
comment|// or, line 384
name|lab21
label|:
do|do
block|{
name|v_11
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab22
label|:
do|do
block|{
comment|// (, line 384
comment|// call mark_sU, line 384
if|if
condition|(
operator|!
name|r_mark_sU
argument_list|()
condition|)
block|{
break|break
name|lab22
break|;
block|}
comment|// ], line 384
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 384
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 384
name|v_12
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab23
label|:
do|do
block|{
comment|// (, line 384
comment|// [, line 384
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lAr, line 384
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_12
expr_stmt|;
break|break
name|lab23
break|;
block|}
comment|// ], line 384
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 384
name|slice_del
argument_list|()
expr_stmt|;
comment|// call stem_suffix_chain_before_ki, line 384
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_12
expr_stmt|;
break|break
name|lab23
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab21
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_11
expr_stmt|;
comment|// (, line 384
comment|// call mark_lArI, line 384
if|if
condition|(
operator|!
name|r_mark_lArI
argument_list|()
condition|)
block|{
break|break
name|lab18
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
name|lab24
label|:
do|do
block|{
comment|// (, line 386
comment|// [, line 386
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_DAn, line 386
if|if
condition|(
operator|!
name|r_mark_DAn
argument_list|()
condition|)
block|{
break|break
name|lab24
break|;
block|}
comment|// ], line 386
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 386
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 386
name|v_13
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab25
label|:
do|do
block|{
comment|// (, line 386
comment|// [, line 386
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// (, line 387
comment|// or, line 389
name|lab26
label|:
do|do
block|{
name|v_14
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab27
label|:
do|do
block|{
comment|// (, line 388
comment|// call mark_possessives, line 388
if|if
condition|(
operator|!
name|r_mark_possessives
argument_list|()
condition|)
block|{
break|break
name|lab27
break|;
block|}
comment|// ], line 388
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 388
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 388
name|v_15
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab28
label|:
do|do
block|{
comment|// (, line 388
comment|// [, line 388
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lAr, line 388
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_15
expr_stmt|;
break|break
name|lab28
break|;
block|}
comment|// ], line 388
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 388
name|slice_del
argument_list|()
expr_stmt|;
comment|// call stem_suffix_chain_before_ki, line 388
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_15
expr_stmt|;
break|break
name|lab28
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab26
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_14
expr_stmt|;
name|lab29
label|:
do|do
block|{
comment|// (, line 390
comment|// call mark_lAr, line 390
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
break|break
name|lab29
break|;
block|}
comment|// ], line 390
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 390
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 390
name|v_16
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab30
label|:
do|do
block|{
comment|// (, line 390
comment|// call stem_suffix_chain_before_ki, line 390
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_16
expr_stmt|;
break|break
name|lab30
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab26
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_14
expr_stmt|;
comment|// (, line 392
comment|// call stem_suffix_chain_before_ki, line 392
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_13
expr_stmt|;
break|break
name|lab25
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
name|lab31
label|:
do|do
block|{
comment|// (, line 396
comment|// [, line 396
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// or, line 396
name|lab32
label|:
do|do
block|{
name|v_17
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab33
label|:
do|do
block|{
comment|// call mark_nUn, line 396
if|if
condition|(
operator|!
name|r_mark_nUn
argument_list|()
condition|)
block|{
break|break
name|lab33
break|;
block|}
break|break
name|lab32
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_17
expr_stmt|;
comment|// call mark_ylA, line 396
if|if
condition|(
operator|!
name|r_mark_ylA
argument_list|()
condition|)
block|{
break|break
name|lab31
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// ], line 396
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 396
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 397
name|v_18
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab34
label|:
do|do
block|{
comment|// (, line 397
comment|// or, line 399
name|lab35
label|:
do|do
block|{
name|v_19
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab36
label|:
do|do
block|{
comment|// (, line 398
comment|// [, line 398
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lAr, line 398
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
break|break
name|lab36
break|;
block|}
comment|// ], line 398
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 398
name|slice_del
argument_list|()
expr_stmt|;
comment|// call stem_suffix_chain_before_ki, line 398
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
break|break
name|lab36
break|;
block|}
break|break
name|lab35
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_19
expr_stmt|;
name|lab37
label|:
do|do
block|{
comment|// (, line 400
comment|// [, line 400
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// or, line 400
name|lab38
label|:
do|do
block|{
name|v_20
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab39
label|:
do|do
block|{
comment|// call mark_possessives, line 400
if|if
condition|(
operator|!
name|r_mark_possessives
argument_list|()
condition|)
block|{
break|break
name|lab39
break|;
block|}
break|break
name|lab38
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_20
expr_stmt|;
comment|// call mark_sU, line 400
if|if
condition|(
operator|!
name|r_mark_sU
argument_list|()
condition|)
block|{
break|break
name|lab37
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// ], line 400
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 400
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 400
name|v_21
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab40
label|:
do|do
block|{
comment|// (, line 400
comment|// [, line 400
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lAr, line 400
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_21
expr_stmt|;
break|break
name|lab40
break|;
block|}
comment|// ], line 400
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 400
name|slice_del
argument_list|()
expr_stmt|;
comment|// call stem_suffix_chain_before_ki, line 400
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_21
expr_stmt|;
break|break
name|lab40
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab35
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_19
expr_stmt|;
comment|// call stem_suffix_chain_before_ki, line 402
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_18
expr_stmt|;
break|break
name|lab34
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
name|lab41
label|:
do|do
block|{
comment|// (, line 406
comment|// [, line 406
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lArI, line 406
if|if
condition|(
operator|!
name|r_mark_lArI
argument_list|()
condition|)
block|{
break|break
name|lab41
break|;
block|}
comment|// ], line 406
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 406
name|slice_del
argument_list|()
expr_stmt|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
name|lab42
label|:
do|do
block|{
comment|// (, line 408
comment|// call stem_suffix_chain_before_ki, line 408
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
break|break
name|lab42
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
name|lab43
label|:
do|do
block|{
comment|// (, line 410
comment|// [, line 410
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// or, line 410
name|lab44
label|:
do|do
block|{
name|v_22
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab45
label|:
do|do
block|{
comment|// call mark_DA, line 410
if|if
condition|(
operator|!
name|r_mark_DA
argument_list|()
condition|)
block|{
break|break
name|lab45
break|;
block|}
break|break
name|lab44
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_22
expr_stmt|;
name|lab46
label|:
do|do
block|{
comment|// call mark_yU, line 410
if|if
condition|(
operator|!
name|r_mark_yU
argument_list|()
condition|)
block|{
break|break
name|lab46
break|;
block|}
break|break
name|lab44
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_22
expr_stmt|;
comment|// call mark_yA, line 410
if|if
condition|(
operator|!
name|r_mark_yA
argument_list|()
condition|)
block|{
break|break
name|lab43
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// ], line 410
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 410
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 410
name|v_23
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab47
label|:
do|do
block|{
comment|// (, line 410
comment|// [, line 410
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// (, line 410
comment|// or, line 410
name|lab48
label|:
do|do
block|{
name|v_24
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab49
label|:
do|do
block|{
comment|// (, line 410
comment|// call mark_possessives, line 410
if|if
condition|(
operator|!
name|r_mark_possessives
argument_list|()
condition|)
block|{
break|break
name|lab49
break|;
block|}
comment|// ], line 410
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 410
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 410
name|v_25
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab50
label|:
do|do
block|{
comment|// (, line 410
comment|// [, line 410
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lAr, line 410
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_25
expr_stmt|;
break|break
name|lab50
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab48
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_24
expr_stmt|;
comment|// call mark_lAr, line 410
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_23
expr_stmt|;
break|break
name|lab47
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// ], line 410
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 410
name|slice_del
argument_list|()
expr_stmt|;
comment|// [, line 410
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call stem_suffix_chain_before_ki, line 410
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_23
expr_stmt|;
break|break
name|lab47
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// (, line 412
comment|// [, line 412
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// or, line 412
name|lab51
label|:
do|do
block|{
name|v_26
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab52
label|:
do|do
block|{
comment|// call mark_possessives, line 412
if|if
condition|(
operator|!
name|r_mark_possessives
argument_list|()
condition|)
block|{
break|break
name|lab52
break|;
block|}
break|break
name|lab51
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_26
expr_stmt|;
comment|// call mark_sU, line 412
if|if
condition|(
operator|!
name|r_mark_sU
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
comment|// ], line 412
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 412
name|slice_del
argument_list|()
expr_stmt|;
comment|// try, line 412
name|v_27
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab53
label|:
do|do
block|{
comment|// (, line 412
comment|// [, line 412
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// call mark_lAr, line 412
if|if
condition|(
operator|!
name|r_mark_lAr
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_27
expr_stmt|;
break|break
name|lab53
break|;
block|}
comment|// ], line 412
name|bra
operator|=
name|cursor
expr_stmt|;
comment|// delete, line 412
name|slice_del
argument_list|()
expr_stmt|;
comment|// call stem_suffix_chain_before_ki, line 412
if|if
condition|(
operator|!
name|r_stem_suffix_chain_before_ki
argument_list|()
condition|)
block|{
name|cursor
operator|=
name|limit
operator|-
name|v_27
expr_stmt|;
break|break
name|lab53
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_post_process_last_consonants
specifier|private
name|boolean
name|r_post_process_last_consonants
parameter_list|()
block|{
name|int
name|among_var
decl_stmt|;
comment|// (, line 415
comment|// [, line 416
name|ket
operator|=
name|cursor
expr_stmt|;
comment|// substring, line 416
name|among_var
operator|=
name|find_among_b
argument_list|(
name|a_23
argument_list|,
literal|4
argument_list|)
expr_stmt|;
if|if
condition|(
name|among_var
operator|==
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// ], line 416
name|bra
operator|=
name|cursor
expr_stmt|;
switch|switch
condition|(
name|among_var
condition|)
block|{
case|case
literal|0
case|:
return|return
literal|false
return|;
case|case
literal|1
case|:
comment|// (, line 417
comment|//<-, line 417
name|slice_from
argument_list|(
literal|"p"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|2
case|:
comment|// (, line 418
comment|//<-, line 418
name|slice_from
argument_list|(
literal|"\u00E7"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|3
case|:
comment|// (, line 419
comment|//<-, line 419
name|slice_from
argument_list|(
literal|"t"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|4
case|:
comment|// (, line 420
comment|//<-, line 420
name|slice_from
argument_list|(
literal|"k"
argument_list|)
expr_stmt|;
break|break;
block|}
return|return
literal|true
return|;
block|}
DECL|method|r_append_U_to_stems_ending_with_d_or_g
specifier|private
name|boolean
name|r_append_U_to_stems_ending_with_d_or_g
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
name|int
name|v_4
decl_stmt|;
name|int
name|v_5
decl_stmt|;
name|int
name|v_6
decl_stmt|;
name|int
name|v_7
decl_stmt|;
name|int
name|v_8
decl_stmt|;
name|int
name|v_9
decl_stmt|;
name|int
name|v_10
decl_stmt|;
name|int
name|v_11
decl_stmt|;
name|int
name|v_12
decl_stmt|;
name|int
name|v_13
decl_stmt|;
name|int
name|v_14
decl_stmt|;
name|int
name|v_15
decl_stmt|;
comment|// (, line 430
comment|// test, line 431
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// (, line 431
comment|// or, line 431
name|lab0
label|:
do|do
block|{
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// literal, line 431
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"d"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// literal, line 431
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"g"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// or, line 433
name|lab2
label|:
do|do
block|{
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab3
label|:
do|do
block|{
comment|// (, line 432
comment|// test, line 432
name|v_4
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// (, line 432
comment|// (, line 432
comment|// goto, line 432
name|golab4
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|v_5
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab5
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab5
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
break|break
name|golab4
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_5
expr_stmt|;
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
break|break
name|lab3
break|;
block|}
name|cursor
operator|--
expr_stmt|;
block|}
comment|// or, line 432
name|lab6
label|:
do|do
block|{
name|v_6
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab7
label|:
do|do
block|{
comment|// literal, line 432
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"a"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab7
break|;
block|}
break|break
name|lab6
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_6
expr_stmt|;
comment|// literal, line 432
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u0131"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab3
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_4
expr_stmt|;
comment|//<+, line 432
block|{
name|int
name|c
init|=
name|cursor
decl_stmt|;
name|insert
argument_list|(
name|cursor
argument_list|,
name|cursor
argument_list|,
literal|"\u0131"
argument_list|)
expr_stmt|;
name|cursor
operator|=
name|c
expr_stmt|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
name|lab8
label|:
do|do
block|{
comment|// (, line 434
comment|// test, line 434
name|v_7
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// (, line 434
comment|// (, line 434
comment|// goto, line 434
name|golab9
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|v_8
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab10
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab10
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_8
expr_stmt|;
break|break
name|golab9
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_8
expr_stmt|;
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
break|break
name|lab8
break|;
block|}
name|cursor
operator|--
expr_stmt|;
block|}
comment|// or, line 434
name|lab11
label|:
do|do
block|{
name|v_9
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab12
label|:
do|do
block|{
comment|// literal, line 434
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"e"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab12
break|;
block|}
break|break
name|lab11
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_9
expr_stmt|;
comment|// literal, line 434
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"i"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab8
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_7
expr_stmt|;
comment|//<+, line 434
block|{
name|int
name|c
init|=
name|cursor
decl_stmt|;
name|insert
argument_list|(
name|cursor
argument_list|,
name|cursor
argument_list|,
literal|"i"
argument_list|)
expr_stmt|;
name|cursor
operator|=
name|c
expr_stmt|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
name|lab13
label|:
do|do
block|{
comment|// (, line 436
comment|// test, line 436
name|v_10
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// (, line 436
comment|// (, line 436
comment|// goto, line 436
name|golab14
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|v_11
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab15
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab15
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_11
expr_stmt|;
break|break
name|golab14
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_11
expr_stmt|;
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
break|break
name|lab13
break|;
block|}
name|cursor
operator|--
expr_stmt|;
block|}
comment|// or, line 436
name|lab16
label|:
do|do
block|{
name|v_12
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab17
label|:
do|do
block|{
comment|// literal, line 436
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"o"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab17
break|;
block|}
break|break
name|lab16
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_12
expr_stmt|;
comment|// literal, line 436
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"u"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab13
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_10
expr_stmt|;
comment|//<+, line 436
block|{
name|int
name|c
init|=
name|cursor
decl_stmt|;
name|insert
argument_list|(
name|cursor
argument_list|,
name|cursor
argument_list|,
literal|"u"
argument_list|)
expr_stmt|;
name|cursor
operator|=
name|c
expr_stmt|;
block|}
break|break
name|lab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
comment|// (, line 438
comment|// test, line 438
name|v_13
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
comment|// (, line 438
comment|// (, line 438
comment|// goto, line 438
name|golab18
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|v_14
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab19
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping_b
argument_list|(
name|g_vowel
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab19
break|;
block|}
name|cursor
operator|=
name|limit
operator|-
name|v_14
expr_stmt|;
break|break
name|golab18
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_14
expr_stmt|;
if|if
condition|(
name|cursor
operator|<=
name|limit_backward
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|--
expr_stmt|;
block|}
comment|// or, line 438
name|lab20
label|:
do|do
block|{
name|v_15
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab21
label|:
do|do
block|{
comment|// literal, line 438
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u00F6"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab21
break|;
block|}
break|break
name|lab20
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_15
expr_stmt|;
comment|// literal, line 438
if|if
condition|(
operator|!
operator|(
name|eq_s_b
argument_list|(
literal|1
argument_list|,
literal|"\u00FC"
argument_list|)
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_13
expr_stmt|;
comment|//<+, line 438
block|{
name|int
name|c
init|=
name|cursor
decl_stmt|;
name|insert
argument_list|(
name|cursor
argument_list|,
name|cursor
argument_list|,
literal|"\u00FC"
argument_list|)
expr_stmt|;
name|cursor
operator|=
name|c
expr_stmt|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_more_than_one_syllable_word
specifier|private
name|boolean
name|r_more_than_one_syllable_word
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_3
decl_stmt|;
comment|// (, line 445
comment|// test, line 446
name|v_1
operator|=
name|cursor
expr_stmt|;
comment|// (, line 446
comment|// atleast, line 446
block|{
name|int
name|v_2
init|=
literal|2
decl_stmt|;
comment|// atleast, line 446
name|replab0
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|v_3
operator|=
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// (, line 446
comment|// gopast, line 446
name|golab2
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|lab3
label|:
do|do
block|{
if|if
condition|(
operator|!
operator|(
name|in_grouping
argument_list|(
name|g_vowel
argument_list|,
literal|97
argument_list|,
literal|305
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab3
break|;
block|}
break|break
name|golab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
if|if
condition|(
name|cursor
operator|>=
name|limit
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|++
expr_stmt|;
block|}
name|v_2
operator|--
expr_stmt|;
continue|continue
name|replab0
continue|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|v_3
expr_stmt|;
break|break
name|replab0
break|;
block|}
if|if
condition|(
name|v_2
operator|>
literal|0
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
name|cursor
operator|=
name|v_1
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|method|r_is_reserved_word
specifier|private
name|boolean
name|r_is_reserved_word
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_4
decl_stmt|;
comment|// (, line 449
comment|// or, line 451
name|lab0
label|:
do|do
block|{
name|v_1
operator|=
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// test, line 450
name|v_2
operator|=
name|cursor
expr_stmt|;
comment|// (, line 450
comment|// gopast, line 450
name|golab2
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|lab3
label|:
do|do
block|{
comment|// literal, line 450
if|if
condition|(
operator|!
operator|(
name|eq_s
argument_list|(
literal|2
argument_list|,
literal|"ad"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab3
break|;
block|}
break|break
name|golab2
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
if|if
condition|(
name|cursor
operator|>=
name|limit
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|++
expr_stmt|;
block|}
comment|// (, line 450
name|I_strlen
operator|=
literal|2
expr_stmt|;
comment|// (, line 450
if|if
condition|(
operator|!
operator|(
name|I_strlen
operator|==
name|limit
operator|)
condition|)
block|{
break|break
name|lab1
break|;
block|}
name|cursor
operator|=
name|v_2
expr_stmt|;
break|break
name|lab0
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|v_1
expr_stmt|;
comment|// test, line 452
name|v_4
operator|=
name|cursor
expr_stmt|;
comment|// (, line 452
comment|// gopast, line 452
name|golab4
label|:
while|while
condition|(
literal|true
condition|)
block|{
name|lab5
label|:
do|do
block|{
comment|// literal, line 452
if|if
condition|(
operator|!
operator|(
name|eq_s
argument_list|(
literal|5
argument_list|,
literal|"soyad"
argument_list|)
operator|)
condition|)
block|{
break|break
name|lab5
break|;
block|}
break|break
name|golab4
break|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
if|if
condition|(
name|cursor
operator|>=
name|limit
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|++
expr_stmt|;
block|}
comment|// (, line 452
name|I_strlen
operator|=
literal|5
expr_stmt|;
comment|// (, line 452
if|if
condition|(
operator|!
operator|(
name|I_strlen
operator|==
name|limit
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|cursor
operator|=
name|v_4
expr_stmt|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
return|return
literal|true
return|;
block|}
DECL|method|r_postlude
specifier|private
name|boolean
name|r_postlude
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
name|int
name|v_3
decl_stmt|;
comment|// (, line 455
comment|// not, line 456
block|{
name|v_1
operator|=
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// (, line 456
comment|// call is_reserved_word, line 456
if|if
condition|(
operator|!
name|r_is_reserved_word
argument_list|()
condition|)
block|{
break|break
name|lab0
break|;
block|}
return|return
literal|false
return|;
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|v_1
expr_stmt|;
block|}
comment|// backwards, line 457
name|limit_backward
operator|=
name|cursor
expr_stmt|;
name|cursor
operator|=
name|limit
expr_stmt|;
comment|// (, line 457
comment|// do, line 458
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// call append_U_to_stems_ending_with_d_or_g, line 458
if|if
condition|(
operator|!
name|r_append_U_to_stems_ending_with_d_or_g
argument_list|()
condition|)
block|{
break|break
name|lab1
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
comment|// do, line 459
name|v_3
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab2
label|:
do|do
block|{
comment|// call post_process_last_consonants, line 459
if|if
condition|(
operator|!
name|r_post_process_last_consonants
argument_list|()
condition|)
block|{
break|break
name|lab2
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_3
expr_stmt|;
name|cursor
operator|=
name|limit_backward
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|method|stem
specifier|public
name|boolean
name|stem
parameter_list|()
block|{
name|int
name|v_1
decl_stmt|;
name|int
name|v_2
decl_stmt|;
comment|// (, line 464
comment|// (, line 465
comment|// call more_than_one_syllable_word, line 465
if|if
condition|(
operator|!
name|r_more_than_one_syllable_word
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// (, line 466
comment|// backwards, line 467
name|limit_backward
operator|=
name|cursor
expr_stmt|;
name|cursor
operator|=
name|limit
expr_stmt|;
comment|// (, line 467
comment|// do, line 468
name|v_1
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab0
label|:
do|do
block|{
comment|// call stem_nominal_verb_suffixes, line 468
if|if
condition|(
operator|!
name|r_stem_nominal_verb_suffixes
argument_list|()
condition|)
block|{
break|break
name|lab0
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_1
expr_stmt|;
comment|// Boolean test continue_stemming_noun_suffixes, line 469
if|if
condition|(
operator|!
operator|(
name|B_continue_stemming_noun_suffixes
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
comment|// do, line 470
name|v_2
operator|=
name|limit
operator|-
name|cursor
expr_stmt|;
name|lab1
label|:
do|do
block|{
comment|// call stem_noun_suffixes, line 470
if|if
condition|(
operator|!
name|r_stem_noun_suffixes
argument_list|()
condition|)
block|{
break|break
name|lab1
break|;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
name|cursor
operator|=
name|limit
operator|-
name|v_2
expr_stmt|;
name|cursor
operator|=
name|limit_backward
expr_stmt|;
comment|// call postlude, line 473
if|if
condition|(
operator|!
name|r_postlude
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|equals
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|o
operator|instanceof
name|TurkishStemmer
return|;
block|}
DECL|method|hashCode
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|TurkishStemmer
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
end_class
end_unit
