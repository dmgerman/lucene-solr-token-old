begin_unit
begin_comment
comment|// DO NOT EDIT THIS FILE! Use "ant unicode-data" to recreate.
end_comment
begin_package
DECL|package|org.apache.lucene.analysis.util
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|util
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Bits
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|SparseFixedBitSet
import|;
end_import
begin_comment
comment|/**  * This file contains unicode properties used by various {@link CharTokenizer}s.  * The data was created using ICU4J v54.1.0.0  *<p>  * Unicode version: 7.0.0.0  */
end_comment
begin_class
DECL|class|UnicodeProps
specifier|public
specifier|final
class|class
name|UnicodeProps
block|{
DECL|method|UnicodeProps
specifier|private
name|UnicodeProps
parameter_list|()
block|{}
comment|/** Unicode version that was used to generate this file: {@value} */
DECL|field|UNICODE_VERSION
specifier|public
specifier|static
specifier|final
name|String
name|UNICODE_VERSION
init|=
literal|"7.0.0.0"
decl_stmt|;
comment|/** Bitset with Unicode WHITESPACE code points. */
DECL|field|WHITESPACE
specifier|public
specifier|static
specifier|final
name|Bits
name|WHITESPACE
init|=
name|createBits
argument_list|(
literal|0x0009
argument_list|,
literal|0x000A
argument_list|,
literal|0x000B
argument_list|,
literal|0x000C
argument_list|,
literal|0x000D
argument_list|,
literal|0x0020
argument_list|,
literal|0x0085
argument_list|,
literal|0x00A0
argument_list|,
literal|0x1680
argument_list|,
literal|0x2000
argument_list|,
literal|0x2001
argument_list|,
literal|0x2002
argument_list|,
literal|0x2003
argument_list|,
literal|0x2004
argument_list|,
literal|0x2005
argument_list|,
literal|0x2006
argument_list|,
literal|0x2007
argument_list|,
literal|0x2008
argument_list|,
literal|0x2009
argument_list|,
literal|0x200A
argument_list|,
literal|0x2028
argument_list|,
literal|0x2029
argument_list|,
literal|0x202F
argument_list|,
literal|0x205F
argument_list|,
literal|0x3000
argument_list|)
decl_stmt|;
DECL|method|createBits
specifier|private
specifier|static
name|Bits
name|createBits
parameter_list|(
specifier|final
name|int
modifier|...
name|codepoints
parameter_list|)
block|{
specifier|final
name|int
name|len
init|=
name|codepoints
index|[
name|codepoints
operator|.
name|length
operator|-
literal|1
index|]
operator|+
literal|1
decl_stmt|;
specifier|final
name|SparseFixedBitSet
name|bitset
init|=
operator|new
name|SparseFixedBitSet
argument_list|(
name|len
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
range|:
name|codepoints
control|)
name|bitset
operator|.
name|set
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return
operator|new
name|Bits
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|index
operator|<
name|len
operator|&&
name|bitset
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|length
parameter_list|()
block|{
return|return
literal|0x10FFFF
operator|+
literal|1
return|;
block|}
block|}
return|;
block|}
block|}
end_class
end_unit
