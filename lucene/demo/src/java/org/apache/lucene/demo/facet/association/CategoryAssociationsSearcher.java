begin_unit
begin_package
DECL|package|org.apache.lucene.demo.facet.association
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|demo
operator|.
name|facet
operator|.
name|association
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|demo
operator|.
name|facet
operator|.
name|simple
operator|.
name|SimpleSearcher
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|search
operator|.
name|params
operator|.
name|associations
operator|.
name|AssociationFloatSumFacetRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|search
operator|.
name|params
operator|.
name|associations
operator|.
name|AssociationIntSumFacetRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|search
operator|.
name|results
operator|.
name|FacetResult
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|CategoryPath
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|TaxonomyReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|directory
operator|.
name|DirectoryTaxonomyReader
import|;
end_import
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/**  * AssociationSearcher searches index with facets, evaluating the facets with  * their associated $int value  *   * @lucene.experimental  */
end_comment
begin_class
DECL|class|CategoryAssociationsSearcher
specifier|public
class|class
name|CategoryAssociationsSearcher
block|{
comment|/** No instantiation */
DECL|method|CategoryAssociationsSearcher
specifier|private
name|CategoryAssociationsSearcher
parameter_list|()
block|{}
comment|/** Search an index with a sum of int-association. */
DECL|method|searchSumIntAssociation
specifier|public
specifier|static
name|List
argument_list|<
name|FacetResult
argument_list|>
name|searchSumIntAssociation
parameter_list|(
name|Directory
name|indexDir
parameter_list|,
name|Directory
name|taxoDir
parameter_list|)
throws|throws
name|Exception
block|{
comment|// prepare index reader
name|IndexReader
name|indexReader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|indexDir
argument_list|)
decl_stmt|;
name|TaxonomyReader
name|taxo
init|=
operator|new
name|DirectoryTaxonomyReader
argument_list|(
name|taxoDir
argument_list|)
decl_stmt|;
name|AssociationIntSumFacetRequest
name|facetRequest
init|=
operator|new
name|AssociationIntSumFacetRequest
argument_list|(
operator|new
name|CategoryPath
argument_list|(
literal|"tags"
argument_list|)
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FacetResult
argument_list|>
name|res
init|=
name|SimpleSearcher
operator|.
name|searchWithRequest
argument_list|(
name|indexReader
argument_list|,
name|taxo
argument_list|,
literal|null
argument_list|,
name|facetRequest
argument_list|)
decl_stmt|;
comment|// close readers
name|taxo
operator|.
name|close
argument_list|()
expr_stmt|;
name|indexReader
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|res
return|;
block|}
comment|/** Search an index with a sum of float-association. */
DECL|method|searchSumFloatAssociation
specifier|public
specifier|static
name|List
argument_list|<
name|FacetResult
argument_list|>
name|searchSumFloatAssociation
parameter_list|(
name|Directory
name|indexDir
parameter_list|,
name|Directory
name|taxoDir
parameter_list|)
throws|throws
name|Exception
block|{
comment|// prepare index reader
name|IndexReader
name|indexReader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|indexDir
argument_list|)
decl_stmt|;
name|TaxonomyReader
name|taxo
init|=
operator|new
name|DirectoryTaxonomyReader
argument_list|(
name|taxoDir
argument_list|)
decl_stmt|;
name|AssociationFloatSumFacetRequest
name|facetRequest
init|=
operator|new
name|AssociationFloatSumFacetRequest
argument_list|(
operator|new
name|CategoryPath
argument_list|(
literal|"genre"
argument_list|)
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FacetResult
argument_list|>
name|res
init|=
name|SimpleSearcher
operator|.
name|searchWithRequest
argument_list|(
name|indexReader
argument_list|,
name|taxo
argument_list|,
literal|null
argument_list|,
name|facetRequest
argument_list|)
decl_stmt|;
comment|// close readers
name|taxo
operator|.
name|close
argument_list|()
expr_stmt|;
name|indexReader
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|res
return|;
block|}
block|}
end_class
end_unit
