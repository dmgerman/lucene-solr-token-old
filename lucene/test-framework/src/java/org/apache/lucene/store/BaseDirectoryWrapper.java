begin_unit
begin_package
DECL|package|org.apache.lucene.store
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|TestUtil
import|;
end_import
begin_comment
comment|/**  * Calls check index on close.  */
end_comment
begin_comment
comment|// do NOT make any methods in this class synchronized, volatile
end_comment
begin_comment
comment|// do NOT import anything from the concurrency package.
end_comment
begin_comment
comment|// no randoms, no nothing.
end_comment
begin_class
DECL|class|BaseDirectoryWrapper
specifier|public
class|class
name|BaseDirectoryWrapper
extends|extends
name|FilterDirectory
block|{
DECL|field|checkIndexOnClose
specifier|private
name|boolean
name|checkIndexOnClose
init|=
literal|true
decl_stmt|;
DECL|field|crossCheckTermVectorsOnClose
specifier|private
name|boolean
name|crossCheckTermVectorsOnClose
init|=
literal|true
decl_stmt|;
DECL|field|isOpen
specifier|protected
specifier|volatile
name|boolean
name|isOpen
init|=
literal|true
decl_stmt|;
DECL|method|BaseDirectoryWrapper
specifier|public
name|BaseDirectoryWrapper
parameter_list|(
name|Directory
name|delegate
parameter_list|)
block|{
name|super
argument_list|(
name|delegate
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|close
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|isOpen
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|checkIndexOnClose
operator|&&
name|DirectoryReader
operator|.
name|indexExists
argument_list|(
name|this
argument_list|)
condition|)
block|{
name|TestUtil
operator|.
name|checkIndex
argument_list|(
name|this
argument_list|,
name|crossCheckTermVectorsOnClose
argument_list|)
expr_stmt|;
block|}
name|super
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|isOpen
specifier|public
name|boolean
name|isOpen
parameter_list|()
block|{
return|return
name|isOpen
return|;
block|}
comment|/**    * Set whether or not checkindex should be run    * on close    */
DECL|method|setCheckIndexOnClose
specifier|public
name|void
name|setCheckIndexOnClose
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|this
operator|.
name|checkIndexOnClose
operator|=
name|value
expr_stmt|;
block|}
DECL|method|getCheckIndexOnClose
specifier|public
name|boolean
name|getCheckIndexOnClose
parameter_list|()
block|{
return|return
name|checkIndexOnClose
return|;
block|}
DECL|method|setCrossCheckTermVectorsOnClose
specifier|public
name|void
name|setCrossCheckTermVectorsOnClose
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|this
operator|.
name|crossCheckTermVectorsOnClose
operator|=
name|value
expr_stmt|;
block|}
DECL|method|getCrossCheckTermVectorsOnClose
specifier|public
name|boolean
name|getCrossCheckTermVectorsOnClose
parameter_list|()
block|{
return|return
name|crossCheckTermVectorsOnClose
return|;
block|}
annotation|@
name|Override
DECL|method|copy
specifier|public
name|void
name|copy
parameter_list|(
name|Directory
name|to
parameter_list|,
name|String
name|src
parameter_list|,
name|String
name|dest
parameter_list|,
name|IOContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|in
operator|.
name|copy
argument_list|(
name|to
argument_list|,
name|src
argument_list|,
name|dest
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createSlicer
specifier|public
name|IndexInputSlicer
name|createSlicer
parameter_list|(
name|String
name|name
parameter_list|,
name|IOContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|in
operator|.
name|createSlicer
argument_list|(
name|name
argument_list|,
name|context
argument_list|)
return|;
block|}
block|}
end_class
end_unit
