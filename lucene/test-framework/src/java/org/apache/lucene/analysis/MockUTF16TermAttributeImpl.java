begin_unit
begin_package
DECL|package|org.apache.lucene.analysis
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|tokenattributes
operator|.
name|CharTermAttributeImpl
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|AttributeFactory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import
begin_comment
comment|/**  * Extension of {@link CharTermAttributeImpl} that encodes the term  * text as UTF-16 bytes instead of as UTF-8 bytes.  */
end_comment
begin_class
DECL|class|MockUTF16TermAttributeImpl
specifier|public
class|class
name|MockUTF16TermAttributeImpl
extends|extends
name|CharTermAttributeImpl
block|{
comment|/** Factory that returns an instance of this class for CharTermAttribute */
DECL|field|UTF16_TERM_ATTRIBUTE_FACTORY
specifier|public
specifier|static
specifier|final
name|AttributeFactory
name|UTF16_TERM_ATTRIBUTE_FACTORY
init|=
name|AttributeFactory
operator|.
name|getStaticImplementation
argument_list|(
name|AttributeFactory
operator|.
name|DEFAULT_ATTRIBUTE_FACTORY
argument_list|,
name|MockUTF16TermAttributeImpl
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|fillBytesRef
specifier|public
name|void
name|fillBytesRef
parameter_list|()
block|{
name|BytesRef
name|bytes
init|=
name|getBytesRef
argument_list|()
decl_stmt|;
name|byte
index|[]
name|utf16
init|=
name|toString
argument_list|()
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_16LE
argument_list|)
decl_stmt|;
name|bytes
operator|.
name|bytes
operator|=
name|utf16
expr_stmt|;
name|bytes
operator|.
name|offset
operator|=
literal|0
expr_stmt|;
name|bytes
operator|.
name|length
operator|=
name|utf16
operator|.
name|length
expr_stmt|;
block|}
block|}
end_class
end_unit
