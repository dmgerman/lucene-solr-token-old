begin_unit
begin_package
DECL|package|org.apache.lucene.search
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import
begin_comment
comment|/** A crazy {@link BulkScorer} that wraps another {@link BulkScorer}  *  but shuffles the order of the collected documents. */
end_comment
begin_class
DECL|class|AssertingBulkOutOfOrderScorer
specifier|public
class|class
name|AssertingBulkOutOfOrderScorer
extends|extends
name|BulkScorer
block|{
DECL|field|in
specifier|final
name|BulkScorer
name|in
decl_stmt|;
DECL|field|random
specifier|final
name|Random
name|random
decl_stmt|;
DECL|method|AssertingBulkOutOfOrderScorer
specifier|public
name|AssertingBulkOutOfOrderScorer
parameter_list|(
name|Random
name|random
parameter_list|,
name|BulkScorer
name|in
parameter_list|)
block|{
name|this
operator|.
name|in
operator|=
name|in
expr_stmt|;
name|this
operator|.
name|random
operator|=
name|random
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|score
specifier|public
name|boolean
name|score
parameter_list|(
name|LeafCollector
name|collector
parameter_list|,
name|int
name|max
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|RandomOrderCollector
name|randomCollector
init|=
operator|new
name|RandomOrderCollector
argument_list|(
name|random
argument_list|,
name|collector
argument_list|)
decl_stmt|;
specifier|final
name|boolean
name|remaining
init|=
name|in
operator|.
name|score
argument_list|(
name|randomCollector
argument_list|,
name|max
argument_list|)
decl_stmt|;
name|randomCollector
operator|.
name|flush
argument_list|()
expr_stmt|;
return|return
name|remaining
return|;
block|}
annotation|@
name|Override
DECL|method|score
specifier|public
name|void
name|score
parameter_list|(
name|LeafCollector
name|collector
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|RandomOrderCollector
name|randomCollector
init|=
operator|new
name|RandomOrderCollector
argument_list|(
name|random
argument_list|,
name|collector
argument_list|)
decl_stmt|;
name|in
operator|.
name|score
argument_list|(
name|randomCollector
argument_list|)
expr_stmt|;
name|randomCollector
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"AssertingBulkOutOfOrderScorer("
operator|+
name|in
operator|+
literal|")"
return|;
block|}
block|}
end_class
end_unit
