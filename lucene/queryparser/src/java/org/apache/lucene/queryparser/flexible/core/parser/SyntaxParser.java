begin_unit
begin_package
DECL|package|org.apache.lucene.queryparser.flexible.core.parser
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queryparser
operator|.
name|flexible
operator|.
name|core
operator|.
name|parser
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queryparser
operator|.
name|flexible
operator|.
name|core
operator|.
name|QueryNodeParseException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|queryparser
operator|.
name|flexible
operator|.
name|core
operator|.
name|nodes
operator|.
name|QueryNode
import|;
end_import
begin_comment
comment|/**  * A parser needs to implement {@link SyntaxParser} interface  */
end_comment
begin_interface
DECL|interface|SyntaxParser
specifier|public
interface|interface
name|SyntaxParser
block|{
comment|/**    * @param query    *          - query data to be parsed    * @param field    *          - default field name    * @return QueryNode tree    */
DECL|method|parse
specifier|public
name|QueryNode
name|parse
parameter_list|(
name|CharSequence
name|query
parameter_list|,
name|CharSequence
name|field
parameter_list|)
throws|throws
name|QueryNodeParseException
function_decl|;
block|}
end_interface
end_unit
