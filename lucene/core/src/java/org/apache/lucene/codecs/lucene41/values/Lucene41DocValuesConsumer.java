begin_unit
begin_package
DECL|package|org.apache.lucene.codecs.lucene41.values
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene41
operator|.
name|values
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|BinaryDocValuesConsumer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|NumericDocValuesConsumer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|SimpleDVConsumer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|SortedDocValuesConsumer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|FieldInfo
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexFileNames
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SegmentInfo
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|CompoundFileDirectory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|IOContext
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|IndexOutput
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|IOUtils
import|;
end_import
begin_class
DECL|class|Lucene41DocValuesConsumer
specifier|public
class|class
name|Lucene41DocValuesConsumer
extends|extends
name|SimpleDVConsumer
block|{
comment|/**    * Filename extension for index files    */
DECL|field|INDEX_EXTENSION
specifier|static
specifier|final
name|String
name|INDEX_EXTENSION
init|=
literal|"idx"
decl_stmt|;
DECL|field|OFFSET_EXTENSION
specifier|static
specifier|final
name|String
name|OFFSET_EXTENSION
init|=
literal|"off"
decl_stmt|;
comment|/**    * Filename extension for data files.    */
DECL|field|DATA_EXTENSION
specifier|static
specifier|final
name|String
name|DATA_EXTENSION
init|=
literal|"dat"
decl_stmt|;
DECL|field|DV_SEGMENT_SUFFIX
specifier|static
specifier|final
name|String
name|DV_SEGMENT_SUFFIX
init|=
literal|"sdv"
decl_stmt|;
comment|// nocommit change to dv
DECL|field|info
specifier|private
specifier|final
name|SegmentInfo
name|info
decl_stmt|;
DECL|field|dir
specifier|private
specifier|final
name|Directory
name|dir
decl_stmt|;
DECL|field|cfs
specifier|private
name|Directory
name|cfs
decl_stmt|;
DECL|field|context
specifier|private
specifier|final
name|IOContext
name|context
decl_stmt|;
DECL|method|Lucene41DocValuesConsumer
name|Lucene41DocValuesConsumer
parameter_list|(
name|Directory
name|dir
parameter_list|,
name|SegmentInfo
name|si
parameter_list|,
name|IOContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|dir
operator|=
name|dir
expr_stmt|;
name|this
operator|.
name|info
operator|=
name|si
expr_stmt|;
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
block|}
DECL|method|getDirectory
specifier|private
specifier|synchronized
name|Directory
name|getDirectory
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|cfs
operator|==
literal|null
condition|)
block|{
name|cfs
operator|=
operator|new
name|CompoundFileDirectory
argument_list|(
name|dir
argument_list|,
name|IndexFileNames
operator|.
name|segmentFileName
argument_list|(
name|info
operator|.
name|name
argument_list|,
name|DV_SEGMENT_SUFFIX
argument_list|,
name|IndexFileNames
operator|.
name|COMPOUND_FILE_EXTENSION
argument_list|)
argument_list|,
name|context
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
return|return
name|cfs
return|;
block|}
annotation|@
name|Override
DECL|method|close
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|IOUtils
operator|.
name|close
argument_list|(
name|cfs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|addNumericField
specifier|public
name|NumericDocValuesConsumer
name|addNumericField
parameter_list|(
name|FieldInfo
name|field
parameter_list|,
name|long
name|minValue
parameter_list|,
name|long
name|maxValue
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|name
init|=
name|getDocValuesFileName
argument_list|(
name|info
argument_list|,
name|field
argument_list|,
name|DATA_EXTENSION
argument_list|)
decl_stmt|;
name|IndexOutput
name|dataOut
init|=
literal|null
decl_stmt|;
name|boolean
name|success
init|=
literal|false
decl_stmt|;
try|try
block|{
name|dataOut
operator|=
name|getDirectory
argument_list|()
operator|.
name|createOutput
argument_list|(
name|name
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|Lucene41NumericDocValuesConsumer
name|consumer
init|=
operator|new
name|Lucene41NumericDocValuesConsumer
argument_list|(
name|dataOut
argument_list|,
name|minValue
argument_list|,
name|maxValue
argument_list|,
name|info
operator|.
name|getDocCount
argument_list|()
argument_list|)
decl_stmt|;
name|success
operator|=
literal|true
expr_stmt|;
return|return
name|consumer
return|;
block|}
finally|finally
block|{
if|if
condition|(
operator|!
name|success
condition|)
block|{
name|IOUtils
operator|.
name|close
argument_list|(
name|dataOut
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|addBinaryField
specifier|public
name|BinaryDocValuesConsumer
name|addBinaryField
parameter_list|(
name|FieldInfo
name|field
parameter_list|,
name|boolean
name|fixedLength
parameter_list|,
name|int
name|maxLength
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|nameData
init|=
name|getDocValuesFileName
argument_list|(
name|info
argument_list|,
name|field
argument_list|,
name|DATA_EXTENSION
argument_list|)
decl_stmt|;
name|String
name|idxOut
init|=
name|getDocValuesFileName
argument_list|(
name|info
argument_list|,
name|field
argument_list|,
name|INDEX_EXTENSION
argument_list|)
decl_stmt|;
name|boolean
name|success
init|=
literal|false
decl_stmt|;
name|IndexOutput
name|dataOut
init|=
literal|null
decl_stmt|;
name|IndexOutput
name|indexOut
init|=
literal|null
decl_stmt|;
try|try
block|{
name|dataOut
operator|=
name|getDirectory
argument_list|()
operator|.
name|createOutput
argument_list|(
name|nameData
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|indexOut
operator|=
name|getDirectory
argument_list|()
operator|.
name|createOutput
argument_list|(
name|idxOut
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|Lucene41BinaryDocValuesConsumer
name|consumer
init|=
operator|new
name|Lucene41BinaryDocValuesConsumer
argument_list|(
name|dataOut
argument_list|,
name|indexOut
argument_list|,
name|fixedLength
argument_list|,
name|maxLength
argument_list|)
decl_stmt|;
name|success
operator|=
literal|true
expr_stmt|;
return|return
name|consumer
return|;
block|}
finally|finally
block|{
if|if
condition|(
operator|!
name|success
condition|)
block|{
name|IOUtils
operator|.
name|close
argument_list|(
name|dataOut
argument_list|,
name|indexOut
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|getDocValuesFileName
specifier|static
name|String
name|getDocValuesFileName
parameter_list|(
name|SegmentInfo
name|info
parameter_list|,
name|FieldInfo
name|field
parameter_list|,
name|String
name|extension
parameter_list|)
block|{
return|return
name|IndexFileNames
operator|.
name|segmentFileName
argument_list|(
name|info
operator|.
name|name
operator|+
literal|"_"
operator|+
name|field
operator|.
name|number
argument_list|,
name|DV_SEGMENT_SUFFIX
argument_list|,
name|extension
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addSortedField
specifier|public
name|SortedDocValuesConsumer
name|addSortedField
parameter_list|(
name|FieldInfo
name|field
parameter_list|,
name|int
name|valueCount
parameter_list|,
name|boolean
name|fixedLength
parameter_list|,
name|int
name|maxLength
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|nameData
init|=
name|getDocValuesFileName
argument_list|(
name|info
argument_list|,
name|field
argument_list|,
name|DATA_EXTENSION
argument_list|)
decl_stmt|;
name|String
name|idxOut
init|=
name|getDocValuesFileName
argument_list|(
name|info
argument_list|,
name|field
argument_list|,
name|INDEX_EXTENSION
argument_list|)
decl_stmt|;
name|String
name|offOut
init|=
name|getDocValuesFileName
argument_list|(
name|info
argument_list|,
name|field
argument_list|,
name|OFFSET_EXTENSION
argument_list|)
decl_stmt|;
name|boolean
name|success
init|=
literal|false
decl_stmt|;
name|IndexOutput
name|dataOut
init|=
literal|null
decl_stmt|;
name|IndexOutput
name|indexOut
init|=
literal|null
decl_stmt|;
name|IndexOutput
name|offsetOut
init|=
literal|null
decl_stmt|;
try|try
block|{
name|dataOut
operator|=
name|getDirectory
argument_list|()
operator|.
name|createOutput
argument_list|(
name|nameData
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|indexOut
operator|=
name|getDirectory
argument_list|()
operator|.
name|createOutput
argument_list|(
name|idxOut
argument_list|,
name|context
argument_list|)
expr_stmt|;
if|if
condition|(
name|fixedLength
condition|)
block|{
name|offsetOut
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|offsetOut
operator|=
name|getDirectory
argument_list|()
operator|.
name|createOutput
argument_list|(
name|offOut
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
name|Lucene41SortedDocValuesConsumer
name|consumer
init|=
operator|new
name|Lucene41SortedDocValuesConsumer
argument_list|(
name|dataOut
argument_list|,
name|indexOut
argument_list|,
name|offsetOut
argument_list|,
name|valueCount
argument_list|,
name|maxLength
argument_list|,
name|this
operator|.
name|info
operator|.
name|getDocCount
argument_list|()
argument_list|)
decl_stmt|;
name|success
operator|=
literal|true
expr_stmt|;
return|return
name|consumer
return|;
block|}
finally|finally
block|{
if|if
condition|(
operator|!
name|success
condition|)
block|{
name|IOUtils
operator|.
name|close
argument_list|(
name|dataOut
argument_list|,
name|indexOut
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class
end_unit
