begin_unit
begin_package
DECL|package|org.apache.lucene.codecs.lucene3x
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene3x
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/** A TermInfo is the record of information stored for a  * term  * @deprecated (4.0) This class is no longer used in flexible  * indexing. */
end_comment
begin_class
annotation|@
name|Deprecated
class|class
DECL|class|TermInfo
name|TermInfo
block|{
comment|/** The number of documents which contain the term. */
DECL|field|docFreq
specifier|public
name|int
name|docFreq
init|=
literal|0
decl_stmt|;
DECL|field|freqPointer
specifier|public
name|long
name|freqPointer
init|=
literal|0
decl_stmt|;
DECL|field|proxPointer
specifier|public
name|long
name|proxPointer
init|=
literal|0
decl_stmt|;
DECL|field|skipOffset
specifier|public
name|int
name|skipOffset
decl_stmt|;
DECL|method|TermInfo
specifier|public
name|TermInfo
parameter_list|()
block|{}
DECL|method|TermInfo
specifier|public
name|TermInfo
parameter_list|(
name|int
name|df
parameter_list|,
name|long
name|fp
parameter_list|,
name|long
name|pp
parameter_list|)
block|{
name|docFreq
operator|=
name|df
expr_stmt|;
name|freqPointer
operator|=
name|fp
expr_stmt|;
name|proxPointer
operator|=
name|pp
expr_stmt|;
block|}
DECL|method|TermInfo
specifier|public
name|TermInfo
parameter_list|(
name|TermInfo
name|ti
parameter_list|)
block|{
name|docFreq
operator|=
name|ti
operator|.
name|docFreq
expr_stmt|;
name|freqPointer
operator|=
name|ti
operator|.
name|freqPointer
expr_stmt|;
name|proxPointer
operator|=
name|ti
operator|.
name|proxPointer
expr_stmt|;
name|skipOffset
operator|=
name|ti
operator|.
name|skipOffset
expr_stmt|;
block|}
DECL|method|set
specifier|public
specifier|final
name|void
name|set
parameter_list|(
name|int
name|docFreq
parameter_list|,
name|long
name|freqPointer
parameter_list|,
name|long
name|proxPointer
parameter_list|,
name|int
name|skipOffset
parameter_list|)
block|{
name|this
operator|.
name|docFreq
operator|=
name|docFreq
expr_stmt|;
name|this
operator|.
name|freqPointer
operator|=
name|freqPointer
expr_stmt|;
name|this
operator|.
name|proxPointer
operator|=
name|proxPointer
expr_stmt|;
name|this
operator|.
name|skipOffset
operator|=
name|skipOffset
expr_stmt|;
block|}
DECL|method|set
specifier|public
specifier|final
name|void
name|set
parameter_list|(
name|TermInfo
name|ti
parameter_list|)
block|{
name|docFreq
operator|=
name|ti
operator|.
name|docFreq
expr_stmt|;
name|freqPointer
operator|=
name|ti
operator|.
name|freqPointer
expr_stmt|;
name|proxPointer
operator|=
name|ti
operator|.
name|proxPointer
expr_stmt|;
name|skipOffset
operator|=
name|ti
operator|.
name|skipOffset
expr_stmt|;
block|}
block|}
end_class
end_unit
