begin_unit
begin_package
DECL|package|org.apache.lucene.search.spans
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|spans
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Weight
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_comment
comment|/** Base class for span-based queries. */
end_comment
begin_class
DECL|class|SpanQuery
specifier|public
specifier|abstract
class|class
name|SpanQuery
extends|extends
name|Query
block|{
comment|/**    * Returns the name of the field matched by this query.    */
DECL|method|getField
specifier|public
specifier|abstract
name|String
name|getField
parameter_list|()
function_decl|;
comment|/**    * Create a SpanWeight for this query    * @param searcher the IndexSearcher to be searched across    * @param needsScores if the query needs scores    * @param collectorFactory a SpanCollectorFactory to use in collecting postings data    * @return a SpanWeight    * @throws IOException on error    */
DECL|method|createWeight
specifier|public
specifier|abstract
name|SpanWeight
name|createWeight
parameter_list|(
name|IndexSearcher
name|searcher
parameter_list|,
name|boolean
name|needsScores
parameter_list|,
name|SpanCollectorFactory
name|collectorFactory
parameter_list|)
throws|throws
name|IOException
function_decl|;
annotation|@
name|Override
DECL|method|createWeight
specifier|public
name|Weight
name|createWeight
parameter_list|(
name|IndexSearcher
name|searcher
parameter_list|,
name|boolean
name|needsScores
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|createWeight
argument_list|(
name|searcher
argument_list|,
name|needsScores
argument_list|,
name|SpanCollectorFactory
operator|.
name|NO_OP_FACTORY
argument_list|)
return|;
block|}
block|}
end_class
end_unit
