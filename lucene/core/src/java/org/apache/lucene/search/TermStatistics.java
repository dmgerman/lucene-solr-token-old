begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.search
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|TermsEnum
import|;
end_import
begin_comment
comment|// javadocs
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import
begin_comment
comment|/**  * Contains statistics for a specific term  * @lucene.experimental  */
end_comment
begin_class
DECL|class|TermStatistics
specifier|public
class|class
name|TermStatistics
block|{
DECL|field|term
specifier|private
specifier|final
name|BytesRef
name|term
decl_stmt|;
DECL|field|docFreq
specifier|private
specifier|final
name|long
name|docFreq
decl_stmt|;
DECL|field|totalTermFreq
specifier|private
specifier|final
name|long
name|totalTermFreq
decl_stmt|;
DECL|method|TermStatistics
specifier|public
name|TermStatistics
parameter_list|(
name|BytesRef
name|term
parameter_list|,
name|long
name|docFreq
parameter_list|,
name|long
name|totalTermFreq
parameter_list|)
block|{
assert|assert
name|docFreq
operator|>=
literal|0
assert|;
assert|assert
name|totalTermFreq
operator|==
operator|-
literal|1
operator|||
name|totalTermFreq
operator|>=
name|docFreq
assert|;
comment|// #positions must be>= #postings
name|this
operator|.
name|term
operator|=
name|term
expr_stmt|;
name|this
operator|.
name|docFreq
operator|=
name|docFreq
expr_stmt|;
name|this
operator|.
name|totalTermFreq
operator|=
name|totalTermFreq
expr_stmt|;
block|}
comment|/** returns the term text */
DECL|method|term
specifier|public
specifier|final
name|BytesRef
name|term
parameter_list|()
block|{
return|return
name|term
return|;
block|}
comment|/** returns the number of documents this term occurs in     * @see TermsEnum#docFreq() */
DECL|method|docFreq
specifier|public
specifier|final
name|long
name|docFreq
parameter_list|()
block|{
return|return
name|docFreq
return|;
block|}
comment|/** returns the total number of occurrences of this term    * @see TermsEnum#totalTermFreq() */
DECL|method|totalTermFreq
specifier|public
specifier|final
name|long
name|totalTermFreq
parameter_list|()
block|{
return|return
name|totalTermFreq
return|;
block|}
block|}
end_class
end_unit
