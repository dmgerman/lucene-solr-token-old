begin_unit
begin_package
DECL|package|org.apache.lucene.search
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_comment
comment|/** Scorer for conjunctions, sets of terms, all of which are required. */
end_comment
begin_class
DECL|class|MatchOnlyConjunctionTermScorer
specifier|final
class|class
name|MatchOnlyConjunctionTermScorer
extends|extends
name|ConjunctionTermScorer
block|{
DECL|method|MatchOnlyConjunctionTermScorer
name|MatchOnlyConjunctionTermScorer
parameter_list|(
name|Weight
name|weight
parameter_list|,
name|float
name|coord
parameter_list|,
name|DocsAndFreqs
index|[]
name|docsAndFreqs
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|weight
argument_list|,
name|coord
argument_list|,
name|docsAndFreqs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|score
specifier|public
name|float
name|score
parameter_list|()
throws|throws
name|IOException
block|{
name|float
name|sum
init|=
literal|0.0f
decl_stmt|;
for|for
control|(
name|DocsAndFreqs
name|docs
range|:
name|docsAndFreqs
control|)
block|{
name|sum
operator|+=
name|docs
operator|.
name|docScorer
operator|.
name|score
argument_list|(
name|lastDoc
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
return|return
name|sum
operator|*
name|coord
return|;
block|}
block|}
end_class
end_unit
