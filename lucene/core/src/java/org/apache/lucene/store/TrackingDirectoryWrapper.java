begin_unit
begin_package
DECL|package|org.apache.lucene.store
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import
begin_comment
comment|/** A delegating Directory that records which files were  *  written to and deleted. */
end_comment
begin_class
DECL|class|TrackingDirectoryWrapper
specifier|public
specifier|final
class|class
name|TrackingDirectoryWrapper
extends|extends
name|FilterDirectory
block|{
DECL|field|createdFileNames
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|createdFileNames
init|=
name|Collections
operator|.
name|synchronizedSet
argument_list|(
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
DECL|method|TrackingDirectoryWrapper
specifier|public
name|TrackingDirectoryWrapper
parameter_list|(
name|Directory
name|in
parameter_list|)
block|{
name|super
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|deleteFile
specifier|public
name|void
name|deleteFile
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|in
operator|.
name|deleteFile
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|createdFileNames
operator|.
name|remove
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createOutput
specifier|public
name|IndexOutput
name|createOutput
parameter_list|(
name|String
name|name
parameter_list|,
name|IOContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|IndexOutput
name|output
init|=
name|in
operator|.
name|createOutput
argument_list|(
name|name
argument_list|,
name|context
argument_list|)
decl_stmt|;
name|createdFileNames
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
return|return
name|output
return|;
block|}
annotation|@
name|Override
DECL|method|createTempOutput
specifier|public
name|IndexOutput
name|createTempOutput
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|suffix
parameter_list|,
name|IOContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|IndexOutput
name|tempOutput
init|=
name|in
operator|.
name|createTempOutput
argument_list|(
name|prefix
argument_list|,
name|suffix
argument_list|,
name|context
argument_list|)
decl_stmt|;
name|createdFileNames
operator|.
name|add
argument_list|(
name|tempOutput
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|tempOutput
return|;
block|}
annotation|@
name|Override
DECL|method|copyFrom
specifier|public
name|void
name|copyFrom
parameter_list|(
name|Directory
name|from
parameter_list|,
name|String
name|src
parameter_list|,
name|String
name|dest
parameter_list|,
name|IOContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|in
operator|.
name|copyFrom
argument_list|(
name|from
argument_list|,
name|src
argument_list|,
name|dest
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|createdFileNames
operator|.
name|add
argument_list|(
name|dest
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|renameFile
specifier|public
name|void
name|renameFile
parameter_list|(
name|String
name|source
parameter_list|,
name|String
name|dest
parameter_list|)
throws|throws
name|IOException
block|{
name|in
operator|.
name|renameFile
argument_list|(
name|source
argument_list|,
name|dest
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|createdFileNames
init|)
block|{
name|createdFileNames
operator|.
name|add
argument_list|(
name|dest
argument_list|)
expr_stmt|;
name|createdFileNames
operator|.
name|remove
argument_list|(
name|source
argument_list|)
expr_stmt|;
block|}
block|}
comment|/** NOTE: returns a copy of the created files. */
DECL|method|getCreatedFiles
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getCreatedFiles
parameter_list|()
block|{
return|return
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|createdFileNames
argument_list|)
return|;
block|}
DECL|method|clearCreatedFiles
specifier|public
name|void
name|clearCreatedFiles
parameter_list|()
block|{
name|createdFileNames
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
end_class
end_unit
