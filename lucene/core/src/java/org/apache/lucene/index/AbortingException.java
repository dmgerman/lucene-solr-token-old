begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
package|;
end_package
begin_comment
comment|/** Thrown and caught internally in {@link IndexWriter} methods when an {@code IOException} would cause it to  *  lose previously indexed documents.  When this happens, the {@link IndexWriter} is forcefully   *  closed, using {@link IndexWriter#rollback}). */
end_comment
begin_class
DECL|class|AbortingException
class|class
name|AbortingException
extends|extends
name|Exception
block|{
DECL|method|AbortingException
specifier|private
name|AbortingException
parameter_list|(
name|Throwable
name|cause
parameter_list|)
block|{
name|super
argument_list|(
name|cause
argument_list|)
expr_stmt|;
assert|assert
name|cause
operator|instanceof
name|AbortingException
operator|==
literal|false
assert|;
block|}
DECL|method|wrap
specifier|public
specifier|static
name|AbortingException
name|wrap
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
if|if
condition|(
name|t
operator|instanceof
name|AbortingException
condition|)
block|{
return|return
operator|(
name|AbortingException
operator|)
name|t
return|;
block|}
else|else
block|{
return|return
operator|new
name|AbortingException
argument_list|(
name|t
argument_list|)
return|;
block|}
block|}
block|}
end_class
end_unit
