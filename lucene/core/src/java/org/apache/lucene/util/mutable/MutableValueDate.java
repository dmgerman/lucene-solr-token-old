begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.util.mutable
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|mutable
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import
begin_comment
comment|/**  * {@link MutableValue} implementation of type   * {@link Date}.  */
end_comment
begin_class
DECL|class|MutableValueDate
specifier|public
class|class
name|MutableValueDate
extends|extends
name|MutableValueLong
block|{
annotation|@
name|Override
DECL|method|toObject
specifier|public
name|Object
name|toObject
parameter_list|()
block|{
return|return
name|exists
condition|?
operator|new
name|Date
argument_list|(
name|value
argument_list|)
else|:
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|duplicate
specifier|public
name|MutableValue
name|duplicate
parameter_list|()
block|{
name|MutableValueDate
name|v
init|=
operator|new
name|MutableValueDate
argument_list|()
decl_stmt|;
name|v
operator|.
name|value
operator|=
name|this
operator|.
name|value
expr_stmt|;
name|v
operator|.
name|exists
operator|=
name|this
operator|.
name|exists
expr_stmt|;
return|return
name|v
return|;
block|}
block|}
end_class
end_unit
