begin_unit
begin_package
DECL|package|org.apache.lucene.util.packed
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|packed
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|IndexInput
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_comment
comment|/* Reads directly from disk on each get */
end_comment
begin_class
DECL|class|DirectPackedReader
class|class
name|DirectPackedReader
extends|extends
name|PackedInts
operator|.
name|ReaderImpl
block|{
DECL|field|in
specifier|final
name|IndexInput
name|in
decl_stmt|;
DECL|field|startPointer
specifier|final
name|long
name|startPointer
decl_stmt|;
DECL|field|valueMask
specifier|final
name|long
name|valueMask
decl_stmt|;
DECL|method|DirectPackedReader
name|DirectPackedReader
parameter_list|(
name|int
name|bitsPerValue
parameter_list|,
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
name|valueCount
argument_list|,
name|bitsPerValue
argument_list|)
expr_stmt|;
name|this
operator|.
name|in
operator|=
name|in
expr_stmt|;
name|startPointer
operator|=
name|in
operator|.
name|getFilePointer
argument_list|()
expr_stmt|;
if|if
condition|(
name|bitsPerValue
operator|==
literal|64
condition|)
block|{
name|valueMask
operator|=
operator|-
literal|1L
expr_stmt|;
block|}
else|else
block|{
name|valueMask
operator|=
operator|(
literal|1L
operator|<<
name|bitsPerValue
operator|)
operator|-
literal|1
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
specifier|final
name|long
name|majorBitPos
init|=
operator|(
name|long
operator|)
name|index
operator|*
name|bitsPerValue
decl_stmt|;
specifier|final
name|long
name|elementPos
init|=
name|majorBitPos
operator|>>>
literal|3
decl_stmt|;
try|try
block|{
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
name|elementPos
argument_list|)
expr_stmt|;
specifier|final
name|int
name|bitPos
init|=
call|(
name|int
call|)
argument_list|(
name|majorBitPos
operator|&
literal|7
argument_list|)
decl_stmt|;
comment|// round up bits to a multiple of 8 to find total bytes needed to read
specifier|final
name|int
name|roundedBits
init|=
operator|(
operator|(
name|bitPos
operator|+
name|bitsPerValue
operator|+
literal|7
operator|)
operator|&
operator|~
literal|7
operator|)
decl_stmt|;
comment|// the number of extra bits read at the end to shift out
name|int
name|shiftRightBits
init|=
name|roundedBits
operator|-
name|bitPos
operator|-
name|bitsPerValue
decl_stmt|;
name|long
name|rawValue
decl_stmt|;
switch|switch
condition|(
name|roundedBits
operator|>>>
literal|3
condition|)
block|{
case|case
literal|1
case|:
name|rawValue
operator|=
name|in
operator|.
name|readByte
argument_list|()
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|rawValue
operator|=
name|in
operator|.
name|readShort
argument_list|()
expr_stmt|;
break|break;
case|case
literal|3
case|:
name|rawValue
operator|=
operator|(
operator|(
name|long
operator|)
name|in
operator|.
name|readShort
argument_list|()
operator|<<
literal|8
operator|)
operator||
operator|(
name|in
operator|.
name|readByte
argument_list|()
operator|&
literal|0xFFL
operator|)
expr_stmt|;
break|break;
case|case
literal|4
case|:
name|rawValue
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
break|break;
case|case
literal|5
case|:
name|rawValue
operator|=
operator|(
operator|(
name|long
operator|)
name|in
operator|.
name|readInt
argument_list|()
operator|<<
literal|8
operator|)
operator||
operator|(
name|in
operator|.
name|readByte
argument_list|()
operator|&
literal|0xFFL
operator|)
expr_stmt|;
break|break;
case|case
literal|6
case|:
name|rawValue
operator|=
operator|(
operator|(
name|long
operator|)
name|in
operator|.
name|readInt
argument_list|()
operator|<<
literal|16
operator|)
operator||
operator|(
name|in
operator|.
name|readShort
argument_list|()
operator|&
literal|0xFFFFL
operator|)
expr_stmt|;
break|break;
case|case
literal|7
case|:
name|rawValue
operator|=
operator|(
operator|(
name|long
operator|)
name|in
operator|.
name|readInt
argument_list|()
operator|<<
literal|24
operator|)
operator||
operator|(
operator|(
name|in
operator|.
name|readShort
argument_list|()
operator|&
literal|0xFFFFL
operator|)
operator|<<
literal|8
operator|)
operator||
operator|(
name|in
operator|.
name|readByte
argument_list|()
operator|&
literal|0xFFL
operator|)
expr_stmt|;
break|break;
case|case
literal|8
case|:
name|rawValue
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
break|break;
case|case
literal|9
case|:
comment|// We must be very careful not to shift out relevant bits. So we account for right shift
comment|// we would normally do on return here, and reset it.
name|rawValue
operator|=
operator|(
name|in
operator|.
name|readLong
argument_list|()
operator|<<
operator|(
literal|8
operator|-
name|shiftRightBits
operator|)
operator|)
operator||
operator|(
operator|(
name|in
operator|.
name|readByte
argument_list|()
operator|&
literal|0xFFL
operator|)
operator|>>>
name|shiftRightBits
operator|)
expr_stmt|;
name|shiftRightBits
operator|=
literal|0
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|AssertionError
argument_list|(
literal|"bitsPerValue too large: "
operator|+
name|bitsPerValue
argument_list|)
throw|;
block|}
return|return
operator|(
name|rawValue
operator|>>>
name|shiftRightBits
operator|)
operator|&
name|valueMask
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|ioe
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|ramBytesUsed
specifier|public
name|long
name|ramBytesUsed
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
DECL|class|DirectPackedReader1
specifier|static
class|class
name|DirectPackedReader1
extends|extends
name|DirectPackedReader
block|{
DECL|method|DirectPackedReader1
name|DirectPackedReader1
parameter_list|(
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
literal|1
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
operator|(
name|index
operator|>>>
literal|3
operator|)
argument_list|)
expr_stmt|;
name|int
name|shift
init|=
literal|7
operator|-
operator|(
name|index
operator|&
literal|7
operator|)
decl_stmt|;
return|return
operator|(
name|in
operator|.
name|readByte
argument_list|()
operator|>>>
name|shift
operator|)
operator|&
literal|0x1
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|DirectPackedReader2
specifier|static
class|class
name|DirectPackedReader2
extends|extends
name|DirectPackedReader
block|{
DECL|method|DirectPackedReader2
name|DirectPackedReader2
parameter_list|(
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
literal|2
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
operator|(
name|index
operator|>>>
literal|2
operator|)
argument_list|)
expr_stmt|;
name|int
name|shift
init|=
operator|(
literal|3
operator|-
operator|(
name|index
operator|&
literal|3
operator|)
operator|)
operator|<<
literal|1
decl_stmt|;
return|return
operator|(
name|in
operator|.
name|readByte
argument_list|()
operator|>>>
name|shift
operator|)
operator|&
literal|0x3
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|DirectPackedReader4
specifier|static
class|class
name|DirectPackedReader4
extends|extends
name|DirectPackedReader
block|{
DECL|method|DirectPackedReader4
name|DirectPackedReader4
parameter_list|(
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
literal|4
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
operator|(
name|index
operator|>>>
literal|1
operator|)
argument_list|)
expr_stmt|;
name|int
name|shift
init|=
operator|(
operator|(
name|index
operator|+
literal|1
operator|)
operator|&
literal|1
operator|)
operator|<<
literal|2
decl_stmt|;
return|return
operator|(
name|in
operator|.
name|readByte
argument_list|()
operator|>>>
name|shift
operator|)
operator|&
literal|0xF
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|DirectPackedReader8
specifier|static
class|class
name|DirectPackedReader8
extends|extends
name|DirectPackedReader
block|{
DECL|method|DirectPackedReader8
name|DirectPackedReader8
parameter_list|(
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
literal|8
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
name|index
argument_list|)
expr_stmt|;
return|return
name|in
operator|.
name|readByte
argument_list|()
operator|&
literal|0xFF
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|DirectPackedReader12
specifier|static
class|class
name|DirectPackedReader12
extends|extends
name|DirectPackedReader
block|{
DECL|method|DirectPackedReader12
name|DirectPackedReader12
parameter_list|(
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
literal|12
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|long
name|offset
init|=
operator|(
name|index
operator|*
literal|12L
operator|)
operator|>>>
literal|3
decl_stmt|;
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
name|offset
argument_list|)
expr_stmt|;
name|int
name|shift
init|=
operator|(
operator|(
name|index
operator|+
literal|1
operator|)
operator|&
literal|1
operator|)
operator|<<
literal|2
decl_stmt|;
return|return
operator|(
name|in
operator|.
name|readShort
argument_list|()
operator|>>>
name|shift
operator|)
operator|&
literal|0xFFF
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|DirectPackedReader16
specifier|static
class|class
name|DirectPackedReader16
extends|extends
name|DirectPackedReader
block|{
DECL|method|DirectPackedReader16
name|DirectPackedReader16
parameter_list|(
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
literal|16
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
operator|(
name|index
operator|<<
literal|1
operator|)
argument_list|)
expr_stmt|;
return|return
name|in
operator|.
name|readShort
argument_list|()
operator|&
literal|0xFFFF
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|DirectPackedReader20
specifier|static
class|class
name|DirectPackedReader20
extends|extends
name|DirectPackedReader
block|{
DECL|method|DirectPackedReader20
name|DirectPackedReader20
parameter_list|(
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
literal|20
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|long
name|offset
init|=
operator|(
name|index
operator|*
literal|20L
operator|)
operator|>>>
literal|3
decl_stmt|;
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
name|offset
argument_list|)
expr_stmt|;
name|int
name|v
init|=
name|in
operator|.
name|readShort
argument_list|()
operator|<<
literal|8
operator||
operator|(
name|in
operator|.
name|readByte
argument_list|()
operator|&
literal|0xFF
operator|)
decl_stmt|;
name|int
name|shift
init|=
operator|(
operator|(
name|index
operator|+
literal|1
operator|)
operator|&
literal|1
operator|)
operator|<<
literal|2
decl_stmt|;
return|return
operator|(
name|v
operator|>>>
name|shift
operator|)
operator|&
literal|0xFFFFF
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|DirectPackedReader24
specifier|static
class|class
name|DirectPackedReader24
extends|extends
name|DirectPackedReader
block|{
DECL|method|DirectPackedReader24
name|DirectPackedReader24
parameter_list|(
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
literal|24
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
operator|(
name|index
operator|*
literal|3
operator|)
argument_list|)
expr_stmt|;
return|return
operator|(
name|in
operator|.
name|readShort
argument_list|()
operator|&
literal|0xFFFF
operator|)
operator|<<
literal|8
operator||
operator|(
name|in
operator|.
name|readByte
argument_list|()
operator|&
literal|0xFF
operator|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|DirectPackedReader28
specifier|static
class|class
name|DirectPackedReader28
extends|extends
name|DirectPackedReader
block|{
DECL|method|DirectPackedReader28
name|DirectPackedReader28
parameter_list|(
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
literal|28
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|long
name|offset
init|=
operator|(
name|index
operator|*
literal|28L
operator|)
operator|>>>
literal|3
decl_stmt|;
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
name|offset
argument_list|)
expr_stmt|;
name|int
name|shift
init|=
operator|(
operator|(
name|index
operator|+
literal|1
operator|)
operator|&
literal|1
operator|)
operator|<<
literal|2
decl_stmt|;
return|return
operator|(
name|in
operator|.
name|readInt
argument_list|()
operator|>>>
name|shift
operator|)
operator|&
literal|0xFFFFFFFL
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|DirectPackedReader32
specifier|static
class|class
name|DirectPackedReader32
extends|extends
name|DirectPackedReader
block|{
DECL|method|DirectPackedReader32
name|DirectPackedReader32
parameter_list|(
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
literal|32
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
operator|(
name|index
operator|<<
literal|2
operator|)
argument_list|)
expr_stmt|;
return|return
name|in
operator|.
name|readInt
argument_list|()
operator|&
literal|0xFFFFFFFFL
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|DirectPackedReader40
specifier|static
class|class
name|DirectPackedReader40
extends|extends
name|DirectPackedReader
block|{
DECL|method|DirectPackedReader40
name|DirectPackedReader40
parameter_list|(
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
literal|40
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
operator|(
name|index
operator|*
literal|5
operator|)
argument_list|)
expr_stmt|;
return|return
operator|(
name|in
operator|.
name|readInt
argument_list|()
operator|&
literal|0xFFFFFFFFL
operator|)
operator|<<
literal|8
operator||
operator|(
name|in
operator|.
name|readByte
argument_list|()
operator|&
literal|0xFF
operator|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|DirectPackedReader48
specifier|static
class|class
name|DirectPackedReader48
extends|extends
name|DirectPackedReader
block|{
DECL|method|DirectPackedReader48
name|DirectPackedReader48
parameter_list|(
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
literal|48
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
operator|(
name|index
operator|*
literal|6
operator|)
argument_list|)
expr_stmt|;
return|return
operator|(
name|in
operator|.
name|readInt
argument_list|()
operator|&
literal|0xFFFFFFFFL
operator|)
operator|<<
literal|16
operator||
operator|(
name|in
operator|.
name|readShort
argument_list|()
operator|&
literal|0xFFFF
operator|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|DirectPackedReader56
specifier|static
class|class
name|DirectPackedReader56
extends|extends
name|DirectPackedReader
block|{
DECL|method|DirectPackedReader56
name|DirectPackedReader56
parameter_list|(
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
literal|56
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
operator|(
name|index
operator|*
literal|7
operator|)
argument_list|)
expr_stmt|;
return|return
operator|(
name|in
operator|.
name|readInt
argument_list|()
operator|&
literal|0xFFFFFFFFL
operator|)
operator|<<
literal|24
operator||
operator|(
name|in
operator|.
name|readShort
argument_list|()
operator|&
literal|0xFFFF
operator|)
operator|<<
literal|8
operator||
operator|(
name|in
operator|.
name|readByte
argument_list|()
operator|&
literal|0xFF
operator|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|class|DirectPackedReader64
specifier|static
class|class
name|DirectPackedReader64
extends|extends
name|DirectPackedReader
block|{
DECL|method|DirectPackedReader64
name|DirectPackedReader64
parameter_list|(
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
name|super
argument_list|(
literal|64
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|get
specifier|public
name|long
name|get
parameter_list|(
name|int
name|index
parameter_list|)
block|{
try|try
block|{
name|in
operator|.
name|seek
argument_list|(
name|startPointer
operator|+
operator|(
name|index
operator|<<
literal|3
operator|)
argument_list|)
expr_stmt|;
return|return
name|in
operator|.
name|readLong
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
DECL|method|getInstance
specifier|static
name|DirectPackedReader
name|getInstance
parameter_list|(
name|int
name|bitsPerValue
parameter_list|,
name|int
name|valueCount
parameter_list|,
name|IndexInput
name|in
parameter_list|)
block|{
switch|switch
condition|(
name|bitsPerValue
condition|)
block|{
case|case
literal|1
case|:
return|return
operator|new
name|DirectPackedReader1
argument_list|(
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
case|case
literal|2
case|:
return|return
operator|new
name|DirectPackedReader2
argument_list|(
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
case|case
literal|4
case|:
return|return
operator|new
name|DirectPackedReader4
argument_list|(
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
case|case
literal|8
case|:
return|return
operator|new
name|DirectPackedReader8
argument_list|(
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
case|case
literal|12
case|:
return|return
operator|new
name|DirectPackedReader12
argument_list|(
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
case|case
literal|16
case|:
return|return
operator|new
name|DirectPackedReader16
argument_list|(
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
case|case
literal|20
case|:
return|return
operator|new
name|DirectPackedReader20
argument_list|(
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
case|case
literal|24
case|:
return|return
operator|new
name|DirectPackedReader24
argument_list|(
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
case|case
literal|28
case|:
return|return
operator|new
name|DirectPackedReader28
argument_list|(
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
case|case
literal|32
case|:
return|return
operator|new
name|DirectPackedReader32
argument_list|(
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
case|case
literal|40
case|:
return|return
operator|new
name|DirectPackedReader40
argument_list|(
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
case|case
literal|48
case|:
return|return
operator|new
name|DirectPackedReader48
argument_list|(
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
case|case
literal|56
case|:
return|return
operator|new
name|DirectPackedReader56
argument_list|(
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
case|case
literal|64
case|:
return|return
operator|new
name|DirectPackedReader64
argument_list|(
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
default|default:
return|return
operator|new
name|DirectPackedReader
argument_list|(
name|bitsPerValue
argument_list|,
name|valueCount
argument_list|,
name|in
argument_list|)
return|;
block|}
block|}
block|}
end_class
end_unit
