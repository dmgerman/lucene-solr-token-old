begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.analysis
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LegacyNumericUtils
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|LegacyNumericTokenStream
operator|.
name|LegacyNumericTermAttributeImpl
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|tokenattributes
operator|.
name|TermToBytesRefAttribute
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|tokenattributes
operator|.
name|TestCharTermAttributeImpl
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|tokenattributes
operator|.
name|TypeAttribute
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|tokenattributes
operator|.
name|CharTermAttribute
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|tokenattributes
operator|.
name|CharTermAttributeImpl
import|;
end_import
begin_class
annotation|@
name|Deprecated
DECL|class|TestNumericTokenStream
specifier|public
class|class
name|TestNumericTokenStream
extends|extends
name|BaseTokenStreamTestCase
block|{
DECL|field|lvalue
specifier|final
name|long
name|lvalue
init|=
name|random
argument_list|()
operator|.
name|nextLong
argument_list|()
decl_stmt|;
DECL|field|ivalue
specifier|final
name|int
name|ivalue
init|=
name|random
argument_list|()
operator|.
name|nextInt
argument_list|()
decl_stmt|;
DECL|method|testLongStream
specifier|public
name|void
name|testLongStream
parameter_list|()
throws|throws
name|Exception
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
specifier|final
name|LegacyNumericTokenStream
name|stream
init|=
operator|new
name|LegacyNumericTokenStream
argument_list|()
operator|.
name|setLongValue
argument_list|(
name|lvalue
argument_list|)
decl_stmt|;
specifier|final
name|TermToBytesRefAttribute
name|bytesAtt
init|=
name|stream
operator|.
name|getAttribute
argument_list|(
name|TermToBytesRefAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|bytesAtt
argument_list|)
expr_stmt|;
specifier|final
name|TypeAttribute
name|typeAtt
init|=
name|stream
operator|.
name|getAttribute
argument_list|(
name|TypeAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|typeAtt
argument_list|)
expr_stmt|;
specifier|final
name|LegacyNumericTokenStream
operator|.
name|LegacyNumericTermAttribute
name|numericAtt
init|=
name|stream
operator|.
name|getAttribute
argument_list|(
name|LegacyNumericTokenStream
operator|.
name|LegacyNumericTermAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|numericAtt
argument_list|)
expr_stmt|;
name|stream
operator|.
name|reset
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|64
argument_list|,
name|numericAtt
operator|.
name|getValueSize
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|shift
init|=
literal|0
init|;
name|shift
operator|<
literal|64
condition|;
name|shift
operator|+=
name|LegacyNumericUtils
operator|.
name|PRECISION_STEP_DEFAULT
control|)
block|{
name|assertTrue
argument_list|(
literal|"New token is available"
argument_list|,
name|stream
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Shift value wrong"
argument_list|,
name|shift
argument_list|,
name|numericAtt
operator|.
name|getShift
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Term is incorrectly encoded"
argument_list|,
name|lvalue
operator|&
operator|~
operator|(
operator|(
literal|1L
operator|<<
name|shift
operator|)
operator|-
literal|1L
operator|)
argument_list|,
name|LegacyNumericUtils
operator|.
name|prefixCodedToLong
argument_list|(
name|bytesAtt
operator|.
name|getBytesRef
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Term raw value is incorrectly encoded"
argument_list|,
name|lvalue
operator|&
operator|~
operator|(
operator|(
literal|1L
operator|<<
name|shift
operator|)
operator|-
literal|1L
operator|)
argument_list|,
name|numericAtt
operator|.
name|getRawValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Type incorrect"
argument_list|,
operator|(
name|shift
operator|==
literal|0
operator|)
condition|?
name|LegacyNumericTokenStream
operator|.
name|TOKEN_TYPE_FULL_PREC
else|:
name|LegacyNumericTokenStream
operator|.
name|TOKEN_TYPE_LOWER_PREC
argument_list|,
name|typeAtt
operator|.
name|type
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
literal|"More tokens available"
argument_list|,
name|stream
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
name|stream
operator|.
name|end
argument_list|()
expr_stmt|;
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testIntStream
specifier|public
name|void
name|testIntStream
parameter_list|()
throws|throws
name|Exception
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
specifier|final
name|LegacyNumericTokenStream
name|stream
init|=
operator|new
name|LegacyNumericTokenStream
argument_list|()
operator|.
name|setIntValue
argument_list|(
name|ivalue
argument_list|)
decl_stmt|;
specifier|final
name|TermToBytesRefAttribute
name|bytesAtt
init|=
name|stream
operator|.
name|getAttribute
argument_list|(
name|TermToBytesRefAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|bytesAtt
argument_list|)
expr_stmt|;
specifier|final
name|TypeAttribute
name|typeAtt
init|=
name|stream
operator|.
name|getAttribute
argument_list|(
name|TypeAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|typeAtt
argument_list|)
expr_stmt|;
specifier|final
name|LegacyNumericTokenStream
operator|.
name|LegacyNumericTermAttribute
name|numericAtt
init|=
name|stream
operator|.
name|getAttribute
argument_list|(
name|LegacyNumericTokenStream
operator|.
name|LegacyNumericTermAttribute
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|numericAtt
argument_list|)
expr_stmt|;
name|stream
operator|.
name|reset
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|32
argument_list|,
name|numericAtt
operator|.
name|getValueSize
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|shift
init|=
literal|0
init|;
name|shift
operator|<
literal|32
condition|;
name|shift
operator|+=
name|LegacyNumericUtils
operator|.
name|PRECISION_STEP_DEFAULT
control|)
block|{
name|assertTrue
argument_list|(
literal|"New token is available"
argument_list|,
name|stream
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Shift value wrong"
argument_list|,
name|shift
argument_list|,
name|numericAtt
operator|.
name|getShift
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Term is incorrectly encoded"
argument_list|,
name|ivalue
operator|&
operator|~
operator|(
operator|(
literal|1
operator|<<
name|shift
operator|)
operator|-
literal|1
operator|)
argument_list|,
name|LegacyNumericUtils
operator|.
name|prefixCodedToInt
argument_list|(
name|bytesAtt
operator|.
name|getBytesRef
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Term raw value is incorrectly encoded"
argument_list|,
operator|(
operator|(
name|long
operator|)
name|ivalue
operator|)
operator|&
operator|~
operator|(
operator|(
literal|1L
operator|<<
name|shift
operator|)
operator|-
literal|1L
operator|)
argument_list|,
name|numericAtt
operator|.
name|getRawValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Type incorrect"
argument_list|,
operator|(
name|shift
operator|==
literal|0
operator|)
condition|?
name|LegacyNumericTokenStream
operator|.
name|TOKEN_TYPE_FULL_PREC
else|:
name|LegacyNumericTokenStream
operator|.
name|TOKEN_TYPE_LOWER_PREC
argument_list|,
name|typeAtt
operator|.
name|type
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
literal|"More tokens available"
argument_list|,
name|stream
operator|.
name|incrementToken
argument_list|()
argument_list|)
expr_stmt|;
name|stream
operator|.
name|end
argument_list|()
expr_stmt|;
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testNotInitialized
specifier|public
name|void
name|testNotInitialized
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|LegacyNumericTokenStream
name|stream
init|=
operator|new
name|LegacyNumericTokenStream
argument_list|()
decl_stmt|;
try|try
block|{
name|stream
operator|.
name|reset
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"reset() should not succeed."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
comment|// pass
block|}
try|try
block|{
name|stream
operator|.
name|incrementToken
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"incrementToken() should not succeed."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
comment|// pass
block|}
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|interface|TestAttribute
specifier|public
specifier|static
interface|interface
name|TestAttribute
extends|extends
name|CharTermAttribute
block|{}
DECL|class|TestAttributeImpl
specifier|public
specifier|static
class|class
name|TestAttributeImpl
extends|extends
name|CharTermAttributeImpl
implements|implements
name|TestAttribute
block|{}
DECL|method|testCTA
specifier|public
name|void
name|testCTA
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|LegacyNumericTokenStream
name|stream
init|=
operator|new
name|LegacyNumericTokenStream
argument_list|()
decl_stmt|;
try|try
block|{
name|stream
operator|.
name|addAttribute
argument_list|(
name|CharTermAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Succeeded to add CharTermAttribute."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|iae
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|iae
operator|.
name|getMessage
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"LegacyNumericTokenStream does not support"
argument_list|)
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|stream
operator|.
name|addAttribute
argument_list|(
name|TestAttribute
operator|.
name|class
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Succeeded to add TestAttribute."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|iae
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|iae
operator|.
name|getMessage
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"LegacyNumericTokenStream does not support"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|/** LUCENE-7027 */
DECL|method|testCaptureStateAfterExhausted
specifier|public
name|void
name|testCaptureStateAfterExhausted
parameter_list|()
throws|throws
name|Exception
block|{
comment|// default precstep
try|try
init|(
name|LegacyNumericTokenStream
name|stream
init|=
operator|new
name|LegacyNumericTokenStream
argument_list|()
init|)
block|{
comment|// int
name|stream
operator|.
name|setIntValue
argument_list|(
name|ivalue
argument_list|)
expr_stmt|;
name|stream
operator|.
name|reset
argument_list|()
expr_stmt|;
while|while
condition|(
name|stream
operator|.
name|incrementToken
argument_list|()
condition|)
empty_stmt|;
name|stream
operator|.
name|captureState
argument_list|()
expr_stmt|;
name|stream
operator|.
name|end
argument_list|()
expr_stmt|;
name|stream
operator|.
name|captureState
argument_list|()
expr_stmt|;
comment|// long
name|stream
operator|.
name|setLongValue
argument_list|(
name|lvalue
argument_list|)
expr_stmt|;
name|stream
operator|.
name|reset
argument_list|()
expr_stmt|;
while|while
condition|(
name|stream
operator|.
name|incrementToken
argument_list|()
condition|)
empty_stmt|;
name|stream
operator|.
name|captureState
argument_list|()
expr_stmt|;
name|stream
operator|.
name|end
argument_list|()
expr_stmt|;
name|stream
operator|.
name|captureState
argument_list|()
expr_stmt|;
block|}
comment|// huge precstep
try|try
init|(
name|LegacyNumericTokenStream
name|stream
init|=
operator|new
name|LegacyNumericTokenStream
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
init|)
block|{
comment|// int
name|stream
operator|.
name|setIntValue
argument_list|(
name|ivalue
argument_list|)
expr_stmt|;
name|stream
operator|.
name|reset
argument_list|()
expr_stmt|;
while|while
condition|(
name|stream
operator|.
name|incrementToken
argument_list|()
condition|)
empty_stmt|;
name|stream
operator|.
name|captureState
argument_list|()
expr_stmt|;
name|stream
operator|.
name|end
argument_list|()
expr_stmt|;
name|stream
operator|.
name|captureState
argument_list|()
expr_stmt|;
comment|// long
name|stream
operator|.
name|setLongValue
argument_list|(
name|lvalue
argument_list|)
expr_stmt|;
name|stream
operator|.
name|reset
argument_list|()
expr_stmt|;
while|while
condition|(
name|stream
operator|.
name|incrementToken
argument_list|()
condition|)
empty_stmt|;
name|stream
operator|.
name|captureState
argument_list|()
expr_stmt|;
name|stream
operator|.
name|end
argument_list|()
expr_stmt|;
name|stream
operator|.
name|captureState
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|testAttributeClone
specifier|public
name|void
name|testAttributeClone
parameter_list|()
throws|throws
name|Exception
block|{
name|LegacyNumericTermAttributeImpl
name|att
init|=
operator|new
name|LegacyNumericTermAttributeImpl
argument_list|()
decl_stmt|;
name|att
operator|.
name|init
argument_list|(
name|lvalue
argument_list|,
literal|64
argument_list|,
literal|8
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// set some value, to make getBytesRef() work
name|LegacyNumericTermAttributeImpl
name|copy
init|=
name|TestCharTermAttributeImpl
operator|.
name|assertCloneIsEqual
argument_list|(
name|att
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|att
operator|.
name|getBytesRef
argument_list|()
argument_list|,
name|copy
operator|.
name|getBytesRef
argument_list|()
argument_list|)
expr_stmt|;
name|LegacyNumericTermAttributeImpl
name|copy2
init|=
name|TestCharTermAttributeImpl
operator|.
name|assertCopyIsEqual
argument_list|(
name|att
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|att
operator|.
name|getBytesRef
argument_list|()
argument_list|,
name|copy2
operator|.
name|getBytesRef
argument_list|()
argument_list|)
expr_stmt|;
comment|// LUCENE-7027 test
name|att
operator|.
name|init
argument_list|(
name|lvalue
argument_list|,
literal|64
argument_list|,
literal|8
argument_list|,
literal|64
argument_list|)
expr_stmt|;
comment|// Exhausted TokenStream -> should return empty BytesRef
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|()
argument_list|,
name|att
operator|.
name|getBytesRef
argument_list|()
argument_list|)
expr_stmt|;
name|copy
operator|=
name|TestCharTermAttributeImpl
operator|.
name|assertCloneIsEqual
argument_list|(
name|att
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|()
argument_list|,
name|copy
operator|.
name|getBytesRef
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|att
operator|.
name|getBytesRef
argument_list|()
argument_list|,
name|copy
operator|.
name|getBytesRef
argument_list|()
argument_list|)
expr_stmt|;
name|copy2
operator|=
name|TestCharTermAttributeImpl
operator|.
name|assertCopyIsEqual
argument_list|(
name|att
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|()
argument_list|,
name|copy2
operator|.
name|getBytesRef
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|att
operator|.
name|getBytesRef
argument_list|()
argument_list|,
name|copy2
operator|.
name|getBytesRef
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
