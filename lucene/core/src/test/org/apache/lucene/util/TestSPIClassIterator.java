begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.util
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
package|;
end_package
begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import
begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLClassLoader
import|;
end_import
begin_class
DECL|class|TestSPIClassIterator
specifier|public
class|class
name|TestSPIClassIterator
extends|extends
name|LuceneTestCase
block|{
DECL|method|testParentChild
specifier|public
name|void
name|testParentChild
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ClassLoader
name|parent
init|=
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
decl_stmt|;
specifier|final
name|ClassLoader
name|child
init|=
name|URLClassLoader
operator|.
name|newInstance
argument_list|(
operator|new
name|URL
index|[
literal|0
index|]
argument_list|,
name|parent
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|checkNoPerms
argument_list|(
name|parent
argument_list|,
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkNoPerms
argument_list|(
name|child
argument_list|,
name|child
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|checkNoPerms
argument_list|(
name|parent
argument_list|,
name|child
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|checkNoPerms
argument_list|(
name|child
argument_list|,
name|parent
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|checkNoPerms
specifier|private
name|boolean
name|checkNoPerms
parameter_list|(
name|ClassLoader
name|parent
parameter_list|,
name|ClassLoader
name|child
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|runWithRestrictedPermissions
argument_list|(
parameter_list|()
lambda|->
name|SPIClassIterator
operator|.
name|isParentClassLoader
argument_list|(
name|parent
argument_list|,
name|child
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class
end_unit
