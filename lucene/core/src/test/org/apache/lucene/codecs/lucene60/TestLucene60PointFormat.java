begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.codecs.lucene60
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene60
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|Codec
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|FilterCodec
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|PointFormat
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|PointReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|PointWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|BasePointFormatTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SegmentReadState
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SegmentWriteState
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|TestUtil
import|;
end_import
begin_comment
comment|/**  * Tests Lucene60PointFormat  */
end_comment
begin_class
DECL|class|TestLucene60PointFormat
specifier|public
class|class
name|TestLucene60PointFormat
extends|extends
name|BasePointFormatTestCase
block|{
DECL|field|codec
specifier|private
specifier|final
name|Codec
name|codec
decl_stmt|;
DECL|method|TestLucene60PointFormat
specifier|public
name|TestLucene60PointFormat
parameter_list|()
block|{
comment|// standard issue
name|Codec
name|defaultCodec
init|=
name|TestUtil
operator|.
name|getDefaultCodec
argument_list|()
decl_stmt|;
if|if
condition|(
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
condition|)
block|{
comment|// randomize parameters
name|int
name|maxPointsInLeafNode
init|=
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|()
argument_list|,
literal|50
argument_list|,
literal|500
argument_list|)
decl_stmt|;
name|double
name|maxMBSortInHeap
init|=
literal|3.0
operator|+
operator|(
literal|3
operator|*
name|random
argument_list|()
operator|.
name|nextDouble
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"TEST: using Lucene60PointFormat with maxPointsInLeafNode="
operator|+
name|maxPointsInLeafNode
operator|+
literal|" and maxMBSortInHeap="
operator|+
name|maxMBSortInHeap
argument_list|)
expr_stmt|;
block|}
comment|// sneaky impersonation!
name|codec
operator|=
operator|new
name|FilterCodec
argument_list|(
name|defaultCodec
operator|.
name|getName
argument_list|()
argument_list|,
name|defaultCodec
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|PointFormat
name|pointFormat
parameter_list|()
block|{
return|return
operator|new
name|PointFormat
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|PointWriter
name|fieldsWriter
parameter_list|(
name|SegmentWriteState
name|writeState
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|Lucene60PointWriter
argument_list|(
name|writeState
argument_list|,
name|maxPointsInLeafNode
argument_list|,
name|maxMBSortInHeap
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|PointReader
name|fieldsReader
parameter_list|(
name|SegmentReadState
name|readState
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|Lucene60PointReader
argument_list|(
name|readState
argument_list|)
return|;
block|}
block|}
return|;
block|}
block|}
expr_stmt|;
block|}
else|else
block|{
comment|// standard issue
name|codec
operator|=
name|defaultCodec
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|getCodec
specifier|protected
name|Codec
name|getCodec
parameter_list|()
block|{
return|return
name|codec
return|;
block|}
annotation|@
name|Override
DECL|method|testMergeStability
specifier|public
name|void
name|testMergeStability
parameter_list|()
throws|throws
name|Exception
block|{
name|assumeFalse
argument_list|(
literal|"TODO: mess with the parameters and test gets angry!"
argument_list|,
name|codec
operator|instanceof
name|FilterCodec
argument_list|)
expr_stmt|;
name|super
operator|.
name|testMergeStability
argument_list|()
expr_stmt|;
block|}
block|}
end_class
end_unit
