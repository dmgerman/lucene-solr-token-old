begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.codecs.compressing
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|compressing
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_class
DECL|class|TestFastDecompressionMode
specifier|public
class|class
name|TestFastDecompressionMode
extends|extends
name|AbstractTestLZ4CompressionMode
block|{
annotation|@
name|Override
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|mode
operator|=
name|CompressionMode
operator|.
name|FAST_DECOMPRESSION
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|test
specifier|public
name|byte
index|[]
name|test
parameter_list|(
name|byte
index|[]
name|decompressed
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|byte
index|[]
name|compressed
init|=
name|super
operator|.
name|test
argument_list|(
name|decompressed
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
decl_stmt|;
specifier|final
name|byte
index|[]
name|compressed2
init|=
name|compress
argument_list|(
name|CompressionMode
operator|.
name|FAST
operator|.
name|newCompressor
argument_list|()
argument_list|,
name|decompressed
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
decl_stmt|;
comment|// because of the way this compression mode works, its output is necessarily
comment|// smaller than the output of CompressionMode.FAST
name|assertTrue
argument_list|(
name|compressed
operator|.
name|length
operator|<=
name|compressed2
operator|.
name|length
argument_list|)
expr_stmt|;
return|return
name|compressed
return|;
block|}
block|}
end_class
end_unit
