begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|NoSuchFileException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|MockAnalyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|Codec
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|FilterCodec
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|PostingsFormat
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|asserting
operator|.
name|AssertingCodec
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|memory
operator|.
name|MemoryPostingsFormat
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|FieldType
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|IntPoint
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|NumericDocValuesField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|StringField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|TextField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriterConfig
operator|.
name|OpenMode
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|DocIdSetIterator
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|PhraseQuery
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|AlreadyClosedException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|BaseDirectoryWrapper
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|LockObtainFailedException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|MockDirectoryWrapper
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|RAMDirectory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|IOUtils
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|TestUtil
import|;
end_import
begin_class
DECL|class|TestAddIndexes
specifier|public
class|class
name|TestAddIndexes
extends|extends
name|LuceneTestCase
block|{
DECL|method|testSimpleCase
specifier|public
name|void
name|testSimpleCase
parameter_list|()
throws|throws
name|IOException
block|{
comment|// main directory
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
comment|// two auxiliary directories
name|Directory
name|aux
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|Directory
name|aux2
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|writer
init|=
literal|null
decl_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|CREATE
argument_list|)
argument_list|)
expr_stmt|;
comment|// add 100 documents
name|addDocs
argument_list|(
name|writer
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|TestUtil
operator|.
name|checkIndex
argument_list|(
name|dir
argument_list|)
expr_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|aux
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|CREATE
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|newLogMergePolicy
argument_list|(
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// add 40 documents in separate files
name|addDocs
argument_list|(
name|writer
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|aux2
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|CREATE
argument_list|)
argument_list|)
expr_stmt|;
comment|// add 50 documents in compound files
name|addDocs2
argument_list|(
name|writer
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|50
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// test doc count before segments are merged
name|writer
operator|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addIndexes
argument_list|(
name|aux
argument_list|,
name|aux2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|190
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|TestUtil
operator|.
name|checkIndex
argument_list|(
name|dir
argument_list|)
expr_stmt|;
comment|// make sure the old index is correct
name|verifyNumDocs
argument_list|(
name|aux
argument_list|,
literal|40
argument_list|)
expr_stmt|;
comment|// make sure the new index is correct
name|verifyNumDocs
argument_list|(
name|dir
argument_list|,
literal|190
argument_list|)
expr_stmt|;
comment|// now add another set in.
name|Directory
name|aux3
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|aux3
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// add 40 documents
name|addDocs
argument_list|(
name|writer
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// test doc count before segments are merged
name|writer
operator|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|190
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addIndexes
argument_list|(
name|aux3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|230
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// make sure the new index is correct
name|verifyNumDocs
argument_list|(
name|dir
argument_list|,
literal|230
argument_list|)
expr_stmt|;
name|verifyTermDocs
argument_list|(
name|dir
argument_list|,
operator|new
name|Term
argument_list|(
literal|"content"
argument_list|,
literal|"aaa"
argument_list|)
argument_list|,
literal|180
argument_list|)
expr_stmt|;
name|verifyTermDocs
argument_list|(
name|dir
argument_list|,
operator|new
name|Term
argument_list|(
literal|"content"
argument_list|,
literal|"bbb"
argument_list|)
argument_list|,
literal|50
argument_list|)
expr_stmt|;
comment|// now fully merge it.
name|writer
operator|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|forceMerge
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// make sure the new index is correct
name|verifyNumDocs
argument_list|(
name|dir
argument_list|,
literal|230
argument_list|)
expr_stmt|;
name|verifyTermDocs
argument_list|(
name|dir
argument_list|,
operator|new
name|Term
argument_list|(
literal|"content"
argument_list|,
literal|"aaa"
argument_list|)
argument_list|,
literal|180
argument_list|)
expr_stmt|;
name|verifyTermDocs
argument_list|(
name|dir
argument_list|,
operator|new
name|Term
argument_list|(
literal|"content"
argument_list|,
literal|"bbb"
argument_list|)
argument_list|,
literal|50
argument_list|)
expr_stmt|;
comment|// now add a single document
name|Directory
name|aux4
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|aux4
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|addDocs2
argument_list|(
name|writer
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|230
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addIndexes
argument_list|(
name|aux4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|231
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|verifyNumDocs
argument_list|(
name|dir
argument_list|,
literal|231
argument_list|)
expr_stmt|;
name|verifyTermDocs
argument_list|(
name|dir
argument_list|,
operator|new
name|Term
argument_list|(
literal|"content"
argument_list|,
literal|"bbb"
argument_list|)
argument_list|,
literal|51
argument_list|)
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux2
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux3
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux4
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testWithPendingDeletes
specifier|public
name|void
name|testWithPendingDeletes
parameter_list|()
throws|throws
name|IOException
block|{
comment|// main directory
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
comment|// auxiliary directory
name|Directory
name|aux
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|setUpDirs
argument_list|(
name|dir
argument_list|,
name|aux
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addIndexes
argument_list|(
name|aux
argument_list|)
expr_stmt|;
comment|// Adds 10 docs, then replaces them with another 10
comment|// docs, so 10 pending deletes:
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|20
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newStringField
argument_list|(
literal|"id"
argument_list|,
literal|""
operator|+
operator|(
name|i
operator|%
literal|10
operator|)
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newTextField
argument_list|(
literal|"content"
argument_list|,
literal|"bbb "
operator|+
name|i
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|IntPoint
argument_list|(
literal|"doc"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|IntPoint
argument_list|(
literal|"doc2d"
argument_list|,
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"dv"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateDocument
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|""
operator|+
operator|(
name|i
operator|%
literal|10
operator|)
argument_list|)
argument_list|,
name|doc
argument_list|)
expr_stmt|;
block|}
comment|// Deletes one of the 10 added docs, leaving 9:
name|PhraseQuery
name|q
init|=
operator|new
name|PhraseQuery
argument_list|(
literal|"content"
argument_list|,
literal|"bbb"
argument_list|,
literal|"14"
argument_list|)
decl_stmt|;
name|writer
operator|.
name|deleteDocuments
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|writer
operator|.
name|forceMerge
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|verifyNumDocs
argument_list|(
name|dir
argument_list|,
literal|1039
argument_list|)
expr_stmt|;
name|verifyTermDocs
argument_list|(
name|dir
argument_list|,
operator|new
name|Term
argument_list|(
literal|"content"
argument_list|,
literal|"aaa"
argument_list|)
argument_list|,
literal|1030
argument_list|)
expr_stmt|;
name|verifyTermDocs
argument_list|(
name|dir
argument_list|,
operator|new
name|Term
argument_list|(
literal|"content"
argument_list|,
literal|"bbb"
argument_list|)
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testWithPendingDeletes2
specifier|public
name|void
name|testWithPendingDeletes2
parameter_list|()
throws|throws
name|IOException
block|{
comment|// main directory
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
comment|// auxiliary directory
name|Directory
name|aux
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|setUpDirs
argument_list|(
name|dir
argument_list|,
name|aux
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
argument_list|)
decl_stmt|;
comment|// Adds 10 docs, then replaces them with another 10
comment|// docs, so 10 pending deletes:
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|20
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newStringField
argument_list|(
literal|"id"
argument_list|,
literal|""
operator|+
operator|(
name|i
operator|%
literal|10
operator|)
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newTextField
argument_list|(
literal|"content"
argument_list|,
literal|"bbb "
operator|+
name|i
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|IntPoint
argument_list|(
literal|"doc"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|IntPoint
argument_list|(
literal|"doc2d"
argument_list|,
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"dv"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateDocument
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|""
operator|+
operator|(
name|i
operator|%
literal|10
operator|)
argument_list|)
argument_list|,
name|doc
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addIndexes
argument_list|(
name|aux
argument_list|)
expr_stmt|;
comment|// Deletes one of the 10 added docs, leaving 9:
name|PhraseQuery
name|q
init|=
operator|new
name|PhraseQuery
argument_list|(
literal|"content"
argument_list|,
literal|"bbb"
argument_list|,
literal|"14"
argument_list|)
decl_stmt|;
name|writer
operator|.
name|deleteDocuments
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|writer
operator|.
name|forceMerge
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|verifyNumDocs
argument_list|(
name|dir
argument_list|,
literal|1039
argument_list|)
expr_stmt|;
name|verifyTermDocs
argument_list|(
name|dir
argument_list|,
operator|new
name|Term
argument_list|(
literal|"content"
argument_list|,
literal|"aaa"
argument_list|)
argument_list|,
literal|1030
argument_list|)
expr_stmt|;
name|verifyTermDocs
argument_list|(
name|dir
argument_list|,
operator|new
name|Term
argument_list|(
literal|"content"
argument_list|,
literal|"bbb"
argument_list|)
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testWithPendingDeletes3
specifier|public
name|void
name|testWithPendingDeletes3
parameter_list|()
throws|throws
name|IOException
block|{
comment|// main directory
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
comment|// auxiliary directory
name|Directory
name|aux
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|setUpDirs
argument_list|(
name|dir
argument_list|,
name|aux
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
argument_list|)
decl_stmt|;
comment|// Adds 10 docs, then replaces them with another 10
comment|// docs, so 10 pending deletes:
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|20
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newStringField
argument_list|(
literal|"id"
argument_list|,
literal|""
operator|+
operator|(
name|i
operator|%
literal|10
operator|)
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newTextField
argument_list|(
literal|"content"
argument_list|,
literal|"bbb "
operator|+
name|i
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|IntPoint
argument_list|(
literal|"doc"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|IntPoint
argument_list|(
literal|"doc2d"
argument_list|,
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"dv"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateDocument
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|""
operator|+
operator|(
name|i
operator|%
literal|10
operator|)
argument_list|)
argument_list|,
name|doc
argument_list|)
expr_stmt|;
block|}
comment|// Deletes one of the 10 added docs, leaving 9:
name|PhraseQuery
name|q
init|=
operator|new
name|PhraseQuery
argument_list|(
literal|"content"
argument_list|,
literal|"bbb"
argument_list|,
literal|"14"
argument_list|)
decl_stmt|;
name|writer
operator|.
name|deleteDocuments
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addIndexes
argument_list|(
name|aux
argument_list|)
expr_stmt|;
name|writer
operator|.
name|forceMerge
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|verifyNumDocs
argument_list|(
name|dir
argument_list|,
literal|1039
argument_list|)
expr_stmt|;
name|verifyTermDocs
argument_list|(
name|dir
argument_list|,
operator|new
name|Term
argument_list|(
literal|"content"
argument_list|,
literal|"aaa"
argument_list|)
argument_list|,
literal|1030
argument_list|)
expr_stmt|;
name|verifyTermDocs
argument_list|(
name|dir
argument_list|,
operator|new
name|Term
argument_list|(
literal|"content"
argument_list|,
literal|"bbb"
argument_list|)
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|// case 0: add self or exceed maxMergeDocs, expect exception
DECL|method|testAddSelf
specifier|public
name|void
name|testAddSelf
parameter_list|()
throws|throws
name|IOException
block|{
comment|// main directory
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
comment|// auxiliary directory
name|Directory
name|aux
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|writer
init|=
literal|null
decl_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// add 100 documents
name|addDocs
argument_list|(
name|writer
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|aux
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|CREATE
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|1000
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|newLogMergePolicy
argument_list|(
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// add 140 documents in separate files
name|addDocs
argument_list|(
name|writer
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|aux
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|CREATE
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|1000
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|newLogMergePolicy
argument_list|(
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|addDocs
argument_list|(
name|writer
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// cannot add self
name|IndexWriter
name|writer2
init|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
argument_list|)
decl_stmt|;
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
block|{
name|writer2
operator|.
name|addIndexes
argument_list|(
name|aux
argument_list|,
name|dir
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|writer2
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer2
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// make sure the index is correct
name|verifyNumDocs
argument_list|(
name|dir
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|// in all the remaining tests, make the doc count of the oldest segment
comment|// in dir large so that it is never merged in addIndexes()
comment|// case 1: no tail segments
DECL|method|testNoTailSegments
specifier|public
name|void
name|testNoTailSegments
parameter_list|()
throws|throws
name|IOException
block|{
comment|// main directory
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
comment|// auxiliary directory
name|Directory
name|aux
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|setUpDirs
argument_list|(
name|dir
argument_list|,
name|aux
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|10
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|newLogMergePolicy
argument_list|(
literal|4
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|addDocs
argument_list|(
name|writer
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addIndexes
argument_list|(
name|aux
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1040
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// make sure the index is correct
name|verifyNumDocs
argument_list|(
name|dir
argument_list|,
literal|1040
argument_list|)
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|// case 2: tail segments, invariants hold, no copy
DECL|method|testNoCopySegments
specifier|public
name|void
name|testNoCopySegments
parameter_list|()
throws|throws
name|IOException
block|{
comment|// main directory
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
comment|// auxiliary directory
name|Directory
name|aux
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|setUpDirs
argument_list|(
name|dir
argument_list|,
name|aux
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|9
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|newLogMergePolicy
argument_list|(
literal|4
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|addDocs
argument_list|(
name|writer
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addIndexes
argument_list|(
name|aux
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1032
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// make sure the index is correct
name|verifyNumDocs
argument_list|(
name|dir
argument_list|,
literal|1032
argument_list|)
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|// case 3: tail segments, invariants hold, copy, invariants hold
DECL|method|testNoMergeAfterCopy
specifier|public
name|void
name|testNoMergeAfterCopy
parameter_list|()
throws|throws
name|IOException
block|{
comment|// main directory
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
comment|// auxiliary directory
name|Directory
name|aux
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|setUpDirs
argument_list|(
name|dir
argument_list|,
name|aux
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|10
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|newLogMergePolicy
argument_list|(
literal|4
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addIndexes
argument_list|(
name|aux
argument_list|,
operator|new
name|MockDirectoryWrapper
argument_list|(
name|random
argument_list|()
argument_list|,
name|TestUtil
operator|.
name|ramCopyOf
argument_list|(
name|aux
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1060
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// make sure the index is correct
name|verifyNumDocs
argument_list|(
name|dir
argument_list|,
literal|1060
argument_list|)
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|// case 4: tail segments, invariants hold, copy, invariants not hold
DECL|method|testMergeAfterCopy
specifier|public
name|void
name|testMergeAfterCopy
parameter_list|()
throws|throws
name|IOException
block|{
comment|// main directory
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
comment|// auxiliary directory
name|Directory
name|aux
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|setUpDirs
argument_list|(
name|dir
argument_list|,
name|aux
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|IndexWriterConfig
name|dontMergeConfig
init|=
operator|new
name|IndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|aux
argument_list|,
name|dontMergeConfig
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|20
condition|;
name|i
operator|++
control|)
block|{
name|writer
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|IndexReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|aux
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|reader
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|4
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|newLogMergePolicy
argument_list|(
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"\nTEST: now addIndexes"
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addIndexes
argument_list|(
name|aux
argument_list|,
operator|new
name|MockDirectoryWrapper
argument_list|(
name|random
argument_list|()
argument_list|,
name|TestUtil
operator|.
name|ramCopyOf
argument_list|(
name|aux
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1020
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|// case 5: tail segments, invariants not hold
DECL|method|testMoreMerges
specifier|public
name|void
name|testMoreMerges
parameter_list|()
throws|throws
name|IOException
block|{
comment|// main directory
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
comment|// auxiliary directory
name|Directory
name|aux
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|Directory
name|aux2
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|setUpDirs
argument_list|(
name|dir
argument_list|,
name|aux
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
name|newWriter
argument_list|(
name|aux2
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|CREATE
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|100
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|newLogMergePolicy
argument_list|(
literal|10
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addIndexes
argument_list|(
name|aux
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|writer
operator|.
name|getSegmentCount
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|IndexWriterConfig
name|dontMergeConfig
init|=
operator|new
name|IndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
decl_stmt|;
name|writer
operator|=
operator|new
name|IndexWriter
argument_list|(
name|aux
argument_list|,
name|dontMergeConfig
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|27
condition|;
name|i
operator|++
control|)
block|{
name|writer
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|IndexReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|aux
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|reader
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dontMergeConfig
operator|=
operator|new
name|IndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|writer
operator|=
operator|new
name|IndexWriter
argument_list|(
name|aux2
argument_list|,
name|dontMergeConfig
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|8
condition|;
name|i
operator|++
control|)
block|{
name|writer
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|""
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|aux2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|22
argument_list|,
name|reader
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|6
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|newLogMergePolicy
argument_list|(
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addIndexes
argument_list|(
name|aux
argument_list|,
name|aux2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1040
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux2
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|newWriter
specifier|private
name|IndexWriter
name|newWriter
parameter_list|(
name|Directory
name|dir
parameter_list|,
name|IndexWriterConfig
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
name|conf
operator|.
name|setMergePolicy
argument_list|(
operator|new
name|LogDocMergePolicy
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
return|return
name|writer
return|;
block|}
DECL|method|addDocs
specifier|private
name|void
name|addDocs
parameter_list|(
name|IndexWriter
name|writer
parameter_list|,
name|int
name|numDocs
parameter_list|)
throws|throws
name|IOException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newTextField
argument_list|(
literal|"content"
argument_list|,
literal|"aaa"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|IntPoint
argument_list|(
literal|"doc"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|IntPoint
argument_list|(
literal|"doc2d"
argument_list|,
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"dv"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|addDocs2
specifier|private
name|void
name|addDocs2
parameter_list|(
name|IndexWriter
name|writer
parameter_list|,
name|int
name|numDocs
parameter_list|)
throws|throws
name|IOException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newTextField
argument_list|(
literal|"content"
argument_list|,
literal|"bbb"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|IntPoint
argument_list|(
literal|"doc"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|IntPoint
argument_list|(
literal|"doc2d"
argument_list|,
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"dv"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|verifyNumDocs
specifier|private
name|void
name|verifyNumDocs
parameter_list|(
name|Directory
name|dir
parameter_list|,
name|int
name|numDocs
parameter_list|)
throws|throws
name|IOException
block|{
name|IndexReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|numDocs
argument_list|,
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|numDocs
argument_list|,
name|reader
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|verifyTermDocs
specifier|private
name|void
name|verifyTermDocs
parameter_list|(
name|Directory
name|dir
parameter_list|,
name|Term
name|term
parameter_list|,
name|int
name|numDocs
parameter_list|)
throws|throws
name|IOException
block|{
name|IndexReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|PostingsEnum
name|postingsEnum
init|=
name|TestUtil
operator|.
name|docs
argument_list|(
name|random
argument_list|()
argument_list|,
name|reader
argument_list|,
name|term
operator|.
name|field
argument_list|,
name|term
operator|.
name|bytes
argument_list|,
literal|null
argument_list|,
name|PostingsEnum
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|postingsEnum
operator|.
name|nextDoc
argument_list|()
operator|!=
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
condition|)
name|count
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
name|numDocs
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|setUpDirs
specifier|private
name|void
name|setUpDirs
parameter_list|(
name|Directory
name|dir
parameter_list|,
name|Directory
name|aux
parameter_list|)
throws|throws
name|IOException
block|{
name|setUpDirs
argument_list|(
name|dir
argument_list|,
name|aux
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|setUpDirs
specifier|private
name|void
name|setUpDirs
parameter_list|(
name|Directory
name|dir
parameter_list|,
name|Directory
name|aux
parameter_list|,
name|boolean
name|withID
parameter_list|)
throws|throws
name|IOException
block|{
name|IndexWriter
name|writer
init|=
literal|null
decl_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|CREATE
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
comment|// add 1000 documents in 1 segment
if|if
condition|(
name|withID
condition|)
block|{
name|addDocsWithID
argument_list|(
name|writer
argument_list|,
literal|1000
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|addDocs
argument_list|(
name|writer
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|writer
operator|.
name|getSegmentCount
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|aux
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|CREATE
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|1000
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|newLogMergePolicy
argument_list|(
literal|false
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// add 30 documents in 3 segments
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|withID
condition|)
block|{
name|addDocsWithID
argument_list|(
name|writer
argument_list|,
literal|10
argument_list|,
literal|10
operator|*
name|i
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|addDocs
argument_list|(
name|writer
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|aux
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|1000
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|newLogMergePolicy
argument_list|(
literal|false
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|writer
operator|.
name|getSegmentCount
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|// LUCENE-1270
DECL|method|testHangOnClose
specifier|public
name|void
name|testHangOnClose
parameter_list|()
throws|throws
name|IOException
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|LogByteSizeMergePolicy
name|lmp
init|=
operator|new
name|LogByteSizeMergePolicy
argument_list|()
decl_stmt|;
name|lmp
operator|.
name|setNoCFSRatio
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|lmp
operator|.
name|setMergeFactor
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|5
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|lmp
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|FieldType
name|customType
init|=
operator|new
name|FieldType
argument_list|(
name|TextField
operator|.
name|TYPE_STORED
argument_list|)
decl_stmt|;
name|customType
operator|.
name|setStoreTermVectors
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|customType
operator|.
name|setStoreTermVectorPositions
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|customType
operator|.
name|setStoreTermVectorOffsets
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newField
argument_list|(
literal|"content"
argument_list|,
literal|"aaa bbb ccc ddd eee fff ggg hhh iii"
argument_list|,
name|customType
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|60
condition|;
name|i
operator|++
control|)
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|Document
name|doc2
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|FieldType
name|customType2
init|=
operator|new
name|FieldType
argument_list|()
decl_stmt|;
name|customType2
operator|.
name|setStored
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|doc2
operator|.
name|add
argument_list|(
name|newField
argument_list|(
literal|"content"
argument_list|,
literal|"aaa bbb ccc ddd eee fff ggg hhh iii"
argument_list|,
name|customType2
argument_list|)
argument_list|)
expr_stmt|;
name|doc2
operator|.
name|add
argument_list|(
name|newField
argument_list|(
literal|"content"
argument_list|,
literal|"aaa bbb ccc ddd eee fff ggg hhh iii"
argument_list|,
name|customType2
argument_list|)
argument_list|)
expr_stmt|;
name|doc2
operator|.
name|add
argument_list|(
name|newField
argument_list|(
literal|"content"
argument_list|,
literal|"aaa bbb ccc ddd eee fff ggg hhh iii"
argument_list|,
name|customType2
argument_list|)
argument_list|)
expr_stmt|;
name|doc2
operator|.
name|add
argument_list|(
name|newField
argument_list|(
literal|"content"
argument_list|,
literal|"aaa bbb ccc ddd eee fff ggg hhh iii"
argument_list|,
name|customType2
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
name|writer
operator|.
name|addDocument
argument_list|(
name|doc2
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Directory
name|dir2
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|lmp
operator|=
operator|new
name|LogByteSizeMergePolicy
argument_list|()
expr_stmt|;
name|lmp
operator|.
name|setMinMergeMB
argument_list|(
literal|0.0001
argument_list|)
expr_stmt|;
name|lmp
operator|.
name|setNoCFSRatio
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|lmp
operator|.
name|setMergeFactor
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|writer
operator|=
operator|new
name|IndexWriter
argument_list|(
name|dir2
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setMergeScheduler
argument_list|(
operator|new
name|SerialMergeScheduler
argument_list|()
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|lmp
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addIndexes
argument_list|(
name|dir
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir2
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|// TODO: these are also in TestIndexWriter... add a simple doc-writing method
comment|// like this to LuceneTestCase?
DECL|method|addDoc
specifier|private
name|void
name|addDoc
parameter_list|(
name|IndexWriter
name|writer
parameter_list|)
throws|throws
name|IOException
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newTextField
argument_list|(
literal|"content"
argument_list|,
literal|"aaa"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
DECL|class|RunAddIndexesThreads
specifier|private
specifier|abstract
class|class
name|RunAddIndexesThreads
block|{
DECL|field|dir
DECL|field|dir2
name|Directory
name|dir
decl_stmt|,
name|dir2
decl_stmt|;
DECL|field|NUM_INIT_DOCS
specifier|final
specifier|static
name|int
name|NUM_INIT_DOCS
init|=
literal|17
decl_stmt|;
DECL|field|writer2
name|IndexWriter
name|writer2
decl_stmt|;
DECL|field|failures
specifier|final
name|List
argument_list|<
name|Throwable
argument_list|>
name|failures
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|didClose
specifier|volatile
name|boolean
name|didClose
decl_stmt|;
DECL|field|readers
specifier|final
name|DirectoryReader
index|[]
name|readers
decl_stmt|;
DECL|field|NUM_COPY
specifier|final
name|int
name|NUM_COPY
decl_stmt|;
DECL|field|NUM_THREADS
specifier|final
specifier|static
name|int
name|NUM_THREADS
init|=
literal|5
decl_stmt|;
DECL|field|threads
specifier|final
name|Thread
index|[]
name|threads
init|=
operator|new
name|Thread
index|[
name|NUM_THREADS
index|]
decl_stmt|;
DECL|method|RunAddIndexesThreads
specifier|public
name|RunAddIndexesThreads
parameter_list|(
name|int
name|numCopy
parameter_list|)
throws|throws
name|Throwable
block|{
name|NUM_COPY
operator|=
name|numCopy
expr_stmt|;
name|dir
operator|=
operator|new
name|MockDirectoryWrapper
argument_list|(
name|random
argument_list|()
argument_list|,
operator|new
name|RAMDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
operator|new
name|IndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|2
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NUM_INIT_DOCS
condition|;
name|i
operator|++
control|)
name|addDoc
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir2
operator|=
name|newDirectory
argument_list|()
expr_stmt|;
name|writer2
operator|=
operator|new
name|IndexWriter
argument_list|(
name|dir2
argument_list|,
operator|new
name|IndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer2
operator|.
name|commit
argument_list|()
expr_stmt|;
name|readers
operator|=
operator|new
name|DirectoryReader
index|[
name|NUM_COPY
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NUM_COPY
condition|;
name|i
operator|++
control|)
name|readers
index|[
name|i
index|]
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
DECL|method|launchThreads
name|void
name|launchThreads
parameter_list|(
specifier|final
name|int
name|numIter
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NUM_THREADS
condition|;
name|i
operator|++
control|)
block|{
name|threads
index|[
name|i
index|]
operator|=
operator|new
name|Thread
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
specifier|final
name|Directory
index|[]
name|dirs
init|=
operator|new
name|Directory
index|[
name|NUM_COPY
index|]
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|NUM_COPY
condition|;
name|k
operator|++
control|)
name|dirs
index|[
name|k
index|]
operator|=
operator|new
name|MockDirectoryWrapper
argument_list|(
name|random
argument_list|()
argument_list|,
name|TestUtil
operator|.
name|ramCopyOf
argument_list|(
name|dir
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|j
init|=
literal|0
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
comment|// System.out.println(Thread.currentThread().getName() + ": iter j=" + j);
if|if
condition|(
name|numIter
operator|>
literal|0
operator|&&
name|j
operator|==
name|numIter
condition|)
break|break;
name|doBody
argument_list|(
name|j
operator|++
argument_list|,
name|dirs
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|handle
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
block|}
block|}
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NUM_THREADS
condition|;
name|i
operator|++
control|)
name|threads
index|[
name|i
index|]
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
DECL|method|joinThreads
name|void
name|joinThreads
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NUM_THREADS
condition|;
name|i
operator|++
control|)
name|threads
index|[
name|i
index|]
operator|.
name|join
argument_list|()
expr_stmt|;
block|}
DECL|method|close
name|void
name|close
parameter_list|(
name|boolean
name|doWait
parameter_list|)
throws|throws
name|Throwable
block|{
name|didClose
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|doWait
operator|==
literal|false
condition|)
block|{
name|writer2
operator|.
name|rollback
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|writer2
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|closeDir
name|void
name|closeDir
parameter_list|()
throws|throws
name|Throwable
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NUM_COPY
condition|;
name|i
operator|++
control|)
name|readers
index|[
name|i
index|]
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir2
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|doBody
specifier|abstract
name|void
name|doBody
parameter_list|(
name|int
name|j
parameter_list|,
name|Directory
index|[]
name|dirs
parameter_list|)
throws|throws
name|Throwable
function_decl|;
DECL|method|handle
specifier|abstract
name|void
name|handle
parameter_list|(
name|Throwable
name|t
parameter_list|)
function_decl|;
block|}
DECL|class|CommitAndAddIndexes
specifier|private
class|class
name|CommitAndAddIndexes
extends|extends
name|RunAddIndexesThreads
block|{
DECL|method|CommitAndAddIndexes
specifier|public
name|CommitAndAddIndexes
parameter_list|(
name|int
name|numCopy
parameter_list|)
throws|throws
name|Throwable
block|{
name|super
argument_list|(
name|numCopy
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|handle
name|void
name|handle
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|t
operator|.
name|printStackTrace
argument_list|(
name|System
operator|.
name|out
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|failures
init|)
block|{
name|failures
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|doBody
name|void
name|doBody
parameter_list|(
name|int
name|j
parameter_list|,
name|Directory
index|[]
name|dirs
parameter_list|)
throws|throws
name|Throwable
block|{
switch|switch
condition|(
name|j
operator|%
literal|5
condition|)
block|{
case|case
literal|0
case|:
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|": TEST: addIndexes(Dir[]) then full merge"
argument_list|)
expr_stmt|;
block|}
name|writer2
operator|.
name|addIndexes
argument_list|(
name|dirs
argument_list|)
expr_stmt|;
try|try
block|{
name|writer2
operator|.
name|forceMerge
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
if|if
condition|(
name|ioe
operator|.
name|getCause
argument_list|()
operator|instanceof
name|MergePolicy
operator|.
name|MergeAbortedException
condition|)
block|{
comment|// OK
block|}
else|else
block|{
throw|throw
name|ioe
throw|;
block|}
block|}
break|break;
case|case
literal|1
case|:
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|": TEST: addIndexes(Dir[])"
argument_list|)
expr_stmt|;
block|}
name|writer2
operator|.
name|addIndexes
argument_list|(
name|dirs
argument_list|)
expr_stmt|;
break|break;
case|case
literal|2
case|:
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|": TEST: addIndexes(LeafReader[])"
argument_list|)
expr_stmt|;
block|}
name|TestUtil
operator|.
name|addIndexesSlowly
argument_list|(
name|writer2
argument_list|,
name|readers
argument_list|)
expr_stmt|;
break|break;
case|case
literal|3
case|:
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|": TEST: addIndexes(Dir[]) then maybeMerge"
argument_list|)
expr_stmt|;
block|}
name|writer2
operator|.
name|addIndexes
argument_list|(
name|dirs
argument_list|)
expr_stmt|;
name|writer2
operator|.
name|maybeMerge
argument_list|()
expr_stmt|;
break|break;
case|case
literal|4
case|:
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|": TEST: commit"
argument_list|)
expr_stmt|;
block|}
name|writer2
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
block|}
comment|// LUCENE-1335: test simultaneous addIndexes& commits
comment|// from multiple threads
DECL|method|testAddIndexesWithThreads
specifier|public
name|void
name|testAddIndexesWithThreads
parameter_list|()
throws|throws
name|Throwable
block|{
specifier|final
name|int
name|NUM_ITER
init|=
name|TEST_NIGHTLY
condition|?
literal|15
else|:
literal|5
decl_stmt|;
specifier|final
name|int
name|NUM_COPY
init|=
literal|3
decl_stmt|;
name|CommitAndAddIndexes
name|c
init|=
operator|new
name|CommitAndAddIndexes
argument_list|(
name|NUM_COPY
argument_list|)
decl_stmt|;
name|c
operator|.
name|launchThreads
argument_list|(
name|NUM_ITER
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
name|addDoc
argument_list|(
name|c
operator|.
name|writer2
argument_list|)
expr_stmt|;
name|c
operator|.
name|joinThreads
argument_list|()
expr_stmt|;
name|int
name|expectedNumDocs
init|=
literal|100
operator|+
name|NUM_COPY
operator|*
operator|(
literal|4
operator|*
name|NUM_ITER
operator|/
literal|5
operator|)
operator|*
name|RunAddIndexesThreads
operator|.
name|NUM_THREADS
operator|*
name|RunAddIndexesThreads
operator|.
name|NUM_INIT_DOCS
decl_stmt|;
name|assertEquals
argument_list|(
literal|"expected num docs don't match - failures: "
operator|+
name|c
operator|.
name|failures
argument_list|,
name|expectedNumDocs
argument_list|,
name|c
operator|.
name|writer2
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
name|c
operator|.
name|close
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"found unexpected failures: "
operator|+
name|c
operator|.
name|failures
argument_list|,
name|c
operator|.
name|failures
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|IndexReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|c
operator|.
name|dir2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedNumDocs
argument_list|,
name|reader
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|c
operator|.
name|closeDir
argument_list|()
expr_stmt|;
block|}
DECL|class|CommitAndAddIndexes2
specifier|private
class|class
name|CommitAndAddIndexes2
extends|extends
name|CommitAndAddIndexes
block|{
DECL|method|CommitAndAddIndexes2
specifier|public
name|CommitAndAddIndexes2
parameter_list|(
name|int
name|numCopy
parameter_list|)
throws|throws
name|Throwable
block|{
name|super
argument_list|(
name|numCopy
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|handle
name|void
name|handle
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|t
operator|instanceof
name|AlreadyClosedException
operator|)
operator|&&
operator|!
operator|(
name|t
operator|instanceof
name|NullPointerException
operator|)
condition|)
block|{
name|t
operator|.
name|printStackTrace
argument_list|(
name|System
operator|.
name|out
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|failures
init|)
block|{
name|failures
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
comment|// LUCENE-1335: test simultaneous addIndexes& close
DECL|method|testAddIndexesWithClose
specifier|public
name|void
name|testAddIndexesWithClose
parameter_list|()
throws|throws
name|Throwable
block|{
specifier|final
name|int
name|NUM_COPY
init|=
literal|3
decl_stmt|;
name|CommitAndAddIndexes2
name|c
init|=
operator|new
name|CommitAndAddIndexes2
argument_list|(
name|NUM_COPY
argument_list|)
decl_stmt|;
comment|//c.writer2.setInfoStream(System.out);
name|c
operator|.
name|launchThreads
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// Close w/o first stopping/joining the threads
name|c
operator|.
name|close
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|//c.writer2.close();
name|c
operator|.
name|joinThreads
argument_list|()
expr_stmt|;
name|c
operator|.
name|closeDir
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|failures
operator|.
name|size
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|class|CommitAndAddIndexes3
specifier|private
class|class
name|CommitAndAddIndexes3
extends|extends
name|RunAddIndexesThreads
block|{
DECL|method|CommitAndAddIndexes3
specifier|public
name|CommitAndAddIndexes3
parameter_list|(
name|int
name|numCopy
parameter_list|)
throws|throws
name|Throwable
block|{
name|super
argument_list|(
name|numCopy
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doBody
name|void
name|doBody
parameter_list|(
name|int
name|j
parameter_list|,
name|Directory
index|[]
name|dirs
parameter_list|)
throws|throws
name|Throwable
block|{
switch|switch
condition|(
name|j
operator|%
literal|5
condition|)
block|{
case|case
literal|0
case|:
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"TEST: "
operator|+
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|": addIndexes + full merge"
argument_list|)
expr_stmt|;
block|}
name|writer2
operator|.
name|addIndexes
argument_list|(
name|dirs
argument_list|)
expr_stmt|;
name|writer2
operator|.
name|forceMerge
argument_list|(
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
literal|1
case|:
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"TEST: "
operator|+
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|": addIndexes"
argument_list|)
expr_stmt|;
block|}
name|writer2
operator|.
name|addIndexes
argument_list|(
name|dirs
argument_list|)
expr_stmt|;
break|break;
case|case
literal|2
case|:
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"TEST: "
operator|+
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|": addIndexes(LR[])"
argument_list|)
expr_stmt|;
block|}
name|TestUtil
operator|.
name|addIndexesSlowly
argument_list|(
name|writer2
argument_list|,
name|readers
argument_list|)
expr_stmt|;
break|break;
case|case
literal|3
case|:
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"TEST: "
operator|+
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|": full merge"
argument_list|)
expr_stmt|;
block|}
name|writer2
operator|.
name|forceMerge
argument_list|(
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
literal|4
case|:
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"TEST: "
operator|+
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|": commit"
argument_list|)
expr_stmt|;
block|}
name|writer2
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|handle
name|void
name|handle
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|boolean
name|report
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|t
operator|instanceof
name|AlreadyClosedException
operator|||
name|t
operator|instanceof
name|MergePolicy
operator|.
name|MergeAbortedException
operator|||
name|t
operator|instanceof
name|NullPointerException
condition|)
block|{
name|report
operator|=
operator|!
name|didClose
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|t
operator|instanceof
name|FileNotFoundException
operator|||
name|t
operator|instanceof
name|NoSuchFileException
condition|)
block|{
name|report
operator|=
operator|!
name|didClose
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|t
operator|instanceof
name|IOException
condition|)
block|{
name|Throwable
name|t2
init|=
name|t
operator|.
name|getCause
argument_list|()
decl_stmt|;
if|if
condition|(
name|t2
operator|instanceof
name|MergePolicy
operator|.
name|MergeAbortedException
condition|)
block|{
name|report
operator|=
operator|!
name|didClose
expr_stmt|;
block|}
block|}
if|if
condition|(
name|report
condition|)
block|{
name|t
operator|.
name|printStackTrace
argument_list|(
name|System
operator|.
name|out
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|failures
init|)
block|{
name|failures
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
comment|// LUCENE-1335: test simultaneous addIndexes& close
DECL|method|testAddIndexesWithCloseNoWait
specifier|public
name|void
name|testAddIndexesWithCloseNoWait
parameter_list|()
throws|throws
name|Throwable
block|{
specifier|final
name|int
name|NUM_COPY
init|=
literal|50
decl_stmt|;
name|CommitAndAddIndexes3
name|c
init|=
operator|new
name|CommitAndAddIndexes3
argument_list|(
name|NUM_COPY
argument_list|)
decl_stmt|;
name|c
operator|.
name|launchThreads
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|()
argument_list|,
literal|10
argument_list|,
literal|500
argument_list|)
argument_list|)
expr_stmt|;
comment|// Close w/o first stopping/joining the threads
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"TEST: now close(false)"
argument_list|)
expr_stmt|;
block|}
name|c
operator|.
name|close
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|c
operator|.
name|joinThreads
argument_list|()
expr_stmt|;
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"TEST: done join threads"
argument_list|)
expr_stmt|;
block|}
name|c
operator|.
name|closeDir
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|failures
operator|.
name|size
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
comment|// LUCENE-1335: test simultaneous addIndexes& close
DECL|method|testAddIndexesWithRollback
specifier|public
name|void
name|testAddIndexesWithRollback
parameter_list|()
throws|throws
name|Throwable
block|{
specifier|final
name|int
name|NUM_COPY
init|=
name|TEST_NIGHTLY
condition|?
literal|50
else|:
literal|5
decl_stmt|;
name|CommitAndAddIndexes3
name|c
init|=
operator|new
name|CommitAndAddIndexes3
argument_list|(
name|NUM_COPY
argument_list|)
decl_stmt|;
name|c
operator|.
name|launchThreads
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|()
argument_list|,
literal|10
argument_list|,
literal|500
argument_list|)
argument_list|)
expr_stmt|;
comment|// Close w/o first stopping/joining the threads
if|if
condition|(
name|VERBOSE
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"TEST: now force rollback"
argument_list|)
expr_stmt|;
block|}
name|c
operator|.
name|didClose
operator|=
literal|true
expr_stmt|;
name|MergeScheduler
name|ms
init|=
name|c
operator|.
name|writer2
operator|.
name|getConfig
argument_list|()
operator|.
name|getMergeScheduler
argument_list|()
decl_stmt|;
name|c
operator|.
name|writer2
operator|.
name|rollback
argument_list|()
expr_stmt|;
name|c
operator|.
name|joinThreads
argument_list|()
expr_stmt|;
if|if
condition|(
name|ms
operator|instanceof
name|ConcurrentMergeScheduler
condition|)
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
operator|(
operator|(
name|ConcurrentMergeScheduler
operator|)
name|ms
operator|)
operator|.
name|mergeThreadCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|c
operator|.
name|closeDir
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|failures
operator|.
name|size
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
comment|// LUCENE-2996: tests that addIndexes(IndexReader) applies existing deletes correctly.
DECL|method|testExistingDeletes
specifier|public
name|void
name|testExistingDeletes
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
index|[]
name|dirs
init|=
operator|new
name|Directory
index|[
literal|2
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|dirs
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|dirs
index|[
name|i
index|]
operator|=
name|newDirectory
argument_list|()
expr_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dirs
index|[
name|i
index|]
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"myid"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|IndexWriterConfig
name|conf
init|=
operator|new
name|IndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dirs
index|[
literal|0
index|]
argument_list|,
name|conf
argument_list|)
decl_stmt|;
comment|// Now delete the document
name|writer
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"myid"
argument_list|)
argument_list|)
expr_stmt|;
try|try
init|(
name|DirectoryReader
name|r
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dirs
index|[
literal|1
index|]
argument_list|)
init|)
block|{
name|TestUtil
operator|.
name|addIndexesSlowly
argument_list|(
name|writer
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Documents from the incoming index should not have been deleted"
argument_list|,
literal|1
argument_list|,
name|writer
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
for|for
control|(
name|Directory
name|dir
range|:
name|dirs
control|)
block|{
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
comment|// just like addDocs but with ID, starting from docStart
DECL|method|addDocsWithID
specifier|private
name|void
name|addDocsWithID
parameter_list|(
name|IndexWriter
name|writer
parameter_list|,
name|int
name|numDocs
parameter_list|,
name|int
name|docStart
parameter_list|)
throws|throws
name|IOException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newTextField
argument_list|(
literal|"content"
argument_list|,
literal|"aaa"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newTextField
argument_list|(
literal|"id"
argument_list|,
literal|""
operator|+
operator|(
name|docStart
operator|+
name|i
operator|)
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|IntPoint
argument_list|(
literal|"doc"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|IntPoint
argument_list|(
literal|"doc2d"
argument_list|,
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"dv"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testSimpleCaseCustomCodec
specifier|public
name|void
name|testSimpleCaseCustomCodec
parameter_list|()
throws|throws
name|IOException
block|{
comment|// main directory
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
comment|// two auxiliary directories
name|Directory
name|aux
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|Directory
name|aux2
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|Codec
name|codec
init|=
operator|new
name|CustomPerFieldCodec
argument_list|()
decl_stmt|;
name|IndexWriter
name|writer
init|=
literal|null
decl_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|CREATE
argument_list|)
operator|.
name|setCodec
argument_list|(
name|codec
argument_list|)
argument_list|)
expr_stmt|;
comment|// add 100 documents
name|addDocsWithID
argument_list|(
name|writer
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|TestUtil
operator|.
name|checkIndex
argument_list|(
name|dir
argument_list|)
expr_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|aux
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|CREATE
argument_list|)
operator|.
name|setCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|10
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|newLogMergePolicy
argument_list|(
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// add 40 documents in separate files
name|addDocs
argument_list|(
name|writer
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|writer
operator|=
name|newWriter
argument_list|(
name|aux2
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|CREATE
argument_list|)
operator|.
name|setCodec
argument_list|(
name|codec
argument_list|)
argument_list|)
expr_stmt|;
comment|// add 40 documents in compound files
name|addDocs2
argument_list|(
name|writer
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|50
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// test doc count before segments are merged
name|writer
operator|=
name|newWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setOpenMode
argument_list|(
name|OpenMode
operator|.
name|APPEND
argument_list|)
operator|.
name|setCodec
argument_list|(
name|codec
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addIndexes
argument_list|(
name|aux
argument_list|,
name|aux2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|190
argument_list|,
name|writer
operator|.
name|maxDoc
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux
operator|.
name|close
argument_list|()
expr_stmt|;
name|aux2
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|class|CustomPerFieldCodec
specifier|private
specifier|static
specifier|final
class|class
name|CustomPerFieldCodec
extends|extends
name|AssertingCodec
block|{
DECL|field|simpleTextFormat
specifier|private
specifier|final
name|PostingsFormat
name|simpleTextFormat
init|=
name|PostingsFormat
operator|.
name|forName
argument_list|(
literal|"SimpleText"
argument_list|)
decl_stmt|;
DECL|field|defaultFormat
specifier|private
specifier|final
name|PostingsFormat
name|defaultFormat
init|=
name|TestUtil
operator|.
name|getDefaultPostingsFormat
argument_list|()
decl_stmt|;
DECL|field|memoryFormat
specifier|private
specifier|final
name|PostingsFormat
name|memoryFormat
init|=
name|PostingsFormat
operator|.
name|forName
argument_list|(
literal|"Memory"
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|getPostingsFormatForField
specifier|public
name|PostingsFormat
name|getPostingsFormatForField
parameter_list|(
name|String
name|field
parameter_list|)
block|{
if|if
condition|(
name|field
operator|.
name|equals
argument_list|(
literal|"id"
argument_list|)
condition|)
block|{
return|return
name|simpleTextFormat
return|;
block|}
elseif|else
if|if
condition|(
name|field
operator|.
name|equals
argument_list|(
literal|"content"
argument_list|)
condition|)
block|{
return|return
name|memoryFormat
return|;
block|}
else|else
block|{
return|return
name|defaultFormat
return|;
block|}
block|}
block|}
comment|// LUCENE-2790: tests that the non CFS files were deleted by addIndexes
DECL|method|testNonCFSLeftovers
specifier|public
name|void
name|testNonCFSLeftovers
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
index|[]
name|dirs
init|=
operator|new
name|Directory
index|[
literal|2
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|dirs
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|dirs
index|[
name|i
index|]
operator|=
operator|new
name|RAMDirectory
argument_list|()
expr_stmt|;
name|IndexWriter
name|w
init|=
operator|new
name|IndexWriter
argument_list|(
name|dirs
index|[
name|i
index|]
argument_list|,
operator|new
name|IndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|Document
name|d
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|FieldType
name|customType
init|=
operator|new
name|FieldType
argument_list|(
name|TextField
operator|.
name|TYPE_STORED
argument_list|)
decl_stmt|;
name|customType
operator|.
name|setStoreTermVectors
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|d
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
literal|"c"
argument_list|,
literal|"v"
argument_list|,
name|customType
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|addDocument
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|DirectoryReader
index|[]
name|readers
init|=
operator|new
name|DirectoryReader
index|[]
block|{
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dirs
index|[
literal|0
index|]
argument_list|)
block|,
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dirs
index|[
literal|1
index|]
argument_list|)
block|}
decl_stmt|;
name|MockDirectoryWrapper
name|dir
init|=
operator|new
name|MockDirectoryWrapper
argument_list|(
name|random
argument_list|()
argument_list|,
operator|new
name|RAMDirectory
argument_list|()
argument_list|)
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
operator|new
name|IndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setMergePolicy
argument_list|(
name|newLogMergePolicy
argument_list|(
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|MergePolicy
name|lmp
init|=
name|conf
operator|.
name|getMergePolicy
argument_list|()
decl_stmt|;
comment|// Force creation of CFS:
name|lmp
operator|.
name|setNoCFSRatio
argument_list|(
literal|1.0
argument_list|)
expr_stmt|;
name|lmp
operator|.
name|setMaxCFSSegmentSizeMB
argument_list|(
name|Double
operator|.
name|POSITIVE_INFINITY
argument_list|)
expr_stmt|;
name|IndexWriter
name|w3
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|TestUtil
operator|.
name|addIndexesSlowly
argument_list|(
name|w3
argument_list|,
name|readers
argument_list|)
expr_stmt|;
name|w3
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// we should now see segments_X,
comment|// _Y.cfs,_Y.cfe, _Z.si
name|SegmentInfos
name|sis
init|=
name|SegmentInfos
operator|.
name|readLatestCommit
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Only one compound segment should exist"
argument_list|,
literal|1
argument_list|,
name|sis
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|sis
operator|.
name|info
argument_list|(
literal|0
argument_list|)
operator|.
name|info
operator|.
name|getUseCompoundFile
argument_list|()
argument_list|)
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|class|UnRegisteredCodec
specifier|private
specifier|static
specifier|final
class|class
name|UnRegisteredCodec
extends|extends
name|FilterCodec
block|{
DECL|method|UnRegisteredCodec
specifier|public
name|UnRegisteredCodec
parameter_list|()
block|{
name|super
argument_list|(
literal|"NotRegistered"
argument_list|,
name|TestUtil
operator|.
name|getDefaultCodec
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*    * simple test that ensures we getting expected exceptions     */
DECL|method|testAddIndexMissingCodec
specifier|public
name|void
name|testAddIndexMissingCodec
parameter_list|()
throws|throws
name|IOException
block|{
name|BaseDirectoryWrapper
name|toAdd
init|=
name|newDirectory
argument_list|()
decl_stmt|;
comment|// Disable checkIndex, else we get an exception because
comment|// of the unregistered codec:
name|toAdd
operator|.
name|setCheckIndexOnClose
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|{
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setCodec
argument_list|(
operator|new
name|UnRegisteredCodec
argument_list|()
argument_list|)
expr_stmt|;
name|IndexWriter
name|w
init|=
operator|new
name|IndexWriter
argument_list|(
name|toAdd
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|FieldType
name|customType
init|=
operator|new
name|FieldType
argument_list|()
decl_stmt|;
name|customType
operator|.
name|setIndexOptions
argument_list|(
name|IndexOptions
operator|.
name|DOCS_AND_FREQS_AND_POSITIONS
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newField
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
name|customType
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setCodec
argument_list|(
name|TestUtil
operator|.
name|alwaysPostingsFormat
argument_list|(
operator|new
name|MemoryPostingsFormat
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|IndexWriter
name|w
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
block|{
name|w
operator|.
name|addIndexes
argument_list|(
name|toAdd
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|IndexReader
name|open
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|open
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
name|open
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|expectThrows
argument_list|(
name|IllegalArgumentException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
block|{
name|DirectoryReader
operator|.
name|open
argument_list|(
name|toAdd
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|toAdd
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|// LUCENE-3575
DECL|method|testFieldNamesChanged
specifier|public
name|void
name|testFieldNamesChanged
parameter_list|()
throws|throws
name|IOException
block|{
name|Directory
name|d1
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|RandomIndexWriter
name|w
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|d1
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newStringField
argument_list|(
literal|"f1"
argument_list|,
literal|"doc1 field1"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newStringField
argument_list|(
literal|"id"
argument_list|,
literal|"1"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|DirectoryReader
name|r1
init|=
name|w
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|Directory
name|d2
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|w
operator|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|d2
argument_list|)
expr_stmt|;
name|doc
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newStringField
argument_list|(
literal|"f2"
argument_list|,
literal|"doc2 field2"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|newStringField
argument_list|(
literal|"id"
argument_list|,
literal|"2"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|DirectoryReader
name|r2
init|=
name|w
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|Directory
name|d3
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|w
operator|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|d3
argument_list|)
expr_stmt|;
name|TestUtil
operator|.
name|addIndexesSlowly
argument_list|(
name|w
operator|.
name|w
argument_list|,
name|r1
argument_list|,
name|r2
argument_list|)
expr_stmt|;
name|r1
operator|.
name|close
argument_list|()
expr_stmt|;
name|d1
operator|.
name|close
argument_list|()
expr_stmt|;
name|r2
operator|.
name|close
argument_list|()
expr_stmt|;
name|d2
operator|.
name|close
argument_list|()
expr_stmt|;
name|IndexReader
name|r3
init|=
name|w
operator|.
name|getReader
argument_list|()
decl_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|r3
operator|.
name|numDocs
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|docID
init|=
literal|0
init|;
name|docID
operator|<
literal|2
condition|;
name|docID
operator|++
control|)
block|{
name|Document
name|d
init|=
name|r3
operator|.
name|document
argument_list|(
name|docID
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|equals
argument_list|(
literal|"1"
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"doc1 field1"
argument_list|,
name|d
operator|.
name|get
argument_list|(
literal|"f1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
literal|"doc2 field2"
argument_list|,
name|d
operator|.
name|get
argument_list|(
literal|"f2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|r3
operator|.
name|close
argument_list|()
expr_stmt|;
name|d3
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testAddEmpty
specifier|public
name|void
name|testAddEmpty
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|d1
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|RandomIndexWriter
name|w
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|d1
argument_list|)
decl_stmt|;
name|w
operator|.
name|addIndexes
argument_list|(
operator|new
name|CodecReader
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|dr
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|d1
argument_list|)
decl_stmt|;
for|for
control|(
name|LeafReaderContext
name|ctx
range|:
name|dr
operator|.
name|leaves
argument_list|()
control|)
block|{
name|assertTrue
argument_list|(
literal|"empty segments should be dropped by addIndexes"
argument_list|,
name|ctx
operator|.
name|reader
argument_list|()
operator|.
name|maxDoc
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
name|dr
operator|.
name|close
argument_list|()
expr_stmt|;
name|d1
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|// Currently it's impossible to end up with a segment with all documents
comment|// deleted, as such segments are dropped. Still, to validate that addIndexes
comment|// works with such segments, or readers that end up in such state, we fake an
comment|// all deleted segment.
DECL|method|testFakeAllDeleted
specifier|public
name|void
name|testFakeAllDeleted
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|src
init|=
name|newDirectory
argument_list|()
decl_stmt|,
name|dest
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|RandomIndexWriter
name|w
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|src
argument_list|)
decl_stmt|;
name|w
operator|.
name|addDocument
argument_list|(
operator|new
name|Document
argument_list|()
argument_list|)
expr_stmt|;
name|LeafReader
name|allDeletedReader
init|=
operator|new
name|AllDeletedFilterReader
argument_list|(
name|w
operator|.
name|getReader
argument_list|()
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
argument_list|)
decl_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|w
operator|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dest
argument_list|)
expr_stmt|;
name|w
operator|.
name|addIndexes
argument_list|(
name|SlowCodecReaderWrapper
operator|.
name|wrap
argument_list|(
name|allDeletedReader
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|dr
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|src
argument_list|)
decl_stmt|;
for|for
control|(
name|LeafReaderContext
name|ctx
range|:
name|dr
operator|.
name|leaves
argument_list|()
control|)
block|{
name|assertTrue
argument_list|(
literal|"empty segments should be dropped by addIndexes"
argument_list|,
name|ctx
operator|.
name|reader
argument_list|()
operator|.
name|maxDoc
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
name|dr
operator|.
name|close
argument_list|()
expr_stmt|;
name|allDeletedReader
operator|.
name|close
argument_list|()
expr_stmt|;
name|src
operator|.
name|close
argument_list|()
expr_stmt|;
name|dest
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|/** Make sure an open IndexWriter on an incoming Directory    *  causes a LockObtainFailedException */
DECL|method|testLocksBlock
specifier|public
name|void
name|testLocksBlock
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|src
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|RandomIndexWriter
name|w1
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|src
argument_list|)
decl_stmt|;
name|w1
operator|.
name|addDocument
argument_list|(
operator|new
name|Document
argument_list|()
argument_list|)
expr_stmt|;
name|w1
operator|.
name|commit
argument_list|()
expr_stmt|;
name|Directory
name|dest
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|iwc
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|RandomIndexWriter
name|w2
init|=
operator|new
name|RandomIndexWriter
argument_list|(
name|random
argument_list|()
argument_list|,
name|dest
argument_list|,
name|iwc
argument_list|)
decl_stmt|;
name|expectThrows
argument_list|(
name|LockObtainFailedException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
block|{
name|w2
operator|.
name|addIndexes
argument_list|(
name|src
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|w1
operator|.
name|close
argument_list|()
expr_stmt|;
name|w2
operator|.
name|close
argument_list|()
expr_stmt|;
name|IOUtils
operator|.
name|close
argument_list|(
name|src
argument_list|,
name|dest
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
