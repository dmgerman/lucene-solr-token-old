begin_unit
begin_package
DECL|package|org.apache.lucene.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|Analyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|CannedTokenStream
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|MockTokenizer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|Token
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|FieldType
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|StringField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|TextField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|DocIdSetIterator
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
operator|.
name|SuppressCodecs
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|PostingsEnum
operator|.
name|NONE
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|PostingsEnum
operator|.
name|FREQS
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|PostingsEnum
operator|.
name|POSITIONS
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|PostingsEnum
operator|.
name|PAYLOADS
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|PostingsEnum
operator|.
name|OFFSETS
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|PostingsEnum
operator|.
name|ALL
import|;
end_import
begin_comment
comment|/**   * Test basic postingsenum behavior, flags, reuse, etc.  */
end_comment
begin_class
annotation|@
name|SuppressCodecs
argument_list|(
literal|"Direct"
argument_list|)
comment|// Direct does not support reuse, but we test that it works...
DECL|class|TestPostingsEnum
specifier|public
class|class
name|TestPostingsEnum
extends|extends
name|LuceneTestCase
block|{
DECL|method|testDocsOnly
specifier|public
name|void
name|testDocsOnly
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|iwc
init|=
operator|new
name|IndexWriterConfig
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|IndexWriter
name|iw
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|iwc
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|iw
argument_list|,
literal|false
argument_list|)
decl_stmt|;
comment|// sugar method (FREQS)
name|PostingsEnum
name|postings
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|postings
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// termsenum reuse (FREQS)
name|TermsEnum
name|termsEnum
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|terms
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|iterator
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|termsEnum
operator|.
name|seekExact
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|PostingsEnum
name|postings2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|postings
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|postings2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|postings
argument_list|,
name|postings2
argument_list|)
expr_stmt|;
comment|// and it had better work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|postings
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// asking for any flags: ok
for|for
control|(
name|int
name|flag
range|:
operator|new
name|int
index|[]
block|{
name|NONE
block|,
name|FREQS
block|,
name|POSITIONS
block|,
name|PAYLOADS
block|,
name|OFFSETS
block|,
name|ALL
block|}
control|)
block|{
name|postings
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|flag
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|postings
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse that too
name|postings2
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|postings
argument_list|,
name|flag
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|postings2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|postings
argument_list|,
name|postings2
argument_list|)
expr_stmt|;
comment|// and it had better work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings2
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings2
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|postings2
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings2
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testFreqs
specifier|public
name|void
name|testFreqs
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|iwc
init|=
operator|new
name|IndexWriterConfig
argument_list|(
operator|new
name|Analyzer
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|TokenStreamComponents
name|createComponents
parameter_list|(
name|String
name|fieldName
parameter_list|)
block|{
return|return
operator|new
name|TokenStreamComponents
argument_list|(
operator|new
name|MockTokenizer
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
decl_stmt|;
name|IndexWriter
name|iw
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|iwc
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|FieldType
name|ft
init|=
operator|new
name|FieldType
argument_list|(
name|TextField
operator|.
name|TYPE_NOT_STORED
argument_list|)
decl_stmt|;
name|ft
operator|.
name|setIndexOptions
argument_list|(
name|IndexOptions
operator|.
name|DOCS_AND_FREQS
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
literal|"foo"
argument_list|,
literal|"bar bar"
argument_list|,
name|ft
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|iw
argument_list|,
literal|false
argument_list|)
decl_stmt|;
comment|// sugar method (FREQS)
name|PostingsEnum
name|postings
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|postings
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// termsenum reuse (FREQS)
name|TermsEnum
name|termsEnum
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|terms
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|iterator
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|termsEnum
operator|.
name|seekExact
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|PostingsEnum
name|postings2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|postings
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|postings2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|postings
argument_list|,
name|postings2
argument_list|)
expr_stmt|;
comment|// and it had better work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|postings
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// asking for docs only: ok
name|PostingsEnum
name|docsOnly
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|PostingsEnum
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsOnly
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsOnly
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|1
operator|||
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsOnly
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse that too
name|PostingsEnum
name|docsOnly2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsOnly
argument_list|,
name|PostingsEnum
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|docsOnly2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsOnly
argument_list|,
name|docsOnly2
argument_list|)
expr_stmt|;
comment|// and it had better work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsOnly2
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsOnly2
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|1
operator|||
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsOnly2
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// asking for any flags: ok
for|for
control|(
name|int
name|flag
range|:
operator|new
name|int
index|[]
block|{
name|NONE
block|,
name|FREQS
block|,
name|POSITIONS
block|,
name|PAYLOADS
block|,
name|OFFSETS
block|,
name|ALL
block|}
control|)
block|{
name|postings
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|flag
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|flag
operator|!=
name|NONE
condition|)
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|postings
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse that too
name|postings2
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|postings
argument_list|,
name|flag
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|postings2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|postings
argument_list|,
name|postings2
argument_list|)
expr_stmt|;
comment|// and it had better work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings2
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings2
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|flag
operator|!=
name|NONE
condition|)
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|postings2
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings2
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testPositions
specifier|public
name|void
name|testPositions
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|iwc
init|=
operator|new
name|IndexWriterConfig
argument_list|(
operator|new
name|Analyzer
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|TokenStreamComponents
name|createComponents
parameter_list|(
name|String
name|fieldName
parameter_list|)
block|{
return|return
operator|new
name|TokenStreamComponents
argument_list|(
operator|new
name|MockTokenizer
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
decl_stmt|;
name|IndexWriter
name|iw
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|iwc
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|TextField
argument_list|(
literal|"foo"
argument_list|,
literal|"bar bar"
argument_list|,
name|Field
operator|.
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|iw
argument_list|,
literal|false
argument_list|)
decl_stmt|;
comment|// sugar method (FREQS)
name|PostingsEnum
name|postings
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|postings
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// termsenum reuse (FREQS)
name|TermsEnum
name|termsEnum
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|terms
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|iterator
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|termsEnum
operator|.
name|seekExact
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|PostingsEnum
name|postings2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|postings
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|postings2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|postings
argument_list|,
name|postings2
argument_list|)
expr_stmt|;
comment|// and it had better work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|postings
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// asking for docs only: ok
name|PostingsEnum
name|docsOnly
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|PostingsEnum
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsOnly
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsOnly
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|1
operator|||
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsOnly
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse that too
name|PostingsEnum
name|docsOnly2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsOnly
argument_list|,
name|PostingsEnum
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|docsOnly2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsOnly
argument_list|,
name|docsOnly2
argument_list|)
expr_stmt|;
comment|// and it had better work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsOnly2
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsOnly2
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|1
operator|||
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsOnly2
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// asking for positions, ok
name|PostingsEnum
name|docsAndPositionsEnum
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|POSITIONS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// now reuse the positions
name|PostingsEnum
name|docsAndPositionsEnum2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|POSITIONS
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// payloads, offsets, etc don't cause an error if they aren't there
name|docsAndPositionsEnum
operator|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|PAYLOADS
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|docsAndPositionsEnum
argument_list|)
expr_stmt|;
comment|// but make sure they work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse
name|docsAndPositionsEnum2
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|PAYLOADS
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|docsAndPositionsEnum
operator|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|OFFSETS
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|docsAndPositionsEnum
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse
name|docsAndPositionsEnum2
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|OFFSETS
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|docsAndPositionsEnum
operator|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|ALL
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|docsAndPositionsEnum
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|docsAndPositionsEnum2
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|ALL
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testOffsets
specifier|public
name|void
name|testOffsets
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|iwc
init|=
operator|new
name|IndexWriterConfig
argument_list|(
operator|new
name|Analyzer
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|TokenStreamComponents
name|createComponents
parameter_list|(
name|String
name|fieldName
parameter_list|)
block|{
return|return
operator|new
name|TokenStreamComponents
argument_list|(
operator|new
name|MockTokenizer
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
decl_stmt|;
name|IndexWriter
name|iw
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|iwc
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|FieldType
name|ft
init|=
operator|new
name|FieldType
argument_list|(
name|TextField
operator|.
name|TYPE_NOT_STORED
argument_list|)
decl_stmt|;
name|ft
operator|.
name|setIndexOptions
argument_list|(
name|IndexOptions
operator|.
name|DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
literal|"foo"
argument_list|,
literal|"bar bar"
argument_list|,
name|ft
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|iw
argument_list|,
literal|false
argument_list|)
decl_stmt|;
comment|// sugar method (FREQS)
name|PostingsEnum
name|postings
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|postings
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// termsenum reuse (FREQS)
name|TermsEnum
name|termsEnum
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|terms
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|iterator
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|termsEnum
operator|.
name|seekExact
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|PostingsEnum
name|postings2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|postings
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|postings2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|postings
argument_list|,
name|postings2
argument_list|)
expr_stmt|;
comment|// and it had better work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|postings
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// asking for docs only: ok
name|PostingsEnum
name|docsOnly
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|PostingsEnum
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsOnly
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsOnly
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|1
operator|||
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsOnly
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse that too
name|PostingsEnum
name|docsOnly2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsOnly
argument_list|,
name|PostingsEnum
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|docsOnly2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsOnly
argument_list|,
name|docsOnly2
argument_list|)
expr_stmt|;
comment|// and it had better work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsOnly2
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsOnly2
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|1
operator|||
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsOnly2
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// asking for positions, ok
name|PostingsEnum
name|docsAndPositionsEnum
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|POSITIONS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|4
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|7
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// now reuse the positions
name|PostingsEnum
name|docsAndPositionsEnum2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|POSITIONS
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|4
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|7
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// payloads don't cause an error if they aren't there
name|docsAndPositionsEnum
operator|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|PAYLOADS
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|docsAndPositionsEnum
argument_list|)
expr_stmt|;
comment|// but make sure they work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|4
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|7
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse
name|docsAndPositionsEnum2
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|PAYLOADS
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|4
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|7
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|docsAndPositionsEnum
operator|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|OFFSETS
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|docsAndPositionsEnum
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse
name|docsAndPositionsEnum2
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|OFFSETS
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|docsAndPositionsEnum
operator|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|ALL
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|docsAndPositionsEnum
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|docsAndPositionsEnum2
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|ALL
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testPayloads
specifier|public
name|void
name|testPayloads
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|iwc
init|=
operator|new
name|IndexWriterConfig
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|IndexWriter
name|iw
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|iwc
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|Token
name|token1
init|=
operator|new
name|Token
argument_list|(
literal|"bar"
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|token1
operator|.
name|setPayload
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
argument_list|)
expr_stmt|;
name|Token
name|token2
init|=
operator|new
name|Token
argument_list|(
literal|"bar"
argument_list|,
literal|4
argument_list|,
literal|7
argument_list|)
decl_stmt|;
name|token2
operator|.
name|setPayload
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|TextField
argument_list|(
literal|"foo"
argument_list|,
operator|new
name|CannedTokenStream
argument_list|(
name|token1
argument_list|,
name|token2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|iw
argument_list|,
literal|false
argument_list|)
decl_stmt|;
comment|// sugar method (FREQS)
name|PostingsEnum
name|postings
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|postings
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// termsenum reuse (FREQS)
name|TermsEnum
name|termsEnum
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|terms
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|iterator
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|termsEnum
operator|.
name|seekExact
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|PostingsEnum
name|postings2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|postings
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|postings2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|postings
argument_list|,
name|postings2
argument_list|)
expr_stmt|;
comment|// and it had better work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|postings
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// asking for docs only: ok
name|PostingsEnum
name|docsOnly
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|PostingsEnum
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsOnly
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsOnly
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|1
operator|||
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsOnly
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse that too
name|PostingsEnum
name|docsOnly2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsOnly
argument_list|,
name|PostingsEnum
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|docsOnly2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsOnly
argument_list|,
name|docsOnly2
argument_list|)
expr_stmt|;
comment|// and it had better work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsOnly2
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsOnly2
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|1
operator|||
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsOnly2
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// asking for positions, ok
name|PostingsEnum
name|docsAndPositionsEnum
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|POSITIONS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// now reuse the positions
name|PostingsEnum
name|docsAndPositionsEnum2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|POSITIONS
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// payloads
name|docsAndPositionsEnum
operator|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|PAYLOADS
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|docsAndPositionsEnum
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse
name|docsAndPositionsEnum2
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|PAYLOADS
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|docsAndPositionsEnum
operator|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|OFFSETS
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|docsAndPositionsEnum
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse
name|docsAndPositionsEnum2
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|OFFSETS
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|docsAndPositionsEnum
operator|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|ALL
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|docsAndPositionsEnum
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|docsAndPositionsEnum2
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|ALL
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testAll
specifier|public
name|void
name|testAll
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|iwc
init|=
operator|new
name|IndexWriterConfig
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|IndexWriter
name|iw
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|iwc
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|Token
name|token1
init|=
operator|new
name|Token
argument_list|(
literal|"bar"
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|token1
operator|.
name|setPayload
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
argument_list|)
expr_stmt|;
name|Token
name|token2
init|=
operator|new
name|Token
argument_list|(
literal|"bar"
argument_list|,
literal|4
argument_list|,
literal|7
argument_list|)
decl_stmt|;
name|token2
operator|.
name|setPayload
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
argument_list|)
expr_stmt|;
name|FieldType
name|ft
init|=
operator|new
name|FieldType
argument_list|(
name|TextField
operator|.
name|TYPE_NOT_STORED
argument_list|)
decl_stmt|;
name|ft
operator|.
name|setIndexOptions
argument_list|(
name|IndexOptions
operator|.
name|DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
literal|"foo"
argument_list|,
operator|new
name|CannedTokenStream
argument_list|(
name|token1
argument_list|,
name|token2
argument_list|)
argument_list|,
name|ft
argument_list|)
argument_list|)
expr_stmt|;
name|iw
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|iw
argument_list|,
literal|false
argument_list|)
decl_stmt|;
comment|// sugar method (FREQS)
name|PostingsEnum
name|postings
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|postings
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// termsenum reuse (FREQS)
name|TermsEnum
name|termsEnum
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|terms
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|iterator
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|termsEnum
operator|.
name|seekExact
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|PostingsEnum
name|postings2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|postings
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|postings2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|postings
argument_list|,
name|postings2
argument_list|)
expr_stmt|;
comment|// and it had better work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|postings
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|postings
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|postings
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// asking for docs only: ok
name|PostingsEnum
name|docsOnly
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|PostingsEnum
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsOnly
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsOnly
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|1
operator|||
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsOnly
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse that too
name|PostingsEnum
name|docsOnly2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsOnly
argument_list|,
name|PostingsEnum
operator|.
name|NONE
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|docsOnly2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsOnly
argument_list|,
name|docsOnly2
argument_list|)
expr_stmt|;
comment|// and it had better work
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsOnly2
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsOnly2
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|1
operator|||
name|docsOnly
operator|.
name|freq
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsOnly2
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// asking for positions, ok
name|PostingsEnum
name|docsAndPositionsEnum
init|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|POSITIONS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|4
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|7
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// now reuse the positions
name|PostingsEnum
name|docsAndPositionsEnum2
init|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|POSITIONS
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|4
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|7
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// payloads
name|docsAndPositionsEnum
operator|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|PAYLOADS
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|docsAndPositionsEnum
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|4
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|7
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse
name|docsAndPositionsEnum2
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|PAYLOADS
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
operator|==
literal|4
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
operator|-
literal|1
operator|||
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
operator|==
literal|7
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|docsAndPositionsEnum
operator|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|OFFSETS
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|docsAndPositionsEnum
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
comment|// reuse
name|docsAndPositionsEnum2
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|OFFSETS
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
comment|// we don't define what it is, but if its something else, we should look into it?
name|assertTrue
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
operator|==
literal|null
operator|||
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
operator|.
name|equals
argument_list|(
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|docsAndPositionsEnum
operator|=
name|getOnlySegmentReader
argument_list|(
name|reader
argument_list|)
operator|.
name|postings
argument_list|(
operator|new
name|Term
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
name|PostingsEnum
operator|.
name|ALL
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|docsAndPositionsEnum
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|docsAndPositionsEnum2
operator|=
name|termsEnum
operator|.
name|postings
argument_list|(
literal|null
argument_list|,
name|docsAndPositionsEnum
argument_list|,
name|PostingsEnum
operator|.
name|ALL
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|docsAndPositionsEnum
argument_list|,
name|docsAndPositionsEnum2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|docID
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|docsAndPositionsEnum
operator|.
name|freq
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay1"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextPosition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|docsAndPositionsEnum
operator|.
name|startOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|docsAndPositionsEnum
operator|.
name|endOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"pay2"
argument_list|)
argument_list|,
name|docsAndPositionsEnum
operator|.
name|getPayload
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
argument_list|,
name|docsAndPositionsEnum
operator|.
name|nextDoc
argument_list|()
argument_list|)
expr_stmt|;
name|iw
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class
end_unit
