begin_unit
begin_package
DECL|package|org.apache.lucene.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|MockAnalyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|MockTokenizer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|DocValuesFormat
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|asserting
operator|.
name|AssertingCodec
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|asserting
operator|.
name|AssertingDocValuesFormat
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|BinaryDocValuesField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
operator|.
name|Store
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|NumericDocValuesField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|SortedDocValuesField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|SortedSetDocValuesField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|StringField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|MockDirectoryWrapper
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|NRTCachingDirectory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Bits
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|IOUtils
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|TestUtil
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|generators
operator|.
name|RandomPicks
import|;
end_import
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
DECL|class|TestNumericDocValuesUpdates
specifier|public
class|class
name|TestNumericDocValuesUpdates
extends|extends
name|LuceneTestCase
block|{
DECL|method|doc
specifier|private
name|Document
name|doc
parameter_list|(
name|int
name|id
parameter_list|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"doc-"
operator|+
name|id
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
comment|// make sure we don't set the doc's value to 0, to not confuse with a document that's missing values
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"val"
argument_list|,
name|id
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|doc
return|;
block|}
annotation|@
name|Test
DECL|method|testUpdatesAreFlushed
specifier|public
name|void
name|testUpdatesAreFlushed
parameter_list|()
throws|throws
name|IOException
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|,
name|MockTokenizer
operator|.
name|WHITESPACE
argument_list|,
literal|false
argument_list|)
argument_list|)
operator|.
name|setRAMBufferSizeMB
argument_list|(
literal|0.00000001
argument_list|)
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// val=1
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// val=2
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
comment|// val=2
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|writer
operator|.
name|getFlushDeletesCount
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-0"
argument_list|)
argument_list|,
literal|"val"
argument_list|,
literal|5L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|writer
operator|.
name|getFlushDeletesCount
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-1"
argument_list|)
argument_list|,
literal|"val"
argument_list|,
literal|6L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|writer
operator|.
name|getFlushDeletesCount
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-2"
argument_list|)
argument_list|,
literal|"val"
argument_list|,
literal|7L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|writer
operator|.
name|getFlushDeletesCount
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|getConfig
argument_list|()
operator|.
name|setRAMBufferSizeMB
argument_list|(
literal|1000d
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-2"
argument_list|)
argument_list|,
literal|"val"
argument_list|,
literal|7L
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|writer
operator|.
name|getFlushDeletesCount
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSimple
specifier|public
name|void
name|testSimple
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
comment|// make sure random config doesn't flush on us
name|conf
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setRAMBufferSizeMB
argument_list|(
name|IndexWriterConfig
operator|.
name|DISABLE_AUTO_FLUSH
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// val=1
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// val=2
if|if
condition|(
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
condition|)
block|{
comment|// randomly commit before the update is sent
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-0"
argument_list|)
argument_list|,
literal|"val"
argument_list|,
literal|2L
argument_list|)
expr_stmt|;
comment|// doc=0, exp=2
specifier|final
name|DirectoryReader
name|reader
decl_stmt|;
if|if
condition|(
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
condition|)
block|{
comment|// not NRT
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// NRT
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|LeafReader
name|r
init|=
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
decl_stmt|;
name|NumericDocValues
name|ndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"val"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateFewSegments
specifier|public
name|void
name|testUpdateFewSegments
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|2
argument_list|)
expr_stmt|;
comment|// generate few segments
name|conf
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
comment|// prevent merges for this test
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|int
name|numDocs
init|=
literal|10
decl_stmt|;
name|long
index|[]
name|expectedValues
init|=
operator|new
name|long
index|[
name|numDocs
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|expectedValues
index|[
name|i
index|]
operator|=
name|i
operator|+
literal|1
expr_stmt|;
block|}
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// update few docs
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|random
argument_list|()
operator|.
name|nextDouble
argument_list|()
operator|<
literal|0.4
condition|)
block|{
name|long
name|value
init|=
operator|(
name|i
operator|+
literal|1
operator|)
operator|*
literal|2
decl_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-"
operator|+
name|i
argument_list|)
argument_list|,
literal|"val"
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|expectedValues
index|[
name|i
index|]
operator|=
name|value
expr_stmt|;
block|}
block|}
specifier|final
name|DirectoryReader
name|reader
decl_stmt|;
if|if
condition|(
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
condition|)
block|{
comment|// not NRT
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// NRT
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|LeafReaderContext
name|context
range|:
name|reader
operator|.
name|leaves
argument_list|()
control|)
block|{
name|LeafReader
name|r
init|=
name|context
operator|.
name|reader
argument_list|()
decl_stmt|;
name|NumericDocValues
name|ndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"val"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ndv
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|r
operator|.
name|maxDoc
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|long
name|expected
init|=
name|expectedValues
index|[
name|i
operator|+
name|context
operator|.
name|docBase
index|]
decl_stmt|;
name|long
name|actual
init|=
name|ndv
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReopen
specifier|public
name|void
name|testReopen
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|boolean
name|isNRT
init|=
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
decl_stmt|;
specifier|final
name|DirectoryReader
name|reader1
decl_stmt|;
if|if
condition|(
name|isNRT
condition|)
block|{
name|reader1
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|reader1
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
comment|// update doc
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-0"
argument_list|)
argument_list|,
literal|"val"
argument_list|,
literal|10L
argument_list|)
expr_stmt|;
comment|// update doc-0's value to 10
if|if
condition|(
operator|!
name|isNRT
condition|)
block|{
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
comment|// reopen reader and assert only it sees the update
specifier|final
name|DirectoryReader
name|reader2
init|=
name|DirectoryReader
operator|.
name|openIfChanged
argument_list|(
name|reader1
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|reader2
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|reader1
operator|!=
name|reader2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|reader1
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
operator|.
name|getNumericDocValues
argument_list|(
literal|"val"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|reader2
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
operator|.
name|getNumericDocValues
argument_list|(
literal|"val"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|IOUtils
operator|.
name|close
argument_list|(
name|reader1
argument_list|,
name|reader2
argument_list|,
name|dir
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdatesAndDeletes
specifier|public
name|void
name|testUpdatesAndDeletes
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create an index with a segment with only deletes, a segment with both
comment|// deletes and updates and a segment with only updates
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|10
argument_list|)
expr_stmt|;
comment|// control segment flushing
name|conf
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
comment|// prevent merges for this test
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|6
condition|;
name|i
operator|++
control|)
block|{
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|%
literal|2
operator|==
literal|1
condition|)
block|{
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// create 2-docs segments
block|}
block|}
comment|// delete doc-1 and doc-2
name|writer
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-1"
argument_list|)
argument_list|,
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// 1st and 2nd segments
comment|// update docs 3 and 5
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-3"
argument_list|)
argument_list|,
literal|"val"
argument_list|,
literal|17L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-5"
argument_list|)
argument_list|,
literal|"val"
argument_list|,
literal|17L
argument_list|)
expr_stmt|;
specifier|final
name|DirectoryReader
name|reader
decl_stmt|;
if|if
condition|(
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
condition|)
block|{
comment|// not NRT
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// NRT
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|LeafReader
name|slow
init|=
name|SlowCompositeReaderWrapper
operator|.
name|wrap
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|Bits
name|liveDocs
init|=
name|slow
operator|.
name|getLiveDocs
argument_list|()
decl_stmt|;
name|boolean
index|[]
name|expectedLiveDocs
init|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|expectedLiveDocs
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
name|expectedLiveDocs
index|[
name|i
index|]
argument_list|,
name|liveDocs
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|long
index|[]
name|expectedValues
init|=
operator|new
name|long
index|[]
block|{
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|17
block|,
literal|5
block|,
literal|17
block|}
decl_stmt|;
name|NumericDocValues
name|ndv
init|=
name|slow
operator|.
name|getNumericDocValues
argument_list|(
literal|"val"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|expectedValues
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
name|expectedValues
index|[
name|i
index|]
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdatesWithDeletes
specifier|public
name|void
name|testUpdatesWithDeletes
parameter_list|()
throws|throws
name|Exception
block|{
comment|// update and delete different documents in the same commit session
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|10
argument_list|)
expr_stmt|;
comment|// control segment flushing
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
condition|)
block|{
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
name|writer
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-0"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-1"
argument_list|)
argument_list|,
literal|"val"
argument_list|,
literal|17L
argument_list|)
expr_stmt|;
specifier|final
name|DirectoryReader
name|reader
decl_stmt|;
if|if
condition|(
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
condition|)
block|{
comment|// not NRT
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// NRT
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|LeafReader
name|r
init|=
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|r
operator|.
name|getLiveDocs
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|17
argument_list|,
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"val"
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateAndDeleteSameDocument
specifier|public
name|void
name|testUpdateAndDeleteSameDocument
parameter_list|()
throws|throws
name|Exception
block|{
comment|// update and delete same document in same commit session
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|10
argument_list|)
expr_stmt|;
comment|// control segment flushing
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
condition|)
block|{
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
name|writer
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-0"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-0"
argument_list|)
argument_list|,
literal|"val"
argument_list|,
literal|17L
argument_list|)
expr_stmt|;
specifier|final
name|DirectoryReader
name|reader
decl_stmt|;
if|if
condition|(
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
condition|)
block|{
comment|// not NRT
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// NRT
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|LeafReader
name|r
init|=
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|r
operator|.
name|getLiveDocs
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"val"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// deletes are currently applied first
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultipleDocValuesTypes
specifier|public
name|void
name|testMultipleDocValuesTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|10
argument_list|)
expr_stmt|;
comment|// prevent merges
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"dvUpdateKey"
argument_list|,
literal|"dv"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"ndv"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|BinaryDocValuesField
argument_list|(
literal|"bdv"
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"sdv"
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"ssdv"
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
literal|"ssdv"
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|i
operator|*
literal|2
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// update all docs' ndv field
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"dvUpdateKey"
argument_list|,
literal|"dv"
argument_list|)
argument_list|,
literal|"ndv"
argument_list|,
literal|17L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
specifier|final
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|LeafReader
name|r
init|=
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
decl_stmt|;
name|NumericDocValues
name|ndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"ndv"
argument_list|)
decl_stmt|;
name|BinaryDocValues
name|bdv
init|=
name|r
operator|.
name|getBinaryDocValues
argument_list|(
literal|"bdv"
argument_list|)
decl_stmt|;
name|SortedDocValues
name|sdv
init|=
name|r
operator|.
name|getSortedDocValues
argument_list|(
literal|"sdv"
argument_list|)
decl_stmt|;
name|SortedSetDocValues
name|ssdv
init|=
name|r
operator|.
name|getSortedSetDocValues
argument_list|(
literal|"ssdv"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|r
operator|.
name|maxDoc
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
literal|17
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|BytesRef
name|term
init|=
name|bdv
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|,
name|term
argument_list|)
expr_stmt|;
name|term
operator|=
name|sdv
operator|.
name|get
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|,
name|term
argument_list|)
expr_stmt|;
name|ssdv
operator|.
name|setDocument
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|long
name|ord
init|=
name|ssdv
operator|.
name|nextOrd
argument_list|()
decl_stmt|;
name|term
operator|=
name|ssdv
operator|.
name|lookupOrd
argument_list|(
name|ord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|i
argument_list|,
name|Integer
operator|.
name|parseInt
argument_list|(
name|term
operator|.
name|utf8ToString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|!=
literal|0
condition|)
block|{
name|ord
operator|=
name|ssdv
operator|.
name|nextOrd
argument_list|()
expr_stmt|;
name|term
operator|=
name|ssdv
operator|.
name|lookupOrd
argument_list|(
name|ord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|i
operator|*
literal|2
argument_list|,
name|Integer
operator|.
name|parseInt
argument_list|(
name|term
operator|.
name|utf8ToString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|SortedSetDocValues
operator|.
name|NO_MORE_ORDS
argument_list|,
name|ssdv
operator|.
name|nextOrd
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultipleNumericDocValues
specifier|public
name|void
name|testMultipleNumericDocValues
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|10
argument_list|)
expr_stmt|;
comment|// prevent merges
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"dvUpdateKey"
argument_list|,
literal|"dv"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"ndv1"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"ndv2"
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// update all docs' ndv1 field
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"dvUpdateKey"
argument_list|,
literal|"dv"
argument_list|)
argument_list|,
literal|"ndv1"
argument_list|,
literal|17L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
specifier|final
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|LeafReader
name|r
init|=
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
decl_stmt|;
name|NumericDocValues
name|ndv1
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"ndv1"
argument_list|)
decl_stmt|;
name|NumericDocValues
name|ndv2
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"ndv2"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|r
operator|.
name|maxDoc
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
literal|17
argument_list|,
name|ndv1
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|i
argument_list|,
name|ndv2
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDocumentWithNoValue
specifier|public
name|void
name|testDocumentWithNoValue
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"dvUpdateKey"
argument_list|,
literal|"dv"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|==
literal|0
condition|)
block|{
comment|// index only one document with value
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"ndv"
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// update all docs' ndv field
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"dvUpdateKey"
argument_list|,
literal|"dv"
argument_list|)
argument_list|,
literal|"ndv"
argument_list|,
literal|17L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
specifier|final
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|LeafReader
name|r
init|=
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
decl_stmt|;
name|NumericDocValues
name|ndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"ndv"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|r
operator|.
name|maxDoc
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
literal|17
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateNonNumericDocValuesField
specifier|public
name|void
name|testUpdateNonNumericDocValuesField
parameter_list|()
throws|throws
name|Exception
block|{
comment|// we don't support adding new fields or updating existing non-numeric-dv
comment|// fields through numeric updates
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"key"
argument_list|,
literal|"doc"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
comment|// flushed document
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
comment|// in-memory document
try|try
block|{
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"key"
argument_list|,
literal|"doc"
argument_list|)
argument_list|,
literal|"ndv"
argument_list|,
literal|17L
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"should not have allowed creating new fields through update"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|// ok
block|}
try|try
block|{
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"key"
argument_list|,
literal|"doc"
argument_list|)
argument_list|,
literal|"foo"
argument_list|,
literal|17L
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"should not have allowed updating an existing field to numeric-dv"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|// ok
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDifferentDVFormatPerField
specifier|public
name|void
name|testDifferentDVFormatPerField
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test relies on separate instances of the "same thing"
assert|assert
name|TestUtil
operator|.
name|getDefaultDocValuesFormat
argument_list|()
operator|!=
name|TestUtil
operator|.
name|getDefaultDocValuesFormat
argument_list|()
assert|;
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setCodec
argument_list|(
operator|new
name|AssertingCodec
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|DocValuesFormat
name|getDocValuesFormatForField
parameter_list|(
name|String
name|field
parameter_list|)
block|{
return|return
name|TestUtil
operator|.
name|getDefaultDocValuesFormat
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"key"
argument_list|,
literal|"doc"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"ndv"
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|SortedDocValuesField
argument_list|(
literal|"sorted"
argument_list|,
operator|new
name|BytesRef
argument_list|(
literal|"value"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
comment|// flushed document
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
comment|// in-memory document
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"key"
argument_list|,
literal|"doc"
argument_list|)
argument_list|,
literal|"ndv"
argument_list|,
literal|17L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
specifier|final
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|LeafReader
name|r
init|=
name|SlowCompositeReaderWrapper
operator|.
name|wrap
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|NumericDocValues
name|ndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"ndv"
argument_list|)
decl_stmt|;
name|SortedDocValues
name|sdv
init|=
name|r
operator|.
name|getSortedDocValues
argument_list|(
literal|"sorted"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|r
operator|.
name|maxDoc
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
literal|17
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|BytesRef
name|term
init|=
name|sdv
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BytesRef
argument_list|(
literal|"value"
argument_list|)
argument_list|,
name|term
argument_list|)
expr_stmt|;
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateSameDocMultipleTimes
specifier|public
name|void
name|testUpdateSameDocMultipleTimes
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"key"
argument_list|,
literal|"doc"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"ndv"
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
comment|// flushed document
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
comment|// in-memory document
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"key"
argument_list|,
literal|"doc"
argument_list|)
argument_list|,
literal|"ndv"
argument_list|,
literal|17L
argument_list|)
expr_stmt|;
comment|// update existing field
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"key"
argument_list|,
literal|"doc"
argument_list|)
argument_list|,
literal|"ndv"
argument_list|,
literal|3L
argument_list|)
expr_stmt|;
comment|// update existing field 2nd time in this commit
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
specifier|final
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
specifier|final
name|LeafReader
name|r
init|=
name|SlowCompositeReaderWrapper
operator|.
name|wrap
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|NumericDocValues
name|ndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"ndv"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|r
operator|.
name|maxDoc
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSegmentMerges
specifier|public
name|void
name|testSegmentMerges
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|Random
name|random
init|=
name|random
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|int
name|docid
init|=
literal|0
decl_stmt|;
name|int
name|numRounds
init|=
name|atLeast
argument_list|(
literal|10
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|rnd
init|=
literal|0
init|;
name|rnd
operator|<
name|numRounds
condition|;
name|rnd
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"key"
argument_list|,
literal|"doc"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"ndv"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|numDocs
init|=
name|atLeast
argument_list|(
literal|30
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|doc
operator|.
name|removeField
argument_list|(
literal|"id"
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|docid
operator|++
argument_list|)
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
name|long
name|value
init|=
name|rnd
operator|+
literal|1
decl_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"key"
argument_list|,
literal|"doc"
argument_list|)
argument_list|,
literal|"ndv"
argument_list|,
name|value
argument_list|)
expr_stmt|;
if|if
condition|(
name|random
operator|.
name|nextDouble
argument_list|()
operator|<
literal|0.2
condition|)
block|{
comment|// randomly delete some docs
name|writer
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|random
operator|.
name|nextInt
argument_list|(
name|docid
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// randomly commit or reopen-IW (or nothing), before forceMerge
if|if
condition|(
name|random
operator|.
name|nextDouble
argument_list|()
operator|<
literal|0.4
condition|)
block|{
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|random
operator|.
name|nextDouble
argument_list|()
operator|<
literal|0.1
condition|)
block|{
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|conf
operator|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
comment|// add another document with the current value, to be sure forceMerge has
comment|// something to merge (for instance, it could be that CMS finished merging
comment|// all segments down to 1 before the delete was applied, so when
comment|// forceMerge is called, the index will be with one segment and deletes
comment|// and some MPs might now merge it, thereby invalidating test's
comment|// assumption that the reader has no deletes).
name|doc
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|docid
operator|++
argument_list|)
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"key"
argument_list|,
literal|"doc"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"ndv"
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|forceMerge
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|DirectoryReader
name|reader
decl_stmt|;
if|if
condition|(
name|random
operator|.
name|nextBoolean
argument_list|()
condition|)
block|{
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|LeafReader
name|r
init|=
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
literal|"index should have no deletes after forceMerge"
argument_list|,
name|r
operator|.
name|getLiveDocs
argument_list|()
argument_list|)
expr_stmt|;
name|NumericDocValues
name|ndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"ndv"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ndv
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|r
operator|.
name|maxDoc
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
name|value
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateDocumentByMultipleTerms
specifier|public
name|void
name|testUpdateDocumentByMultipleTerms
parameter_list|()
throws|throws
name|Exception
block|{
comment|// make sure the order of updates is respected, even when multiple terms affect same document
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"k1"
argument_list|,
literal|"v1"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"k2"
argument_list|,
literal|"v2"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"ndv"
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
comment|// flushed document
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
comment|// in-memory document
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"k1"
argument_list|,
literal|"v1"
argument_list|)
argument_list|,
literal|"ndv"
argument_list|,
literal|17L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"k2"
argument_list|,
literal|"v2"
argument_list|)
argument_list|,
literal|"ndv"
argument_list|,
literal|3L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
specifier|final
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
specifier|final
name|LeafReader
name|r
init|=
name|SlowCompositeReaderWrapper
operator|.
name|wrap
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|NumericDocValues
name|ndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"ndv"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|r
operator|.
name|maxDoc
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testManyReopensAndFields
specifier|public
name|void
name|testManyReopensAndFields
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
specifier|final
name|Random
name|random
init|=
name|random
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|)
argument_list|)
decl_stmt|;
name|LogMergePolicy
name|lmp
init|=
name|newLogMergePolicy
argument_list|()
decl_stmt|;
name|lmp
operator|.
name|setMergeFactor
argument_list|(
literal|3
argument_list|)
expr_stmt|;
comment|// merge often
name|conf
operator|.
name|setMergePolicy
argument_list|(
name|lmp
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
specifier|final
name|boolean
name|isNRT
init|=
name|random
operator|.
name|nextBoolean
argument_list|()
decl_stmt|;
name|DirectoryReader
name|reader
decl_stmt|;
if|if
condition|(
name|isNRT
condition|)
block|{
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
specifier|final
name|int
name|numFields
init|=
name|random
operator|.
name|nextInt
argument_list|(
literal|4
argument_list|)
operator|+
literal|3
decl_stmt|;
comment|// 3-7
specifier|final
name|long
index|[]
name|fieldValues
init|=
operator|new
name|long
index|[
name|numFields
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|fieldValues
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|fieldValues
index|[
name|i
index|]
operator|=
literal|1
expr_stmt|;
block|}
name|int
name|numRounds
init|=
name|atLeast
argument_list|(
literal|15
argument_list|)
decl_stmt|;
name|int
name|docID
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numRounds
condition|;
name|i
operator|++
control|)
block|{
name|int
name|numDocs
init|=
name|atLeast
argument_list|(
literal|5
argument_list|)
decl_stmt|;
comment|//      System.out.println("[" + Thread.currentThread().getName() + "]: round=" + i + ", numDocs=" + numDocs);
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|numDocs
condition|;
name|j
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"doc-"
operator|+
name|docID
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"key"
argument_list|,
literal|"all"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
comment|// update key
comment|// add all fields with their current value
for|for
control|(
name|int
name|f
init|=
literal|0
init|;
name|f
operator|<
name|fieldValues
operator|.
name|length
condition|;
name|f
operator|++
control|)
block|{
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f"
operator|+
name|f
argument_list|,
name|fieldValues
index|[
name|f
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
operator|++
name|docID
expr_stmt|;
block|}
name|int
name|fieldIdx
init|=
name|random
operator|.
name|nextInt
argument_list|(
name|fieldValues
operator|.
name|length
argument_list|)
decl_stmt|;
name|String
name|updateField
init|=
literal|"f"
operator|+
name|fieldIdx
decl_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"key"
argument_list|,
literal|"all"
argument_list|)
argument_list|,
name|updateField
argument_list|,
operator|++
name|fieldValues
index|[
name|fieldIdx
index|]
argument_list|)
expr_stmt|;
comment|//      System.out.println("[" + Thread.currentThread().getName() + "]: updated field '" + updateField + "' to value " + fieldValues[fieldIdx]);
if|if
condition|(
name|random
operator|.
name|nextDouble
argument_list|()
operator|<
literal|0.2
condition|)
block|{
name|int
name|deleteDoc
init|=
name|random
operator|.
name|nextInt
argument_list|(
name|docID
argument_list|)
decl_stmt|;
comment|// might also delete an already deleted document, ok!
name|writer
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-"
operator|+
name|deleteDoc
argument_list|)
argument_list|)
expr_stmt|;
comment|//        System.out.println("[" + Thread.currentThread().getName() + "]: deleted document: doc-" + deleteDoc);
block|}
comment|// verify reader
if|if
condition|(
operator|!
name|isNRT
condition|)
block|{
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
comment|//      System.out.println("[" + Thread.currentThread().getName() + "]: reopen reader: " + reader);
name|DirectoryReader
name|newReader
init|=
name|DirectoryReader
operator|.
name|openIfChanged
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|newReader
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|=
name|newReader
expr_stmt|;
comment|//      System.out.println("[" + Thread.currentThread().getName() + "]: reopened reader: " + reader);
name|assertTrue
argument_list|(
name|reader
operator|.
name|numDocs
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|// we delete at most one document per round
for|for
control|(
name|LeafReaderContext
name|context
range|:
name|reader
operator|.
name|leaves
argument_list|()
control|)
block|{
name|LeafReader
name|r
init|=
name|context
operator|.
name|reader
argument_list|()
decl_stmt|;
comment|//        System.out.println(((SegmentReader) r).getSegmentName());
name|Bits
name|liveDocs
init|=
name|r
operator|.
name|getLiveDocs
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|field
init|=
literal|0
init|;
name|field
operator|<
name|fieldValues
operator|.
name|length
condition|;
name|field
operator|++
control|)
block|{
name|String
name|f
init|=
literal|"f"
operator|+
name|field
decl_stmt|;
name|NumericDocValues
name|ndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
name|f
argument_list|)
decl_stmt|;
name|Bits
name|docsWithField
init|=
name|r
operator|.
name|getDocsWithField
argument_list|(
name|f
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ndv
argument_list|)
expr_stmt|;
name|int
name|maxDoc
init|=
name|r
operator|.
name|maxDoc
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|doc
init|=
literal|0
init|;
name|doc
operator|<
name|maxDoc
condition|;
name|doc
operator|++
control|)
block|{
if|if
condition|(
name|liveDocs
operator|==
literal|null
operator|||
name|liveDocs
operator|.
name|get
argument_list|(
name|doc
argument_list|)
condition|)
block|{
comment|//              System.out.println("doc=" + (doc + context.docBase) + " f='" + f + "' vslue=" + ndv.get(doc));
name|assertTrue
argument_list|(
name|docsWithField
operator|.
name|get
argument_list|(
name|doc
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"invalid value for doc="
operator|+
name|doc
operator|+
literal|", field="
operator|+
name|f
operator|+
literal|", reader="
operator|+
name|r
argument_list|,
name|fieldValues
index|[
name|field
index|]
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
name|doc
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
comment|//      System.out.println();
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|IOUtils
operator|.
name|close
argument_list|(
name|reader
argument_list|,
name|dir
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateSegmentWithNoDocValues
specifier|public
name|void
name|testUpdateSegmentWithNoDocValues
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
comment|// prevent merges, otherwise by the time updates are applied
comment|// (writer.close()), the segments might have merged and that update becomes
comment|// legit.
name|conf
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
comment|// first segment with NDV
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"doc0"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"ndv"
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|doc
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"doc4"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
comment|// document without 'ndv' field
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// second segment with no NDV
name|doc
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"doc1"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|doc
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"doc2"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
comment|// document that isn't updated
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// update document in the first segment - should not affect docsWithField of
comment|// the document without NDV field
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc0"
argument_list|)
argument_list|,
literal|"ndv"
argument_list|,
literal|5L
argument_list|)
expr_stmt|;
comment|// update document in the second segment - field should be added and we should
comment|// be able to handle the other document correctly (e.g. no NPE)
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc1"
argument_list|)
argument_list|,
literal|"ndv"
argument_list|,
literal|5L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
for|for
control|(
name|LeafReaderContext
name|context
range|:
name|reader
operator|.
name|leaves
argument_list|()
control|)
block|{
name|LeafReader
name|r
init|=
name|context
operator|.
name|reader
argument_list|()
decl_stmt|;
name|NumericDocValues
name|ndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"ndv"
argument_list|)
decl_stmt|;
name|Bits
name|docsWithField
init|=
name|r
operator|.
name|getDocsWithField
argument_list|(
literal|"ndv"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|docsWithField
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsWithField
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|docsWithField
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateSegmentWithPostingButNoDocValues
specifier|public
name|void
name|testUpdateSegmentWithPostingButNoDocValues
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
comment|// prevent merges, otherwise by the time updates are applied
comment|// (writer.close()), the segments might have merged and that update becomes
comment|// legit.
name|conf
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
comment|// first segment with NDV
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"doc0"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"ndv"
argument_list|,
literal|"mock-value"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"ndv"
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// second segment with no NDV
name|doc
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"doc1"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"ndv"
argument_list|,
literal|"mock-value"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// update document in the second segment
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc1"
argument_list|)
argument_list|,
literal|"ndv"
argument_list|,
literal|5L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
for|for
control|(
name|LeafReaderContext
name|context
range|:
name|reader
operator|.
name|leaves
argument_list|()
control|)
block|{
name|LeafReader
name|r
init|=
name|context
operator|.
name|reader
argument_list|()
decl_stmt|;
name|NumericDocValues
name|ndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"ndv"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|r
operator|.
name|maxDoc
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
literal|5L
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateNumericDVFieldWithSameNameAsPostingField
specifier|public
name|void
name|testUpdateNumericDVFieldWithSameNameAsPostingField
parameter_list|()
throws|throws
name|Exception
block|{
comment|// this used to fail because FieldInfos.Builder neglected to update
comment|// globalFieldMaps.docValuesTypes map
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"f"
argument_list|,
literal|"mock-value"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f"
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"f"
argument_list|,
literal|"mock-value"
argument_list|)
argument_list|,
literal|"f"
argument_list|,
literal|17L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|r
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|NumericDocValues
name|ndv
init|=
name|r
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
operator|.
name|getNumericDocValues
argument_list|(
literal|"f"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|17
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testStressMultiThreading
specifier|public
name|void
name|testStressMultiThreading
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
comment|// create index
specifier|final
name|int
name|numFields
init|=
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|)
decl_stmt|;
specifier|final
name|int
name|numDocs
init|=
name|atLeast
argument_list|(
literal|2000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"doc"
operator|+
name|i
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|double
name|group
init|=
name|random
argument_list|()
operator|.
name|nextDouble
argument_list|()
decl_stmt|;
name|String
name|g
decl_stmt|;
if|if
condition|(
name|group
operator|<
literal|0.1
condition|)
name|g
operator|=
literal|"g0"
expr_stmt|;
elseif|else
if|if
condition|(
name|group
operator|<
literal|0.5
condition|)
name|g
operator|=
literal|"g1"
expr_stmt|;
elseif|else
if|if
condition|(
name|group
operator|<
literal|0.8
condition|)
name|g
operator|=
literal|"g2"
expr_stmt|;
else|else
name|g
operator|=
literal|"g3"
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"updKey"
argument_list|,
name|g
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|numFields
condition|;
name|j
operator|++
control|)
block|{
name|long
name|value
init|=
name|random
argument_list|()
operator|.
name|nextInt
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f"
operator|+
name|j
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"cf"
operator|+
name|j
argument_list|,
name|value
operator|*
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// control, always updated to f * 2
block|}
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
specifier|final
name|int
name|numThreads
init|=
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|()
argument_list|,
literal|3
argument_list|,
literal|6
argument_list|)
decl_stmt|;
specifier|final
name|CountDownLatch
name|done
init|=
operator|new
name|CountDownLatch
argument_list|(
name|numThreads
argument_list|)
decl_stmt|;
specifier|final
name|AtomicInteger
name|numUpdates
init|=
operator|new
name|AtomicInteger
argument_list|(
name|atLeast
argument_list|(
literal|100
argument_list|)
argument_list|)
decl_stmt|;
comment|// same thread updates a field as well as reopens
name|Thread
index|[]
name|threads
init|=
operator|new
name|Thread
index|[
name|numThreads
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|threads
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|threads
index|[
name|i
index|]
operator|=
operator|new
name|Thread
argument_list|(
literal|"UpdateThread-"
operator|+
name|i
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|DirectoryReader
name|reader
init|=
literal|null
decl_stmt|;
name|boolean
name|success
init|=
literal|false
decl_stmt|;
try|try
block|{
name|Random
name|random
init|=
name|random
argument_list|()
decl_stmt|;
while|while
condition|(
name|numUpdates
operator|.
name|getAndDecrement
argument_list|()
operator|>
literal|0
condition|)
block|{
name|double
name|group
init|=
name|random
operator|.
name|nextDouble
argument_list|()
decl_stmt|;
name|Term
name|t
decl_stmt|;
if|if
condition|(
name|group
operator|<
literal|0.1
condition|)
name|t
operator|=
operator|new
name|Term
argument_list|(
literal|"updKey"
argument_list|,
literal|"g0"
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|group
operator|<
literal|0.5
condition|)
name|t
operator|=
operator|new
name|Term
argument_list|(
literal|"updKey"
argument_list|,
literal|"g1"
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|group
operator|<
literal|0.8
condition|)
name|t
operator|=
operator|new
name|Term
argument_list|(
literal|"updKey"
argument_list|,
literal|"g2"
argument_list|)
expr_stmt|;
else|else
name|t
operator|=
operator|new
name|Term
argument_list|(
literal|"updKey"
argument_list|,
literal|"g3"
argument_list|)
expr_stmt|;
specifier|final
name|int
name|field
init|=
name|random
argument_list|()
operator|.
name|nextInt
argument_list|(
name|numFields
argument_list|)
decl_stmt|;
specifier|final
name|String
name|f
init|=
literal|"f"
operator|+
name|field
decl_stmt|;
specifier|final
name|String
name|cf
init|=
literal|"cf"
operator|+
name|field
decl_stmt|;
comment|//              System.out.println("[" + Thread.currentThread().getName() + "] numUpdates=" + numUpdates + " updateTerm=" + t + " field=" + field);
name|long
name|updValue
init|=
name|random
operator|.
name|nextInt
argument_list|()
decl_stmt|;
name|writer
operator|.
name|updateDocValues
argument_list|(
name|t
argument_list|,
operator|new
name|NumericDocValuesField
argument_list|(
name|f
argument_list|,
name|updValue
argument_list|)
argument_list|,
operator|new
name|NumericDocValuesField
argument_list|(
name|cf
argument_list|,
name|updValue
operator|*
literal|2
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|random
operator|.
name|nextDouble
argument_list|()
operator|<
literal|0.2
condition|)
block|{
comment|// delete a random document
name|int
name|doc
init|=
name|random
operator|.
name|nextInt
argument_list|(
name|numDocs
argument_list|)
decl_stmt|;
comment|//                System.out.println("[" + Thread.currentThread().getName() + "] deleteDoc=doc" + doc);
name|writer
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc"
operator|+
name|doc
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|random
operator|.
name|nextDouble
argument_list|()
operator|<
literal|0.05
condition|)
block|{
comment|// commit every 20 updates on average
comment|//                  System.out.println("[" + Thread.currentThread().getName() + "] commit");
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|random
operator|.
name|nextDouble
argument_list|()
operator|<
literal|0.1
condition|)
block|{
comment|// reopen NRT reader (apply updates), on average once every 10 updates
if|if
condition|(
name|reader
operator|==
literal|null
condition|)
block|{
comment|//                  System.out.println("[" + Thread.currentThread().getName() + "] open NRT");
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|//                  System.out.println("[" + Thread.currentThread().getName() + "] reopen NRT");
name|DirectoryReader
name|r2
init|=
name|DirectoryReader
operator|.
name|openIfChanged
argument_list|(
name|reader
argument_list|,
name|writer
argument_list|,
literal|true
argument_list|)
decl_stmt|;
if|if
condition|(
name|r2
operator|!=
literal|null
condition|)
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|=
name|r2
expr_stmt|;
block|}
block|}
block|}
block|}
comment|//            System.out.println("[" + Thread.currentThread().getName() + "] DONE");
name|success
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|reader
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
if|if
condition|(
name|success
condition|)
block|{
comment|// suppress this exception only if there was another exception
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
name|done
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
block|}
block|}
expr_stmt|;
block|}
for|for
control|(
name|Thread
name|t
range|:
name|threads
control|)
name|t
operator|.
name|start
argument_list|()
expr_stmt|;
name|done
operator|.
name|await
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
for|for
control|(
name|LeafReaderContext
name|context
range|:
name|reader
operator|.
name|leaves
argument_list|()
control|)
block|{
name|LeafReader
name|r
init|=
name|context
operator|.
name|reader
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numFields
condition|;
name|i
operator|++
control|)
block|{
name|NumericDocValues
name|ndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"f"
operator|+
name|i
argument_list|)
decl_stmt|;
name|NumericDocValues
name|control
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"cf"
operator|+
name|i
argument_list|)
decl_stmt|;
name|Bits
name|docsWithNdv
init|=
name|r
operator|.
name|getDocsWithField
argument_list|(
literal|"f"
operator|+
name|i
argument_list|)
decl_stmt|;
name|Bits
name|docsWithControl
init|=
name|r
operator|.
name|getDocsWithField
argument_list|(
literal|"cf"
operator|+
name|i
argument_list|)
decl_stmt|;
name|Bits
name|liveDocs
init|=
name|r
operator|.
name|getLiveDocs
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|r
operator|.
name|maxDoc
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
name|liveDocs
operator|==
literal|null
operator|||
name|liveDocs
operator|.
name|get
argument_list|(
name|j
argument_list|)
condition|)
block|{
name|assertTrue
argument_list|(
name|docsWithNdv
operator|.
name|get
argument_list|(
name|j
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsWithControl
operator|.
name|get
argument_list|(
name|j
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|control
operator|.
name|get
argument_list|(
name|j
argument_list|)
argument_list|,
name|ndv
operator|.
name|get
argument_list|(
name|j
argument_list|)
operator|*
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateDifferentDocsInDifferentGens
specifier|public
name|void
name|testUpdateDifferentDocsInDifferentGens
parameter_list|()
throws|throws
name|Exception
block|{
comment|// update same document multiple times across generations
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setMaxBufferedDocs
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
specifier|final
name|int
name|numDocs
init|=
name|atLeast
argument_list|(
literal|10
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"doc"
operator|+
name|i
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|long
name|value
init|=
name|random
argument_list|()
operator|.
name|nextInt
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f"
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"cf"
argument_list|,
name|value
operator|*
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
name|int
name|numGens
init|=
name|atLeast
argument_list|(
literal|5
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numGens
condition|;
name|i
operator|++
control|)
block|{
name|int
name|doc
init|=
name|random
argument_list|()
operator|.
name|nextInt
argument_list|(
name|numDocs
argument_list|)
decl_stmt|;
name|Term
name|t
init|=
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc"
operator|+
name|doc
argument_list|)
decl_stmt|;
name|long
name|value
init|=
name|random
argument_list|()
operator|.
name|nextLong
argument_list|()
decl_stmt|;
name|writer
operator|.
name|updateDocValues
argument_list|(
name|t
argument_list|,
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f"
argument_list|,
name|value
argument_list|)
argument_list|,
operator|new
name|NumericDocValuesField
argument_list|(
literal|"cf"
argument_list|,
name|value
operator|*
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|,
literal|true
argument_list|)
decl_stmt|;
for|for
control|(
name|LeafReaderContext
name|context
range|:
name|reader
operator|.
name|leaves
argument_list|()
control|)
block|{
name|LeafReader
name|r
init|=
name|context
operator|.
name|reader
argument_list|()
decl_stmt|;
name|NumericDocValues
name|fndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"f"
argument_list|)
decl_stmt|;
name|NumericDocValues
name|cfndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"cf"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|r
operator|.
name|maxDoc
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
name|assertEquals
argument_list|(
name|cfndv
operator|.
name|get
argument_list|(
name|j
argument_list|)
argument_list|,
name|fndv
operator|.
name|get
argument_list|(
name|j
argument_list|)
operator|*
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testChangeCodec
specifier|public
name|void
name|testChangeCodec
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
comment|// disable merges to simplify test assertions.
name|conf
operator|.
name|setCodec
argument_list|(
operator|new
name|AssertingCodec
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|DocValuesFormat
name|getDocValuesFormatForField
parameter_list|(
name|String
name|field
parameter_list|)
block|{
return|return
name|TestUtil
operator|.
name|getDefaultDocValuesFormat
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"d0"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f1"
argument_list|,
literal|5L
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f2"
argument_list|,
literal|13L
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// change format
name|conf
operator|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
comment|// disable merges to simplify test assertions.
name|conf
operator|.
name|setCodec
argument_list|(
operator|new
name|AssertingCodec
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|DocValuesFormat
name|getDocValuesFormatForField
parameter_list|(
name|String
name|field
parameter_list|)
block|{
return|return
operator|new
name|AssertingDocValuesFormat
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|writer
operator|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|doc
operator|=
operator|new
name|Document
argument_list|()
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"d1"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f1"
argument_list|,
literal|17L
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f2"
argument_list|,
literal|2L
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"d0"
argument_list|)
argument_list|,
literal|"f1"
argument_list|,
literal|12L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|LeafReader
name|r
init|=
name|SlowCompositeReaderWrapper
operator|.
name|wrap
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|NumericDocValues
name|f1
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"f1"
argument_list|)
decl_stmt|;
name|NumericDocValues
name|f2
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"f2"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|12L
argument_list|,
name|f1
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13L
argument_list|,
name|f2
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|17L
argument_list|,
name|f1
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|f2
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddIndexes
specifier|public
name|void
name|testAddIndexes
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir1
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir1
argument_list|,
name|conf
argument_list|)
decl_stmt|;
specifier|final
name|int
name|numDocs
init|=
name|atLeast
argument_list|(
literal|50
argument_list|)
decl_stmt|;
specifier|final
name|int
name|numTerms
init|=
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|()
argument_list|,
literal|1
argument_list|,
name|numDocs
operator|/
literal|5
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|randomTerms
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
while|while
condition|(
name|randomTerms
operator|.
name|size
argument_list|()
operator|<
name|numTerms
condition|)
block|{
name|randomTerms
operator|.
name|add
argument_list|(
name|TestUtil
operator|.
name|randomSimpleString
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// create first index
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
name|RandomPicks
operator|.
name|randomFrom
argument_list|(
name|random
argument_list|()
argument_list|,
name|randomTerms
argument_list|)
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"ndv"
argument_list|,
literal|4L
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"control"
argument_list|,
literal|8L
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
condition|)
block|{
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
comment|// update some docs to a random value
name|long
name|value
init|=
name|random
argument_list|()
operator|.
name|nextInt
argument_list|()
decl_stmt|;
name|Term
name|term
init|=
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
name|RandomPicks
operator|.
name|randomFrom
argument_list|(
name|random
argument_list|()
argument_list|,
name|randomTerms
argument_list|)
argument_list|)
decl_stmt|;
name|writer
operator|.
name|updateDocValues
argument_list|(
name|term
argument_list|,
operator|new
name|NumericDocValuesField
argument_list|(
literal|"ndv"
argument_list|,
name|value
argument_list|)
argument_list|,
operator|new
name|NumericDocValuesField
argument_list|(
literal|"control"
argument_list|,
name|value
operator|*
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Directory
name|dir2
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|conf
operator|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|=
operator|new
name|IndexWriter
argument_list|(
name|dir2
argument_list|,
name|conf
argument_list|)
expr_stmt|;
if|if
condition|(
name|random
argument_list|()
operator|.
name|nextBoolean
argument_list|()
condition|)
block|{
name|writer
operator|.
name|addIndexes
argument_list|(
name|dir1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir1
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addIndexes
argument_list|(
name|reader
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir2
argument_list|)
decl_stmt|;
for|for
control|(
name|LeafReaderContext
name|context
range|:
name|reader
operator|.
name|leaves
argument_list|()
control|)
block|{
name|LeafReader
name|r
init|=
name|context
operator|.
name|reader
argument_list|()
decl_stmt|;
name|NumericDocValues
name|ndv
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"ndv"
argument_list|)
decl_stmt|;
name|NumericDocValues
name|control
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"control"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|r
operator|.
name|maxDoc
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
name|ndv
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|*
literal|2
argument_list|,
name|control
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|IOUtils
operator|.
name|close
argument_list|(
name|dir1
argument_list|,
name|dir2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteUnusedUpdatesFiles
specifier|public
name|void
name|testDeleteUnusedUpdatesFiles
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
comment|// test explicitly needs files to always be actually deleted
if|if
condition|(
name|dir
operator|instanceof
name|MockDirectoryWrapper
condition|)
block|{
operator|(
operator|(
name|MockDirectoryWrapper
operator|)
name|dir
operator|)
operator|.
name|setEnableVirusScanner
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"d0"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f1"
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f2"
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
comment|// update each field twice to make sure all unneeded files are deleted
for|for
control|(
name|String
name|f
range|:
operator|new
name|String
index|[]
block|{
literal|"f1"
block|,
literal|"f2"
block|}
control|)
block|{
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"d0"
argument_list|)
argument_list|,
name|f
argument_list|,
literal|2L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|int
name|numFiles
init|=
name|dir
operator|.
name|listAll
argument_list|()
operator|.
name|length
decl_stmt|;
comment|// update again, number of files shouldn't change (old field's gen is
comment|// removed)
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"d0"
argument_list|)
argument_list|,
name|f
argument_list|,
literal|3L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|numFiles
argument_list|,
name|dir
operator|.
name|listAll
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTonsOfUpdates
specifier|public
name|void
name|testTonsOfUpdates
parameter_list|()
throws|throws
name|Exception
block|{
comment|// LUCENE-5248: make sure that when there are many updates, we don't use too much RAM
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
specifier|final
name|Random
name|random
init|=
name|random
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setRAMBufferSizeMB
argument_list|(
name|IndexWriterConfig
operator|.
name|DEFAULT_RAM_BUFFER_SIZE_MB
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMaxBufferedDocs
argument_list|(
name|IndexWriterConfig
operator|.
name|DISABLE_AUTO_FLUSH
argument_list|)
expr_stmt|;
comment|// don't flush by doc
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
comment|// test data: lots of documents (few 10Ks) and lots of update terms (few hundreds)
specifier|final
name|int
name|numDocs
init|=
name|atLeast
argument_list|(
literal|20000
argument_list|)
decl_stmt|;
specifier|final
name|int
name|numNumericFields
init|=
name|atLeast
argument_list|(
literal|5
argument_list|)
decl_stmt|;
specifier|final
name|int
name|numTerms
init|=
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|)
decl_stmt|;
comment|// terms should affect many docs
name|Set
argument_list|<
name|String
argument_list|>
name|updateTerms
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
while|while
condition|(
name|updateTerms
operator|.
name|size
argument_list|()
operator|<
name|numTerms
condition|)
block|{
name|updateTerms
operator|.
name|add
argument_list|(
name|TestUtil
operator|.
name|randomSimpleString
argument_list|(
name|random
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//    System.out.println("numDocs=" + numDocs + " numNumericFields=" + numNumericFields + " numTerms=" + numTerms);
comment|// build a large index with many NDV fields and update terms
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numDocs
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|int
name|numUpdateTerms
init|=
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|,
literal|1
argument_list|,
name|numTerms
operator|/
literal|10
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|numUpdateTerms
condition|;
name|j
operator|++
control|)
block|{
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"upd"
argument_list|,
name|RandomPicks
operator|.
name|randomFrom
argument_list|(
name|random
argument_list|,
name|updateTerms
argument_list|)
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|numNumericFields
condition|;
name|j
operator|++
control|)
block|{
name|long
name|val
init|=
name|random
operator|.
name|nextInt
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f"
operator|+
name|j
argument_list|,
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"cf"
operator|+
name|j
argument_list|,
name|val
operator|*
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// commit so there's something to apply to
comment|// set to flush every 2048 bytes (approximately every 12 updates), so we get
comment|// many flushes during numeric updates
name|writer
operator|.
name|getConfig
argument_list|()
operator|.
name|setRAMBufferSizeMB
argument_list|(
literal|2048.0
operator|/
literal|1024
operator|/
literal|1024
argument_list|)
expr_stmt|;
specifier|final
name|int
name|numUpdates
init|=
name|atLeast
argument_list|(
literal|100
argument_list|)
decl_stmt|;
comment|//    System.out.println("numUpdates=" + numUpdates);
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numUpdates
condition|;
name|i
operator|++
control|)
block|{
name|int
name|field
init|=
name|random
operator|.
name|nextInt
argument_list|(
name|numNumericFields
argument_list|)
decl_stmt|;
name|Term
name|updateTerm
init|=
operator|new
name|Term
argument_list|(
literal|"upd"
argument_list|,
name|RandomPicks
operator|.
name|randomFrom
argument_list|(
name|random
argument_list|,
name|updateTerms
argument_list|)
argument_list|)
decl_stmt|;
name|long
name|value
init|=
name|random
operator|.
name|nextInt
argument_list|()
decl_stmt|;
name|writer
operator|.
name|updateDocValues
argument_list|(
name|updateTerm
argument_list|,
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f"
operator|+
name|field
argument_list|,
name|value
argument_list|)
argument_list|,
operator|new
name|NumericDocValuesField
argument_list|(
literal|"cf"
operator|+
name|field
argument_list|,
name|value
operator|*
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
for|for
control|(
name|LeafReaderContext
name|context
range|:
name|reader
operator|.
name|leaves
argument_list|()
control|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numNumericFields
condition|;
name|i
operator|++
control|)
block|{
name|LeafReader
name|r
init|=
name|context
operator|.
name|reader
argument_list|()
decl_stmt|;
name|NumericDocValues
name|f
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"f"
operator|+
name|i
argument_list|)
decl_stmt|;
name|NumericDocValues
name|cf
init|=
name|r
operator|.
name|getNumericDocValues
argument_list|(
literal|"cf"
operator|+
name|i
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|r
operator|.
name|maxDoc
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
name|assertEquals
argument_list|(
literal|"reader="
operator|+
name|r
operator|+
literal|", field=f"
operator|+
name|i
operator|+
literal|", doc="
operator|+
name|j
argument_list|,
name|cf
operator|.
name|get
argument_list|(
name|j
argument_list|)
argument_list|,
name|f
operator|.
name|get
argument_list|(
name|j
argument_list|)
operator|*
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdatesOrder
specifier|public
name|void
name|testUpdatesOrder
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"upd"
argument_list|,
literal|"t1"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"upd"
argument_list|,
literal|"t2"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f1"
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f2"
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"upd"
argument_list|,
literal|"t1"
argument_list|)
argument_list|,
literal|"f1"
argument_list|,
literal|2L
argument_list|)
expr_stmt|;
comment|// update f1 to 2
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"upd"
argument_list|,
literal|"t1"
argument_list|)
argument_list|,
literal|"f2"
argument_list|,
literal|2L
argument_list|)
expr_stmt|;
comment|// update f2 to 2
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"upd"
argument_list|,
literal|"t2"
argument_list|)
argument_list|,
literal|"f1"
argument_list|,
literal|3L
argument_list|)
expr_stmt|;
comment|// update f1 to 3
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"upd"
argument_list|,
literal|"t2"
argument_list|)
argument_list|,
literal|"f2"
argument_list|,
literal|3L
argument_list|)
expr_stmt|;
comment|// update f2 to 3
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"upd"
argument_list|,
literal|"t1"
argument_list|)
argument_list|,
literal|"f1"
argument_list|,
literal|4L
argument_list|)
expr_stmt|;
comment|// update f1 to 4 (but not f2)
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
operator|.
name|getNumericDocValues
argument_list|(
literal|"f1"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
operator|.
name|getNumericDocValues
argument_list|(
literal|"f2"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateAllDeletedSegment
specifier|public
name|void
name|testUpdateAllDeletedSegment
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"doc"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f1"
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|writer
operator|.
name|deleteDocuments
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc"
argument_list|)
argument_list|)
expr_stmt|;
comment|// delete all docs in the first segment
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc"
argument_list|)
argument_list|,
literal|"f1"
argument_list|,
literal|2L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2L
argument_list|,
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
operator|.
name|getNumericDocValues
argument_list|(
literal|"f1"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUpdateTwoNonexistingTerms
specifier|public
name|void
name|testUpdateTwoNonexistingTerms
parameter_list|()
throws|throws
name|Exception
block|{
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|StringField
argument_list|(
literal|"id"
argument_list|,
literal|"doc"
argument_list|,
name|Store
operator|.
name|NO
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|NumericDocValuesField
argument_list|(
literal|"f1"
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
comment|// update w/ multiple nonexisting terms in same field
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"c"
argument_list|,
literal|"foo"
argument_list|)
argument_list|,
literal|"f1"
argument_list|,
literal|2L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"c"
argument_list|,
literal|"bar"
argument_list|)
argument_list|,
literal|"f1"
argument_list|,
literal|2L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
name|reader
operator|.
name|leaves
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|reader
argument_list|()
operator|.
name|getNumericDocValues
argument_list|(
literal|"f1"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIOContext
specifier|public
name|void
name|testIOContext
parameter_list|()
throws|throws
name|Exception
block|{
comment|// LUCENE-5591: make sure we pass an IOContext with an approximate
comment|// segmentSize in FlushInfo
name|Directory
name|dir
init|=
name|newDirectory
argument_list|()
decl_stmt|;
name|IndexWriterConfig
name|conf
init|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
comment|// we want a single large enough segment so that a doc-values update writes a large file
name|conf
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMaxBufferedDocs
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
comment|// manually flush
name|conf
operator|.
name|setRAMBufferSizeMB
argument_list|(
name|IndexWriterConfig
operator|.
name|DISABLE_AUTO_FLUSH
argument_list|)
expr_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|IndexWriter
argument_list|(
name|dir
argument_list|,
name|conf
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
block|{
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|commit
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|NRTCachingDirectory
name|cachingDir
init|=
operator|new
name|NRTCachingDirectory
argument_list|(
name|dir
argument_list|,
literal|100
argument_list|,
literal|1
operator|/
operator|(
literal|1024.
operator|*
literal|1024.
operator|)
argument_list|)
decl_stmt|;
name|conf
operator|=
name|newIndexWriterConfig
argument_list|(
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// we want a single large enough segment so that a doc-values update writes a large file
name|conf
operator|.
name|setMergePolicy
argument_list|(
name|NoMergePolicy
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setMaxBufferedDocs
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
comment|// manually flush
name|conf
operator|.
name|setRAMBufferSizeMB
argument_list|(
name|IndexWriterConfig
operator|.
name|DISABLE_AUTO_FLUSH
argument_list|)
expr_stmt|;
name|writer
operator|=
operator|new
name|IndexWriter
argument_list|(
name|cachingDir
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|writer
operator|.
name|updateNumericDocValue
argument_list|(
operator|new
name|Term
argument_list|(
literal|"id"
argument_list|,
literal|"doc-0"
argument_list|)
argument_list|,
literal|"val"
argument_list|,
literal|100L
argument_list|)
expr_stmt|;
name|DirectoryReader
name|reader
init|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|,
literal|true
argument_list|)
decl_stmt|;
comment|// flush
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cachingDir
operator|.
name|listCachedFiles
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|close
argument_list|(
name|reader
argument_list|,
name|writer
argument_list|,
name|cachingDir
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
