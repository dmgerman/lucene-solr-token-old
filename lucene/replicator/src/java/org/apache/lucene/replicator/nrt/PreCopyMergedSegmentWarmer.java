begin_unit
begin_package
DECL|package|org.apache.lucene.replicator.nrt
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|replicator
operator|.
name|nrt
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/** A merged segment warmer that pre-copies the merged segment out to  *  replicas before primary cuts over to the merged segment.  This  *  ensures that NRT reopen time on replicas is only in proportion to  *  flushed segment sizes, not merged segments. */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
operator|.
name|IndexReaderWarmer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|LeafReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SegmentCommitInfo
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SegmentReader
import|;
end_import
begin_comment
comment|// TODO: or ... replica node can do merging locally?  tricky to keep things in sync, when one node merges more slowly than others...
end_comment
begin_class
DECL|class|PreCopyMergedSegmentWarmer
class|class
name|PreCopyMergedSegmentWarmer
extends|extends
name|IndexReaderWarmer
block|{
DECL|field|primary
specifier|private
specifier|final
name|PrimaryNode
name|primary
decl_stmt|;
DECL|method|PreCopyMergedSegmentWarmer
specifier|public
name|PreCopyMergedSegmentWarmer
parameter_list|(
name|PrimaryNode
name|primary
parameter_list|)
block|{
name|this
operator|.
name|primary
operator|=
name|primary
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|warm
specifier|public
name|void
name|warm
parameter_list|(
name|LeafReader
name|reader
parameter_list|)
throws|throws
name|IOException
block|{
name|long
name|startNS
init|=
name|System
operator|.
name|nanoTime
argument_list|()
decl_stmt|;
specifier|final
name|SegmentCommitInfo
name|info
init|=
operator|(
operator|(
name|SegmentReader
operator|)
name|reader
operator|)
operator|.
name|getSegmentInfo
argument_list|()
decl_stmt|;
comment|//System.out.println("TEST: warm merged segment files " + info);
name|Map
argument_list|<
name|String
argument_list|,
name|FileMetaData
argument_list|>
name|filesMetaData
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|fileName
range|:
name|info
operator|.
name|files
argument_list|()
control|)
block|{
name|FileMetaData
name|metaData
init|=
name|primary
operator|.
name|readLocalFileMetaData
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
assert|assert
name|metaData
operator|!=
literal|null
assert|;
assert|assert
name|filesMetaData
operator|.
name|containsKey
argument_list|(
name|fileName
argument_list|)
operator|==
literal|false
assert|;
name|filesMetaData
operator|.
name|put
argument_list|(
name|fileName
argument_list|,
name|metaData
argument_list|)
expr_stmt|;
block|}
name|primary
operator|.
name|preCopyMergedSegmentFiles
argument_list|(
name|info
argument_list|,
name|filesMetaData
argument_list|)
expr_stmt|;
name|primary
operator|.
name|message
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"top: done warm merge "
operator|+
name|info
operator|+
literal|": took %.3f sec, %.1f MB"
argument_list|,
operator|(
name|System
operator|.
name|nanoTime
argument_list|()
operator|-
name|startNS
operator|)
operator|/
literal|1000000000.
argument_list|,
name|info
operator|.
name|sizeInBytes
argument_list|()
operator|/
literal|1024
operator|/
literal|1024.
argument_list|)
argument_list|)
expr_stmt|;
name|primary
operator|.
name|finishedMergedFiles
operator|.
name|addAll
argument_list|(
name|filesMetaData
operator|.
name|keySet
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
