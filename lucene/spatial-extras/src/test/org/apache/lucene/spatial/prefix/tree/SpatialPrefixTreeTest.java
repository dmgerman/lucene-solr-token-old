begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.spatial.prefix.tree
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|spatial
operator|.
name|prefix
operator|.
name|tree
package|;
end_package
begin_import
import|import
name|org
operator|.
name|locationtech
operator|.
name|spatial4j
operator|.
name|context
operator|.
name|SpatialContext
import|;
end_import
begin_import
import|import
name|org
operator|.
name|locationtech
operator|.
name|spatial4j
operator|.
name|shape
operator|.
name|Point
import|;
end_import
begin_import
import|import
name|org
operator|.
name|locationtech
operator|.
name|spatial4j
operator|.
name|shape
operator|.
name|Rectangle
import|;
end_import
begin_import
import|import
name|org
operator|.
name|locationtech
operator|.
name|spatial4j
operator|.
name|shape
operator|.
name|Shape
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
operator|.
name|Store
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|TextField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|ScoreDoc
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TopDocs
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|spatial
operator|.
name|SpatialTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|spatial
operator|.
name|prefix
operator|.
name|TermQueryPrefixTreeStrategy
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|spatial
operator|.
name|query
operator|.
name|SpatialArgs
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|spatial
operator|.
name|query
operator|.
name|SpatialOperation
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_class
DECL|class|SpatialPrefixTreeTest
specifier|public
class|class
name|SpatialPrefixTreeTest
extends|extends
name|SpatialTestCase
block|{
comment|//TODO plug in others and test them
DECL|field|ctx
specifier|private
name|SpatialContext
name|ctx
decl_stmt|;
DECL|field|trie
specifier|private
name|SpatialPrefixTree
name|trie
decl_stmt|;
annotation|@
name|Override
annotation|@
name|Before
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|ctx
operator|=
name|SpatialContext
operator|.
name|GEO
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCellTraverse
specifier|public
name|void
name|testCellTraverse
parameter_list|()
block|{
name|trie
operator|=
operator|new
name|GeohashPrefixTree
argument_list|(
name|ctx
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|Cell
name|prevC
init|=
literal|null
decl_stmt|;
name|Cell
name|c
init|=
name|trie
operator|.
name|getWorldCell
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|c
operator|.
name|getLevel
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ctx
operator|.
name|getWorldBounds
argument_list|()
argument_list|,
name|c
operator|.
name|getShape
argument_list|()
argument_list|)
expr_stmt|;
while|while
condition|(
name|c
operator|.
name|getLevel
argument_list|()
operator|<
name|trie
operator|.
name|getMaxLevels
argument_list|()
condition|)
block|{
name|prevC
operator|=
name|c
expr_stmt|;
name|List
argument_list|<
name|Cell
argument_list|>
name|subCells
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|CellIterator
name|subCellsIter
init|=
name|c
operator|.
name|getNextLevelCells
argument_list|(
literal|null
argument_list|)
decl_stmt|;
while|while
condition|(
name|subCellsIter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|subCells
operator|.
name|add
argument_list|(
name|subCellsIter
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|c
operator|=
name|subCells
operator|.
name|get
argument_list|(
name|random
argument_list|()
operator|.
name|nextInt
argument_list|(
name|subCells
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|prevC
operator|.
name|getLevel
argument_list|()
operator|+
literal|1
argument_list|,
name|c
operator|.
name|getLevel
argument_list|()
argument_list|)
expr_stmt|;
name|Rectangle
name|prevNShape
init|=
operator|(
name|Rectangle
operator|)
name|prevC
operator|.
name|getShape
argument_list|()
decl_stmt|;
name|Shape
name|s
init|=
name|c
operator|.
name|getShape
argument_list|()
decl_stmt|;
name|Rectangle
name|sbox
init|=
name|s
operator|.
name|getBoundingBox
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|prevNShape
operator|.
name|getWidth
argument_list|()
operator|>
name|sbox
operator|.
name|getWidth
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|prevNShape
operator|.
name|getHeight
argument_list|()
operator|>
name|sbox
operator|.
name|getHeight
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * A PrefixTree pruning optimization gone bad, applicable when optimize=true.    * See<a href="https://issues.apache.org/jira/browse/LUCENE-4770">LUCENE-4770</a>.    */
annotation|@
name|Test
DECL|method|testBadPrefixTreePrune
specifier|public
name|void
name|testBadPrefixTreePrune
parameter_list|()
throws|throws
name|Exception
block|{
name|trie
operator|=
operator|new
name|QuadPrefixTree
argument_list|(
name|ctx
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|TermQueryPrefixTreeStrategy
name|strategy
init|=
operator|new
name|TermQueryPrefixTreeStrategy
argument_list|(
name|trie
argument_list|,
literal|"geo"
argument_list|)
decl_stmt|;
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|TextField
argument_list|(
literal|"id"
argument_list|,
literal|"1"
argument_list|,
name|Store
operator|.
name|YES
argument_list|)
argument_list|)
expr_stmt|;
name|Shape
name|area
init|=
name|ctx
operator|.
name|makeRectangle
argument_list|(
operator|-
literal|122.82
argument_list|,
operator|-
literal|122.78
argument_list|,
literal|48.54
argument_list|,
literal|48.56
argument_list|)
decl_stmt|;
name|Field
index|[]
name|fields
init|=
name|strategy
operator|.
name|createIndexableFields
argument_list|(
name|area
argument_list|,
literal|0.025
argument_list|)
decl_stmt|;
for|for
control|(
name|Field
name|field
range|:
name|fields
control|)
block|{
name|doc
operator|.
name|add
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|Point
name|upperleft
init|=
name|ctx
operator|.
name|makePoint
argument_list|(
operator|-
literal|122.88
argument_list|,
literal|48.54
argument_list|)
decl_stmt|;
name|Point
name|lowerright
init|=
name|ctx
operator|.
name|makePoint
argument_list|(
operator|-
literal|122.82
argument_list|,
literal|48.62
argument_list|)
decl_stmt|;
name|Query
name|query
init|=
name|strategy
operator|.
name|makeQuery
argument_list|(
operator|new
name|SpatialArgs
argument_list|(
name|SpatialOperation
operator|.
name|Intersects
argument_list|,
name|ctx
operator|.
name|makeRectangle
argument_list|(
name|upperleft
argument_list|,
name|lowerright
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|commit
argument_list|()
expr_stmt|;
name|TopDocs
name|search
init|=
name|indexSearcher
operator|.
name|search
argument_list|(
name|query
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|ScoreDoc
index|[]
name|scoreDocs
init|=
name|search
operator|.
name|scoreDocs
decl_stmt|;
for|for
control|(
name|ScoreDoc
name|scoreDoc
range|:
name|scoreDocs
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|indexSearcher
operator|.
name|doc
argument_list|(
name|scoreDoc
operator|.
name|doc
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|search
operator|.
name|totalHits
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
