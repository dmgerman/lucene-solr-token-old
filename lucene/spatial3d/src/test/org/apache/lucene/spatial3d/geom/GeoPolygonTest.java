begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.spatial3d.geom
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|spatial3d
operator|.
name|geom
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|BitSet
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import
begin_class
DECL|class|GeoPolygonTest
specifier|public
class|class
name|GeoPolygonTest
block|{
annotation|@
name|Test
DECL|method|testPolygonPointFiltering
specifier|public
name|void
name|testPolygonPointFiltering
parameter_list|()
block|{
specifier|final
name|GeoPoint
name|point1
init|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|1.0
argument_list|,
literal|2.0
argument_list|)
decl_stmt|;
specifier|final
name|GeoPoint
name|point2
init|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|0.5
argument_list|,
literal|2.5
argument_list|)
decl_stmt|;
specifier|final
name|GeoPoint
name|point3
init|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
decl_stmt|;
specifier|final
name|GeoPoint
name|point4
init|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
name|Math
operator|.
name|PI
operator|*
literal|0.5
argument_list|,
literal|0.0
argument_list|)
decl_stmt|;
specifier|final
name|GeoPoint
name|point5
init|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|1.0
argument_list|,
literal|0.0
argument_list|)
decl_stmt|;
comment|// First: duplicate points in the middle
block|{
specifier|final
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|originalPoints
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point1
argument_list|)
expr_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point2
argument_list|)
expr_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point2
argument_list|)
expr_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point3
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|filteredPoints
init|=
name|GeoPolygonFactory
operator|.
name|filterEdges
argument_list|(
name|GeoPolygonFactory
operator|.
name|filterPoints
argument_list|(
name|originalPoints
argument_list|)
argument_list|,
literal|0.0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|filteredPoints
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|point1
argument_list|,
name|filteredPoints
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|point2
argument_list|,
name|filteredPoints
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|point3
argument_list|,
name|filteredPoints
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Next, duplicate points at the beginning
block|{
specifier|final
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|originalPoints
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point2
argument_list|)
expr_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point1
argument_list|)
expr_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point3
argument_list|)
expr_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point2
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|filteredPoints
init|=
name|GeoPolygonFactory
operator|.
name|filterEdges
argument_list|(
name|GeoPolygonFactory
operator|.
name|filterPoints
argument_list|(
name|originalPoints
argument_list|)
argument_list|,
literal|0.0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|filteredPoints
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|point2
argument_list|,
name|filteredPoints
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|point1
argument_list|,
name|filteredPoints
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|point3
argument_list|,
name|filteredPoints
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Coplanar point removal
block|{
specifier|final
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|originalPoints
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point1
argument_list|)
expr_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point3
argument_list|)
expr_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point4
argument_list|)
expr_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point5
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|filteredPoints
init|=
name|GeoPolygonFactory
operator|.
name|filterEdges
argument_list|(
name|GeoPolygonFactory
operator|.
name|filterPoints
argument_list|(
name|originalPoints
argument_list|)
argument_list|,
literal|0.0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|filteredPoints
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|point1
argument_list|,
name|filteredPoints
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|point3
argument_list|,
name|filteredPoints
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|point5
argument_list|,
name|filteredPoints
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Over the boundary
block|{
specifier|final
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|originalPoints
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point5
argument_list|)
expr_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point1
argument_list|)
expr_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point3
argument_list|)
expr_stmt|;
name|originalPoints
operator|.
name|add
argument_list|(
name|point4
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|filteredPoints
init|=
name|GeoPolygonFactory
operator|.
name|filterEdges
argument_list|(
name|GeoPolygonFactory
operator|.
name|filterPoints
argument_list|(
name|originalPoints
argument_list|)
argument_list|,
literal|0.0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|filteredPoints
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|point5
argument_list|,
name|filteredPoints
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|point1
argument_list|,
name|filteredPoints
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|point3
argument_list|,
name|filteredPoints
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testPolygonClockwise
specifier|public
name|void
name|testPolygonClockwise
parameter_list|()
block|{
name|GeoPolygon
name|c
decl_stmt|;
name|GeoPoint
name|gp
decl_stmt|;
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|points
decl_stmt|;
name|List
argument_list|<
name|GeoPolygonFactory
operator|.
name|PolygonDescription
argument_list|>
name|shapes
decl_stmt|;
comment|// Points go counterclockwise, so
name|points
operator|=
operator|new
name|ArrayList
argument_list|<
name|GeoPoint
argument_list|>
argument_list|()
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.1
argument_list|,
operator|-
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.6
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.1
argument_list|,
operator|-
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.4
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|=
name|GeoPolygonFactory
operator|.
name|makeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|points
argument_list|)
expr_stmt|;
comment|//System.out.println(c);
comment|// Middle point should NOT be within!!
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|!
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|shapes
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|shapes
operator|.
name|add
argument_list|(
operator|new
name|GeoPolygonFactory
operator|.
name|PolygonDescription
argument_list|(
name|points
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|=
name|GeoPolygonFactory
operator|.
name|makeLargeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|shapes
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|!
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
comment|// Now, go clockwise
name|points
operator|=
operator|new
name|ArrayList
argument_list|<
name|GeoPoint
argument_list|>
argument_list|()
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.4
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.1
argument_list|,
operator|-
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.6
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.1
argument_list|,
operator|-
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|=
name|GeoPolygonFactory
operator|.
name|makeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|points
argument_list|)
expr_stmt|;
comment|//System.out.println(c);
comment|// Middle point should be within!!
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|shapes
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|shapes
operator|.
name|add
argument_list|(
operator|new
name|GeoPolygonFactory
operator|.
name|PolygonDescription
argument_list|(
name|points
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|=
name|GeoPolygonFactory
operator|.
name|makeLargeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|shapes
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPolygonIntersects
specifier|public
name|void
name|testPolygonIntersects
parameter_list|()
block|{
name|GeoPolygon
name|c
decl_stmt|;
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|points
decl_stmt|;
name|List
argument_list|<
name|GeoPolygonFactory
operator|.
name|PolygonDescription
argument_list|>
name|shapes
decl_stmt|;
name|XYZBounds
name|xyzBounds
decl_stmt|;
name|XYZSolid
name|xyzSolid
decl_stmt|;
name|points
operator|=
operator|new
name|ArrayList
argument_list|<
name|GeoPoint
argument_list|>
argument_list|()
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.4
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.1
argument_list|,
operator|-
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.6
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.1
argument_list|,
operator|-
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|=
name|GeoPolygonFactory
operator|.
name|makeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|points
argument_list|)
expr_stmt|;
name|xyzBounds
operator|=
operator|new
name|XYZBounds
argument_list|()
expr_stmt|;
name|c
operator|.
name|getBounds
argument_list|(
name|xyzBounds
argument_list|)
expr_stmt|;
name|xyzSolid
operator|=
name|XYZSolidFactory
operator|.
name|makeXYZSolid
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|xyzBounds
operator|.
name|getMinimumX
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumX
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMinimumY
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumY
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMinimumZ
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumZ
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|GeoArea
operator|.
name|WITHIN
argument_list|,
name|xyzSolid
operator|.
name|getRelationship
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|xyzSolid
operator|=
name|XYZSolidFactory
operator|.
name|makeXYZSolid
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|xyzBounds
operator|.
name|getMinimumX
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMaximumX
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMinimumY
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMaximumY
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMinimumZ
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMaximumZ
argument_list|()
operator|-
literal|0.01
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|GeoArea
operator|.
name|OVERLAPS
argument_list|,
name|xyzSolid
operator|.
name|getRelationship
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|xyzSolid
operator|=
name|XYZSolidFactory
operator|.
name|makeXYZSolid
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|xyzBounds
operator|.
name|getMinimumY
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumY
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMinimumZ
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumZ
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMinimumX
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumX
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|GeoArea
operator|.
name|DISJOINT
argument_list|,
name|xyzSolid
operator|.
name|getRelationship
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|shapes
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|shapes
operator|.
name|add
argument_list|(
operator|new
name|GeoPolygonFactory
operator|.
name|PolygonDescription
argument_list|(
name|points
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|=
name|GeoPolygonFactory
operator|.
name|makeLargeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|shapes
argument_list|)
expr_stmt|;
comment|// Same bounds should work
name|xyzSolid
operator|=
name|XYZSolidFactory
operator|.
name|makeXYZSolid
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|xyzBounds
operator|.
name|getMinimumX
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumX
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMinimumY
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumY
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMinimumZ
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumZ
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|GeoArea
operator|.
name|WITHIN
argument_list|,
name|xyzSolid
operator|.
name|getRelationship
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|xyzSolid
operator|=
name|XYZSolidFactory
operator|.
name|makeXYZSolid
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|xyzBounds
operator|.
name|getMinimumX
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMaximumX
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMinimumY
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMaximumY
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMinimumZ
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMaximumZ
argument_list|()
operator|-
literal|0.01
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|GeoArea
operator|.
name|OVERLAPS
argument_list|,
name|xyzSolid
operator|.
name|getRelationship
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|xyzSolid
operator|=
name|XYZSolidFactory
operator|.
name|makeXYZSolid
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|xyzBounds
operator|.
name|getMinimumY
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumY
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMinimumZ
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumZ
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMinimumX
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumX
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|GeoArea
operator|.
name|DISJOINT
argument_list|,
name|xyzSolid
operator|.
name|getRelationship
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
comment|// Bounds we obtain from the large polygon also should work.
name|xyzBounds
operator|=
operator|new
name|XYZBounds
argument_list|()
expr_stmt|;
name|c
operator|.
name|getBounds
argument_list|(
name|xyzBounds
argument_list|)
expr_stmt|;
name|xyzSolid
operator|=
name|XYZSolidFactory
operator|.
name|makeXYZSolid
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|xyzBounds
operator|.
name|getMinimumX
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumX
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMinimumY
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumY
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMinimumZ
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumZ
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|GeoArea
operator|.
name|WITHIN
argument_list|,
name|xyzSolid
operator|.
name|getRelationship
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|xyzSolid
operator|=
name|XYZSolidFactory
operator|.
name|makeXYZSolid
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|xyzBounds
operator|.
name|getMinimumX
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMaximumX
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMinimumY
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMaximumY
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMinimumZ
argument_list|()
operator|-
literal|0.01
argument_list|,
name|xyzBounds
operator|.
name|getMaximumZ
argument_list|()
operator|-
literal|0.01
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|GeoArea
operator|.
name|OVERLAPS
argument_list|,
name|xyzSolid
operator|.
name|getRelationship
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|xyzSolid
operator|=
name|XYZSolidFactory
operator|.
name|makeXYZSolid
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|xyzBounds
operator|.
name|getMinimumY
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumY
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMinimumZ
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumZ
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMinimumX
argument_list|()
argument_list|,
name|xyzBounds
operator|.
name|getMaximumX
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|GeoArea
operator|.
name|DISJOINT
argument_list|,
name|xyzSolid
operator|.
name|getRelationship
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPolygonPointWithin
specifier|public
name|void
name|testPolygonPointWithin
parameter_list|()
block|{
name|GeoPolygon
name|c
decl_stmt|;
name|GeoPoint
name|gp
decl_stmt|;
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|points
decl_stmt|;
name|List
argument_list|<
name|GeoPolygonFactory
operator|.
name|PolygonDescription
argument_list|>
name|shapes
decl_stmt|;
name|points
operator|=
operator|new
name|ArrayList
argument_list|<
name|GeoPoint
argument_list|>
argument_list|()
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.4
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.1
argument_list|,
operator|-
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.6
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.1
argument_list|,
operator|-
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|=
name|GeoPolygonFactory
operator|.
name|makeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|points
argument_list|)
expr_stmt|;
comment|// Sample some points within
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.55
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.45
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.05
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.05
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
comment|// Sample some nearby points outside
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.65
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.35
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.15
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.15
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
comment|// Random points outside
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|Math
operator|.
name|PI
operator|*
literal|0.5
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
name|Math
operator|.
name|PI
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
comment|// Now, same thing for large polygon
name|shapes
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|shapes
operator|.
name|add
argument_list|(
operator|new
name|GeoPolygonFactory
operator|.
name|PolygonDescription
argument_list|(
name|points
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|=
name|GeoPolygonFactory
operator|.
name|makeLargeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|shapes
argument_list|)
expr_stmt|;
comment|// Sample some points within
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.45
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.55
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.05
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.05
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
comment|// Sample some nearby points outside
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.65
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.35
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.15
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.15
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
comment|// Random points outside
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|Math
operator|.
name|PI
operator|*
literal|0.5
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
name|Math
operator|.
name|PI
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
comment|// Next bunch of small polygon points
name|points
operator|=
operator|new
name|ArrayList
argument_list|<
name|GeoPoint
argument_list|>
argument_list|()
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.4
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.1
argument_list|,
operator|-
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.01
argument_list|,
operator|-
literal|0.6
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.1
argument_list|,
operator|-
literal|0.7
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.8
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.1
argument_list|,
operator|-
literal|0.7
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.01
argument_list|,
operator|-
literal|0.6
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.1
argument_list|,
operator|-
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
comment|/*         System.out.println("Points: ");         for (GeoPoint p : points) {             System.out.println(" "+p);         }         */
name|c
operator|=
name|GeoPolygonFactory
operator|.
name|makeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|points
argument_list|)
expr_stmt|;
comment|// Sample some points within
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.55
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.45
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.05
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.05
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.7
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
comment|// Sample some nearby points outside
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.35
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.15
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.15
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
comment|// Random points outside
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|Math
operator|.
name|PI
operator|*
literal|0.5
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
name|Math
operator|.
name|PI
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
comment|// Now, same thing for large polygon
name|shapes
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|shapes
operator|.
name|add
argument_list|(
operator|new
name|GeoPolygonFactory
operator|.
name|PolygonDescription
argument_list|(
name|points
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|=
name|GeoPolygonFactory
operator|.
name|makeLargeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|shapes
argument_list|)
expr_stmt|;
comment|// Sample some points within
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.55
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.45
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.05
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.05
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.7
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
comment|// Sample some nearby points outside
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.35
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.15
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.15
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
comment|// Random points outside
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|Math
operator|.
name|PI
operator|*
literal|0.5
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
name|gp
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
name|Math
operator|.
name|PI
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|gp
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPolygonBounds
specifier|public
name|void
name|testPolygonBounds
parameter_list|()
block|{
name|GeoMembershipShape
name|c
decl_stmt|;
name|LatLonBounds
name|b
decl_stmt|;
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|points
decl_stmt|;
name|XYZBounds
name|xyzb
decl_stmt|;
name|GeoPoint
name|point
decl_stmt|;
name|GeoArea
name|area
decl_stmt|;
comment|// BKD failure
name|points
operator|=
operator|new
name|ArrayList
argument_list|<
name|GeoPoint
argument_list|>
argument_list|()
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
operator|-
literal|0.36716183577912814
argument_list|,
literal|1.4836349969188696
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|0.7846038240742979
argument_list|,
operator|-
literal|0.02743348424931823
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
operator|-
literal|0.7376479402362607
argument_list|,
operator|-
literal|0.5072961758807019
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
operator|-
literal|0.3760415907667887
argument_list|,
literal|1.4970455334565513
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|=
name|GeoPolygonFactory
operator|.
name|makeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
name|points
argument_list|)
expr_stmt|;
name|point
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
operator|-
literal|0.01580760332365284
argument_list|,
operator|-
literal|0.03956004622490505
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|point
argument_list|)
argument_list|)
expr_stmt|;
name|xyzb
operator|=
operator|new
name|XYZBounds
argument_list|()
expr_stmt|;
name|c
operator|.
name|getBounds
argument_list|(
name|xyzb
argument_list|)
expr_stmt|;
name|area
operator|=
name|GeoAreaFactory
operator|.
name|makeGeoArea
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
name|xyzb
operator|.
name|getMinimumX
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMaximumX
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMinimumY
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMaximumY
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMinimumZ
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMaximumZ
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|area
operator|.
name|isWithin
argument_list|(
name|point
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|=
operator|new
name|ArrayList
argument_list|<
name|GeoPoint
argument_list|>
argument_list|()
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.4
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.1
argument_list|,
operator|-
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|0.6
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
operator|-
literal|0.1
argument_list|,
operator|-
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|=
name|GeoPolygonFactory
operator|.
name|makeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|SPHERE
argument_list|,
name|points
argument_list|)
expr_stmt|;
name|b
operator|=
operator|new
name|LatLonBounds
argument_list|()
expr_stmt|;
name|c
operator|.
name|getBounds
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|b
operator|.
name|checkNoLongitudeBound
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|b
operator|.
name|checkNoTopLatitudeBound
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|b
operator|.
name|checkNoBottomLatitudeBound
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|0.6
argument_list|,
name|b
operator|.
name|getLeftLongitude
argument_list|()
argument_list|,
literal|0.000001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|0.4
argument_list|,
name|b
operator|.
name|getRightLongitude
argument_list|()
argument_list|,
literal|0.000001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|0.1
argument_list|,
name|b
operator|.
name|getMinLatitude
argument_list|()
argument_list|,
literal|0.000001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0.1
argument_list|,
name|b
operator|.
name|getMaxLatitude
argument_list|()
argument_list|,
literal|0.000001
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPolygonBoundsCase1
specifier|public
name|void
name|testPolygonBoundsCase1
parameter_list|()
block|{
name|GeoPolygon
name|c
decl_stmt|;
name|LatLonBounds
name|b
decl_stmt|;
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|points
decl_stmt|;
name|XYZBounds
name|xyzb
decl_stmt|;
name|GeoPoint
name|point1
decl_stmt|;
name|GeoPoint
name|point2
decl_stmt|;
name|GeoArea
name|area
decl_stmt|;
comment|// Build the polygon
name|points
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|0.7769776943105245
argument_list|,
operator|-
literal|2.157536559188766
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
operator|-
literal|0.9796549195552824
argument_list|,
operator|-
literal|0.25078026625235256
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|0.17644522781457245
argument_list|,
literal|2.4225312555674967
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
operator|-
literal|1.4459804612164617
argument_list|,
operator|-
literal|1.2970934639728127
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|=
name|GeoPolygonFactory
operator|.
name|makeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
name|points
argument_list|)
expr_stmt|;
comment|// GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=
comment|// [[lat=0.17644522781457245, lon=2.4225312555674967],
comment|//  [lat=-1.4459804612164617, lon=-1.2970934639728127],
comment|// [lat=0.7769776943105245, lon=-2.157536559188766]]},
comment|// GeoConcavePolygon: {planetmodel=PlanetModel.WGS84, points=
comment|// [[lat=-0.9796549195552824, lon=-0.25078026625235256],
comment|//  [lat=0.17644522781457245, lon=2.4225312555674967],
comment|//  [lat=0.7769776943105245, lon=-2.157536559188766]]}]}
name|point1
operator|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
operator|-
literal|1.2013743680763862
argument_list|,
literal|0.48458963747230094
argument_list|)
expr_stmt|;
name|point2
operator|=
operator|new
name|GeoPoint
argument_list|(
literal|0.3189285805649921
argument_list|,
literal|0.16790264636909197
argument_list|,
operator|-
literal|0.9308557496413026
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|point1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|point2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Now try bounds
name|xyzb
operator|=
operator|new
name|XYZBounds
argument_list|()
expr_stmt|;
name|c
operator|.
name|getBounds
argument_list|(
name|xyzb
argument_list|)
expr_stmt|;
name|area
operator|=
name|GeoAreaFactory
operator|.
name|makeGeoArea
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
name|xyzb
operator|.
name|getMinimumX
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMaximumX
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMinimumY
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMaximumY
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMinimumZ
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMaximumZ
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|area
operator|.
name|isWithin
argument_list|(
name|point1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|area
operator|.
name|isWithin
argument_list|(
name|point2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGeoPolygonBoundsCase2
specifier|public
name|void
name|testGeoPolygonBoundsCase2
parameter_list|()
block|{
comment|// [junit4]   1> TEST: iter=23 shape=GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=
comment|// [[lat=0.014071770744627236, lon=0.011030818292803128],
comment|//  [lat=0.006772117088906782, lon=-0.0012531892445234592],
comment|//  [lat=0.0022201615609504792, lon=0.005941293187389326]]}, GeoConcavePolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=
comment|// [[lat=-0.005507100238396111, lon=-0.008487706131259667],
comment|//  [lat=0.014071770744627236, lon=0.011030818292803128],
comment|//  [lat=0.0022201615609504792, lon=0.005941293187389326]]}]}
name|PlanetModel
name|pm
init|=
operator|new
name|PlanetModel
argument_list|(
literal|0.7563871189161702
argument_list|,
literal|1.2436128810838298
argument_list|)
decl_stmt|;
comment|// Build the polygon
name|GeoCompositeMembershipShape
name|c
init|=
operator|new
name|GeoCompositeMembershipShape
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|points1
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|points1
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|pm
argument_list|,
literal|0.014071770744627236
argument_list|,
literal|0.011030818292803128
argument_list|)
argument_list|)
expr_stmt|;
name|points1
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|pm
argument_list|,
literal|0.006772117088906782
argument_list|,
operator|-
literal|0.0012531892445234592
argument_list|)
argument_list|)
expr_stmt|;
name|points1
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|pm
argument_list|,
literal|0.0022201615609504792
argument_list|,
literal|0.005941293187389326
argument_list|)
argument_list|)
expr_stmt|;
name|BitSet
name|p1bits
init|=
operator|new
name|BitSet
argument_list|()
decl_stmt|;
name|c
operator|.
name|addShape
argument_list|(
operator|new
name|GeoConvexPolygon
argument_list|(
name|pm
argument_list|,
name|points1
argument_list|,
name|p1bits
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|points2
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|points2
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|pm
argument_list|,
operator|-
literal|0.005507100238396111
argument_list|,
operator|-
literal|0.008487706131259667
argument_list|)
argument_list|)
expr_stmt|;
name|points2
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|pm
argument_list|,
literal|0.014071770744627236
argument_list|,
literal|0.011030818292803128
argument_list|)
argument_list|)
expr_stmt|;
name|points2
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|pm
argument_list|,
literal|0.0022201615609504792
argument_list|,
literal|0.005941293187389326
argument_list|)
argument_list|)
expr_stmt|;
name|BitSet
name|p2bits
init|=
operator|new
name|BitSet
argument_list|()
decl_stmt|;
name|p2bits
operator|.
name|set
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|c
operator|.
name|addShape
argument_list|(
operator|new
name|GeoConcavePolygon
argument_list|(
name|pm
argument_list|,
name|points2
argument_list|,
name|p2bits
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
comment|//System.out.println(c);
comment|// [junit4]   1>   point=[lat=0.003540694517552105, lon=-9.99517927901697E-4]
comment|// [junit4]   1>   quantized=[X=0.7563849869428783, Y=-7.560204674780763E-4, Z=0.0026781405884151086]
name|GeoPoint
name|point
init|=
operator|new
name|GeoPoint
argument_list|(
name|pm
argument_list|,
literal|0.003540694517552105
argument_list|,
operator|-
literal|9.99517927901697E
operator|-
literal|4
argument_list|)
decl_stmt|;
name|GeoPoint
name|pointQuantized
init|=
operator|new
name|GeoPoint
argument_list|(
literal|0.7563849869428783
argument_list|,
operator|-
literal|7.560204674780763E
operator|-
literal|4
argument_list|,
literal|0.0026781405884151086
argument_list|)
decl_stmt|;
comment|// Now try bounds
name|XYZBounds
name|xyzb
init|=
operator|new
name|XYZBounds
argument_list|()
decl_stmt|;
name|c
operator|.
name|getBounds
argument_list|(
name|xyzb
argument_list|)
expr_stmt|;
name|GeoArea
name|area
init|=
name|GeoAreaFactory
operator|.
name|makeGeoArea
argument_list|(
name|pm
argument_list|,
name|xyzb
operator|.
name|getMinimumX
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMaximumX
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMinimumY
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMaximumY
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMinimumZ
argument_list|()
argument_list|,
name|xyzb
operator|.
name|getMaximumZ
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|point
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c
operator|.
name|isWithin
argument_list|(
name|pointQuantized
argument_list|)
argument_list|)
expr_stmt|;
comment|// This fails!!
name|assertTrue
argument_list|(
name|area
operator|.
name|isWithin
argument_list|(
name|point
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|area
operator|.
name|isWithin
argument_list|(
name|pointQuantized
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGeoConcaveRelationshipCase1
specifier|public
name|void
name|testGeoConcaveRelationshipCase1
parameter_list|()
block|{
comment|/*    [junit4]   1> doc=906 matched but should not    [junit4]   1>   point=[lat=-0.9825762558001477, lon=2.4832136904725273]    [junit4]   1>   quantized=[X=-0.4505446160475436, Y=0.34850109186970535, Z=-0.8539966368663765]  doc=906 added here:     [junit4]   1>   cycle: cell=107836 parentCellID=107835 x: -1147288468 TO -742350917, y: -1609508490 TO 1609508490, z: -2147483647 TO 2147483647, splits: 3 queue.size()=1    [junit4]   1>     minx=-0.6107484000858642 maxx=-0.39518364125756916 miny=-0.8568069517709872 maxy=0.8568069517709872 minz=-1.1431930485939341 maxz=1.1431930485939341    [junit4]   1>     GeoArea.CONTAINS: now addAll  shape:    [junit4]   1> TEST: iter=18 shape=GeoCompositeMembershipShape: {[GeoConvexPolygon: {    planetmodel=PlanetModel(ab=0.8568069516722363 c=1.1431930483277637), points=    [[lat=1.1577814487635816, lon=1.6283601832010004],    [lat=0.6664570999069251, lon=2.0855825542851574],    [lat=-0.23953537010974632, lon=1.8498724094352876]]}, GeoConcavePolygon: {planetmodel=PlanetModel(ab=0.8568069516722363 c=1.1431930483277637), points=    [[lat=1.1577814487635816, lon=1.6283601832010004],    [lat=-0.23953537010974632, lon=1.8498724094352876],    [lat=-1.1766904875978805, lon=-2.1346828411344436]]}]}     */
name|PlanetModel
name|pm
init|=
operator|new
name|PlanetModel
argument_list|(
literal|0.8568069516722363
argument_list|,
literal|1.1431930483277637
argument_list|)
decl_stmt|;
comment|// Build the polygon
name|GeoCompositeMembershipShape
name|c
init|=
operator|new
name|GeoCompositeMembershipShape
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|points1
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|points1
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|pm
argument_list|,
literal|1.1577814487635816
argument_list|,
literal|1.6283601832010004
argument_list|)
argument_list|)
expr_stmt|;
name|points1
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|pm
argument_list|,
literal|0.6664570999069251
argument_list|,
literal|2.0855825542851574
argument_list|)
argument_list|)
expr_stmt|;
name|points1
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|pm
argument_list|,
operator|-
literal|0.23953537010974632
argument_list|,
literal|1.8498724094352876
argument_list|)
argument_list|)
expr_stmt|;
name|BitSet
name|p1bits
init|=
operator|new
name|BitSet
argument_list|()
decl_stmt|;
name|c
operator|.
name|addShape
argument_list|(
operator|new
name|GeoConvexPolygon
argument_list|(
name|pm
argument_list|,
name|points1
argument_list|,
name|p1bits
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|points2
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|points2
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|pm
argument_list|,
literal|1.1577814487635816
argument_list|,
literal|1.6283601832010004
argument_list|)
argument_list|)
expr_stmt|;
name|points2
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|pm
argument_list|,
operator|-
literal|0.23953537010974632
argument_list|,
literal|1.8498724094352876
argument_list|)
argument_list|)
expr_stmt|;
name|points2
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|pm
argument_list|,
operator|-
literal|1.1766904875978805
argument_list|,
operator|-
literal|2.1346828411344436
argument_list|)
argument_list|)
expr_stmt|;
name|BitSet
name|p2bits
init|=
operator|new
name|BitSet
argument_list|()
decl_stmt|;
name|p2bits
operator|.
name|set
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|c
operator|.
name|addShape
argument_list|(
operator|new
name|GeoConcavePolygon
argument_list|(
name|pm
argument_list|,
name|points2
argument_list|,
name|p2bits
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
comment|//System.out.println(c);
name|GeoPoint
name|point
init|=
operator|new
name|GeoPoint
argument_list|(
name|pm
argument_list|,
operator|-
literal|0.9825762558001477
argument_list|,
literal|2.4832136904725273
argument_list|)
decl_stmt|;
name|GeoPoint
name|quantizedPoint
init|=
operator|new
name|GeoPoint
argument_list|(
operator|-
literal|0.4505446160475436
argument_list|,
literal|0.34850109186970535
argument_list|,
operator|-
literal|0.8539966368663765
argument_list|)
decl_stmt|;
name|GeoArea
name|xyzSolid
init|=
name|GeoAreaFactory
operator|.
name|makeGeoArea
argument_list|(
name|pm
argument_list|,
operator|-
literal|0.6107484000858642
argument_list|,
operator|-
literal|0.39518364125756916
argument_list|,
operator|-
literal|0.8568069517709872
argument_list|,
literal|0.8568069517709872
argument_list|,
operator|-
literal|1.1431930485939341
argument_list|,
literal|1.1431930485939341
argument_list|)
decl_stmt|;
comment|//System.out.println("relationship = "+xyzSolid.getRelationship(c));
name|assertTrue
argument_list|(
name|xyzSolid
operator|.
name|getRelationship
argument_list|(
name|c
argument_list|)
operator|==
name|GeoArea
operator|.
name|OVERLAPS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPolygonFactoryCase1
specifier|public
name|void
name|testPolygonFactoryCase1
parameter_list|()
block|{
comment|/*        [junit4]   1> Initial points:        [junit4]   1>  [X=-0.17279348371564082, Y=0.24422965662722748, Z=0.9521675605930696]        [junit4]   1>  [X=-0.6385022730019092, Y=-0.6294493901210775, Z=0.4438687423720006]        [junit4]   1>  [X=-0.9519561011293354, Y=-0.05324061687857965, Z=-0.30423702782227385]        [junit4]   1>  [X=-0.30329807815178533, Y=-0.9447434167936289, Z=0.13262941042055737]        [junit4]   1>  [X=-0.5367607140926697, Y=0.8179452639396644, Z=0.21163783898691005]        [junit4]   1>  [X=0.39285411191111597, Y=0.6369575362013932, Z=0.6627439307500357]        [junit4]   1>  [X=-0.44715655239362595, Y=0.8332957749253644, Z=0.3273923501593971]        [junit4]   1>  [X=0.33024322515264537, Y=0.6945246730529289, Z=0.6387986432043298]        [junit4]   1>  [X=-0.1699323603224724, Y=0.8516746480592872, Z=0.4963385521664198]        [junit4]   1>  [X=0.2654788898359613, Y=0.7380222309164597, Z=0.6200740473100581]        [junit4]   1> For start plane, the following points are in/out:        [junit4]   1>  [X=-0.17279348371564082, Y=0.24422965662722748, Z=0.9521675605930696] is: in        [junit4]   1>  [X=-0.6385022730019092, Y=-0.6294493901210775, Z=0.4438687423720006] is: in        [junit4]   1>  [X=-0.9519561011293354, Y=-0.05324061687857965, Z=-0.30423702782227385] is: out        [junit4]   1>  [X=-0.30329807815178533, Y=-0.9447434167936289, Z=0.13262941042055737] is: in        [junit4]   1>  [X=-0.5367607140926697, Y=0.8179452639396644, Z=0.21163783898691005] is: out        [junit4]   1>  [X=0.39285411191111597, Y=0.6369575362013932, Z=0.6627439307500357] is: in        [junit4]   1>  [X=-0.44715655239362595, Y=0.8332957749253644, Z=0.3273923501593971] is: out        [junit4]   1>  [X=0.33024322515264537, Y=0.6945246730529289, Z=0.6387986432043298] is: in        [junit4]   1>  [X=-0.1699323603224724, Y=0.8516746480592872, Z=0.4963385521664198] is: out        [junit4]   1>  [X=0.2654788898359613, Y=0.7380222309164597, Z=0.6200740473100581] is: out       */
specifier|final
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|points
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
literal|0.17279348371564082
argument_list|,
literal|0.24422965662722748
argument_list|,
literal|0.9521675605930696
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
operator|-
literal|0.6385022730019092
argument_list|,
operator|-
literal|0.6294493901210775
argument_list|,
literal|0.4438687423720006
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
operator|-
literal|0.9519561011293354
argument_list|,
operator|-
literal|0.05324061687857965
argument_list|,
operator|-
literal|0.30423702782227385
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
operator|-
literal|0.30329807815178533
argument_list|,
operator|-
literal|0.9447434167936289
argument_list|,
literal|0.13262941042055737
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
operator|-
literal|0.5367607140926697
argument_list|,
literal|0.8179452639396644
argument_list|,
literal|0.21163783898691005
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
literal|0.39285411191111597
argument_list|,
literal|0.6369575362013932
argument_list|,
literal|0.6627439307500357
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
operator|-
literal|0.44715655239362595
argument_list|,
literal|0.8332957749253644
argument_list|,
literal|0.3273923501593971
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
literal|0.33024322515264537
argument_list|,
literal|0.6945246730529289
argument_list|,
literal|0.6387986432043298
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
operator|-
literal|0.1699323603224724
argument_list|,
literal|0.8516746480592872
argument_list|,
literal|0.4963385521664198
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
literal|0.2654788898359613
argument_list|,
literal|0.7380222309164597
argument_list|,
literal|0.6200740473100581
argument_list|)
argument_list|)
expr_stmt|;
name|boolean
name|illegalArgumentException
init|=
literal|false
decl_stmt|;
try|try
block|{
specifier|final
name|GeoPolygon
name|p
init|=
name|GeoPolygonFactory
operator|.
name|makeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
name|points
argument_list|,
literal|null
argument_list|)
decl_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|illegalArgumentException
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|illegalArgumentException
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPolygonFactoryCase2
specifier|public
name|void
name|testPolygonFactoryCase2
parameter_list|()
block|{
comment|/*    [[lat=-0.48522750470337056, lon=-1.7370471071224087([X=-0.14644023172524287, Y=-0.8727091042681705, Z=-0.4665895520487907])],     [lat=-0.4252164254406539, lon=-1.0929282311747601([X=0.41916238097763436, Y=-0.8093435958043177, Z=-0.4127428785664968])],     [lat=0.2055150822737076, lon=0.8094775925193464([X=0.6760197133035871, Y=0.7093859395658346, Z=0.20427109186920892])],     [lat=-0.504360159046884, lon=-1.27628468850318([X=0.25421329462858633, Y=-0.8380671569889917, Z=-0.4834077932502288])],     [lat=-0.11994023948700858, lon=0.07857194136150605([X=0.9908123546871113, Y=0.07801065055912473, Z=-0.11978097184039621])],     [lat=0.39346633764155237, lon=1.306697331415816([X=0.24124272064589647, Y=0.8921189226448045, Z=0.3836311592666308])],     [lat=-0.07741593942416389, lon=0.5334693210962216([X=0.8594122640512101, Y=0.50755758923985, Z=-0.07742360418968308])],     [lat=0.4654236264787552, lon=1.3013260557429494([X=0.2380080413677112, Y=0.8617612419312584, Z=0.4489988990508502])],     [lat=-1.2964641581620537, lon=-1.487600369139357([X=0.022467282495493006, Y=-0.26942922375508405, Z=-0.960688317984634])]]     */
specifier|final
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|points
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
operator|-
literal|0.48522750470337056
argument_list|,
operator|-
literal|1.7370471071224087
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
operator|-
literal|0.4252164254406539
argument_list|,
operator|-
literal|1.0929282311747601
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|0.2055150822737076
argument_list|,
literal|0.8094775925193464
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
operator|-
literal|0.504360159046884
argument_list|,
operator|-
literal|1.27628468850318
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
operator|-
literal|0.11994023948700858
argument_list|,
literal|0.07857194136150605
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|0.39346633764155237
argument_list|,
literal|1.306697331415816
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
operator|-
literal|0.07741593942416389
argument_list|,
literal|0.5334693210962216
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|0.4654236264787552
argument_list|,
literal|1.3013260557429494
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
operator|-
literal|1.2964641581620537
argument_list|,
operator|-
literal|1.487600369139357
argument_list|)
argument_list|)
expr_stmt|;
name|boolean
name|illegalArgumentException
init|=
literal|false
decl_stmt|;
try|try
block|{
specifier|final
name|GeoPolygon
name|p
init|=
name|GeoPolygonFactory
operator|.
name|makeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
name|points
argument_list|,
literal|null
argument_list|)
decl_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|illegalArgumentException
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|illegalArgumentException
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPolygonFactoryCase3
specifier|public
name|void
name|testPolygonFactoryCase3
parameter_list|()
block|{
comment|/*     This one failed to be detected as convex:     [junit4]   1> convex part = GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=    [[lat=0.39346633764155237, lon=1.306697331415816([X=0.24124272064589647, Y=0.8921189226448045, Z=0.3836311592666308])],     [lat=-0.4252164254406539, lon=-1.0929282311747601([X=0.41916238097763436, Y=-0.8093435958043177, Z=-0.4127428785664968])],     [lat=0.4654236264787552, lon=1.3013260557429494([X=0.2380080413677112, Y=0.8617612419312584, Z=0.4489988990508502])]], internalEdges={0, 1, 2}}     */
specifier|final
name|GeoPoint
name|p3
init|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|0.39346633764155237
argument_list|,
literal|1.306697331415816
argument_list|)
decl_stmt|;
specifier|final
name|GeoPoint
name|p2
init|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
operator|-
literal|0.4252164254406539
argument_list|,
operator|-
literal|1.0929282311747601
argument_list|)
decl_stmt|;
specifier|final
name|GeoPoint
name|p1
init|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|0.4654236264787552
argument_list|,
literal|1.3013260557429494
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|points
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|points
operator|.
name|add
argument_list|(
name|p3
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
name|p2
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
name|p1
argument_list|)
expr_stmt|;
specifier|final
name|BitSet
name|internal
init|=
operator|new
name|BitSet
argument_list|()
decl_stmt|;
specifier|final
name|GeoCompositePolygon
name|rval
init|=
operator|new
name|GeoCompositePolygon
argument_list|()
decl_stmt|;
specifier|final
name|GeoPolygonFactory
operator|.
name|MutableBoolean
name|mutableBoolean
init|=
operator|new
name|GeoPolygonFactory
operator|.
name|MutableBoolean
argument_list|()
decl_stmt|;
name|boolean
name|result
init|=
name|GeoPolygonFactory
operator|.
name|buildPolygonShape
argument_list|(
name|rval
argument_list|,
name|mutableBoolean
argument_list|,
name|PlanetModel
operator|.
name|WGS84
argument_list|,
name|points
argument_list|,
name|internal
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
operator|new
name|SidedPlane
argument_list|(
name|p1
argument_list|,
name|p3
argument_list|,
name|p2
argument_list|)
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|GeoPolygon
argument_list|>
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|mutableBoolean
operator|.
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPolygonFactoryCase4
specifier|public
name|void
name|testPolygonFactoryCase4
parameter_list|()
block|{
comment|// [[lat=0.897812132711355, lon=0.0025364171887532795([X=0.6227358672251874, Y=0.0015795213449218714, Z=0.7812318690127594])],
comment|// [lat=0.897812132711355, lon=0.0025363997354607595([X=0.6227358672527552, Y=0.001579510476130618, Z=0.7812318690127594])],
comment|// [lat=0.8978120628981849, lon=0.0025362601091206([X=0.6227359221556139, Y=0.0015794236644894651, Z=0.7812318257158789])]]
specifier|final
name|GeoPoint
name|p1
init|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|0.897812132711355
argument_list|,
literal|0.0025364171887532795
argument_list|)
decl_stmt|;
specifier|final
name|GeoPoint
name|p2
init|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|0.897812132711355
argument_list|,
literal|0.0025363997354607595
argument_list|)
decl_stmt|;
specifier|final
name|GeoPoint
name|p3
init|=
operator|new
name|GeoPoint
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
literal|0.8978120628981849
argument_list|,
literal|0.0025362601091206
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|GeoPoint
argument_list|>
name|points
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|points
operator|.
name|add
argument_list|(
name|p1
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
name|p2
argument_list|)
expr_stmt|;
name|points
operator|.
name|add
argument_list|(
name|p3
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|GeoPolygonFactory
operator|.
name|PolygonDescription
argument_list|>
name|shapeList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|final
name|GeoPolygonFactory
operator|.
name|PolygonDescription
name|desc
init|=
operator|new
name|GeoPolygonFactory
operator|.
name|PolygonDescription
argument_list|(
name|points
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|GeoPolygonFactory
operator|.
name|PolygonDescription
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
name|shapeList
operator|.
name|add
argument_list|(
name|desc
argument_list|)
expr_stmt|;
name|GeoPolygon
name|p
init|=
name|GeoPolygonFactory
operator|.
name|makeLargeGeoPolygon
argument_list|(
name|PlanetModel
operator|.
name|WGS84
argument_list|,
name|shapeList
argument_list|)
decl_stmt|;
block|}
block|}
end_class
end_unit
