begin_unit
begin_package
DECL|package|org.apache.lucene.geo3d
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|geo3d
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/**  * Factory for {@link org.apache.lucene.geo3d.GeoArea}.  *  * @lucene.experimental  */
end_comment
begin_class
DECL|class|GeoAreaFactory
specifier|public
class|class
name|GeoAreaFactory
block|{
DECL|method|GeoAreaFactory
specifier|private
name|GeoAreaFactory
parameter_list|()
block|{   }
comment|/**    * Create a GeoArea of the right kind given the specified bounds.    * @param planetModel is the planet model    * @param topLat    is the top latitude    * @param bottomLat is the bottom latitude    * @param leftLon   is the left longitude    * @param rightLon  is the right longitude    * @return a GeoArea corresponding to what was specified.    */
DECL|method|makeGeoArea
specifier|public
specifier|static
name|GeoArea
name|makeGeoArea
parameter_list|(
specifier|final
name|PlanetModel
name|planetModel
parameter_list|,
specifier|final
name|double
name|topLat
parameter_list|,
specifier|final
name|double
name|bottomLat
parameter_list|,
specifier|final
name|double
name|leftLon
parameter_list|,
specifier|final
name|double
name|rightLon
parameter_list|)
block|{
return|return
name|GeoBBoxFactory
operator|.
name|makeGeoBBox
argument_list|(
name|planetModel
argument_list|,
name|topLat
argument_list|,
name|bottomLat
argument_list|,
name|leftLon
argument_list|,
name|rightLon
argument_list|)
return|;
block|}
comment|/**    * Create a GeoArea of the right kind given (x,y,z) bounds.    * @param planetModel is the planet model    * @param minX is the min X boundary    * @param maxX is the max X boundary    * @param minY is the min Y boundary    * @param maxY is the max Y boundary    * @param minZ is the min Z boundary    * @param maxZ is the max Z boundary    */
DECL|method|makeGeoArea
specifier|public
specifier|static
name|GeoArea
name|makeGeoArea
parameter_list|(
specifier|final
name|PlanetModel
name|planetModel
parameter_list|,
specifier|final
name|double
name|minX
parameter_list|,
specifier|final
name|double
name|maxX
parameter_list|,
specifier|final
name|double
name|minY
parameter_list|,
specifier|final
name|double
name|maxY
parameter_list|,
specifier|final
name|double
name|minZ
parameter_list|,
specifier|final
name|double
name|maxZ
parameter_list|)
block|{
return|return
name|XYZSolidFactory
operator|.
name|makeXYZSolid
argument_list|(
name|planetModel
argument_list|,
name|minX
argument_list|,
name|maxX
argument_list|,
name|minY
argument_list|,
name|maxY
argument_list|,
name|minZ
argument_list|,
name|maxZ
argument_list|)
return|;
block|}
block|}
end_class
end_unit
