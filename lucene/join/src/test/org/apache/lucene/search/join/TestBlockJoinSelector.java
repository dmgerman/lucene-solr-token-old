begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.search.join
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|join
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DocValues
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|NumericDocValues
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SortedDocValues
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BitSet
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Bits
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|FixedBitSet
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import
begin_class
DECL|class|TestBlockJoinSelector
specifier|public
class|class
name|TestBlockJoinSelector
extends|extends
name|LuceneTestCase
block|{
DECL|method|testDocsWithValue
specifier|public
name|void
name|testDocsWithValue
parameter_list|()
block|{
specifier|final
name|BitSet
name|parents
init|=
operator|new
name|FixedBitSet
argument_list|(
literal|20
argument_list|)
decl_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|19
argument_list|)
expr_stmt|;
specifier|final
name|BitSet
name|children
init|=
operator|new
name|FixedBitSet
argument_list|(
literal|20
argument_list|)
decl_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|17
argument_list|)
expr_stmt|;
specifier|final
name|BitSet
name|childDocsWithValue
init|=
operator|new
name|FixedBitSet
argument_list|(
literal|20
argument_list|)
decl_stmt|;
name|childDocsWithValue
operator|.
name|set
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|childDocsWithValue
operator|.
name|set
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|childDocsWithValue
operator|.
name|set
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|childDocsWithValue
operator|.
name|set
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|childDocsWithValue
operator|.
name|set
argument_list|(
literal|16
argument_list|)
expr_stmt|;
specifier|final
name|Bits
name|docsWithValue
init|=
name|BlockJoinSelector
operator|.
name|wrap
argument_list|(
name|childDocsWithValue
argument_list|,
name|parents
argument_list|,
name|children
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|docsWithValue
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|docsWithValue
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|docsWithValue
operator|.
name|get
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|docsWithValue
operator|.
name|get
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|docsWithValue
operator|.
name|get
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|docsWithValue
operator|.
name|get
argument_list|(
literal|19
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testSortedSelector
specifier|public
name|void
name|testSortedSelector
parameter_list|()
block|{
specifier|final
name|BitSet
name|parents
init|=
operator|new
name|FixedBitSet
argument_list|(
literal|20
argument_list|)
decl_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|19
argument_list|)
expr_stmt|;
specifier|final
name|BitSet
name|children
init|=
operator|new
name|FixedBitSet
argument_list|(
literal|20
argument_list|)
decl_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|17
argument_list|)
expr_stmt|;
specifier|final
name|int
index|[]
name|ords
init|=
operator|new
name|int
index|[
literal|20
index|]
decl_stmt|;
name|Arrays
operator|.
name|fill
argument_list|(
name|ords
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|ords
index|[
literal|2
index|]
operator|=
literal|5
expr_stmt|;
name|ords
index|[
literal|3
index|]
operator|=
literal|7
expr_stmt|;
name|ords
index|[
literal|4
index|]
operator|=
literal|3
expr_stmt|;
name|ords
index|[
literal|12
index|]
operator|=
literal|10
expr_stmt|;
name|ords
index|[
literal|18
index|]
operator|=
literal|10
expr_stmt|;
specifier|final
name|SortedDocValues
name|values
init|=
operator|new
name|SortedDocValues
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|int
name|getOrd
parameter_list|(
name|int
name|docID
parameter_list|)
block|{
return|return
name|ords
index|[
name|docID
index|]
return|;
block|}
annotation|@
name|Override
specifier|public
name|BytesRef
name|lookupOrd
parameter_list|(
name|int
name|ord
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getValueCount
parameter_list|()
block|{
return|return
literal|11
return|;
block|}
block|}
decl_stmt|;
specifier|final
name|SortedDocValues
name|mins
init|=
name|BlockJoinSelector
operator|.
name|wrap
argument_list|(
name|DocValues
operator|.
name|singleton
argument_list|(
name|values
argument_list|)
argument_list|,
name|BlockJoinSelector
operator|.
name|Type
operator|.
name|MIN
argument_list|,
name|parents
argument_list|,
name|children
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|mins
operator|.
name|getOrd
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|mins
operator|.
name|getOrd
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|mins
operator|.
name|getOrd
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|mins
operator|.
name|getOrd
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|mins
operator|.
name|getOrd
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|mins
operator|.
name|getOrd
argument_list|(
literal|19
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|SortedDocValues
name|maxs
init|=
name|BlockJoinSelector
operator|.
name|wrap
argument_list|(
name|DocValues
operator|.
name|singleton
argument_list|(
name|values
argument_list|)
argument_list|,
name|BlockJoinSelector
operator|.
name|Type
operator|.
name|MAX
argument_list|,
name|parents
argument_list|,
name|children
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|maxs
operator|.
name|getOrd
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|maxs
operator|.
name|getOrd
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|maxs
operator|.
name|getOrd
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|maxs
operator|.
name|getOrd
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|maxs
operator|.
name|getOrd
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|maxs
operator|.
name|getOrd
argument_list|(
literal|19
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testNumericSelector
specifier|public
name|void
name|testNumericSelector
parameter_list|()
block|{
specifier|final
name|BitSet
name|parents
init|=
operator|new
name|FixedBitSet
argument_list|(
literal|20
argument_list|)
decl_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|parents
operator|.
name|set
argument_list|(
literal|19
argument_list|)
expr_stmt|;
specifier|final
name|BitSet
name|children
init|=
operator|new
name|FixedBitSet
argument_list|(
literal|20
argument_list|)
decl_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|children
operator|.
name|set
argument_list|(
literal|17
argument_list|)
expr_stmt|;
specifier|final
name|long
index|[]
name|longs
init|=
operator|new
name|long
index|[
literal|20
index|]
decl_stmt|;
specifier|final
name|BitSet
name|docsWithValue
init|=
operator|new
name|FixedBitSet
argument_list|(
literal|20
argument_list|)
decl_stmt|;
name|docsWithValue
operator|.
name|set
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|longs
index|[
literal|2
index|]
operator|=
literal|5
expr_stmt|;
name|docsWithValue
operator|.
name|set
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|longs
index|[
literal|3
index|]
operator|=
literal|7
expr_stmt|;
name|docsWithValue
operator|.
name|set
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|longs
index|[
literal|4
index|]
operator|=
literal|3
expr_stmt|;
name|docsWithValue
operator|.
name|set
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|longs
index|[
literal|12
index|]
operator|=
literal|10
expr_stmt|;
name|docsWithValue
operator|.
name|set
argument_list|(
literal|18
argument_list|)
expr_stmt|;
name|longs
index|[
literal|18
index|]
operator|=
literal|10
expr_stmt|;
specifier|final
name|NumericDocValues
name|values
init|=
operator|new
name|NumericDocValues
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|long
name|get
parameter_list|(
name|int
name|docID
parameter_list|)
block|{
return|return
name|longs
index|[
name|docID
index|]
return|;
block|}
block|}
decl_stmt|;
specifier|final
name|NumericDocValues
name|mins
init|=
name|BlockJoinSelector
operator|.
name|wrap
argument_list|(
name|DocValues
operator|.
name|singleton
argument_list|(
name|values
argument_list|,
name|docsWithValue
argument_list|)
argument_list|,
name|BlockJoinSelector
operator|.
name|Type
operator|.
name|MIN
argument_list|,
name|parents
argument_list|,
name|children
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|mins
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|mins
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|mins
operator|.
name|get
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|mins
operator|.
name|get
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|mins
operator|.
name|get
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|mins
operator|.
name|get
argument_list|(
literal|19
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|NumericDocValues
name|maxs
init|=
name|BlockJoinSelector
operator|.
name|wrap
argument_list|(
name|DocValues
operator|.
name|singleton
argument_list|(
name|values
argument_list|,
name|docsWithValue
argument_list|)
argument_list|,
name|BlockJoinSelector
operator|.
name|Type
operator|.
name|MAX
argument_list|,
name|parents
argument_list|,
name|children
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|maxs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|maxs
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|maxs
operator|.
name|get
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|maxs
operator|.
name|get
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|maxs
operator|.
name|get
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|maxs
operator|.
name|get
argument_list|(
literal|19
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
