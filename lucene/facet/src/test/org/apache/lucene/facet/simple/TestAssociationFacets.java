begin_unit
begin_package
DECL|package|org.apache.lucene.facet.simple
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|simple
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|MockAnalyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|MockTokenizer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|FacetTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|params
operator|.
name|FacetSearchParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|search
operator|.
name|FacetResult
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|search
operator|.
name|FacetsCollector
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|FacetLabel
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|TaxonomyReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|TaxonomyWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|directory
operator|.
name|DirectoryTaxonomyReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|directory
operator|.
name|DirectoryTaxonomyWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriterConfig
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|RandomIndexWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|MatchAllDocsQuery
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_comment
comment|/** Test for associations */
end_comment
begin_class
DECL|class|TestAssociationFacets
specifier|public
class|class
name|TestAssociationFacets
extends|extends
name|FacetTestCase
block|{
DECL|field|dir
specifier|private
specifier|static
name|Directory
name|dir
decl_stmt|;
DECL|field|reader
specifier|private
specifier|static
name|IndexReader
name|reader
decl_stmt|;
DECL|field|taxoDir
specifier|private
specifier|static
name|Directory
name|taxoDir
decl_stmt|;
DECL|field|aint
specifier|private
specifier|static
specifier|final
name|FacetLabel
name|aint
init|=
operator|new
name|FacetLabel
argument_list|(
literal|"int"
argument_list|,
literal|"a"
argument_list|)
decl_stmt|;
DECL|field|bint
specifier|private
specifier|static
specifier|final
name|FacetLabel
name|bint
init|=
operator|new
name|FacetLabel
argument_list|(
literal|"int"
argument_list|,
literal|"b"
argument_list|)
decl_stmt|;
DECL|field|afloat
specifier|private
specifier|static
specifier|final
name|FacetLabel
name|afloat
init|=
operator|new
name|FacetLabel
argument_list|(
literal|"float"
argument_list|,
literal|"a"
argument_list|)
decl_stmt|;
DECL|field|bfloat
specifier|private
specifier|static
specifier|final
name|FacetLabel
name|bfloat
init|=
operator|new
name|FacetLabel
argument_list|(
literal|"float"
argument_list|,
literal|"b"
argument_list|)
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|beforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|dir
operator|=
name|newDirectory
argument_list|()
expr_stmt|;
name|taxoDir
operator|=
name|newDirectory
argument_list|()
expr_stmt|;
comment|// preparations - index, taxonomy, content
name|TaxonomyWriter
name|taxoWriter
init|=
operator|new
name|DirectoryTaxonomyWriter
argument_list|(
name|taxoDir
argument_list|)
decl_stmt|;
name|IndexWriterConfig
name|iwc
init|=
name|newIndexWriterConfig
argument_list|(
name|TEST_VERSION_CURRENT
argument_list|,
operator|new
name|MockAnalyzer
argument_list|(
name|random
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|IndexWriter
name|writer
init|=
operator|new
name|FacetIndexWriter
argument_list|(
name|dir
argument_list|,
name|iwc
argument_list|,
name|taxoWriter
argument_list|,
operator|new
name|FacetsConfig
argument_list|()
argument_list|)
decl_stmt|;
comment|// index documents, 50% have only 'b' and all have 'a'
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|110
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
comment|// every 11th document is added empty, this used to cause the association
comment|// aggregators to go into an infinite loop
if|if
condition|(
name|i
operator|%
literal|11
operator|!=
literal|0
condition|)
block|{
name|doc
operator|.
name|add
argument_list|(
operator|new
name|AssociationFacetField
argument_list|(
literal|2
argument_list|,
literal|"int"
argument_list|,
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|AssociationFacetField
argument_list|(
literal|0.5f
argument_list|,
literal|"float"
argument_list|,
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|%
literal|2
operator|==
literal|0
condition|)
block|{
comment|// 50
name|doc
operator|.
name|add
argument_list|(
operator|new
name|AssociationFacetField
argument_list|(
literal|3
argument_list|,
literal|"int"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|add
argument_list|(
operator|new
name|AssociationFacetField
argument_list|(
literal|0.2f
argument_list|,
literal|"float"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|writer
operator|.
name|addDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
name|taxoWriter
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|writer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|afterClass
specifier|public
specifier|static
name|void
name|afterClass
parameter_list|()
throws|throws
name|Exception
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|=
literal|null
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|=
literal|null
expr_stmt|;
name|taxoDir
operator|.
name|close
argument_list|()
expr_stmt|;
name|taxoDir
operator|=
literal|null
expr_stmt|;
block|}
DECL|method|testIntSumAssociation
specifier|public
name|void
name|testIntSumAssociation
parameter_list|()
throws|throws
name|Exception
block|{
name|TaxonomyReader
name|taxoReader
init|=
operator|new
name|DirectoryTaxonomyReader
argument_list|(
name|taxoDir
argument_list|)
decl_stmt|;
name|SimpleFacetsCollector
name|fc
init|=
operator|new
name|SimpleFacetsCollector
argument_list|()
decl_stmt|;
name|IndexSearcher
name|searcher
init|=
name|newSearcher
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|fc
argument_list|)
expr_stmt|;
name|SumIntAssociationFacets
name|facets
init|=
operator|new
name|SumIntAssociationFacets
argument_list|(
name|taxoReader
argument_list|,
operator|new
name|FacetsConfig
argument_list|()
argument_list|,
name|fc
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Wrong count for category 'a'!"
argument_list|,
literal|200
argument_list|,
name|facets
operator|.
name|getSpecificValue
argument_list|(
literal|"int"
argument_list|,
literal|"a"
argument_list|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Wrong count for category 'b'!"
argument_list|,
literal|150
argument_list|,
name|facets
operator|.
name|getSpecificValue
argument_list|(
literal|"int"
argument_list|,
literal|"b"
argument_list|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|taxoReader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testFloatSumAssociation
specifier|public
name|void
name|testFloatSumAssociation
parameter_list|()
throws|throws
name|Exception
block|{
name|DirectoryTaxonomyReader
name|taxoReader
init|=
operator|new
name|DirectoryTaxonomyReader
argument_list|(
name|taxoDir
argument_list|)
decl_stmt|;
name|SimpleFacetsCollector
name|fc
init|=
operator|new
name|SimpleFacetsCollector
argument_list|()
decl_stmt|;
name|IndexSearcher
name|searcher
init|=
name|newSearcher
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
name|fc
argument_list|)
expr_stmt|;
name|SumFloatAssociationFacets
name|facets
init|=
operator|new
name|SumFloatAssociationFacets
argument_list|(
name|taxoReader
argument_list|,
operator|new
name|FacetsConfig
argument_list|()
argument_list|,
name|fc
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Wrong count for category 'a'!"
argument_list|,
literal|50f
argument_list|,
name|facets
operator|.
name|getSpecificValue
argument_list|(
literal|"float"
argument_list|,
literal|"a"
argument_list|)
operator|.
name|floatValue
argument_list|()
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Wrong count for category 'b'!"
argument_list|,
literal|10f
argument_list|,
name|facets
operator|.
name|getSpecificValue
argument_list|(
literal|"float"
argument_list|,
literal|"b"
argument_list|)
operator|.
name|floatValue
argument_list|()
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|taxoReader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|/*     public void testDifferentAggregatorsSameCategoryList() throws Exception {     DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);          // facet requests for two facets     FacetSearchParams fsp = new FacetSearchParams(         new SumIntAssociationFacetRequest(aint, 10),         new SumIntAssociationFacetRequest(bint, 10),         new SumFloatAssociationFacetRequest(afloat, 10),         new SumFloatAssociationFacetRequest(bfloat, 10));          Query q = new MatchAllDocsQuery();          FacetsCollector fc = FacetsCollector.create(fsp, reader, taxo);          IndexSearcher searcher = newSearcher(reader);     searcher.search(q, fc);     List<FacetResult> res = fc.getFacetResults();          assertEquals("Wrong number of results!", 4, res.size());     assertEquals("Wrong count for category 'a'!", 200, (int) res.get(0).getFacetResultNode().value);     assertEquals("Wrong count for category 'b'!", 150, (int) res.get(1).getFacetResultNode().value);     assertEquals("Wrong count for category 'a'!",50f, (float) res.get(2).getFacetResultNode().value, 0.00001);     assertEquals("Wrong count for category 'b'!",10f, (float) res.get(3).getFacetResultNode().value, 0.00001);          taxo.close();   }   */
block|}
end_class
end_unit
