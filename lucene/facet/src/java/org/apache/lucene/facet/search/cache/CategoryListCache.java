begin_unit
begin_package
DECL|package|org.apache.lucene.facet.search.cache
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|search
operator|.
name|cache
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|index
operator|.
name|params
operator|.
name|CategoryListParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|index
operator|.
name|params
operator|.
name|FacetIndexingParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|TaxonomyReader
import|;
end_import
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/**  * Cache for {@link CategoryListData}, per {@link CategoryListParams}.   *   * @lucene.experimental  */
end_comment
begin_class
DECL|class|CategoryListCache
specifier|public
class|class
name|CategoryListCache
block|{
specifier|private
name|HashMap
argument_list|<
name|CategoryListParams
argument_list|,
name|CategoryListData
argument_list|>
DECL|field|cldMap
name|cldMap
init|=
operator|new
name|HashMap
argument_list|<
name|CategoryListParams
argument_list|,
name|CategoryListData
argument_list|>
argument_list|()
decl_stmt|;
comment|/**    * Fetch the cached {@link CategoryListData} for a given {@link CategoryListParams}.    */
DECL|method|get
specifier|public
name|CategoryListData
name|get
parameter_list|(
name|CategoryListParams
name|clp
parameter_list|)
block|{
return|return
name|cldMap
operator|.
name|get
argument_list|(
name|clp
argument_list|)
return|;
block|}
comment|/**    * Register a pre-computed {@link CategoryListData}.    */
DECL|method|register
specifier|public
name|void
name|register
parameter_list|(
name|CategoryListParams
name|clp
parameter_list|,
name|CategoryListData
name|clData
parameter_list|)
block|{
name|cldMap
operator|.
name|put
argument_list|(
name|clp
argument_list|,
name|clData
argument_list|)
expr_stmt|;
block|}
comment|/**    * Load and register {@link CategoryListData}.    */
DECL|method|loadAndRegister
specifier|public
name|void
name|loadAndRegister
parameter_list|(
name|CategoryListParams
name|clp
parameter_list|,
name|IndexReader
name|reader
parameter_list|,
name|TaxonomyReader
name|taxo
parameter_list|,
name|FacetIndexingParams
name|iparams
parameter_list|)
throws|throws
name|IOException
block|{
name|CategoryListData
name|clData
init|=
operator|new
name|CategoryListData
argument_list|(
name|reader
argument_list|,
name|taxo
argument_list|,
name|iparams
argument_list|,
name|clp
argument_list|)
decl_stmt|;
name|register
argument_list|(
name|clp
argument_list|,
name|clData
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
