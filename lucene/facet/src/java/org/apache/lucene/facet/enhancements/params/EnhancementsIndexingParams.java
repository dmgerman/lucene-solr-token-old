begin_unit
begin_package
DECL|package|org.apache.lucene.facet.enhancements.params
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|enhancements
operator|.
name|params
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|enhancements
operator|.
name|CategoryEnhancement
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|enhancements
operator|.
name|EnhancementsDocumentBuilder
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|index
operator|.
name|attributes
operator|.
name|CategoryProperty
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|index
operator|.
name|params
operator|.
name|FacetIndexingParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|index
operator|.
name|streaming
operator|.
name|CategoryParentsStream
import|;
end_import
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/**  * {@link FacetIndexingParams Facet indexing parameters} for defining  * {@link CategoryEnhancement category enhancements}. It must contain at least  * one enhancement, otherwise nothing is "enhanced" about it. When there are  * more than one, the order matters - see {@link #getCategoryEnhancements()}.  *   * @see EnhancementsDocumentBuilder  * @lucene.experimental  */
end_comment
begin_interface
DECL|interface|EnhancementsIndexingParams
specifier|public
interface|interface
name|EnhancementsIndexingParams
extends|extends
name|FacetIndexingParams
block|{
comment|/**    * Add {@link CategoryEnhancement}s to the indexing parameters    * @param enhancements enhancements to add    */
DECL|method|addCategoryEnhancements
specifier|public
name|void
name|addCategoryEnhancements
parameter_list|(
name|CategoryEnhancement
modifier|...
name|enhancements
parameter_list|)
function_decl|;
comment|/**    * Get a list of the active category enhancements. If no enhancements exist    * return {@code null}. The order of enhancements in the returned list    * dictates the order in which the enhancements data appear in the category    * tokens payload.    *     * @return A list of the active category enhancements, or {@code null} if    *         there are no enhancements.    */
DECL|method|getCategoryEnhancements
specifier|public
name|List
argument_list|<
name|CategoryEnhancement
argument_list|>
name|getCategoryEnhancements
parameter_list|()
function_decl|;
comment|/**    * Get a list of {@link CategoryProperty} classes to be retained when    * creating {@link CategoryParentsStream}.    *     * @return the list of {@link CategoryProperty} classes to be retained when    *         creating {@link CategoryParentsStream}, or {@code null} if there    *         are no such properties.    */
DECL|method|getRetainableProperties
specifier|public
name|List
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|CategoryProperty
argument_list|>
argument_list|>
name|getRetainableProperties
parameter_list|()
function_decl|;
block|}
end_interface
end_unit
