begin_unit
begin_package
DECL|package|org.apache.lucene.facet.search
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|search
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|search
operator|.
name|params
operator|.
name|FacetRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|search
operator|.
name|params
operator|.
name|FacetSearchParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|search
operator|.
name|results
operator|.
name|FacetResult
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|CategoryPath
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|TaxonomyReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Collector
import|;
end_import
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/**  * A {@link Collector} which executes faceted search and computes the weight of  * requested facets. To get the facet results you should call  * {@link #getFacetResults()}.  * {@link #create(FacetSearchParams, IndexReader, TaxonomyReader)} returns the  * most optimized {@link FacetsCollector} for the given parameters.  *   * @lucene.experimental  */
end_comment
begin_class
DECL|class|FacetsCollector
specifier|public
specifier|abstract
class|class
name|FacetsCollector
extends|extends
name|Collector
block|{
comment|/**    * Returns the most optimized {@link FacetsCollector} for the given search    * parameters. The returned {@link FacetsCollector} is guaranteed to satisfy    * the requested parameters.    */
DECL|method|create
specifier|public
specifier|static
name|FacetsCollector
name|create
parameter_list|(
name|FacetSearchParams
name|fsp
parameter_list|,
name|IndexReader
name|indexReader
parameter_list|,
name|TaxonomyReader
name|taxoReader
parameter_list|)
block|{
if|if
condition|(
name|CountingFacetsCollector
operator|.
name|assertParams
argument_list|(
name|fsp
argument_list|)
operator|==
literal|null
condition|)
block|{
return|return
operator|new
name|CountingFacetsCollector
argument_list|(
name|fsp
argument_list|,
name|taxoReader
argument_list|)
return|;
block|}
return|return
operator|new
name|StandardFacetsCollector
argument_list|(
name|fsp
argument_list|,
name|indexReader
argument_list|,
name|taxoReader
argument_list|)
return|;
block|}
comment|/**    * Returns a {@link FacetResult} per {@link FacetRequest} set in    * {@link FacetSearchParams}. Note that if one of the {@link FacetRequest    * requests} is for a {@link CategoryPath} that does not exist in the taxonomy,    * no matching {@link FacetResult} will be returned.    */
DECL|method|getFacetResults
specifier|public
specifier|abstract
name|List
argument_list|<
name|FacetResult
argument_list|>
name|getFacetResults
parameter_list|()
throws|throws
name|IOException
function_decl|;
block|}
end_class
end_unit
