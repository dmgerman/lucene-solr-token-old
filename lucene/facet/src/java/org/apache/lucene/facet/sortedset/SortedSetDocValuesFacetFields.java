begin_unit
begin_package
DECL|package|org.apache.lucene.facet.sortedset
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|sortedset
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|SortedSetDocValuesField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|index
operator|.
name|DrillDownStream
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|index
operator|.
name|FacetFields
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|params
operator|.
name|CategoryListParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|params
operator|.
name|FacetIndexingParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|FacetLabel
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import
begin_comment
comment|/** Use this to index facets if you intend to  *  use {@link SortedSetDocValuesAccumulator} to count facets  *  at search time.  Note that this only supports flat  *  facets (dimension + label).  Instantiate this class  *  once, and then call {@link #addFields} to add the  *  necessary fields to each {@link Document}. */
end_comment
begin_class
DECL|class|SortedSetDocValuesFacetFields
specifier|public
class|class
name|SortedSetDocValuesFacetFields
extends|extends
name|FacetFields
block|{
comment|/** Create a {@code SortedSetDocValuesFacetField} with the    *  provided {@link FacetLabel}. */
DECL|method|SortedSetDocValuesFacetFields
specifier|public
name|SortedSetDocValuesFacetFields
parameter_list|()
block|{
name|this
argument_list|(
name|FacetIndexingParams
operator|.
name|DEFAULT
argument_list|)
expr_stmt|;
block|}
comment|/** Create a {@code SortedSetDocValuesFacetField} with the    *  provided {@link FacetLabel}, and custom {@link    *  FacetIndexingParams}. */
DECL|method|SortedSetDocValuesFacetFields
specifier|public
name|SortedSetDocValuesFacetFields
parameter_list|(
name|FacetIndexingParams
name|fip
parameter_list|)
block|{
name|super
argument_list|(
literal|null
argument_list|,
name|fip
argument_list|)
expr_stmt|;
if|if
condition|(
name|fip
operator|.
name|getPartitionSize
argument_list|()
operator|!=
name|Integer
operator|.
name|MAX_VALUE
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"partitions are not supported"
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|addFields
specifier|public
name|void
name|addFields
parameter_list|(
name|Document
name|doc
parameter_list|,
name|Iterable
argument_list|<
name|FacetLabel
argument_list|>
name|categories
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|categories
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"categories should not be null"
argument_list|)
throw|;
block|}
specifier|final
name|Map
argument_list|<
name|CategoryListParams
argument_list|,
name|Iterable
argument_list|<
name|FacetLabel
argument_list|>
argument_list|>
name|categoryLists
init|=
name|createCategoryListMapping
argument_list|(
name|categories
argument_list|)
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|CategoryListParams
argument_list|,
name|Iterable
argument_list|<
name|FacetLabel
argument_list|>
argument_list|>
name|e
range|:
name|categoryLists
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|CategoryListParams
name|clp
init|=
name|e
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|String
name|dvField
init|=
name|clp
operator|.
name|field
operator|+
name|SortedSetDocValuesReaderState
operator|.
name|FACET_FIELD_EXTENSION
decl_stmt|;
comment|// Add sorted-set DV fields, one per value:
for|for
control|(
name|FacetLabel
name|cp
range|:
name|e
operator|.
name|getValue
argument_list|()
control|)
block|{
if|if
condition|(
name|cp
operator|.
name|length
operator|!=
literal|2
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"only flat facets (dimension + label) are currently supported; got "
operator|+
name|cp
argument_list|)
throw|;
block|}
name|doc
operator|.
name|add
argument_list|(
operator|new
name|SortedSetDocValuesField
argument_list|(
name|dvField
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|cp
operator|.
name|toString
argument_list|(
name|indexingParams
operator|.
name|getFacetDelimChar
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// add the drill-down field
name|DrillDownStream
name|drillDownStream
init|=
name|getDrillDownStream
argument_list|(
name|e
operator|.
name|getValue
argument_list|()
argument_list|)
decl_stmt|;
name|Field
name|drillDown
init|=
operator|new
name|Field
argument_list|(
name|clp
operator|.
name|field
argument_list|,
name|drillDownStream
argument_list|,
name|drillDownFieldType
argument_list|()
argument_list|)
decl_stmt|;
name|doc
operator|.
name|add
argument_list|(
name|drillDown
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
