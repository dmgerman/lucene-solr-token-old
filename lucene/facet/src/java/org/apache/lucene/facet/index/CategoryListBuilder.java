begin_unit
begin_package
DECL|package|org.apache.lucene.facet.index
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|index
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|FacetLabel
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|IntsRef
import|;
end_import
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/**  * Builds a category list data by encoding the appropriate information for every  * category and ordinal given to {@link #build(IntsRef, Iterable)}.  *   * @lucene.experimental  */
end_comment
begin_interface
DECL|interface|CategoryListBuilder
specifier|public
interface|interface
name|CategoryListBuilder
block|{
comment|/** Returns the encoded ordinals data. */
DECL|method|build
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|BytesRef
argument_list|>
name|build
parameter_list|(
name|IntsRef
name|ordinals
parameter_list|,
name|Iterable
argument_list|<
name|FacetLabel
argument_list|>
name|categories
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
end_interface
end_unit
