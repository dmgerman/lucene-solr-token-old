begin_unit
begin_package
DECL|package|org.apache.lucene.facet.range
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|range
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|search
operator|.
name|FacetResultNode
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|CategoryPath
import|;
end_import
begin_comment
comment|/** Holds the facet results for a {@link  *  RangeFacetRequest}. */
end_comment
begin_class
DECL|class|RangeFacetResultNode
specifier|public
class|class
name|RangeFacetResultNode
extends|extends
name|FacetResultNode
block|{
DECL|field|range
specifier|public
specifier|final
name|Range
name|range
decl_stmt|;
DECL|method|RangeFacetResultNode
name|RangeFacetResultNode
parameter_list|(
name|String
name|field
parameter_list|,
name|Range
name|range
parameter_list|,
name|int
name|count
parameter_list|)
block|{
name|super
argument_list|(
operator|-
literal|1
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|this
operator|.
name|range
operator|=
name|range
expr_stmt|;
name|this
operator|.
name|label
operator|=
operator|new
name|CategoryPath
argument_list|(
name|field
argument_list|,
name|range
operator|.
name|label
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
