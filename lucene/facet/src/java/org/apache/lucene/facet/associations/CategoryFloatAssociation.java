begin_unit
begin_package
DECL|package|org.apache.lucene.facet.associations
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|associations
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|ByteArrayDataInput
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|ByteArrayDataOutput
import|;
end_import
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/** A {@link CategoryAssociation} that associates a float with a category. */
end_comment
begin_class
DECL|class|CategoryFloatAssociation
specifier|public
class|class
name|CategoryFloatAssociation
implements|implements
name|CategoryAssociation
block|{
DECL|field|ASSOCIATION_LIST_ID
specifier|public
specifier|static
specifier|final
name|String
name|ASSOCIATION_LIST_ID
init|=
literal|"$assoc_float$"
decl_stmt|;
DECL|field|value
specifier|private
name|float
name|value
decl_stmt|;
DECL|method|CategoryFloatAssociation
specifier|public
name|CategoryFloatAssociation
parameter_list|()
block|{
comment|// used for deserialization
block|}
DECL|method|CategoryFloatAssociation
specifier|public
name|CategoryFloatAssociation
parameter_list|(
name|float
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|serialize
specifier|public
name|void
name|serialize
parameter_list|(
name|ByteArrayDataOutput
name|output
parameter_list|)
block|{
try|try
block|{
name|output
operator|.
name|writeInt
argument_list|(
name|Float
operator|.
name|floatToIntBits
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"unexpected exception writing to a byte[]"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|deserialize
specifier|public
name|void
name|deserialize
parameter_list|(
name|ByteArrayDataInput
name|input
parameter_list|)
block|{
name|value
operator|=
name|Float
operator|.
name|intBitsToFloat
argument_list|(
name|input
operator|.
name|readInt
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|maxBytesNeeded
specifier|public
name|int
name|maxBytesNeeded
parameter_list|()
block|{
comment|// plain integer
return|return
literal|4
return|;
block|}
annotation|@
name|Override
DECL|method|getCategoryListID
specifier|public
name|String
name|getCategoryListID
parameter_list|()
block|{
return|return
name|ASSOCIATION_LIST_ID
return|;
block|}
comment|/**    * Returns the value associated with a category. If you used    * {@link #CategoryFloatAssociation()}, you should call    * {@link #deserialize(ByteArrayDataInput)} before calling this method, or    * otherwise the value returned is undefined.    */
DECL|method|getValue
specifier|public
name|float
name|getValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
block|}
end_class
end_unit
