begin_unit
begin_package
DECL|package|org.apache.lucene.facet.sortedset
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|sortedset
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|SortedSetDocValuesField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|params
operator|.
name|FacetIndexingParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|facet
operator|.
name|taxonomy
operator|.
name|CategoryPath
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import
begin_comment
comment|/** Add instances of this to your Document if you intend to  *  use {@link SortedSetDocValuesAccumulator} to count facets  *  at search time.  Note that this only supports flat  *  facets (dimension + label).  Add multiple instances of  *  this to your document, one per dimension + label, and  *  it's fine if a given dimension is multi-valued. */
end_comment
begin_class
DECL|class|SortedSetDocValuesFacetField
specifier|public
class|class
name|SortedSetDocValuesFacetField
extends|extends
name|SortedSetDocValuesField
block|{
comment|/** Create a {@code SortedSetDocValuesFacetField} with the    *  provided {@link CategoryPath}. */
DECL|method|SortedSetDocValuesFacetField
specifier|public
name|SortedSetDocValuesFacetField
parameter_list|(
name|CategoryPath
name|cp
parameter_list|)
block|{
name|this
argument_list|(
name|FacetIndexingParams
operator|.
name|DEFAULT
argument_list|,
name|cp
argument_list|)
expr_stmt|;
block|}
comment|/** Create a {@code SortedSetDocValuesFacetField} with the    *  provided {@link CategoryPath}, and custom {@link    *  FacetIndexingParams}. */
DECL|method|SortedSetDocValuesFacetField
specifier|public
name|SortedSetDocValuesFacetField
parameter_list|(
name|FacetIndexingParams
name|fip
parameter_list|,
name|CategoryPath
name|cp
parameter_list|)
block|{
name|super
argument_list|(
name|fip
operator|.
name|getCategoryListParams
argument_list|(
name|cp
argument_list|)
operator|.
name|field
operator|+
name|SortedSetDocValuesReaderState
operator|.
name|FACET_FIELD_EXTENSION
argument_list|,
name|toBytesRef
argument_list|(
name|fip
argument_list|,
name|cp
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|toBytesRef
specifier|private
specifier|static
name|BytesRef
name|toBytesRef
parameter_list|(
name|FacetIndexingParams
name|fip
parameter_list|,
name|CategoryPath
name|cp
parameter_list|)
block|{
if|if
condition|(
name|fip
operator|.
name|getPartitionSize
argument_list|()
operator|!=
name|Integer
operator|.
name|MAX_VALUE
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"partitions are not supported"
argument_list|)
throw|;
block|}
if|if
condition|(
name|cp
operator|.
name|length
operator|!=
literal|2
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"only flat facets (dimension + label) are currently supported"
argument_list|)
throw|;
block|}
name|String
name|dimension
init|=
name|cp
operator|.
name|components
index|[
literal|0
index|]
decl_stmt|;
name|char
name|delim
init|=
name|fip
operator|.
name|getFacetDelimChar
argument_list|()
decl_stmt|;
if|if
condition|(
name|dimension
operator|.
name|indexOf
argument_list|(
name|delim
argument_list|)
operator|!=
operator|-
literal|1
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"facet dimension cannot contain FacetIndexingParams.getFacetDelimChar()="
operator|+
name|delim
operator|+
literal|" (U+"
operator|+
name|Integer
operator|.
name|toHexString
argument_list|(
name|delim
argument_list|)
operator|+
literal|"); got dimension=\""
operator|+
name|dimension
operator|+
literal|"\""
argument_list|)
throw|;
block|}
comment|// We can't use cp.toString(delim) because that fails if
comment|// cp.components[1] has the delim char, when in fact
comment|// that is allowed here (but not when using taxonomy
comment|// index):
return|return
operator|new
name|BytesRef
argument_list|(
name|dimension
operator|+
name|delim
operator|+
name|cp
operator|.
name|components
index|[
literal|1
index|]
argument_list|)
return|;
block|}
block|}
end_class
end_unit
