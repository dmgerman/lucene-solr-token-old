begin_unit
begin_package
DECL|package|org.apache.lucene.bkdtree
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|bkdtree
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SortedNumericDocValues
import|;
end_import
begin_class
DECL|class|BKDTreeSortedNumericDocValues
class|class
name|BKDTreeSortedNumericDocValues
extends|extends
name|SortedNumericDocValues
block|{
DECL|field|bkdTreeReader
specifier|final
name|BKDTreeReader
name|bkdTreeReader
decl_stmt|;
DECL|field|delegate
specifier|final
name|SortedNumericDocValues
name|delegate
decl_stmt|;
DECL|method|BKDTreeSortedNumericDocValues
specifier|public
name|BKDTreeSortedNumericDocValues
parameter_list|(
name|BKDTreeReader
name|bkdTreeReader
parameter_list|,
name|SortedNumericDocValues
name|delegate
parameter_list|)
block|{
name|this
operator|.
name|bkdTreeReader
operator|=
name|bkdTreeReader
expr_stmt|;
name|this
operator|.
name|delegate
operator|=
name|delegate
expr_stmt|;
block|}
DECL|method|getBKDTreeReader
specifier|public
name|BKDTreeReader
name|getBKDTreeReader
parameter_list|()
block|{
return|return
name|bkdTreeReader
return|;
block|}
annotation|@
name|Override
DECL|method|setDocument
specifier|public
name|void
name|setDocument
parameter_list|(
name|int
name|doc
parameter_list|)
block|{
name|delegate
operator|.
name|setDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|valueAt
specifier|public
name|long
name|valueAt
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|valueAt
argument_list|(
name|index
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|count
specifier|public
name|int
name|count
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|count
argument_list|()
return|;
block|}
block|}
end_class
end_unit
