begin_unit
begin_package
DECL|package|org.apache.lucene.codecs.lucene41
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene41
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|BlockTermState
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|TermState
import|;
end_import
begin_comment
comment|/**  * term state for Lucene 4.1 postings format  * @deprecated only for reading old 4.x segments  */
end_comment
begin_class
annotation|@
name|Deprecated
DECL|class|IntBlockTermState
specifier|final
class|class
name|IntBlockTermState
extends|extends
name|BlockTermState
block|{
DECL|field|docStartFP
name|long
name|docStartFP
init|=
literal|0
decl_stmt|;
DECL|field|posStartFP
name|long
name|posStartFP
init|=
literal|0
decl_stmt|;
DECL|field|payStartFP
name|long
name|payStartFP
init|=
literal|0
decl_stmt|;
DECL|field|skipOffset
name|long
name|skipOffset
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|lastPosBlockOffset
name|long
name|lastPosBlockOffset
init|=
operator|-
literal|1
decl_stmt|;
comment|// docid when there is a single pulsed posting, otherwise -1
comment|// freq is always implicitly totalTermFreq in this case.
DECL|field|singletonDocID
name|int
name|singletonDocID
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|Override
DECL|method|clone
specifier|public
name|IntBlockTermState
name|clone
parameter_list|()
block|{
name|IntBlockTermState
name|other
init|=
operator|new
name|IntBlockTermState
argument_list|()
decl_stmt|;
name|other
operator|.
name|copyFrom
argument_list|(
name|this
argument_list|)
expr_stmt|;
return|return
name|other
return|;
block|}
annotation|@
name|Override
DECL|method|copyFrom
specifier|public
name|void
name|copyFrom
parameter_list|(
name|TermState
name|_other
parameter_list|)
block|{
name|super
operator|.
name|copyFrom
argument_list|(
name|_other
argument_list|)
expr_stmt|;
name|IntBlockTermState
name|other
init|=
operator|(
name|IntBlockTermState
operator|)
name|_other
decl_stmt|;
name|docStartFP
operator|=
name|other
operator|.
name|docStartFP
expr_stmt|;
name|posStartFP
operator|=
name|other
operator|.
name|posStartFP
expr_stmt|;
name|payStartFP
operator|=
name|other
operator|.
name|payStartFP
expr_stmt|;
name|lastPosBlockOffset
operator|=
name|other
operator|.
name|lastPosBlockOffset
expr_stmt|;
name|skipOffset
operator|=
name|other
operator|.
name|skipOffset
expr_stmt|;
name|singletonDocID
operator|=
name|other
operator|.
name|singletonDocID
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|super
operator|.
name|toString
argument_list|()
operator|+
literal|" docStartFP="
operator|+
name|docStartFP
operator|+
literal|" posStartFP="
operator|+
name|posStartFP
operator|+
literal|" payStartFP="
operator|+
name|payStartFP
operator|+
literal|" lastPosBlockOffset="
operator|+
name|lastPosBlockOffset
operator|+
literal|" singletonDocID="
operator|+
name|singletonDocID
return|;
block|}
block|}
end_class
end_unit
