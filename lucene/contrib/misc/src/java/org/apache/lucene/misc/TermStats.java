begin_unit
begin_package
DECL|package|org.apache.lucene.misc
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|misc
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import
begin_class
DECL|class|TermStats
specifier|public
specifier|final
class|class
name|TermStats
block|{
DECL|field|termtext
specifier|public
name|BytesRef
name|termtext
decl_stmt|;
DECL|field|field
specifier|public
name|String
name|field
decl_stmt|;
DECL|field|docFreq
specifier|public
name|int
name|docFreq
decl_stmt|;
DECL|field|totalTermFreq
specifier|public
name|long
name|totalTermFreq
decl_stmt|;
DECL|method|TermStats
name|TermStats
parameter_list|(
name|String
name|field
parameter_list|,
name|BytesRef
name|termtext
parameter_list|,
name|int
name|df
parameter_list|)
block|{
name|this
operator|.
name|termtext
operator|=
name|BytesRef
operator|.
name|deepCopyOf
argument_list|(
name|termtext
argument_list|)
expr_stmt|;
name|this
operator|.
name|field
operator|=
name|field
expr_stmt|;
name|this
operator|.
name|docFreq
operator|=
name|df
expr_stmt|;
block|}
DECL|method|TermStats
name|TermStats
parameter_list|(
name|String
name|field
parameter_list|,
name|BytesRef
name|termtext
parameter_list|,
name|int
name|df
parameter_list|,
name|long
name|tf
parameter_list|)
block|{
name|this
operator|.
name|termtext
operator|=
name|BytesRef
operator|.
name|deepCopyOf
argument_list|(
name|termtext
argument_list|)
expr_stmt|;
name|this
operator|.
name|field
operator|=
name|field
expr_stmt|;
name|this
operator|.
name|docFreq
operator|=
name|df
expr_stmt|;
name|this
operator|.
name|totalTermFreq
operator|=
name|tf
expr_stmt|;
block|}
DECL|method|getTermText
name|String
name|getTermText
parameter_list|()
block|{
return|return
name|termtext
operator|.
name|utf8ToString
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
operator|(
literal|"TermStats: term="
operator|+
name|termtext
operator|.
name|utf8ToString
argument_list|()
operator|+
literal|" docFreq="
operator|+
name|docFreq
operator|+
literal|" totalTermFreq="
operator|+
name|totalTermFreq
operator|)
return|;
block|}
block|}
end_class
end_unit
