begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.benchmark.quality.utils
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|benchmark
operator|.
name|quality
operator|.
name|utils
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|FieldSelector
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|FieldSelectorResult
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Searcher
import|;
end_import
begin_comment
comment|/**  * Utility: extract doc names from an index  */
end_comment
begin_class
DECL|class|DocNameExtractor
specifier|public
class|class
name|DocNameExtractor
block|{
DECL|field|fldSel
specifier|private
name|FieldSelector
name|fldSel
decl_stmt|;
DECL|field|docNameField
specifier|private
name|String
name|docNameField
decl_stmt|;
comment|/**    * Constructor for DocNameExtractor.    * @param docNameField name of the stored field containing the doc name.     */
DECL|method|DocNameExtractor
specifier|public
name|DocNameExtractor
parameter_list|(
specifier|final
name|String
name|docNameField
parameter_list|)
block|{
name|this
operator|.
name|docNameField
operator|=
name|docNameField
expr_stmt|;
name|fldSel
operator|=
operator|new
name|FieldSelector
argument_list|()
block|{
specifier|public
name|FieldSelectorResult
name|accept
parameter_list|(
name|String
name|fieldName
parameter_list|)
block|{
return|return
name|fieldName
operator|.
name|equals
argument_list|(
name|docNameField
argument_list|)
condition|?
name|FieldSelectorResult
operator|.
name|LOAD_AND_BREAK
else|:
name|FieldSelectorResult
operator|.
name|NO_LOAD
return|;
block|}
block|}
expr_stmt|;
block|}
comment|/**    * Extract the name of the input doc from the index.    * @param searcher access to the index.    * @param docid ID of doc whose name is needed.    * @return the name of the input doc as extracted from the index.    * @throws IOException if cannot extract the doc name from the index.    */
DECL|method|docName
specifier|public
name|String
name|docName
parameter_list|(
name|Searcher
name|searcher
parameter_list|,
name|int
name|docid
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|searcher
operator|.
name|doc
argument_list|(
name|docid
argument_list|,
name|fldSel
argument_list|)
operator|.
name|get
argument_list|(
name|docNameField
argument_list|)
return|;
block|}
block|}
end_class
end_unit
