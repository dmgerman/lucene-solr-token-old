begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.codecs.memory
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|memory
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|DocValuesConsumer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|DocValuesFormat
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|DocValuesProducer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|SortedSetDocValuesField
import|;
end_import
begin_comment
comment|// javadocs
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SegmentReadState
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SegmentWriteState
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|ArrayUtil
import|;
end_import
begin_comment
comment|/** In-memory docvalues format that does no (or very little)  *  compression.  Indexed values are stored on disk, but  *  then at search time all values are loaded into memory as  *  simple java arrays.  For numeric values, it uses  *  byte[], short[], int[], long[] as necessary to fit the  *  range of the values.  For binary values, there is an int  *  (4 bytes) overhead per value.  *  *<p>Limitations:  *<ul>  *<li>For binary and sorted fields the total space  *        required for all binary values cannot exceed about  *        2.1 GB (see #MAX_TOTAL_BYTES_LENGTH).</li>  *  *<li>For sorted set fields, the sum of the size of each  *        document's set of values cannot exceed about 2.1 B  *        values (see #MAX_SORTED_SET_ORDS).  For example,  *        if every document has 10 values (10 instances of  *        {@link SortedSetDocValuesField}) added, then no  *        more than ~210 M documents can be added to one  *        segment.</li>  *</ul> */
end_comment
begin_class
DECL|class|DirectDocValuesFormat
specifier|public
class|class
name|DirectDocValuesFormat
extends|extends
name|DocValuesFormat
block|{
comment|/** The sum of all byte lengths for binary field, or for    *  the unique values in sorted or sorted set fields, cannot    *  exceed this. */
DECL|field|MAX_TOTAL_BYTES_LENGTH
specifier|public
specifier|final
specifier|static
name|int
name|MAX_TOTAL_BYTES_LENGTH
init|=
name|ArrayUtil
operator|.
name|MAX_ARRAY_LENGTH
decl_stmt|;
comment|/** The sum of the number of values across all documents    *  in a sorted set field cannot exceed this. */
DECL|field|MAX_SORTED_SET_ORDS
specifier|public
specifier|final
specifier|static
name|int
name|MAX_SORTED_SET_ORDS
init|=
name|ArrayUtil
operator|.
name|MAX_ARRAY_LENGTH
decl_stmt|;
comment|/** Sole constructor. */
DECL|method|DirectDocValuesFormat
specifier|public
name|DirectDocValuesFormat
parameter_list|()
block|{
name|super
argument_list|(
literal|"Direct"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|fieldsConsumer
specifier|public
name|DocValuesConsumer
name|fieldsConsumer
parameter_list|(
name|SegmentWriteState
name|state
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|DirectDocValuesConsumer
argument_list|(
name|state
argument_list|,
name|DATA_CODEC
argument_list|,
name|DATA_EXTENSION
argument_list|,
name|METADATA_CODEC
argument_list|,
name|METADATA_EXTENSION
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|fieldsProducer
specifier|public
name|DocValuesProducer
name|fieldsProducer
parameter_list|(
name|SegmentReadState
name|state
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|DirectDocValuesProducer
argument_list|(
name|state
argument_list|,
name|DATA_CODEC
argument_list|,
name|DATA_EXTENSION
argument_list|,
name|METADATA_CODEC
argument_list|,
name|METADATA_EXTENSION
argument_list|)
return|;
block|}
DECL|field|DATA_CODEC
specifier|static
specifier|final
name|String
name|DATA_CODEC
init|=
literal|"DirectDocValuesData"
decl_stmt|;
DECL|field|DATA_EXTENSION
specifier|static
specifier|final
name|String
name|DATA_EXTENSION
init|=
literal|"dvdd"
decl_stmt|;
DECL|field|METADATA_CODEC
specifier|static
specifier|final
name|String
name|METADATA_CODEC
init|=
literal|"DirectDocValuesMetadata"
decl_stmt|;
DECL|field|METADATA_EXTENSION
specifier|static
specifier|final
name|String
name|METADATA_EXTENSION
init|=
literal|"dvdm"
decl_stmt|;
block|}
end_class
end_unit
