begin_unit
begin_package
DECL|package|org.apache.lucene.codecs.diskdv
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|diskdv
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|codecs
operator|.
name|lucene49
operator|.
name|Lucene49DocValuesProducer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|FieldInfo
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SegmentReadState
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|IndexInput
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|packed
operator|.
name|MonotonicBlockPackedReader
import|;
end_import
begin_class
DECL|class|DiskDocValuesProducer
class|class
name|DiskDocValuesProducer
extends|extends
name|Lucene49DocValuesProducer
block|{
DECL|method|DiskDocValuesProducer
name|DiskDocValuesProducer
parameter_list|(
name|SegmentReadState
name|state
parameter_list|,
name|String
name|dataCodec
parameter_list|,
name|String
name|dataExtension
parameter_list|,
name|String
name|metaCodec
parameter_list|,
name|String
name|metaExtension
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|state
argument_list|,
name|dataCodec
argument_list|,
name|dataExtension
argument_list|,
name|metaCodec
argument_list|,
name|metaExtension
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getAddressInstance
specifier|protected
name|MonotonicBlockPackedReader
name|getAddressInstance
parameter_list|(
name|IndexInput
name|data
parameter_list|,
name|FieldInfo
name|field
parameter_list|,
name|BinaryEntry
name|bytes
parameter_list|)
throws|throws
name|IOException
block|{
name|data
operator|.
name|seek
argument_list|(
name|bytes
operator|.
name|addressesOffset
argument_list|)
expr_stmt|;
return|return
name|MonotonicBlockPackedReader
operator|.
name|of
argument_list|(
name|data
operator|.
name|clone
argument_list|()
argument_list|,
name|bytes
operator|.
name|packedIntsVersion
argument_list|,
name|bytes
operator|.
name|blockSize
argument_list|,
name|bytes
operator|.
name|count
operator|+
literal|1
argument_list|,
literal|true
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getIntervalInstance
specifier|protected
name|MonotonicBlockPackedReader
name|getIntervalInstance
parameter_list|(
name|IndexInput
name|data
parameter_list|,
name|FieldInfo
name|field
parameter_list|,
name|BinaryEntry
name|bytes
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|AssertionError
argument_list|()
throw|;
block|}
annotation|@
name|Override
DECL|method|getOrdIndexInstance
specifier|protected
name|MonotonicBlockPackedReader
name|getOrdIndexInstance
parameter_list|(
name|IndexInput
name|data
parameter_list|,
name|FieldInfo
name|field
parameter_list|,
name|NumericEntry
name|entry
parameter_list|)
throws|throws
name|IOException
block|{
name|data
operator|.
name|seek
argument_list|(
name|entry
operator|.
name|offset
argument_list|)
expr_stmt|;
return|return
name|MonotonicBlockPackedReader
operator|.
name|of
argument_list|(
name|data
operator|.
name|clone
argument_list|()
argument_list|,
name|entry
operator|.
name|packedIntsVersion
argument_list|,
name|entry
operator|.
name|blockSize
argument_list|,
name|entry
operator|.
name|count
operator|+
literal|1
argument_list|,
literal|true
argument_list|)
return|;
block|}
block|}
end_class
end_unit
