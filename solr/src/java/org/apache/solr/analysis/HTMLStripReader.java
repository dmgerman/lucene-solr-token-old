begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.analysis
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|analysis
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|CharReader
import|;
end_import
begin_comment
comment|/**  * A Reader that wraps another reader and attempts to strip out HTML constructs.  *  *  * @version $Id$  * @deprecated Use {@link HTMLStripCharFilter}  */
end_comment
begin_class
annotation|@
name|Deprecated
DECL|class|HTMLStripReader
specifier|public
class|class
name|HTMLStripReader
extends|extends
name|HTMLStripCharFilter
block|{
DECL|method|main
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|IOException
block|{
name|Reader
name|in
init|=
operator|new
name|HTMLStripReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|System
operator|.
name|in
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|ch
decl_stmt|;
while|while
condition|(
operator|(
name|ch
operator|=
name|in
operator|.
name|read
argument_list|()
operator|)
operator|!=
operator|-
literal|1
condition|)
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
operator|(
name|char
operator|)
name|ch
argument_list|)
expr_stmt|;
block|}
DECL|method|HTMLStripReader
specifier|public
name|HTMLStripReader
parameter_list|(
name|Reader
name|source
parameter_list|)
block|{
name|super
argument_list|(
name|CharReader
operator|.
name|get
argument_list|(
name|source
operator|.
name|markSupported
argument_list|()
condition|?
name|source
else|:
operator|new
name|BufferedReader
argument_list|(
name|source
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|HTMLStripReader
specifier|public
name|HTMLStripReader
parameter_list|(
name|Reader
name|source
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|escapedTags
parameter_list|)
block|{
name|super
argument_list|(
name|CharReader
operator|.
name|get
argument_list|(
name|source
argument_list|)
argument_list|,
name|escapedTags
argument_list|)
expr_stmt|;
block|}
DECL|method|HTMLStripReader
specifier|public
name|HTMLStripReader
parameter_list|(
name|Reader
name|source
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|escapedTags
parameter_list|,
name|int
name|readAheadLimit
parameter_list|)
block|{
name|super
argument_list|(
name|CharReader
operator|.
name|get
argument_list|(
name|source
argument_list|)
argument_list|,
name|escapedTags
argument_list|,
name|readAheadLimit
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
