begin_unit
begin_package
DECL|package|org.apache.solr.util
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
package|;
end_package
begin_comment
comment|/**  * Copyright 2004 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import
begin_class
DECL|class|ArraysUtilsTest
specifier|public
class|class
name|ArraysUtilsTest
extends|extends
name|TestCase
block|{
DECL|method|ArraysUtilsTest
specifier|public
name|ArraysUtilsTest
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|super
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
DECL|method|setUp
specifier|protected
name|void
name|setUp
parameter_list|()
block|{   }
DECL|method|tearDown
specifier|protected
name|void
name|tearDown
parameter_list|()
block|{    }
DECL|method|test
specifier|public
name|void
name|test
parameter_list|()
block|{
name|String
name|left
init|=
literal|"this is equal"
decl_stmt|;
name|String
name|right
init|=
name|left
decl_stmt|;
name|char
index|[]
name|leftChars
init|=
name|left
operator|.
name|toCharArray
argument_list|()
decl_stmt|;
name|char
index|[]
name|rightChars
init|=
name|right
operator|.
name|toCharArray
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|left
operator|+
literal|" does not equal: "
operator|+
name|right
argument_list|,
name|ArraysUtils
operator|.
name|equals
argument_list|(
name|leftChars
argument_list|,
literal|0
argument_list|,
name|rightChars
argument_list|,
literal|0
argument_list|,
name|left
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|left
operator|+
literal|" does not equal: "
operator|+
name|right
argument_list|,
name|ArraysUtils
operator|.
name|equals
argument_list|(
name|leftChars
argument_list|,
literal|1
argument_list|,
name|rightChars
argument_list|,
literal|0
argument_list|,
name|left
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|left
operator|+
literal|" does not equal: "
operator|+
name|right
argument_list|,
name|ArraysUtils
operator|.
name|equals
argument_list|(
name|leftChars
argument_list|,
literal|1
argument_list|,
name|rightChars
argument_list|,
literal|2
argument_list|,
name|left
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|left
operator|+
literal|" does not equal: "
operator|+
name|right
argument_list|,
name|ArraysUtils
operator|.
name|equals
argument_list|(
name|leftChars
argument_list|,
literal|25
argument_list|,
name|rightChars
argument_list|,
literal|0
argument_list|,
name|left
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|left
operator|+
literal|" does not equal: "
operator|+
name|right
argument_list|,
name|ArraysUtils
operator|.
name|equals
argument_list|(
name|leftChars
argument_list|,
literal|12
argument_list|,
name|rightChars
argument_list|,
literal|0
argument_list|,
name|left
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
