begin_unit
begin_package
DECL|package|org.apache.solr.client.solrj
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|embedded
operator|.
name|JettySolrRunner
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|CommonsHttpSolrServer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import
begin_class
DECL|class|SolrJettyTestBase
specifier|abstract
specifier|public
class|class
name|SolrJettyTestBase
extends|extends
name|SolrTestCaseJ4
block|{
comment|// Try not introduce a dependency on the example schema or config unless you need to.
comment|// using configs in the test directory allows more flexibility to change "example"
comment|// without breaking configs.
DECL|field|EXAMPLE_HOME
specifier|public
specifier|static
name|String
name|EXAMPLE_HOME
init|=
literal|"../../../example/solr/"
decl_stmt|;
DECL|field|EXAMPLE_SCHEMA
specifier|public
specifier|static
name|String
name|EXAMPLE_SCHEMA
init|=
name|EXAMPLE_HOME
operator|+
literal|"conf/schema.xml"
decl_stmt|;
DECL|field|EXAMPLE_CONFIG
specifier|public
specifier|static
name|String
name|EXAMPLE_CONFIG
init|=
name|EXAMPLE_HOME
operator|+
literal|"conf/solrconfig.xml"
decl_stmt|;
DECL|method|getSolrHome
specifier|public
name|String
name|getSolrHome
parameter_list|()
block|{
return|return
name|EXAMPLE_HOME
return|;
block|}
DECL|field|jetty
specifier|public
specifier|static
name|JettySolrRunner
name|jetty
decl_stmt|;
DECL|field|port
specifier|public
specifier|static
name|int
name|port
decl_stmt|;
DECL|field|server
specifier|public
specifier|static
name|SolrServer
name|server
decl_stmt|;
DECL|field|context
specifier|public
specifier|static
name|String
name|context
decl_stmt|;
DECL|method|createJetty
specifier|public
specifier|static
name|JettySolrRunner
name|createJetty
parameter_list|(
name|String
name|solrHome
parameter_list|,
name|String
name|configFile
parameter_list|,
name|String
name|context
parameter_list|)
throws|throws
name|Exception
block|{
comment|// creates the data dir
name|initCore
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|ignoreException
argument_list|(
literal|"maxWarmingSearchers"
argument_list|)
expr_stmt|;
comment|// this sets the property for jetty starting SolrDispatchFilter
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.solr.home"
argument_list|,
name|solrHome
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.data.dir"
argument_list|,
name|dataDir
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|=
name|context
operator|==
literal|null
condition|?
literal|"/solr"
else|:
name|context
expr_stmt|;
name|SolrJettyTestBase
operator|.
name|context
operator|=
name|context
expr_stmt|;
name|JettySolrRunner
name|jetty
init|=
operator|new
name|JettySolrRunner
argument_list|(
name|context
argument_list|,
literal|0
argument_list|,
name|configFile
argument_list|)
decl_stmt|;
name|jetty
operator|.
name|start
argument_list|()
expr_stmt|;
name|port
operator|=
name|jetty
operator|.
name|getLocalPort
argument_list|()
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Jetty Assigned Port#"
operator|+
name|port
argument_list|)
expr_stmt|;
return|return
name|jetty
return|;
block|}
annotation|@
name|AfterClass
DECL|method|afterSolrJettyTestBase
specifier|public
specifier|static
name|void
name|afterSolrJettyTestBase
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|jetty
operator|!=
literal|null
condition|)
block|{
name|jetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|jetty
operator|=
literal|null
expr_stmt|;
block|}
block|}
DECL|method|getSolrServer
specifier|public
name|SolrServer
name|getSolrServer
parameter_list|()
block|{
block|{
if|if
condition|(
name|server
operator|==
literal|null
condition|)
block|{
name|server
operator|=
name|createNewSolrServer
argument_list|()
expr_stmt|;
block|}
return|return
name|server
return|;
block|}
block|}
comment|/**    * Create a new solr server    */
DECL|method|createNewSolrServer
specifier|protected
specifier|abstract
name|SolrServer
name|createNewSolrServer
parameter_list|()
function_decl|;
block|}
end_class
end_unit
