begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.util
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
package|;
end_package
begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|ThreadFilter
import|;
end_import
begin_class
DECL|class|BadZookeeperThreadsFilter
specifier|public
class|class
name|BadZookeeperThreadsFilter
implements|implements
name|ThreadFilter
block|{
annotation|@
name|Override
DECL|method|reject
specifier|public
name|boolean
name|reject
parameter_list|(
name|Thread
name|t
parameter_list|)
block|{
name|String
name|name
init|=
name|t
operator|.
name|getName
argument_list|()
decl_stmt|;
name|StackTraceElement
index|[]
name|stack
init|=
name|t
operator|.
name|getStackTrace
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
literal|"Thread-"
argument_list|)
operator|&&
name|stack
operator|.
name|length
operator|>
literal|1
operator|&&
name|stack
index|[
name|stack
operator|.
name|length
operator|-
literal|2
index|]
operator|.
name|getClassName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"org.apache.zookeeper.Login$1"
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
comment|// see ZOOKEEPER-2100
block|}
return|return
literal|false
return|;
block|}
block|}
end_class
end_unit
