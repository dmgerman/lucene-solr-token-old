begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.analysis
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|analysis
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|BaseTokenStreamTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|Config
import|;
end_import
begin_comment
comment|/**  * General token testing helper functions  */
end_comment
begin_class
DECL|class|BaseTokenTestCase
specifier|public
specifier|abstract
class|class
name|BaseTokenTestCase
extends|extends
name|BaseTokenStreamTestCase
block|{
DECL|field|EMPTY_PARAMS
specifier|protected
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|EMPTY_PARAMS
init|=
name|Collections
operator|.
name|emptyMap
argument_list|()
decl_stmt|;
comment|/** The default test version for easy testing */
DECL|field|DEFAULT_VERSION
specifier|public
specifier|static
specifier|final
name|Version
name|DEFAULT_VERSION
decl_stmt|;
static|static
block|{
name|String
name|rawVersion
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"tests.luceneMatchVersion"
argument_list|,
literal|"LUCENE_CURRENT"
argument_list|)
decl_stmt|;
try|try
block|{
name|DEFAULT_VERSION
operator|=
name|Version
operator|.
name|parseLeniently
argument_list|(
name|rawVersion
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|iae
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Test Lucene Match Version ["
operator|+
name|rawVersion
operator|+
literal|"] is invalid"
argument_list|,
name|iae
argument_list|)
throw|;
block|}
block|}
block|}
end_class
end_unit
