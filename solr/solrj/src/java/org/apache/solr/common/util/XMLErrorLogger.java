begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.common.util
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
package|;
end_package
begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import
begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ErrorHandler
import|;
end_import
begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXParseException
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|ErrorListener
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerException
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|Location
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLReporter
import|;
end_import
begin_class
DECL|class|XMLErrorLogger
specifier|public
specifier|final
class|class
name|XMLErrorLogger
implements|implements
name|ErrorHandler
implements|,
name|ErrorListener
implements|,
name|XMLReporter
block|{
DECL|field|log
specifier|private
specifier|final
name|Logger
name|log
decl_stmt|;
DECL|method|XMLErrorLogger
specifier|public
name|XMLErrorLogger
parameter_list|(
name|Logger
name|log
parameter_list|)
block|{
name|this
operator|.
name|log
operator|=
name|log
expr_stmt|;
block|}
comment|// ErrorHandler
annotation|@
name|Override
DECL|method|warning
specifier|public
name|void
name|warning
parameter_list|(
name|SAXParseException
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"XML parse warning in \""
operator|+
name|e
operator|.
name|getSystemId
argument_list|()
operator|+
literal|"\", line "
operator|+
name|e
operator|.
name|getLineNumber
argument_list|()
operator|+
literal|", column "
operator|+
name|e
operator|.
name|getColumnNumber
argument_list|()
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|error
specifier|public
name|void
name|error
parameter_list|(
name|SAXParseException
name|e
parameter_list|)
throws|throws
name|SAXException
block|{
throw|throw
name|e
throw|;
block|}
annotation|@
name|Override
DECL|method|fatalError
specifier|public
name|void
name|fatalError
parameter_list|(
name|SAXParseException
name|e
parameter_list|)
throws|throws
name|SAXException
block|{
throw|throw
name|e
throw|;
block|}
comment|// ErrorListener
annotation|@
name|Override
DECL|method|warning
specifier|public
name|void
name|warning
parameter_list|(
name|TransformerException
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
name|e
operator|.
name|getMessageAndLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|error
specifier|public
name|void
name|error
parameter_list|(
name|TransformerException
name|e
parameter_list|)
throws|throws
name|TransformerException
block|{
throw|throw
name|e
throw|;
block|}
annotation|@
name|Override
DECL|method|fatalError
specifier|public
name|void
name|fatalError
parameter_list|(
name|TransformerException
name|e
parameter_list|)
throws|throws
name|TransformerException
block|{
throw|throw
name|e
throw|;
block|}
comment|// XMLReporter
annotation|@
name|Override
DECL|method|report
specifier|public
name|void
name|report
parameter_list|(
name|String
name|message
parameter_list|,
name|String
name|errorType
parameter_list|,
name|Object
name|relatedInformation
parameter_list|,
name|Location
name|loc
parameter_list|)
block|{
specifier|final
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"XML parser reported "
argument_list|)
operator|.
name|append
argument_list|(
name|errorType
argument_list|)
decl_stmt|;
if|if
condition|(
name|loc
operator|!=
literal|null
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|" in \""
argument_list|)
operator|.
name|append
argument_list|(
name|loc
operator|.
name|getSystemId
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"\", line "
argument_list|)
operator|.
name|append
argument_list|(
name|loc
operator|.
name|getLineNumber
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", column "
argument_list|)
operator|.
name|append
argument_list|(
name|loc
operator|.
name|getColumnNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|log
operator|.
name|warn
argument_list|(
name|sb
operator|.
name|append
argument_list|(
literal|": "
argument_list|)
operator|.
name|append
argument_list|(
name|message
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
