begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.client.solrj.request
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrClient
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|ConfigSetAdminResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ConfigSetParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ConfigSetParams
operator|.
name|ConfigSetAction
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ModifiableSolrParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|SolrParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|ContentStream
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|CommonParams
operator|.
name|NAME
import|;
end_import
begin_comment
comment|/**  * This class is experimental and subject to change.  *  * @since solr 5.4  */
end_comment
begin_class
DECL|class|ConfigSetAdminRequest
specifier|public
specifier|abstract
class|class
name|ConfigSetAdminRequest
parameter_list|<
name|Q
extends|extends
name|ConfigSetAdminRequest
parameter_list|<
name|Q
parameter_list|,
name|R
parameter_list|>
parameter_list|,
name|R
extends|extends
name|ConfigSetAdminResponse
parameter_list|>
extends|extends
name|SolrRequest
argument_list|<
name|R
argument_list|>
block|{
DECL|field|action
specifier|protected
name|ConfigSetAction
name|action
init|=
literal|null
decl_stmt|;
DECL|method|setAction
specifier|protected
name|ConfigSetAdminRequest
name|setAction
parameter_list|(
name|ConfigSetAction
name|action
parameter_list|)
block|{
name|this
operator|.
name|action
operator|=
name|action
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|ConfigSetAdminRequest
specifier|public
name|ConfigSetAdminRequest
parameter_list|()
block|{
name|super
argument_list|(
name|METHOD
operator|.
name|GET
argument_list|,
literal|"/admin/configs"
argument_list|)
expr_stmt|;
block|}
DECL|method|ConfigSetAdminRequest
specifier|public
name|ConfigSetAdminRequest
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
name|METHOD
operator|.
name|GET
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
DECL|method|getThis
specifier|protected
specifier|abstract
name|Q
name|getThis
parameter_list|()
function_decl|;
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
if|if
condition|(
name|action
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"no action specified!"
argument_list|)
throw|;
block|}
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|ConfigSetParams
operator|.
name|ACTION
argument_list|,
name|action
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
annotation|@
name|Override
DECL|method|getContentStreams
specifier|public
name|Collection
argument_list|<
name|ContentStream
argument_list|>
name|getContentStreams
parameter_list|()
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|createResponse
specifier|protected
specifier|abstract
name|R
name|createResponse
parameter_list|(
name|SolrClient
name|client
parameter_list|)
function_decl|;
DECL|class|ConfigSetSpecificAdminRequest
specifier|protected
specifier|abstract
specifier|static
class|class
name|ConfigSetSpecificAdminRequest
parameter_list|<
name|T
extends|extends
name|ConfigSetAdminRequest
parameter_list|<
name|T
parameter_list|,
name|ConfigSetAdminResponse
parameter_list|>
parameter_list|>
extends|extends
name|ConfigSetAdminRequest
argument_list|<
name|T
argument_list|,
name|ConfigSetAdminResponse
argument_list|>
block|{
DECL|field|configSetName
specifier|protected
name|String
name|configSetName
init|=
literal|null
decl_stmt|;
DECL|method|setConfigSetName
specifier|public
specifier|final
name|T
name|setConfigSetName
parameter_list|(
name|String
name|configSetName
parameter_list|)
block|{
name|this
operator|.
name|configSetName
operator|=
name|configSetName
expr_stmt|;
return|return
name|getThis
argument_list|()
return|;
block|}
DECL|method|getConfigSetName
specifier|public
specifier|final
name|String
name|getConfigSetName
parameter_list|()
block|{
return|return
name|configSetName
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|(
name|super
operator|.
name|getParams
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|configSetName
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"no ConfigSet specified!"
argument_list|)
throw|;
block|}
name|params
operator|.
name|set
argument_list|(
name|NAME
argument_list|,
name|configSetName
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
annotation|@
name|Override
DECL|method|createResponse
specifier|protected
name|ConfigSetAdminResponse
name|createResponse
parameter_list|(
name|SolrClient
name|client
parameter_list|)
block|{
return|return
operator|new
name|ConfigSetAdminResponse
argument_list|()
return|;
block|}
block|}
comment|// CREATE request
DECL|class|Create
specifier|public
specifier|static
class|class
name|Create
extends|extends
name|ConfigSetSpecificAdminRequest
argument_list|<
name|Create
argument_list|>
block|{
DECL|field|PROPERTY_PREFIX
specifier|protected
specifier|static
name|String
name|PROPERTY_PREFIX
init|=
literal|"configSetProp"
decl_stmt|;
DECL|field|baseConfigSetName
specifier|protected
name|String
name|baseConfigSetName
decl_stmt|;
DECL|field|properties
specifier|protected
name|Properties
name|properties
decl_stmt|;
DECL|method|Create
specifier|public
name|Create
parameter_list|()
block|{
name|action
operator|=
name|ConfigSetAction
operator|.
name|CREATE
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getThis
specifier|protected
name|Create
name|getThis
parameter_list|()
block|{
return|return
name|this
return|;
block|}
DECL|method|setBaseConfigSetName
specifier|public
specifier|final
name|Create
name|setBaseConfigSetName
parameter_list|(
name|String
name|baseConfigSetName
parameter_list|)
block|{
name|this
operator|.
name|baseConfigSetName
operator|=
name|baseConfigSetName
expr_stmt|;
return|return
name|getThis
argument_list|()
return|;
block|}
DECL|method|getBaseConfigSetName
specifier|public
specifier|final
name|String
name|getBaseConfigSetName
parameter_list|()
block|{
return|return
name|baseConfigSetName
return|;
block|}
DECL|method|setNewConfigSetProperties
specifier|public
specifier|final
name|Create
name|setNewConfigSetProperties
parameter_list|(
name|Properties
name|properties
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
return|return
name|getThis
argument_list|()
return|;
block|}
DECL|method|getNewConfigSetProperties
specifier|public
specifier|final
name|Properties
name|getNewConfigSetProperties
parameter_list|()
block|{
return|return
name|properties
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|(
name|super
operator|.
name|getParams
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|baseConfigSetName
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"no Base ConfigSet specified!"
argument_list|)
throw|;
block|}
name|params
operator|.
name|set
argument_list|(
literal|"baseConfigSet"
argument_list|,
name|baseConfigSetName
argument_list|)
expr_stmt|;
if|if
condition|(
name|properties
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
name|entry
range|:
name|properties
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|params
operator|.
name|set
argument_list|(
name|PROPERTY_PREFIX
operator|+
literal|"."
operator|+
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|params
return|;
block|}
block|}
comment|// DELETE request
DECL|class|Delete
specifier|public
specifier|static
class|class
name|Delete
extends|extends
name|ConfigSetSpecificAdminRequest
argument_list|<
name|Delete
argument_list|>
block|{
DECL|method|Delete
specifier|public
name|Delete
parameter_list|()
block|{
name|action
operator|=
name|ConfigSetAction
operator|.
name|DELETE
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getThis
specifier|protected
name|Delete
name|getThis
parameter_list|()
block|{
return|return
name|this
return|;
block|}
block|}
comment|// LIST request
DECL|class|List
specifier|public
specifier|static
class|class
name|List
extends|extends
name|ConfigSetAdminRequest
argument_list|<
name|List
argument_list|,
name|ConfigSetAdminResponse
operator|.
name|List
argument_list|>
block|{
DECL|method|List
specifier|public
name|List
parameter_list|()
block|{
name|action
operator|=
name|ConfigSetAction
operator|.
name|LIST
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getThis
specifier|protected
name|List
name|getThis
parameter_list|()
block|{
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|createResponse
specifier|protected
name|ConfigSetAdminResponse
operator|.
name|List
name|createResponse
parameter_list|(
name|SolrClient
name|client
parameter_list|)
block|{
return|return
operator|new
name|ConfigSetAdminResponse
operator|.
name|List
argument_list|()
return|;
block|}
block|}
block|}
end_class
end_unit
