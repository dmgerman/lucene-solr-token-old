begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.client.solrj.response.schema
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|schema
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|schema
operator|.
name|AnalyzerDefinition
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|schema
operator|.
name|FieldTypeDefinition
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|SolrResponseBase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import
begin_comment
comment|/**  * This class is used to wrap the response messages retrieved from Solr Schema API.  *  * @see<a href="https://cwiki.apache.org/confluence/display/solr/Schema+API">Solr Schema API</a>  * @since solr 5.3  */
end_comment
begin_class
DECL|class|SchemaResponse
specifier|public
class|class
name|SchemaResponse
extends|extends
name|SolrResponseBase
block|{
DECL|field|schemaRepresentation
specifier|private
name|SchemaRepresentation
name|schemaRepresentation
decl_stmt|;
DECL|method|extractAttributeMap
specifier|private
specifier|static
parameter_list|<
name|T
parameter_list|>
name|Map
argument_list|<
name|String
argument_list|,
name|T
argument_list|>
name|extractAttributeMap
parameter_list|(
name|NamedList
argument_list|<
name|T
argument_list|>
name|namedList
parameter_list|)
block|{
if|if
condition|(
name|namedList
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|T
argument_list|>
name|result
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|namedList
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|T
name|val
init|=
name|namedList
operator|.
name|getVal
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|namedList
operator|.
name|getName
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|val
operator|instanceof
name|NamedList
operator|)
operator|&&
operator|!
operator|(
name|val
operator|instanceof
name|List
operator|)
condition|)
block|{
name|result
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|result
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|createAnalyzerDefinition
specifier|private
specifier|static
name|AnalyzerDefinition
name|createAnalyzerDefinition
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|analyzerNamedList
parameter_list|)
block|{
name|AnalyzerDefinition
name|analyzerDefinition
init|=
operator|new
name|AnalyzerDefinition
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|analyzerAttributes
init|=
name|extractAttributeMap
argument_list|(
name|analyzerNamedList
argument_list|)
decl_stmt|;
name|analyzerDefinition
operator|.
name|setAttributes
argument_list|(
name|analyzerAttributes
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
name|charFiltersList
init|=
operator|(
name|List
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
operator|)
name|analyzerNamedList
operator|.
name|get
argument_list|(
literal|"charFilters"
argument_list|)
decl_stmt|;
if|if
condition|(
name|charFiltersList
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|charFiltersAttributesList
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|charFilterNamedList
range|:
name|charFiltersList
control|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|charFilterAttributes
init|=
name|extractAttributeMap
argument_list|(
name|charFilterNamedList
argument_list|)
decl_stmt|;
name|charFiltersAttributesList
operator|.
name|add
argument_list|(
name|charFilterAttributes
argument_list|)
expr_stmt|;
block|}
name|analyzerDefinition
operator|.
name|setCharFilters
argument_list|(
name|charFiltersAttributesList
argument_list|)
expr_stmt|;
block|}
name|NamedList
argument_list|<
name|Object
argument_list|>
name|tokenizerNamedList
init|=
operator|(
name|NamedList
argument_list|<
name|Object
argument_list|>
operator|)
name|analyzerNamedList
operator|.
name|get
argument_list|(
literal|"tokenizer"
argument_list|)
decl_stmt|;
if|if
condition|(
name|tokenizerNamedList
operator|!=
literal|null
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|tokenizerAttributes
init|=
name|extractAttributeMap
argument_list|(
name|tokenizerNamedList
argument_list|)
decl_stmt|;
name|analyzerDefinition
operator|.
name|setTokenizer
argument_list|(
name|tokenizerAttributes
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
name|filtersList
init|=
operator|(
name|List
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
operator|)
name|analyzerNamedList
operator|.
name|get
argument_list|(
literal|"filters"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|filtersAttributesList
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
if|if
condition|(
name|filtersList
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|filterNamedList
range|:
name|filtersList
control|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|filterAttributes
init|=
name|extractAttributeMap
argument_list|(
name|filterNamedList
argument_list|)
decl_stmt|;
name|filtersAttributesList
operator|.
name|add
argument_list|(
name|filterAttributes
argument_list|)
expr_stmt|;
block|}
name|analyzerDefinition
operator|.
name|setFilters
argument_list|(
name|filtersAttributesList
argument_list|)
expr_stmt|;
block|}
return|return
name|analyzerDefinition
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|createFieldTypeDefinition
specifier|private
specifier|static
name|FieldTypeDefinition
name|createFieldTypeDefinition
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|fieldTypeNamedList
parameter_list|)
block|{
name|FieldTypeDefinition
name|fieldTypeDefinition
init|=
operator|new
name|FieldTypeDefinition
argument_list|()
decl_stmt|;
name|fillFieldTypeDefinition
argument_list|(
name|fieldTypeDefinition
argument_list|,
name|fieldTypeNamedList
argument_list|)
expr_stmt|;
return|return
name|fieldTypeDefinition
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|createFieldTypeRepresentation
specifier|private
specifier|static
name|FieldTypeRepresentation
name|createFieldTypeRepresentation
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|fieldTypeNamedList
parameter_list|)
block|{
name|FieldTypeRepresentation
name|fieldTypeRepresentation
init|=
operator|new
name|FieldTypeRepresentation
argument_list|()
decl_stmt|;
name|fillFieldTypeDefinition
argument_list|(
name|fieldTypeRepresentation
argument_list|,
name|fieldTypeNamedList
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|fields
init|=
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|fieldTypeNamedList
operator|.
name|get
argument_list|(
literal|"fields"
argument_list|)
decl_stmt|;
if|if
condition|(
name|fields
operator|!=
literal|null
condition|)
name|fieldTypeRepresentation
operator|.
name|setFields
argument_list|(
name|fields
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|dynamicFields
init|=
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|fieldTypeNamedList
operator|.
name|get
argument_list|(
literal|"dynamicFields"
argument_list|)
decl_stmt|;
if|if
condition|(
name|dynamicFields
operator|!=
literal|null
condition|)
name|fieldTypeRepresentation
operator|.
name|setDynamicFields
argument_list|(
name|dynamicFields
argument_list|)
expr_stmt|;
return|return
name|fieldTypeRepresentation
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|fillFieldTypeDefinition
specifier|private
specifier|static
name|void
name|fillFieldTypeDefinition
parameter_list|(
name|FieldTypeDefinition
name|fieldTypeDefinition
parameter_list|,
name|NamedList
argument_list|<
name|Object
argument_list|>
name|fieldTypeNamedList
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldTypeAttributes
init|=
name|extractAttributeMap
argument_list|(
name|fieldTypeNamedList
argument_list|)
decl_stmt|;
name|fieldTypeDefinition
operator|.
name|setAttributes
argument_list|(
name|fieldTypeAttributes
argument_list|)
expr_stmt|;
name|NamedList
argument_list|<
name|Object
argument_list|>
name|analyzerNamedList
init|=
operator|(
name|NamedList
argument_list|<
name|Object
argument_list|>
operator|)
name|fieldTypeNamedList
operator|.
name|get
argument_list|(
literal|"analyzer"
argument_list|)
decl_stmt|;
if|if
condition|(
name|analyzerNamedList
operator|!=
literal|null
condition|)
block|{
name|AnalyzerDefinition
name|analyzerDefinition
init|=
name|createAnalyzerDefinition
argument_list|(
name|analyzerNamedList
argument_list|)
decl_stmt|;
name|fieldTypeDefinition
operator|.
name|setAnalyzer
argument_list|(
name|analyzerDefinition
argument_list|)
expr_stmt|;
block|}
name|NamedList
argument_list|<
name|Object
argument_list|>
name|indexAnalyzerNamedList
init|=
operator|(
name|NamedList
argument_list|<
name|Object
argument_list|>
operator|)
name|fieldTypeNamedList
operator|.
name|get
argument_list|(
literal|"indexAnalyzer"
argument_list|)
decl_stmt|;
if|if
condition|(
name|indexAnalyzerNamedList
operator|!=
literal|null
condition|)
block|{
name|AnalyzerDefinition
name|indexAnalyzerDefinition
init|=
name|createAnalyzerDefinition
argument_list|(
name|indexAnalyzerNamedList
argument_list|)
decl_stmt|;
name|fieldTypeDefinition
operator|.
name|setIndexAnalyzer
argument_list|(
name|indexAnalyzerDefinition
argument_list|)
expr_stmt|;
block|}
name|NamedList
argument_list|<
name|Object
argument_list|>
name|queryAnalyzerNamedList
init|=
operator|(
name|NamedList
argument_list|<
name|Object
argument_list|>
operator|)
name|fieldTypeNamedList
operator|.
name|get
argument_list|(
literal|"queryAnalyzer"
argument_list|)
decl_stmt|;
if|if
condition|(
name|queryAnalyzerNamedList
operator|!=
literal|null
condition|)
block|{
name|AnalyzerDefinition
name|queryAnalyzerDefinition
init|=
name|createAnalyzerDefinition
argument_list|(
name|queryAnalyzerNamedList
argument_list|)
decl_stmt|;
name|fieldTypeDefinition
operator|.
name|setQueryAnalyzer
argument_list|(
name|queryAnalyzerDefinition
argument_list|)
expr_stmt|;
block|}
name|NamedList
argument_list|<
name|Object
argument_list|>
name|multiTermAnalyzerNamedList
init|=
operator|(
name|NamedList
argument_list|<
name|Object
argument_list|>
operator|)
name|fieldTypeNamedList
operator|.
name|get
argument_list|(
literal|"multiTermAnalyzer"
argument_list|)
decl_stmt|;
if|if
condition|(
name|multiTermAnalyzerNamedList
operator|!=
literal|null
condition|)
block|{
name|AnalyzerDefinition
name|multiTermAnalyzerDefinition
init|=
name|createAnalyzerDefinition
argument_list|(
name|multiTermAnalyzerNamedList
argument_list|)
decl_stmt|;
name|fieldTypeDefinition
operator|.
name|setMultiTermAnalyzer
argument_list|(
name|multiTermAnalyzerDefinition
argument_list|)
expr_stmt|;
block|}
name|NamedList
argument_list|<
name|Object
argument_list|>
name|similarityNamedList
init|=
operator|(
name|NamedList
argument_list|<
name|Object
argument_list|>
operator|)
name|fieldTypeNamedList
operator|.
name|get
argument_list|(
literal|"similarity"
argument_list|)
decl_stmt|;
if|if
condition|(
name|similarityNamedList
operator|!=
literal|null
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|similarityAttributes
init|=
name|extractAttributeMap
argument_list|(
name|similarityNamedList
argument_list|)
decl_stmt|;
name|fieldTypeDefinition
operator|.
name|setSimilarity
argument_list|(
name|similarityAttributes
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createSchemaConfiguration
specifier|private
specifier|static
name|SchemaRepresentation
name|createSchemaConfiguration
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|schemaNamedList
parameter_list|)
block|{
name|SchemaRepresentation
name|schemaRepresentation
init|=
operator|new
name|SchemaRepresentation
argument_list|()
decl_stmt|;
name|schemaRepresentation
operator|.
name|setName
argument_list|(
name|getSchemaName
argument_list|(
name|schemaNamedList
argument_list|)
argument_list|)
expr_stmt|;
name|schemaRepresentation
operator|.
name|setVersion
argument_list|(
name|getSchemaVersion
argument_list|(
name|schemaNamedList
argument_list|)
argument_list|)
expr_stmt|;
name|schemaRepresentation
operator|.
name|setUniqueKey
argument_list|(
name|getSchemaUniqueKey
argument_list|(
name|schemaNamedList
argument_list|)
argument_list|)
expr_stmt|;
name|schemaRepresentation
operator|.
name|setDefaultSearchField
argument_list|(
name|getDefaultSearchField
argument_list|(
name|schemaNamedList
argument_list|)
argument_list|)
expr_stmt|;
name|schemaRepresentation
operator|.
name|setDefaultOperator
argument_list|(
name|getDefaultOperator
argument_list|(
name|schemaNamedList
argument_list|)
argument_list|)
expr_stmt|;
name|schemaRepresentation
operator|.
name|setSimilarity
argument_list|(
name|getSimilarity
argument_list|(
name|schemaNamedList
argument_list|)
argument_list|)
expr_stmt|;
name|schemaRepresentation
operator|.
name|setFields
argument_list|(
name|getFields
argument_list|(
name|schemaNamedList
argument_list|)
argument_list|)
expr_stmt|;
name|schemaRepresentation
operator|.
name|setDynamicFields
argument_list|(
name|getDynamicFields
argument_list|(
name|schemaNamedList
argument_list|)
argument_list|)
expr_stmt|;
name|schemaRepresentation
operator|.
name|setFieldTypes
argument_list|(
name|getFieldTypeDefinitions
argument_list|(
name|schemaNamedList
argument_list|)
argument_list|)
expr_stmt|;
name|schemaRepresentation
operator|.
name|setCopyFields
argument_list|(
name|getCopyFields
argument_list|(
name|schemaNamedList
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|schemaRepresentation
return|;
block|}
DECL|method|getSchemaName
specifier|private
specifier|static
name|String
name|getSchemaName
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|schemaNamedList
parameter_list|)
block|{
return|return
operator|(
name|String
operator|)
name|schemaNamedList
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
return|;
block|}
DECL|method|getSchemaVersion
specifier|private
specifier|static
name|Float
name|getSchemaVersion
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|schemaNamedList
parameter_list|)
block|{
return|return
operator|(
name|Float
operator|)
name|schemaNamedList
operator|.
name|get
argument_list|(
literal|"version"
argument_list|)
return|;
block|}
DECL|method|getSchemaUniqueKey
specifier|private
specifier|static
name|String
name|getSchemaUniqueKey
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|schemaNamedList
parameter_list|)
block|{
return|return
operator|(
name|String
operator|)
name|schemaNamedList
operator|.
name|get
argument_list|(
literal|"uniqueKey"
argument_list|)
return|;
block|}
DECL|method|getDefaultSearchField
specifier|private
specifier|static
name|String
name|getDefaultSearchField
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|schemaNamedList
parameter_list|)
block|{
return|return
operator|(
name|String
operator|)
name|schemaNamedList
operator|.
name|get
argument_list|(
literal|"defaultSearchField"
argument_list|)
return|;
block|}
DECL|method|getSimilarity
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getSimilarity
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|schemaNamedList
parameter_list|)
block|{
name|NamedList
argument_list|<
name|Object
argument_list|>
name|similarityNamedList
init|=
operator|(
name|NamedList
argument_list|<
name|Object
argument_list|>
operator|)
name|schemaNamedList
operator|.
name|get
argument_list|(
literal|"similarity"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|similarity
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|similarityNamedList
operator|!=
literal|null
condition|)
name|similarity
operator|=
name|extractAttributeMap
argument_list|(
name|similarityNamedList
argument_list|)
expr_stmt|;
return|return
name|similarity
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getDefaultOperator
specifier|private
specifier|static
name|String
name|getDefaultOperator
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|schemaNamedList
parameter_list|)
block|{
name|String
name|defaultOperator
init|=
literal|null
decl_stmt|;
name|NamedList
argument_list|<
name|Object
argument_list|>
name|solrQueryParserProperties
init|=
operator|(
name|NamedList
argument_list|<
name|Object
argument_list|>
operator|)
name|schemaNamedList
operator|.
name|get
argument_list|(
literal|"solrQueryParser"
argument_list|)
decl_stmt|;
if|if
condition|(
name|solrQueryParserProperties
operator|!=
literal|null
condition|)
name|defaultOperator
operator|=
operator|(
name|String
operator|)
name|solrQueryParserProperties
operator|.
name|get
argument_list|(
literal|"defaultOperator"
argument_list|)
expr_stmt|;
return|return
name|defaultOperator
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getFields
specifier|private
specifier|static
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|getFields
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|schemaNamedList
parameter_list|)
block|{
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|fieldsAttributes
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
name|fieldsResponse
init|=
operator|(
name|List
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
operator|)
name|schemaNamedList
operator|.
name|get
argument_list|(
literal|"fields"
argument_list|)
decl_stmt|;
for|for
control|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|fieldNamedList
range|:
name|fieldsResponse
control|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fieldAttributes
operator|.
name|putAll
argument_list|(
name|extractAttributeMap
argument_list|(
name|fieldNamedList
argument_list|)
argument_list|)
expr_stmt|;
name|fieldsAttributes
operator|.
name|add
argument_list|(
name|fieldAttributes
argument_list|)
expr_stmt|;
block|}
return|return
name|fieldsAttributes
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getDynamicFields
specifier|private
specifier|static
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|getDynamicFields
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|schemaNamedList
parameter_list|)
block|{
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|dynamicFieldsAttributes
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
name|dynamicFieldsResponse
init|=
operator|(
name|List
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
operator|)
name|schemaNamedList
operator|.
name|get
argument_list|(
literal|"dynamicFields"
argument_list|)
decl_stmt|;
for|for
control|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|fieldNamedList
range|:
name|dynamicFieldsResponse
control|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|dynamicFieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|dynamicFieldAttributes
operator|.
name|putAll
argument_list|(
name|extractAttributeMap
argument_list|(
name|fieldNamedList
argument_list|)
argument_list|)
expr_stmt|;
name|dynamicFieldsAttributes
operator|.
name|add
argument_list|(
name|dynamicFieldAttributes
argument_list|)
expr_stmt|;
block|}
return|return
name|dynamicFieldsAttributes
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getCopyFields
specifier|private
specifier|static
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|getCopyFields
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|schemaNamedList
parameter_list|)
block|{
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|copyFieldsAttributes
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
name|copyFieldsResponse
init|=
operator|(
name|List
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
operator|)
name|schemaNamedList
operator|.
name|get
argument_list|(
literal|"copyFields"
argument_list|)
decl_stmt|;
for|for
control|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|copyFieldNamedList
range|:
name|copyFieldsResponse
control|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|copyFieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|copyFieldAttributes
operator|.
name|putAll
argument_list|(
name|extractAttributeMap
argument_list|(
name|copyFieldNamedList
argument_list|)
argument_list|)
expr_stmt|;
name|copyFieldsAttributes
operator|.
name|add
argument_list|(
name|copyFieldAttributes
argument_list|)
expr_stmt|;
block|}
return|return
name|copyFieldsAttributes
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getFieldTypeDefinitions
specifier|private
specifier|static
name|List
argument_list|<
name|FieldTypeDefinition
argument_list|>
name|getFieldTypeDefinitions
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|schemaNamedList
parameter_list|)
block|{
name|List
argument_list|<
name|FieldTypeDefinition
argument_list|>
name|fieldTypeDefinitions
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
name|fieldsResponse
init|=
operator|(
name|List
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
operator|)
name|schemaNamedList
operator|.
name|get
argument_list|(
literal|"fieldTypes"
argument_list|)
decl_stmt|;
for|for
control|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|fieldNamedList
range|:
name|fieldsResponse
control|)
block|{
name|FieldTypeDefinition
name|fieldTypeDefinition
init|=
name|createFieldTypeDefinition
argument_list|(
name|fieldNamedList
argument_list|)
decl_stmt|;
name|fieldTypeDefinitions
operator|.
name|add
argument_list|(
name|fieldTypeDefinition
argument_list|)
expr_stmt|;
block|}
return|return
name|fieldTypeDefinitions
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|getFieldTypeRepresentations
specifier|private
specifier|static
name|List
argument_list|<
name|FieldTypeRepresentation
argument_list|>
name|getFieldTypeRepresentations
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|schemaNamedList
parameter_list|)
block|{
name|List
argument_list|<
name|FieldTypeRepresentation
argument_list|>
name|fieldTypeRepresentations
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
name|fieldsResponse
init|=
operator|(
name|List
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
operator|)
name|schemaNamedList
operator|.
name|get
argument_list|(
literal|"fieldTypes"
argument_list|)
decl_stmt|;
for|for
control|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|fieldNamedList
range|:
name|fieldsResponse
control|)
block|{
name|FieldTypeRepresentation
name|fieldTypeRepresentation
init|=
name|createFieldTypeRepresentation
argument_list|(
name|fieldNamedList
argument_list|)
decl_stmt|;
name|fieldTypeRepresentations
operator|.
name|add
argument_list|(
name|fieldTypeRepresentation
argument_list|)
expr_stmt|;
block|}
return|return
name|fieldTypeRepresentations
return|;
block|}
comment|/**    * {@inheritDoc}    */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setResponse
specifier|public
name|void
name|setResponse
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
name|super
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|NamedList
argument_list|<
name|Object
argument_list|>
name|schemaNamedList
init|=
operator|(
name|NamedList
argument_list|<
name|Object
argument_list|>
operator|)
name|response
operator|.
name|get
argument_list|(
literal|"schema"
argument_list|)
decl_stmt|;
name|schemaRepresentation
operator|=
name|createSchemaConfiguration
argument_list|(
name|schemaNamedList
argument_list|)
expr_stmt|;
block|}
DECL|method|getSchemaRepresentation
specifier|public
name|SchemaRepresentation
name|getSchemaRepresentation
parameter_list|()
block|{
return|return
name|schemaRepresentation
return|;
block|}
DECL|class|SchemaNameResponse
specifier|public
specifier|static
class|class
name|SchemaNameResponse
extends|extends
name|SolrResponseBase
block|{
DECL|field|schemaName
specifier|private
name|String
name|schemaName
decl_stmt|;
comment|/**      * {@inheritDoc}      */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setResponse
specifier|public
name|void
name|setResponse
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
name|super
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|schemaName
operator|=
name|SchemaResponse
operator|.
name|getSchemaName
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
DECL|method|getSchemaName
specifier|public
name|String
name|getSchemaName
parameter_list|()
block|{
return|return
name|schemaName
return|;
block|}
block|}
DECL|class|SchemaVersionResponse
specifier|public
specifier|static
class|class
name|SchemaVersionResponse
extends|extends
name|SolrResponseBase
block|{
DECL|field|schemaVersion
specifier|private
name|float
name|schemaVersion
decl_stmt|;
comment|/**      * {@inheritDoc}      */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setResponse
specifier|public
name|void
name|setResponse
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
name|super
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|schemaVersion
operator|=
name|SchemaResponse
operator|.
name|getSchemaVersion
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
DECL|method|getSchemaVersion
specifier|public
name|float
name|getSchemaVersion
parameter_list|()
block|{
return|return
name|schemaVersion
return|;
block|}
block|}
DECL|class|FieldResponse
specifier|public
specifier|static
class|class
name|FieldResponse
extends|extends
name|SolrResponseBase
block|{
DECL|field|field
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|field
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|/**      * {@inheritDoc}      */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setResponse
specifier|public
name|void
name|setResponse
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
name|super
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|NamedList
argument_list|<
name|Object
argument_list|>
name|fieldResponse
init|=
operator|(
name|NamedList
argument_list|<
name|Object
argument_list|>
operator|)
name|response
operator|.
name|get
argument_list|(
literal|"field"
argument_list|)
decl_stmt|;
name|field
operator|.
name|putAll
argument_list|(
name|extractAttributeMap
argument_list|(
name|fieldResponse
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getField
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getField
parameter_list|()
block|{
return|return
name|field
return|;
block|}
block|}
DECL|class|FieldsResponse
specifier|public
specifier|static
class|class
name|FieldsResponse
extends|extends
name|SolrResponseBase
block|{
DECL|field|fields
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|fields
decl_stmt|;
comment|/**      * {@inheritDoc}      */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setResponse
specifier|public
name|void
name|setResponse
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
name|super
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|fields
operator|=
name|SchemaResponse
operator|.
name|getFields
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
DECL|method|getFields
specifier|public
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|getFields
parameter_list|()
block|{
return|return
name|fields
return|;
block|}
block|}
DECL|class|DynamicFieldResponse
specifier|public
specifier|static
class|class
name|DynamicFieldResponse
extends|extends
name|SolrResponseBase
block|{
DECL|field|dynamicField
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|dynamicField
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|/**      * {@inheritDoc}      */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setResponse
specifier|public
name|void
name|setResponse
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
name|super
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|NamedList
argument_list|<
name|Object
argument_list|>
name|dynamicFieldResponse
init|=
operator|(
name|NamedList
argument_list|<
name|Object
argument_list|>
operator|)
name|response
operator|.
name|get
argument_list|(
literal|"dynamicField"
argument_list|)
decl_stmt|;
name|dynamicField
operator|.
name|putAll
argument_list|(
name|extractAttributeMap
argument_list|(
name|dynamicFieldResponse
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getDynamicField
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getDynamicField
parameter_list|()
block|{
return|return
name|dynamicField
return|;
block|}
block|}
DECL|class|DynamicFieldsResponse
specifier|public
specifier|static
class|class
name|DynamicFieldsResponse
extends|extends
name|SolrResponseBase
block|{
DECL|field|dynamicFields
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|dynamicFields
decl_stmt|;
comment|/**      * {@inheritDoc}      */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setResponse
specifier|public
name|void
name|setResponse
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
name|super
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|dynamicFields
operator|=
name|SchemaResponse
operator|.
name|getDynamicFields
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
DECL|method|getDynamicFields
specifier|public
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|getDynamicFields
parameter_list|()
block|{
return|return
name|dynamicFields
return|;
block|}
block|}
DECL|class|UniqueKeyResponse
specifier|public
specifier|static
class|class
name|UniqueKeyResponse
extends|extends
name|SolrResponseBase
block|{
DECL|field|uniqueKey
specifier|private
name|String
name|uniqueKey
decl_stmt|;
comment|/**      * {@inheritDoc}      */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setResponse
specifier|public
name|void
name|setResponse
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
name|super
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|uniqueKey
operator|=
name|SchemaResponse
operator|.
name|getSchemaUniqueKey
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
DECL|method|getUniqueKey
specifier|public
name|String
name|getUniqueKey
parameter_list|()
block|{
return|return
name|uniqueKey
return|;
block|}
block|}
DECL|class|GlobalSimilarityResponse
specifier|public
specifier|static
class|class
name|GlobalSimilarityResponse
extends|extends
name|SolrResponseBase
block|{
DECL|field|similarity
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|similarity
decl_stmt|;
comment|/**      * {@inheritDoc}      */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setResponse
specifier|public
name|void
name|setResponse
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
name|super
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|similarity
operator|=
name|SchemaResponse
operator|.
name|getSimilarity
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
DECL|method|getSimilarity
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getSimilarity
parameter_list|()
block|{
return|return
name|similarity
return|;
block|}
block|}
DECL|class|DefaultQueryOperatorResponse
specifier|public
specifier|static
class|class
name|DefaultQueryOperatorResponse
extends|extends
name|SolrResponseBase
block|{
DECL|field|defaultOperator
specifier|private
name|String
name|defaultOperator
decl_stmt|;
comment|/**      * {@inheritDoc}      */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setResponse
specifier|public
name|void
name|setResponse
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
name|super
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|defaultOperator
operator|=
operator|(
name|String
operator|)
name|response
operator|.
name|get
argument_list|(
literal|"defaultOperator"
argument_list|)
expr_stmt|;
block|}
DECL|method|getDefaultOperator
specifier|public
name|String
name|getDefaultOperator
parameter_list|()
block|{
return|return
name|defaultOperator
return|;
block|}
block|}
DECL|class|CopyFieldsResponse
specifier|public
specifier|static
class|class
name|CopyFieldsResponse
extends|extends
name|SolrResponseBase
block|{
DECL|field|copyFields
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|copyFields
decl_stmt|;
comment|/**      * {@inheritDoc}      */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setResponse
specifier|public
name|void
name|setResponse
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
name|super
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|copyFields
operator|=
name|SchemaResponse
operator|.
name|getCopyFields
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
DECL|method|getCopyFields
specifier|public
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|getCopyFields
parameter_list|()
block|{
return|return
name|copyFields
return|;
block|}
block|}
DECL|class|FieldTypeResponse
specifier|public
specifier|static
class|class
name|FieldTypeResponse
extends|extends
name|SolrResponseBase
block|{
DECL|field|fieldType
specifier|private
name|FieldTypeRepresentation
name|fieldType
decl_stmt|;
comment|/**      * {@inheritDoc}      */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setResponse
specifier|public
name|void
name|setResponse
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
name|super
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|NamedList
argument_list|<
name|Object
argument_list|>
name|fieldTypeNamedList
init|=
operator|(
name|NamedList
argument_list|<
name|Object
argument_list|>
operator|)
name|response
operator|.
name|get
argument_list|(
literal|"fieldType"
argument_list|)
decl_stmt|;
name|fieldType
operator|=
name|createFieldTypeRepresentation
argument_list|(
name|fieldTypeNamedList
argument_list|)
expr_stmt|;
block|}
DECL|method|getFieldType
specifier|public
name|FieldTypeRepresentation
name|getFieldType
parameter_list|()
block|{
return|return
name|fieldType
return|;
block|}
block|}
DECL|class|FieldTypesResponse
specifier|public
specifier|static
class|class
name|FieldTypesResponse
extends|extends
name|SolrResponseBase
block|{
DECL|field|fieldTypes
name|List
argument_list|<
name|FieldTypeRepresentation
argument_list|>
name|fieldTypes
decl_stmt|;
comment|/**      * {@inheritDoc}      */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setResponse
specifier|public
name|void
name|setResponse
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
name|super
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|fieldTypes
operator|=
name|SchemaResponse
operator|.
name|getFieldTypeRepresentations
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
DECL|method|getFieldTypes
specifier|public
name|List
argument_list|<
name|FieldTypeRepresentation
argument_list|>
name|getFieldTypes
parameter_list|()
block|{
return|return
name|fieldTypes
return|;
block|}
block|}
DECL|class|UpdateResponse
specifier|public
specifier|static
class|class
name|UpdateResponse
extends|extends
name|SolrResponseBase
block|{
comment|/**      * {@inheritDoc}      */
annotation|@
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|setResponse
specifier|public
name|void
name|setResponse
parameter_list|(
name|NamedList
argument_list|<
name|Object
argument_list|>
name|response
parameter_list|)
block|{
name|super
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
