begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.client.solrj.impl
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|HttpClient
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import
begin_comment
comment|/**  * @deprecated Use {@link org.apache.solr.client.solrj.impl.CloudSolrClient}  */
end_comment
begin_class
annotation|@
name|Deprecated
DECL|class|CloudSolrServer
specifier|public
class|class
name|CloudSolrServer
extends|extends
name|CloudSolrClient
block|{
DECL|method|CloudSolrServer
specifier|public
name|CloudSolrServer
parameter_list|(
name|String
name|zkHost
parameter_list|)
block|{
name|super
argument_list|(
name|zkHost
argument_list|)
expr_stmt|;
block|}
DECL|method|CloudSolrServer
specifier|public
name|CloudSolrServer
parameter_list|(
name|String
name|zkHost
parameter_list|,
name|HttpClient
name|httpClient
parameter_list|)
block|{
name|super
argument_list|(
name|zkHost
argument_list|,
name|httpClient
argument_list|)
expr_stmt|;
block|}
DECL|method|CloudSolrServer
specifier|public
name|CloudSolrServer
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|zkHosts
parameter_list|,
name|String
name|chroot
parameter_list|)
block|{
name|super
argument_list|(
name|zkHosts
argument_list|,
name|chroot
argument_list|)
expr_stmt|;
block|}
DECL|method|CloudSolrServer
specifier|public
name|CloudSolrServer
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|zkHosts
parameter_list|,
name|String
name|chroot
parameter_list|,
name|HttpClient
name|httpClient
parameter_list|)
block|{
name|super
argument_list|(
name|zkHosts
argument_list|,
name|chroot
argument_list|,
name|httpClient
argument_list|)
expr_stmt|;
block|}
DECL|method|CloudSolrServer
specifier|public
name|CloudSolrServer
parameter_list|(
name|String
name|zkHost
parameter_list|,
name|boolean
name|updatesToLeaders
parameter_list|)
block|{
name|super
argument_list|(
name|zkHost
argument_list|,
name|updatesToLeaders
argument_list|)
expr_stmt|;
block|}
DECL|method|CloudSolrServer
specifier|public
name|CloudSolrServer
parameter_list|(
name|String
name|zkHost
parameter_list|,
name|boolean
name|updatesToLeaders
parameter_list|,
name|HttpClient
name|httpClient
parameter_list|)
block|{
name|super
argument_list|(
name|zkHost
argument_list|,
name|updatesToLeaders
argument_list|,
name|httpClient
argument_list|)
expr_stmt|;
block|}
DECL|method|CloudSolrServer
specifier|public
name|CloudSolrServer
parameter_list|(
name|String
name|zkHost
parameter_list|,
name|LBHttpSolrClient
name|lbClient
parameter_list|)
block|{
name|super
argument_list|(
name|zkHost
argument_list|,
name|lbClient
argument_list|)
expr_stmt|;
block|}
DECL|method|CloudSolrServer
specifier|public
name|CloudSolrServer
parameter_list|(
name|String
name|zkHost
parameter_list|,
name|LBHttpSolrClient
name|lbClient
parameter_list|,
name|boolean
name|updatesToLeaders
parameter_list|)
block|{
name|super
argument_list|(
name|zkHost
argument_list|,
name|lbClient
argument_list|,
name|updatesToLeaders
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
