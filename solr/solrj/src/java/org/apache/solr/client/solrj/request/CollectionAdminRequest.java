begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.client.solrj.request
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrClient
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|CollectionAdminResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|cloud
operator|.
name|DocCollection
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|cloud
operator|.
name|ZkStateReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|CollectionParams
operator|.
name|CollectionAction
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|CoreAdminParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ModifiableSolrParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ShardParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|SolrParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|ContentStream
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import
begin_comment
comment|/**  * This class is experimental and subject to change.  *  * @since solr 4.5  */
end_comment
begin_class
DECL|class|CollectionAdminRequest
specifier|public
class|class
name|CollectionAdminRequest
extends|extends
name|SolrRequest
argument_list|<
name|CollectionAdminResponse
argument_list|>
block|{
DECL|field|action
specifier|protected
name|CollectionAction
name|action
init|=
literal|null
decl_stmt|;
DECL|field|PROPERTY_PREFIX
specifier|private
specifier|static
name|String
name|PROPERTY_PREFIX
init|=
literal|"property."
decl_stmt|;
DECL|method|setAction
specifier|protected
name|void
name|setAction
parameter_list|(
name|CollectionAction
name|action
parameter_list|)
block|{
name|this
operator|.
name|action
operator|=
name|action
expr_stmt|;
block|}
DECL|method|CollectionAdminRequest
specifier|public
name|CollectionAdminRequest
parameter_list|()
block|{
name|super
argument_list|(
name|METHOD
operator|.
name|GET
argument_list|,
literal|"/admin/collections"
argument_list|)
expr_stmt|;
block|}
DECL|method|CollectionAdminRequest
specifier|public
name|CollectionAdminRequest
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
name|METHOD
operator|.
name|GET
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
if|if
condition|(
name|action
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"no action specified!"
argument_list|)
throw|;
block|}
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|ACTION
argument_list|,
name|action
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
annotation|@
name|Override
DECL|method|getContentStreams
specifier|public
name|Collection
argument_list|<
name|ContentStream
argument_list|>
name|getContentStreams
parameter_list|()
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|createResponse
specifier|protected
name|CollectionAdminResponse
name|createResponse
parameter_list|(
name|SolrClient
name|client
parameter_list|)
block|{
return|return
operator|new
name|CollectionAdminResponse
argument_list|()
return|;
block|}
DECL|method|addProperties
specifier|protected
name|void
name|addProperties
parameter_list|(
name|ModifiableSolrParams
name|params
parameter_list|,
name|Properties
name|props
parameter_list|)
block|{
name|Iterator
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
argument_list|>
name|iter
init|=
name|props
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Map
operator|.
name|Entry
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|prop
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|key
init|=
operator|(
name|String
operator|)
name|prop
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|String
name|value
init|=
operator|(
name|String
operator|)
name|prop
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|PROPERTY_PREFIX
operator|+
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
comment|//---------------------------------------------------------------------------------------
comment|//
comment|//---------------------------------------------------------------------------------------
DECL|class|CollectionSpecificAdminRequest
specifier|protected
specifier|static
class|class
name|CollectionSpecificAdminRequest
extends|extends
name|CollectionAdminRequest
block|{
DECL|field|collection
specifier|protected
name|String
name|collection
init|=
literal|null
decl_stmt|;
DECL|method|setCollectionName
specifier|public
specifier|final
name|void
name|setCollectionName
parameter_list|(
name|String
name|collectionName
parameter_list|)
block|{
name|this
operator|.
name|collection
operator|=
name|collectionName
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|(
name|super
operator|.
name|getParams
argument_list|()
argument_list|)
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|NAME
argument_list|,
name|collection
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
DECL|class|CollectionShardAdminRequest
specifier|protected
specifier|static
class|class
name|CollectionShardAdminRequest
extends|extends
name|CollectionAdminRequest
block|{
DECL|field|shardName
specifier|protected
name|String
name|shardName
init|=
literal|null
decl_stmt|;
DECL|field|collection
specifier|protected
name|String
name|collection
init|=
literal|null
decl_stmt|;
DECL|method|setCollectionName
specifier|public
name|void
name|setCollectionName
parameter_list|(
name|String
name|collectionName
parameter_list|)
block|{
name|this
operator|.
name|collection
operator|=
name|collectionName
expr_stmt|;
block|}
DECL|method|getCollectionName
specifier|public
name|String
name|getCollectionName
parameter_list|()
block|{
return|return
name|collection
return|;
block|}
DECL|method|setShardName
specifier|public
name|void
name|setShardName
parameter_list|(
name|String
name|shard
parameter_list|)
block|{
name|this
operator|.
name|shardName
operator|=
name|shard
expr_stmt|;
block|}
DECL|method|getShardName
specifier|public
name|String
name|getShardName
parameter_list|()
block|{
return|return
name|this
operator|.
name|shardName
return|;
block|}
DECL|method|getCommonParams
specifier|public
name|ModifiableSolrParams
name|getCommonParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|(
name|ModifiableSolrParams
operator|)
name|super
operator|.
name|getParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|COLLECTION
argument_list|,
name|collection
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|SHARD
argument_list|,
name|shardName
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
return|return
name|getCommonParams
argument_list|()
return|;
block|}
block|}
DECL|class|CollectionAdminRoleRequest
specifier|protected
specifier|static
class|class
name|CollectionAdminRoleRequest
extends|extends
name|CollectionAdminRequest
block|{
DECL|field|node
specifier|private
name|String
name|node
decl_stmt|;
DECL|field|role
specifier|private
name|String
name|role
decl_stmt|;
DECL|method|setNode
specifier|public
name|void
name|setNode
parameter_list|(
name|String
name|node
parameter_list|)
block|{
name|this
operator|.
name|node
operator|=
name|node
expr_stmt|;
block|}
DECL|method|getNode
specifier|public
name|String
name|getNode
parameter_list|()
block|{
return|return
name|this
operator|.
name|node
return|;
block|}
DECL|method|setRole
specifier|public
name|void
name|setRole
parameter_list|(
name|String
name|role
parameter_list|)
block|{
name|this
operator|.
name|role
operator|=
name|role
expr_stmt|;
block|}
DECL|method|getRole
specifier|public
name|String
name|getRole
parameter_list|()
block|{
return|return
name|this
operator|.
name|role
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|(
name|super
operator|.
name|getParams
argument_list|()
argument_list|)
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"role"
argument_list|,
name|this
operator|.
name|role
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"node"
argument_list|,
name|this
operator|.
name|node
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
comment|/** Specific Collection API call implementations **/
comment|// CREATE request
DECL|class|Create
specifier|public
specifier|static
class|class
name|Create
extends|extends
name|CollectionSpecificAdminRequest
block|{
DECL|field|configName
specifier|protected
name|String
name|configName
init|=
literal|null
decl_stmt|;
DECL|field|createNodeSet
specifier|protected
name|String
name|createNodeSet
init|=
literal|null
decl_stmt|;
DECL|field|routerName
specifier|protected
name|String
name|routerName
decl_stmt|;
DECL|field|shards
specifier|protected
name|String
name|shards
decl_stmt|;
DECL|field|routerField
specifier|protected
name|String
name|routerField
decl_stmt|;
DECL|field|numShards
specifier|protected
name|Integer
name|numShards
decl_stmt|;
DECL|field|maxShardsPerNode
specifier|protected
name|Integer
name|maxShardsPerNode
decl_stmt|;
DECL|field|replicationFactor
specifier|protected
name|Integer
name|replicationFactor
decl_stmt|;
DECL|field|properties
specifier|private
name|Properties
name|properties
decl_stmt|;
DECL|field|autoAddReplicas
specifier|protected
name|Boolean
name|autoAddReplicas
decl_stmt|;
DECL|field|stateFormat
specifier|protected
name|Integer
name|stateFormat
decl_stmt|;
DECL|field|asyncId
specifier|protected
name|String
name|asyncId
decl_stmt|;
DECL|field|rule
DECL|field|snitch
specifier|private
name|String
index|[]
name|rule
decl_stmt|,
name|snitch
decl_stmt|;
DECL|method|Create
specifier|public
name|Create
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|CREATE
expr_stmt|;
block|}
DECL|method|setConfigName
specifier|public
name|void
name|setConfigName
parameter_list|(
name|String
name|config
parameter_list|)
block|{
name|this
operator|.
name|configName
operator|=
name|config
expr_stmt|;
block|}
DECL|method|setCreateNodeSet
specifier|public
name|void
name|setCreateNodeSet
parameter_list|(
name|String
name|nodeSet
parameter_list|)
block|{
name|this
operator|.
name|createNodeSet
operator|=
name|nodeSet
expr_stmt|;
block|}
DECL|method|setRouterName
specifier|public
name|void
name|setRouterName
parameter_list|(
name|String
name|routerName
parameter_list|)
block|{
name|this
operator|.
name|routerName
operator|=
name|routerName
expr_stmt|;
block|}
DECL|method|setShards
specifier|public
name|void
name|setShards
parameter_list|(
name|String
name|shards
parameter_list|)
block|{
name|this
operator|.
name|shards
operator|=
name|shards
expr_stmt|;
block|}
DECL|method|setRouterField
specifier|public
name|void
name|setRouterField
parameter_list|(
name|String
name|routerField
parameter_list|)
block|{
name|this
operator|.
name|routerField
operator|=
name|routerField
expr_stmt|;
block|}
DECL|method|setNumShards
specifier|public
name|void
name|setNumShards
parameter_list|(
name|Integer
name|numShards
parameter_list|)
block|{
name|this
operator|.
name|numShards
operator|=
name|numShards
expr_stmt|;
block|}
DECL|method|setMaxShardsPerNode
specifier|public
name|void
name|setMaxShardsPerNode
parameter_list|(
name|Integer
name|numShards
parameter_list|)
block|{
name|this
operator|.
name|maxShardsPerNode
operator|=
name|numShards
expr_stmt|;
block|}
DECL|method|setAutoAddReplicas
specifier|public
name|void
name|setAutoAddReplicas
parameter_list|(
name|boolean
name|autoAddReplicas
parameter_list|)
block|{
name|this
operator|.
name|autoAddReplicas
operator|=
name|autoAddReplicas
expr_stmt|;
block|}
DECL|method|setReplicationFactor
specifier|public
name|void
name|setReplicationFactor
parameter_list|(
name|Integer
name|repl
parameter_list|)
block|{
name|this
operator|.
name|replicationFactor
operator|=
name|repl
expr_stmt|;
block|}
DECL|method|setStateFormat
specifier|public
name|void
name|setStateFormat
parameter_list|(
name|Integer
name|stateFormat
parameter_list|)
block|{
name|this
operator|.
name|stateFormat
operator|=
name|stateFormat
expr_stmt|;
block|}
DECL|method|setAsyncId
specifier|public
name|void
name|setAsyncId
parameter_list|(
name|String
name|asyncId
parameter_list|)
block|{
name|this
operator|.
name|asyncId
operator|=
name|asyncId
expr_stmt|;
block|}
DECL|method|setRule
specifier|public
name|void
name|setRule
parameter_list|(
name|String
modifier|...
name|s
parameter_list|)
block|{
name|this
operator|.
name|rule
operator|=
name|s
expr_stmt|;
block|}
DECL|method|setSnitch
specifier|public
name|void
name|setSnitch
parameter_list|(
name|String
modifier|...
name|s
parameter_list|)
block|{
name|this
operator|.
name|snitch
operator|=
name|s
expr_stmt|;
block|}
DECL|method|getConfigName
specifier|public
name|String
name|getConfigName
parameter_list|()
block|{
return|return
name|configName
return|;
block|}
DECL|method|getCreateNodeSet
specifier|public
name|String
name|getCreateNodeSet
parameter_list|()
block|{
return|return
name|createNodeSet
return|;
block|}
DECL|method|getRouterName
specifier|public
name|String
name|getRouterName
parameter_list|()
block|{
return|return
name|routerName
return|;
block|}
DECL|method|getShards
specifier|public
name|String
name|getShards
parameter_list|()
block|{
return|return
name|shards
return|;
block|}
DECL|method|getNumShards
specifier|public
name|Integer
name|getNumShards
parameter_list|()
block|{
return|return
name|numShards
return|;
block|}
DECL|method|getMaxShardsPerNode
specifier|public
name|Integer
name|getMaxShardsPerNode
parameter_list|()
block|{
return|return
name|maxShardsPerNode
return|;
block|}
DECL|method|getReplicationFactor
specifier|public
name|Integer
name|getReplicationFactor
parameter_list|()
block|{
return|return
name|replicationFactor
return|;
block|}
DECL|method|getAutoAddReplicas
specifier|public
name|Boolean
name|getAutoAddReplicas
parameter_list|()
block|{
return|return
name|autoAddReplicas
return|;
block|}
DECL|method|getStateFormat
specifier|public
name|Integer
name|getStateFormat
parameter_list|()
block|{
return|return
name|stateFormat
return|;
block|}
DECL|method|getAsyncId
specifier|public
name|String
name|getAsyncId
parameter_list|()
block|{
return|return
name|asyncId
return|;
block|}
DECL|method|getProperties
specifier|public
name|Properties
name|getProperties
parameter_list|()
block|{
return|return
name|properties
return|;
block|}
DECL|method|setProperties
specifier|public
name|void
name|setProperties
parameter_list|(
name|Properties
name|properties
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|(
name|ModifiableSolrParams
operator|)
name|super
operator|.
name|getParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"collection.configName"
argument_list|,
name|configName
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"createNodeSet"
argument_list|,
name|createNodeSet
argument_list|)
expr_stmt|;
if|if
condition|(
name|numShards
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
name|ZkStateReader
operator|.
name|NUM_SHARDS_PROP
argument_list|,
name|numShards
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|maxShardsPerNode
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"maxShardsPerNode"
argument_list|,
name|maxShardsPerNode
argument_list|)
expr_stmt|;
block|}
name|params
operator|.
name|set
argument_list|(
literal|"router.name"
argument_list|,
name|routerName
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"shards"
argument_list|,
name|shards
argument_list|)
expr_stmt|;
if|if
condition|(
name|routerField
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"router.field"
argument_list|,
name|routerField
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|replicationFactor
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"replicationFactor"
argument_list|,
name|replicationFactor
argument_list|)
expr_stmt|;
block|}
name|params
operator|.
name|set
argument_list|(
literal|"async"
argument_list|,
name|asyncId
argument_list|)
expr_stmt|;
if|if
condition|(
name|autoAddReplicas
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
name|ZkStateReader
operator|.
name|AUTO_ADD_REPLICAS
argument_list|,
name|autoAddReplicas
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|properties
operator|!=
literal|null
condition|)
block|{
name|addProperties
argument_list|(
name|params
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|stateFormat
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
name|DocCollection
operator|.
name|STATE_FORMAT
argument_list|,
name|stateFormat
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|rule
operator|!=
literal|null
condition|)
name|params
operator|.
name|set
argument_list|(
literal|"rule"
argument_list|,
name|rule
argument_list|)
expr_stmt|;
if|if
condition|(
name|snitch
operator|!=
literal|null
condition|)
name|params
operator|.
name|set
argument_list|(
literal|"snitch"
argument_list|,
name|snitch
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
comment|// RELOAD request
DECL|class|Reload
specifier|public
specifier|static
class|class
name|Reload
extends|extends
name|CollectionSpecificAdminRequest
block|{
DECL|method|Reload
specifier|public
name|Reload
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|RELOAD
expr_stmt|;
block|}
block|}
comment|// DELETE request
DECL|class|Delete
specifier|public
specifier|static
class|class
name|Delete
extends|extends
name|CollectionSpecificAdminRequest
block|{
DECL|method|Delete
specifier|public
name|Delete
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|DELETE
expr_stmt|;
block|}
block|}
comment|// CREATESHARD request
DECL|class|CreateShard
specifier|public
specifier|static
class|class
name|CreateShard
extends|extends
name|CollectionShardAdminRequest
block|{
DECL|field|nodeSet
specifier|protected
name|String
name|nodeSet
decl_stmt|;
DECL|field|properties
specifier|private
name|Properties
name|properties
decl_stmt|;
DECL|method|setNodeSet
specifier|public
name|void
name|setNodeSet
parameter_list|(
name|String
name|nodeSet
parameter_list|)
block|{
name|this
operator|.
name|nodeSet
operator|=
name|nodeSet
expr_stmt|;
block|}
DECL|method|getNodeSet
specifier|public
name|String
name|getNodeSet
parameter_list|()
block|{
return|return
name|nodeSet
return|;
block|}
DECL|method|getProperties
specifier|public
name|Properties
name|getProperties
parameter_list|()
block|{
return|return
name|properties
return|;
block|}
DECL|method|setProperties
specifier|public
name|void
name|setProperties
parameter_list|(
name|Properties
name|properties
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
block|}
DECL|method|CreateShard
specifier|public
name|CreateShard
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|CREATESHARD
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
name|getCommonParams
argument_list|()
decl_stmt|;
if|if
condition|(
name|nodeSet
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"createNodeSet"
argument_list|,
name|nodeSet
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|properties
operator|!=
literal|null
condition|)
block|{
name|addProperties
argument_list|(
name|params
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
return|return
name|params
return|;
block|}
block|}
comment|// SPLITSHARD request
DECL|class|SplitShard
specifier|public
specifier|static
class|class
name|SplitShard
extends|extends
name|CollectionShardAdminRequest
block|{
DECL|field|ranges
specifier|protected
name|String
name|ranges
decl_stmt|;
DECL|field|splitKey
specifier|protected
name|String
name|splitKey
decl_stmt|;
DECL|field|asyncId
specifier|protected
name|String
name|asyncId
decl_stmt|;
DECL|field|properties
specifier|private
name|Properties
name|properties
decl_stmt|;
DECL|method|SplitShard
specifier|public
name|SplitShard
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|SPLITSHARD
expr_stmt|;
block|}
DECL|method|setRanges
specifier|public
name|void
name|setRanges
parameter_list|(
name|String
name|ranges
parameter_list|)
block|{
name|this
operator|.
name|ranges
operator|=
name|ranges
expr_stmt|;
block|}
DECL|method|getRanges
specifier|public
name|String
name|getRanges
parameter_list|()
block|{
return|return
name|ranges
return|;
block|}
DECL|method|setSplitKey
specifier|public
name|void
name|setSplitKey
parameter_list|(
name|String
name|splitKey
parameter_list|)
block|{
name|this
operator|.
name|splitKey
operator|=
name|splitKey
expr_stmt|;
block|}
DECL|method|getSplitKey
specifier|public
name|String
name|getSplitKey
parameter_list|()
block|{
return|return
name|this
operator|.
name|splitKey
return|;
block|}
DECL|method|getProperties
specifier|public
name|Properties
name|getProperties
parameter_list|()
block|{
return|return
name|properties
return|;
block|}
DECL|method|setProperties
specifier|public
name|void
name|setProperties
parameter_list|(
name|Properties
name|properties
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
block|}
DECL|method|setAsyncId
specifier|public
name|void
name|setAsyncId
parameter_list|(
name|String
name|asyncId
parameter_list|)
block|{
name|this
operator|.
name|asyncId
operator|=
name|asyncId
expr_stmt|;
block|}
DECL|method|getAsyncId
specifier|public
name|String
name|getAsyncId
parameter_list|()
block|{
return|return
name|asyncId
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
name|getCommonParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"ranges"
argument_list|,
name|ranges
argument_list|)
expr_stmt|;
if|if
condition|(
name|splitKey
operator|!=
literal|null
condition|)
name|params
operator|.
name|set
argument_list|(
literal|"split.key"
argument_list|,
name|this
operator|.
name|splitKey
argument_list|)
expr_stmt|;
if|if
condition|(
name|properties
operator|!=
literal|null
condition|)
block|{
name|addProperties
argument_list|(
name|params
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
name|params
operator|.
name|set
argument_list|(
literal|"async"
argument_list|,
name|asyncId
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
comment|// DELETESHARD request
DECL|class|DeleteShard
specifier|public
specifier|static
class|class
name|DeleteShard
extends|extends
name|CollectionShardAdminRequest
block|{
DECL|method|DeleteShard
specifier|public
name|DeleteShard
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|DELETESHARD
expr_stmt|;
block|}
block|}
comment|// REQUESTSTATUS request
DECL|class|RequestStatus
specifier|public
specifier|static
class|class
name|RequestStatus
extends|extends
name|CollectionAdminRequest
block|{
DECL|field|requestId
specifier|protected
name|String
name|requestId
init|=
literal|null
decl_stmt|;
DECL|method|RequestStatus
specifier|public
name|RequestStatus
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|REQUESTSTATUS
expr_stmt|;
block|}
DECL|method|setRequestId
specifier|public
name|void
name|setRequestId
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
name|this
operator|.
name|requestId
operator|=
name|requestId
expr_stmt|;
block|}
DECL|method|getRequestId
specifier|public
name|String
name|getRequestId
parameter_list|()
block|{
return|return
name|this
operator|.
name|requestId
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|(
name|ModifiableSolrParams
operator|)
name|super
operator|.
name|getParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|REQUESTID
argument_list|,
name|requestId
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
comment|// CREATEALIAS request
DECL|class|CreateAlias
specifier|public
specifier|static
class|class
name|CreateAlias
extends|extends
name|CollectionAdminRequest
block|{
DECL|field|aliasName
specifier|protected
name|String
name|aliasName
decl_stmt|;
DECL|field|aliasedCollections
specifier|protected
name|String
name|aliasedCollections
decl_stmt|;
DECL|method|CreateAlias
specifier|public
name|CreateAlias
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|CREATEALIAS
expr_stmt|;
block|}
DECL|method|setAliasName
specifier|public
name|void
name|setAliasName
parameter_list|(
name|String
name|aliasName
parameter_list|)
block|{
name|this
operator|.
name|aliasName
operator|=
name|aliasName
expr_stmt|;
block|}
DECL|method|getAliasName
specifier|public
name|String
name|getAliasName
parameter_list|()
block|{
return|return
name|aliasName
return|;
block|}
DECL|method|setAliasedCollections
specifier|public
name|void
name|setAliasedCollections
parameter_list|(
name|String
name|alias
parameter_list|)
block|{
name|this
operator|.
name|aliasedCollections
operator|=
name|alias
expr_stmt|;
block|}
DECL|method|getAliasedCollections
specifier|public
name|String
name|getAliasedCollections
parameter_list|()
block|{
return|return
name|this
operator|.
name|aliasedCollections
return|;
block|}
annotation|@
name|Deprecated
DECL|method|setCollectionName
specifier|public
name|void
name|setCollectionName
parameter_list|(
name|String
name|aliasName
parameter_list|)
block|{
name|this
operator|.
name|aliasName
operator|=
name|aliasName
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|(
name|ModifiableSolrParams
operator|)
name|super
operator|.
name|getParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|NAME
argument_list|,
name|aliasName
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"collections"
argument_list|,
name|aliasedCollections
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
comment|// DELETEALIAS request
DECL|class|DeleteAlias
specifier|public
specifier|static
class|class
name|DeleteAlias
extends|extends
name|CollectionAdminRequest
block|{
DECL|field|aliasName
specifier|protected
name|String
name|aliasName
decl_stmt|;
DECL|method|DeleteAlias
specifier|public
name|DeleteAlias
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|DELETEALIAS
expr_stmt|;
block|}
DECL|method|setAliasName
specifier|public
name|void
name|setAliasName
parameter_list|(
name|String
name|aliasName
parameter_list|)
block|{
name|this
operator|.
name|aliasName
operator|=
name|aliasName
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|(
name|super
operator|.
name|getParams
argument_list|()
argument_list|)
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|NAME
argument_list|,
name|aliasName
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
comment|// ADDREPLICA request
DECL|class|AddReplica
specifier|public
specifier|static
class|class
name|AddReplica
extends|extends
name|CollectionShardAdminRequest
block|{
DECL|field|node
specifier|private
name|String
name|node
decl_stmt|;
DECL|field|routeKey
specifier|private
name|String
name|routeKey
decl_stmt|;
DECL|field|instanceDir
specifier|private
name|String
name|instanceDir
decl_stmt|;
DECL|field|dataDir
specifier|private
name|String
name|dataDir
decl_stmt|;
DECL|field|properties
specifier|private
name|Properties
name|properties
decl_stmt|;
DECL|field|asyncId
specifier|private
name|String
name|asyncId
decl_stmt|;
DECL|method|AddReplica
specifier|public
name|AddReplica
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|ADDREPLICA
expr_stmt|;
block|}
DECL|method|getProperties
specifier|public
name|Properties
name|getProperties
parameter_list|()
block|{
return|return
name|properties
return|;
block|}
DECL|method|setProperties
specifier|public
name|void
name|setProperties
parameter_list|(
name|Properties
name|properties
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
block|}
DECL|method|getNode
specifier|public
name|String
name|getNode
parameter_list|()
block|{
return|return
name|node
return|;
block|}
DECL|method|setNode
specifier|public
name|void
name|setNode
parameter_list|(
name|String
name|node
parameter_list|)
block|{
name|this
operator|.
name|node
operator|=
name|node
expr_stmt|;
block|}
DECL|method|getRouteKey
specifier|public
name|String
name|getRouteKey
parameter_list|()
block|{
return|return
name|routeKey
return|;
block|}
DECL|method|setRouteKey
specifier|public
name|void
name|setRouteKey
parameter_list|(
name|String
name|routeKey
parameter_list|)
block|{
name|this
operator|.
name|routeKey
operator|=
name|routeKey
expr_stmt|;
block|}
DECL|method|getInstanceDir
specifier|public
name|String
name|getInstanceDir
parameter_list|()
block|{
return|return
name|instanceDir
return|;
block|}
DECL|method|setInstanceDir
specifier|public
name|void
name|setInstanceDir
parameter_list|(
name|String
name|instanceDir
parameter_list|)
block|{
name|this
operator|.
name|instanceDir
operator|=
name|instanceDir
expr_stmt|;
block|}
DECL|method|getDataDir
specifier|public
name|String
name|getDataDir
parameter_list|()
block|{
return|return
name|dataDir
return|;
block|}
DECL|method|setDataDir
specifier|public
name|void
name|setDataDir
parameter_list|(
name|String
name|dataDir
parameter_list|)
block|{
name|this
operator|.
name|dataDir
operator|=
name|dataDir
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|(
name|super
operator|.
name|getParams
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|shardName
operator|==
literal|null
operator|||
name|shardName
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|params
operator|.
name|remove
argument_list|(
name|CoreAdminParams
operator|.
name|SHARD
argument_list|)
expr_stmt|;
if|if
condition|(
name|routeKey
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|SolrException
argument_list|(
name|SolrException
operator|.
name|ErrorCode
operator|.
name|BAD_REQUEST
argument_list|,
literal|"Either shard or routeKey must be provided"
argument_list|)
throw|;
block|}
name|params
operator|.
name|add
argument_list|(
name|ShardParams
operator|.
name|_ROUTE_
argument_list|,
name|routeKey
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|asyncId
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"async"
argument_list|,
name|asyncId
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|node
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"node"
argument_list|,
name|node
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|instanceDir
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"instanceDir"
argument_list|,
name|instanceDir
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|dataDir
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"dataDir"
argument_list|,
name|dataDir
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|properties
operator|!=
literal|null
condition|)
block|{
name|addProperties
argument_list|(
name|params
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
return|return
name|params
return|;
block|}
DECL|method|setAsyncId
specifier|public
name|void
name|setAsyncId
parameter_list|(
name|String
name|asyncId
parameter_list|)
block|{
name|this
operator|.
name|asyncId
operator|=
name|asyncId
expr_stmt|;
block|}
DECL|method|getAsyncId
specifier|public
name|String
name|getAsyncId
parameter_list|()
block|{
return|return
name|asyncId
return|;
block|}
block|}
comment|// DELETEREPLICA request
DECL|class|DeleteReplica
specifier|public
specifier|static
class|class
name|DeleteReplica
extends|extends
name|CollectionShardAdminRequest
block|{
DECL|field|replica
specifier|private
name|String
name|replica
decl_stmt|;
DECL|field|onlyIfDown
specifier|private
name|Boolean
name|onlyIfDown
decl_stmt|;
DECL|method|DeleteReplica
specifier|public
name|DeleteReplica
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|DELETEREPLICA
expr_stmt|;
block|}
DECL|method|setReplica
specifier|public
name|void
name|setReplica
parameter_list|(
name|String
name|replica
parameter_list|)
block|{
name|this
operator|.
name|replica
operator|=
name|replica
expr_stmt|;
block|}
DECL|method|getReplica
specifier|public
name|String
name|getReplica
parameter_list|()
block|{
return|return
name|this
operator|.
name|replica
return|;
block|}
DECL|method|setOnlyIfDown
specifier|public
name|void
name|setOnlyIfDown
parameter_list|(
name|boolean
name|onlyIfDown
parameter_list|)
block|{
name|this
operator|.
name|onlyIfDown
operator|=
name|onlyIfDown
expr_stmt|;
block|}
DECL|method|getOnlyIfDown
specifier|public
name|Boolean
name|getOnlyIfDown
parameter_list|()
block|{
return|return
name|this
operator|.
name|onlyIfDown
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|(
name|super
operator|.
name|getParams
argument_list|()
argument_list|)
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|ZkStateReader
operator|.
name|REPLICA_PROP
argument_list|,
name|this
operator|.
name|replica
argument_list|)
expr_stmt|;
if|if
condition|(
name|onlyIfDown
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"onlyIfDown"
argument_list|,
name|this
operator|.
name|onlyIfDown
argument_list|)
expr_stmt|;
block|}
return|return
name|params
return|;
block|}
block|}
comment|// CLUSTERPROP request
DECL|class|ClusterProp
specifier|public
specifier|static
class|class
name|ClusterProp
extends|extends
name|CollectionAdminRequest
block|{
DECL|field|propertyName
specifier|private
name|String
name|propertyName
decl_stmt|;
DECL|field|propertyValue
specifier|private
name|String
name|propertyValue
decl_stmt|;
DECL|method|ClusterProp
specifier|public
name|ClusterProp
parameter_list|()
block|{
name|this
operator|.
name|action
operator|=
name|CollectionAction
operator|.
name|CLUSTERPROP
expr_stmt|;
block|}
DECL|method|setPropertyName
specifier|public
name|void
name|setPropertyName
parameter_list|(
name|String
name|propertyName
parameter_list|)
block|{
name|this
operator|.
name|propertyName
operator|=
name|propertyName
expr_stmt|;
block|}
DECL|method|getPropertyName
specifier|public
name|String
name|getPropertyName
parameter_list|()
block|{
return|return
name|this
operator|.
name|propertyName
return|;
block|}
DECL|method|setPropertyValue
specifier|public
name|void
name|setPropertyValue
parameter_list|(
name|String
name|propertyValue
parameter_list|)
block|{
name|this
operator|.
name|propertyValue
operator|=
name|propertyValue
expr_stmt|;
block|}
DECL|method|getPropertyValue
specifier|public
name|String
name|getPropertyValue
parameter_list|()
block|{
return|return
name|this
operator|.
name|propertyValue
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|(
name|super
operator|.
name|getParams
argument_list|()
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|CoreAdminParams
operator|.
name|NAME
argument_list|,
name|propertyName
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"val"
argument_list|,
name|propertyValue
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
comment|// MIGRATE request
DECL|class|Migrate
specifier|public
specifier|static
class|class
name|Migrate
extends|extends
name|CollectionAdminRequest
block|{
DECL|field|collection
specifier|private
name|String
name|collection
decl_stmt|;
DECL|field|targetCollection
specifier|private
name|String
name|targetCollection
decl_stmt|;
DECL|field|splitKey
specifier|private
name|String
name|splitKey
decl_stmt|;
DECL|field|forwardTimeout
specifier|private
name|Integer
name|forwardTimeout
decl_stmt|;
DECL|field|properties
specifier|private
name|Properties
name|properties
decl_stmt|;
DECL|field|asyncId
specifier|private
name|String
name|asyncId
decl_stmt|;
DECL|method|Migrate
specifier|public
name|Migrate
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|MIGRATE
expr_stmt|;
block|}
DECL|method|setCollectionName
specifier|public
name|void
name|setCollectionName
parameter_list|(
name|String
name|collection
parameter_list|)
block|{
name|this
operator|.
name|collection
operator|=
name|collection
expr_stmt|;
block|}
DECL|method|getCollectionName
specifier|public
name|String
name|getCollectionName
parameter_list|()
block|{
return|return
name|collection
return|;
block|}
DECL|method|setTargetCollection
specifier|public
name|void
name|setTargetCollection
parameter_list|(
name|String
name|targetCollection
parameter_list|)
block|{
name|this
operator|.
name|targetCollection
operator|=
name|targetCollection
expr_stmt|;
block|}
DECL|method|getTargetCollection
specifier|public
name|String
name|getTargetCollection
parameter_list|()
block|{
return|return
name|this
operator|.
name|targetCollection
return|;
block|}
DECL|method|setSplitKey
specifier|public
name|void
name|setSplitKey
parameter_list|(
name|String
name|splitKey
parameter_list|)
block|{
name|this
operator|.
name|splitKey
operator|=
name|splitKey
expr_stmt|;
block|}
DECL|method|getSplitKey
specifier|public
name|String
name|getSplitKey
parameter_list|()
block|{
return|return
name|this
operator|.
name|splitKey
return|;
block|}
DECL|method|setForwardTimeout
specifier|public
name|void
name|setForwardTimeout
parameter_list|(
name|int
name|forwardTimeout
parameter_list|)
block|{
name|this
operator|.
name|forwardTimeout
operator|=
name|forwardTimeout
expr_stmt|;
block|}
DECL|method|getForwardTimeout
specifier|public
name|Integer
name|getForwardTimeout
parameter_list|()
block|{
return|return
name|this
operator|.
name|forwardTimeout
return|;
block|}
DECL|method|setProperties
specifier|public
name|void
name|setProperties
parameter_list|(
name|Properties
name|properties
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
block|}
DECL|method|getProperties
specifier|public
name|Properties
name|getProperties
parameter_list|()
block|{
return|return
name|this
operator|.
name|properties
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|(
name|super
operator|.
name|getParams
argument_list|()
argument_list|)
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|COLLECTION
argument_list|,
name|collection
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"target.collection"
argument_list|,
name|targetCollection
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"split.key"
argument_list|,
name|splitKey
argument_list|)
expr_stmt|;
if|if
condition|(
name|forwardTimeout
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"forward.timeout"
argument_list|,
name|forwardTimeout
argument_list|)
expr_stmt|;
block|}
name|params
operator|.
name|set
argument_list|(
literal|"async"
argument_list|,
name|asyncId
argument_list|)
expr_stmt|;
if|if
condition|(
name|properties
operator|!=
literal|null
condition|)
block|{
name|addProperties
argument_list|(
name|params
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
return|return
name|params
return|;
block|}
DECL|method|setAsyncId
specifier|public
name|void
name|setAsyncId
parameter_list|(
name|String
name|asyncId
parameter_list|)
block|{
name|this
operator|.
name|asyncId
operator|=
name|asyncId
expr_stmt|;
block|}
DECL|method|getAsyncId
specifier|public
name|String
name|getAsyncId
parameter_list|()
block|{
return|return
name|asyncId
return|;
block|}
block|}
comment|// ADDROLE request
DECL|class|AddRole
specifier|public
specifier|static
class|class
name|AddRole
extends|extends
name|CollectionAdminRoleRequest
block|{
DECL|method|AddRole
specifier|public
name|AddRole
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|ADDROLE
expr_stmt|;
block|}
block|}
comment|// REMOVEROLE request
DECL|class|RemoveRole
specifier|public
specifier|static
class|class
name|RemoveRole
extends|extends
name|CollectionAdminRoleRequest
block|{
DECL|method|RemoveRole
specifier|public
name|RemoveRole
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|REMOVEROLE
expr_stmt|;
block|}
block|}
comment|// OVERSEERSTATUS request
DECL|class|OverseerStatus
specifier|public
specifier|static
class|class
name|OverseerStatus
extends|extends
name|CollectionAdminRequest
block|{
DECL|method|OverseerStatus
specifier|public
name|OverseerStatus
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|OVERSEERSTATUS
expr_stmt|;
block|}
block|}
comment|// CLUSTERSTATUS request
DECL|class|ClusterStatus
specifier|public
specifier|static
class|class
name|ClusterStatus
extends|extends
name|CollectionAdminRequest
block|{
DECL|field|shardName
specifier|protected
name|String
name|shardName
init|=
literal|null
decl_stmt|;
DECL|field|collection
specifier|protected
name|String
name|collection
init|=
literal|null
decl_stmt|;
DECL|method|ClusterStatus
specifier|public
name|ClusterStatus
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|CLUSTERSTATUS
expr_stmt|;
block|}
DECL|method|setCollectionName
specifier|public
name|void
name|setCollectionName
parameter_list|(
name|String
name|collectionName
parameter_list|)
block|{
name|this
operator|.
name|collection
operator|=
name|collectionName
expr_stmt|;
block|}
DECL|method|getCollectionName
specifier|public
name|String
name|getCollectionName
parameter_list|()
block|{
return|return
name|collection
return|;
block|}
DECL|method|setShardName
specifier|public
name|void
name|setShardName
parameter_list|(
name|String
name|shard
parameter_list|)
block|{
name|this
operator|.
name|shardName
operator|=
name|shard
expr_stmt|;
block|}
DECL|method|getShardName
specifier|public
name|String
name|getShardName
parameter_list|()
block|{
return|return
name|this
operator|.
name|shardName
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|(
name|ModifiableSolrParams
operator|)
name|super
operator|.
name|getParams
argument_list|()
decl_stmt|;
if|if
condition|(
name|collection
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|COLLECTION
argument_list|,
name|collection
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|shardName
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|SHARD
argument_list|,
name|shardName
argument_list|)
expr_stmt|;
block|}
return|return
name|params
return|;
block|}
block|}
comment|// LIST request
DECL|class|List
specifier|public
specifier|static
class|class
name|List
extends|extends
name|CollectionAdminRequest
block|{
DECL|method|List
specifier|public
name|List
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|LIST
expr_stmt|;
block|}
block|}
comment|// ADDREPLICAPROP request
DECL|class|AddReplicaProp
specifier|public
specifier|static
class|class
name|AddReplicaProp
extends|extends
name|CollectionShardAdminRequest
block|{
DECL|field|replica
specifier|private
name|String
name|replica
decl_stmt|;
DECL|field|propertyName
specifier|private
name|String
name|propertyName
decl_stmt|;
DECL|field|propertyValue
specifier|private
name|String
name|propertyValue
decl_stmt|;
DECL|field|shardUnique
specifier|private
name|Boolean
name|shardUnique
decl_stmt|;
DECL|method|AddReplicaProp
specifier|public
name|AddReplicaProp
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|ADDREPLICAPROP
expr_stmt|;
block|}
DECL|method|getReplica
specifier|public
name|String
name|getReplica
parameter_list|()
block|{
return|return
name|replica
return|;
block|}
DECL|method|setReplica
specifier|public
name|void
name|setReplica
parameter_list|(
name|String
name|replica
parameter_list|)
block|{
name|this
operator|.
name|replica
operator|=
name|replica
expr_stmt|;
block|}
DECL|method|getPropertyName
specifier|public
name|String
name|getPropertyName
parameter_list|()
block|{
return|return
name|propertyName
return|;
block|}
DECL|method|setPropertyName
specifier|public
name|void
name|setPropertyName
parameter_list|(
name|String
name|propertyName
parameter_list|)
block|{
name|this
operator|.
name|propertyName
operator|=
name|propertyName
expr_stmt|;
block|}
DECL|method|getPropertyValue
specifier|public
name|String
name|getPropertyValue
parameter_list|()
block|{
return|return
name|propertyValue
return|;
block|}
DECL|method|setPropertyValue
specifier|public
name|void
name|setPropertyValue
parameter_list|(
name|String
name|propertyValue
parameter_list|)
block|{
name|this
operator|.
name|propertyValue
operator|=
name|propertyValue
expr_stmt|;
block|}
DECL|method|getShardUnique
specifier|public
name|Boolean
name|getShardUnique
parameter_list|()
block|{
return|return
name|shardUnique
return|;
block|}
DECL|method|setShardUnique
specifier|public
name|void
name|setShardUnique
parameter_list|(
name|Boolean
name|shardUnique
parameter_list|)
block|{
name|this
operator|.
name|shardUnique
operator|=
name|shardUnique
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|(
name|super
operator|.
name|getParams
argument_list|()
argument_list|)
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|REPLICA
argument_list|,
name|replica
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"property"
argument_list|,
name|propertyName
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"property.value"
argument_list|,
name|propertyValue
argument_list|)
expr_stmt|;
if|if
condition|(
name|shardUnique
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"shardUnique"
argument_list|,
name|shardUnique
argument_list|)
expr_stmt|;
block|}
return|return
name|params
return|;
block|}
block|}
comment|// DELETEREPLICAPROP request
DECL|class|DeleteReplicaProp
specifier|public
specifier|static
class|class
name|DeleteReplicaProp
extends|extends
name|CollectionShardAdminRequest
block|{
DECL|field|replica
specifier|private
name|String
name|replica
decl_stmt|;
DECL|field|propertyName
specifier|private
name|String
name|propertyName
decl_stmt|;
DECL|method|DeleteReplicaProp
specifier|public
name|DeleteReplicaProp
parameter_list|()
block|{
name|this
operator|.
name|action
operator|=
name|CollectionAction
operator|.
name|DELETEREPLICAPROP
expr_stmt|;
block|}
DECL|method|getReplica
specifier|public
name|String
name|getReplica
parameter_list|()
block|{
return|return
name|replica
return|;
block|}
DECL|method|setReplica
specifier|public
name|void
name|setReplica
parameter_list|(
name|String
name|replica
parameter_list|)
block|{
name|this
operator|.
name|replica
operator|=
name|replica
expr_stmt|;
block|}
DECL|method|getPropertyName
specifier|public
name|String
name|getPropertyName
parameter_list|()
block|{
return|return
name|propertyName
return|;
block|}
DECL|method|setPropertyName
specifier|public
name|void
name|setPropertyName
parameter_list|(
name|String
name|propertyName
parameter_list|)
block|{
name|this
operator|.
name|propertyName
operator|=
name|propertyName
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|(
name|super
operator|.
name|getParams
argument_list|()
argument_list|)
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"replica"
argument_list|,
name|replica
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"property"
argument_list|,
name|propertyName
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
comment|// BALANCESHARDUNIQUE request
DECL|class|BalanceShardUnique
specifier|public
specifier|static
class|class
name|BalanceShardUnique
extends|extends
name|CollectionAdminRequest
block|{
DECL|field|collection
specifier|private
name|String
name|collection
decl_stmt|;
DECL|field|propertyName
specifier|private
name|String
name|propertyName
decl_stmt|;
DECL|field|onlyActiveNodes
specifier|private
name|Boolean
name|onlyActiveNodes
decl_stmt|;
DECL|field|shardUnique
specifier|private
name|Boolean
name|shardUnique
decl_stmt|;
DECL|method|BalanceShardUnique
specifier|public
name|BalanceShardUnique
parameter_list|()
block|{
name|this
operator|.
name|action
operator|=
name|CollectionAction
operator|.
name|BALANCESHARDUNIQUE
expr_stmt|;
block|}
DECL|method|getPropertyName
specifier|public
name|String
name|getPropertyName
parameter_list|()
block|{
return|return
name|propertyName
return|;
block|}
DECL|method|setPropertyName
specifier|public
name|void
name|setPropertyName
parameter_list|(
name|String
name|propertyName
parameter_list|)
block|{
name|this
operator|.
name|propertyName
operator|=
name|propertyName
expr_stmt|;
block|}
DECL|method|getOnlyActiveNodes
specifier|public
name|Boolean
name|getOnlyActiveNodes
parameter_list|()
block|{
return|return
name|onlyActiveNodes
return|;
block|}
DECL|method|setOnlyActiveNodes
specifier|public
name|void
name|setOnlyActiveNodes
parameter_list|(
name|Boolean
name|onlyActiveNodes
parameter_list|)
block|{
name|this
operator|.
name|onlyActiveNodes
operator|=
name|onlyActiveNodes
expr_stmt|;
block|}
DECL|method|getShardUnique
specifier|public
name|Boolean
name|getShardUnique
parameter_list|()
block|{
return|return
name|shardUnique
return|;
block|}
DECL|method|setShardUnique
specifier|public
name|void
name|setShardUnique
parameter_list|(
name|Boolean
name|shardUnique
parameter_list|)
block|{
name|this
operator|.
name|shardUnique
operator|=
name|shardUnique
expr_stmt|;
block|}
DECL|method|setCollection
specifier|public
name|void
name|setCollection
parameter_list|(
name|String
name|collection
parameter_list|)
block|{
name|this
operator|.
name|collection
operator|=
name|collection
expr_stmt|;
block|}
DECL|method|getCollection
specifier|public
name|String
name|getCollection
parameter_list|()
block|{
return|return
name|collection
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|(
name|super
operator|.
name|getParams
argument_list|()
argument_list|)
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|COLLECTION
argument_list|,
name|collection
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"property"
argument_list|,
name|propertyName
argument_list|)
expr_stmt|;
if|if
condition|(
name|onlyActiveNodes
operator|!=
literal|null
condition|)
name|params
operator|.
name|set
argument_list|(
literal|"onlyactivenodes"
argument_list|,
name|onlyActiveNodes
argument_list|)
expr_stmt|;
if|if
condition|(
name|shardUnique
operator|!=
literal|null
condition|)
name|params
operator|.
name|set
argument_list|(
literal|"shardUnique"
argument_list|,
name|shardUnique
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
block|}
end_class
end_unit
