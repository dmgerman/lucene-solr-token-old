begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.client.solrj.request
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServerException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|CollectionAdminResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|cloud
operator|.
name|ZkStateReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|CollectionParams
operator|.
name|CollectionAction
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|CoreAdminParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ModifiableSolrParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ShardParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|SolrParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|ContentStream
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import
begin_comment
comment|/**  * This class is experimental and subject to change.  *  * @since solr 4.5  */
end_comment
begin_class
DECL|class|CollectionAdminRequest
specifier|public
class|class
name|CollectionAdminRequest
extends|extends
name|SolrRequest
block|{
DECL|field|collection
specifier|protected
name|String
name|collection
init|=
literal|null
decl_stmt|;
DECL|field|action
specifier|protected
name|CollectionAction
name|action
init|=
literal|null
decl_stmt|;
DECL|field|asyncId
specifier|protected
name|String
name|asyncId
init|=
literal|null
decl_stmt|;
DECL|class|CollectionShardAdminRequest
specifier|protected
specifier|static
class|class
name|CollectionShardAdminRequest
extends|extends
name|CollectionAdminRequest
block|{
DECL|field|shardName
specifier|protected
name|String
name|shardName
init|=
literal|null
decl_stmt|;
DECL|method|setShardName
specifier|public
name|void
name|setShardName
parameter_list|(
name|String
name|shard
parameter_list|)
block|{
name|this
operator|.
name|shardName
operator|=
name|shard
expr_stmt|;
block|}
DECL|method|getShardName
specifier|public
name|String
name|getShardName
parameter_list|()
block|{
return|return
name|this
operator|.
name|shardName
return|;
block|}
DECL|method|getCommonParams
specifier|public
name|ModifiableSolrParams
name|getCommonParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|(
name|ModifiableSolrParams
operator|)
name|super
operator|.
name|getParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|remove
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"collection"
argument_list|,
name|collection
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"shard"
argument_list|,
name|shardName
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"async"
argument_list|,
name|asyncId
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
return|return
name|getCommonParams
argument_list|()
return|;
block|}
block|}
comment|//a create collection request
DECL|class|Create
specifier|public
specifier|static
class|class
name|Create
extends|extends
name|CollectionAdminRequest
block|{
DECL|field|configName
specifier|protected
name|String
name|configName
init|=
literal|null
decl_stmt|;
DECL|field|createNodeSet
specifier|protected
name|String
name|createNodeSet
init|=
literal|null
decl_stmt|;
DECL|field|routerName
specifier|protected
name|String
name|routerName
decl_stmt|;
DECL|field|shards
specifier|protected
name|String
name|shards
decl_stmt|;
DECL|field|routerField
specifier|protected
name|String
name|routerField
decl_stmt|;
DECL|field|numShards
specifier|protected
name|Integer
name|numShards
decl_stmt|;
DECL|field|maxShardsPerNode
specifier|protected
name|Integer
name|maxShardsPerNode
decl_stmt|;
DECL|field|replicationFactor
specifier|protected
name|Integer
name|replicationFactor
decl_stmt|;
DECL|field|autoAddReplicas
specifier|protected
name|Boolean
name|autoAddReplicas
decl_stmt|;
DECL|method|Create
specifier|public
name|Create
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|CREATE
expr_stmt|;
block|}
DECL|method|setConfigName
specifier|public
name|void
name|setConfigName
parameter_list|(
name|String
name|config
parameter_list|)
block|{
name|this
operator|.
name|configName
operator|=
name|config
expr_stmt|;
block|}
DECL|method|setCreateNodeSet
specifier|public
name|void
name|setCreateNodeSet
parameter_list|(
name|String
name|nodeSet
parameter_list|)
block|{
name|this
operator|.
name|createNodeSet
operator|=
name|nodeSet
expr_stmt|;
block|}
DECL|method|setRouterName
specifier|public
name|void
name|setRouterName
parameter_list|(
name|String
name|routerName
parameter_list|)
block|{
name|this
operator|.
name|routerName
operator|=
name|routerName
expr_stmt|;
block|}
DECL|method|setShards
specifier|public
name|void
name|setShards
parameter_list|(
name|String
name|shards
parameter_list|)
block|{
name|this
operator|.
name|shards
operator|=
name|shards
expr_stmt|;
block|}
DECL|method|setRouterField
specifier|public
name|void
name|setRouterField
parameter_list|(
name|String
name|routerField
parameter_list|)
block|{
name|this
operator|.
name|routerField
operator|=
name|routerField
expr_stmt|;
block|}
DECL|method|setNumShards
specifier|public
name|void
name|setNumShards
parameter_list|(
name|Integer
name|numShards
parameter_list|)
block|{
name|this
operator|.
name|numShards
operator|=
name|numShards
expr_stmt|;
block|}
DECL|method|setMaxShardsPerNode
specifier|public
name|void
name|setMaxShardsPerNode
parameter_list|(
name|Integer
name|numShards
parameter_list|)
block|{
name|this
operator|.
name|maxShardsPerNode
operator|=
name|numShards
expr_stmt|;
block|}
DECL|method|setAutoAddReplicas
specifier|public
name|void
name|setAutoAddReplicas
parameter_list|(
name|boolean
name|autoAddReplicas
parameter_list|)
block|{
name|this
operator|.
name|autoAddReplicas
operator|=
name|autoAddReplicas
expr_stmt|;
block|}
DECL|method|setReplicationFactor
specifier|public
name|void
name|setReplicationFactor
parameter_list|(
name|Integer
name|repl
parameter_list|)
block|{
name|this
operator|.
name|replicationFactor
operator|=
name|repl
expr_stmt|;
block|}
DECL|method|getConfigName
specifier|public
name|String
name|getConfigName
parameter_list|()
block|{
return|return
name|configName
return|;
block|}
DECL|method|getCreateNodeSet
specifier|public
name|String
name|getCreateNodeSet
parameter_list|()
block|{
return|return
name|createNodeSet
return|;
block|}
DECL|method|getRouterName
specifier|public
name|String
name|getRouterName
parameter_list|()
block|{
return|return
name|routerName
return|;
block|}
DECL|method|getShards
specifier|public
name|String
name|getShards
parameter_list|()
block|{
return|return
name|shards
return|;
block|}
DECL|method|getNumShards
specifier|public
name|Integer
name|getNumShards
parameter_list|()
block|{
return|return
name|numShards
return|;
block|}
DECL|method|getMaxShardsPerNode
specifier|public
name|Integer
name|getMaxShardsPerNode
parameter_list|()
block|{
return|return
name|maxShardsPerNode
return|;
block|}
DECL|method|getReplicationFactor
specifier|public
name|Integer
name|getReplicationFactor
parameter_list|()
block|{
return|return
name|replicationFactor
return|;
block|}
DECL|method|getAutoAddReplicas
specifier|public
name|Boolean
name|getAutoAddReplicas
parameter_list|()
block|{
return|return
name|autoAddReplicas
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|(
name|ModifiableSolrParams
operator|)
name|super
operator|.
name|getParams
argument_list|()
decl_stmt|;
if|if
condition|(
name|configName
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"collection.configName"
argument_list|,
name|configName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|createNodeSet
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"createNodeSet"
argument_list|,
name|createNodeSet
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|numShards
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
name|ZkStateReader
operator|.
name|NUM_SHARDS_PROP
argument_list|,
name|numShards
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|maxShardsPerNode
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"maxShardsPerNode"
argument_list|,
name|maxShardsPerNode
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|routerName
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"router.name"
argument_list|,
name|routerName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|shards
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"shards"
argument_list|,
name|shards
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|routerField
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"router.field"
argument_list|,
name|routerField
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|replicationFactor
operator|!=
literal|null
condition|)
block|{
comment|// OverseerCollectionProcessor.REPLICATION_FACTOR
name|params
operator|.
name|set
argument_list|(
literal|"replicationFactor"
argument_list|,
name|replicationFactor
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|asyncId
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
literal|"async"
argument_list|,
name|asyncId
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|autoAddReplicas
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|set
argument_list|(
name|ZkStateReader
operator|.
name|AUTO_ADD_REPLICAS
argument_list|,
name|autoAddReplicas
argument_list|)
expr_stmt|;
block|}
return|return
name|params
return|;
block|}
block|}
comment|//a reload collection request
DECL|class|Reload
specifier|public
specifier|static
class|class
name|Reload
extends|extends
name|CollectionAdminRequest
block|{
DECL|method|Reload
specifier|public
name|Reload
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|RELOAD
expr_stmt|;
block|}
block|}
comment|//a delete collection request
DECL|class|Delete
specifier|public
specifier|static
class|class
name|Delete
extends|extends
name|CollectionAdminRequest
block|{
DECL|method|Delete
specifier|public
name|Delete
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|DELETE
expr_stmt|;
block|}
block|}
comment|//a create shard collection request
DECL|class|CreateShard
specifier|public
specifier|static
class|class
name|CreateShard
extends|extends
name|CollectionShardAdminRequest
block|{
DECL|field|nodeSet
specifier|protected
name|String
name|nodeSet
decl_stmt|;
DECL|method|setNodeSet
specifier|public
name|void
name|setNodeSet
parameter_list|(
name|String
name|nodeSet
parameter_list|)
block|{
name|this
operator|.
name|nodeSet
operator|=
name|nodeSet
expr_stmt|;
block|}
DECL|method|getNodeSet
specifier|public
name|String
name|getNodeSet
parameter_list|()
block|{
return|return
name|nodeSet
return|;
block|}
DECL|method|CreateShard
specifier|public
name|CreateShard
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|CREATESHARD
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
name|getCommonParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"createNodeSet"
argument_list|,
name|nodeSet
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
comment|//a split shard collection request
DECL|class|SplitShard
specifier|public
specifier|static
class|class
name|SplitShard
extends|extends
name|CollectionShardAdminRequest
block|{
DECL|field|ranges
specifier|protected
name|String
name|ranges
decl_stmt|;
DECL|method|setRanges
specifier|public
name|void
name|setRanges
parameter_list|(
name|String
name|ranges
parameter_list|)
block|{
name|this
operator|.
name|ranges
operator|=
name|ranges
expr_stmt|;
block|}
DECL|method|getRanges
specifier|public
name|String
name|getRanges
parameter_list|()
block|{
return|return
name|ranges
return|;
block|}
DECL|method|SplitShard
specifier|public
name|SplitShard
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|SPLITSHARD
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
name|getCommonParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"ranges"
argument_list|,
name|ranges
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
comment|//a delete shard collection request
DECL|class|DeleteShard
specifier|public
specifier|static
class|class
name|DeleteShard
extends|extends
name|CollectionShardAdminRequest
block|{
DECL|method|DeleteShard
specifier|public
name|DeleteShard
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|DELETESHARD
expr_stmt|;
block|}
block|}
comment|//a request status collection request
DECL|class|RequestStatus
specifier|public
specifier|static
class|class
name|RequestStatus
extends|extends
name|CollectionAdminRequest
block|{
DECL|field|requestId
specifier|protected
name|String
name|requestId
init|=
literal|null
decl_stmt|;
DECL|method|RequestStatus
specifier|public
name|RequestStatus
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|REQUESTSTATUS
expr_stmt|;
block|}
DECL|method|setRequestId
specifier|public
name|void
name|setRequestId
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
name|this
operator|.
name|requestId
operator|=
name|requestId
expr_stmt|;
block|}
DECL|method|getRequestId
specifier|public
name|String
name|getRequestId
parameter_list|()
block|{
return|return
name|this
operator|.
name|requestId
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|(
name|ModifiableSolrParams
operator|)
name|super
operator|.
name|getParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"requestid"
argument_list|,
name|requestId
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
block|}
comment|//a collection alias create request
DECL|class|CreateAlias
specifier|public
specifier|static
class|class
name|CreateAlias
extends|extends
name|CollectionAdminRequest
block|{
DECL|field|aliasedCollections
specifier|protected
name|String
name|aliasedCollections
init|=
literal|null
decl_stmt|;
DECL|method|setAliasedCollections
specifier|public
name|void
name|setAliasedCollections
parameter_list|(
name|String
name|alias
parameter_list|)
block|{
name|this
operator|.
name|aliasedCollections
operator|=
name|alias
expr_stmt|;
block|}
DECL|method|getAliasedCollections
specifier|public
name|String
name|getAliasedCollections
parameter_list|()
block|{
return|return
name|this
operator|.
name|aliasedCollections
return|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|(
name|ModifiableSolrParams
operator|)
name|super
operator|.
name|getParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"collections"
argument_list|,
name|aliasedCollections
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
DECL|method|CreateAlias
specifier|public
name|CreateAlias
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|CREATEALIAS
expr_stmt|;
block|}
block|}
comment|//a collection alias delete request
DECL|class|DeleteAlias
specifier|public
specifier|static
class|class
name|DeleteAlias
extends|extends
name|CollectionAdminRequest
block|{
DECL|method|DeleteAlias
specifier|public
name|DeleteAlias
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|DELETEALIAS
expr_stmt|;
block|}
block|}
DECL|class|AddReplica
specifier|public
specifier|static
class|class
name|AddReplica
extends|extends
name|CollectionShardAdminRequest
block|{
DECL|field|node
specifier|private
name|String
name|node
decl_stmt|;
DECL|field|routeKey
specifier|private
name|String
name|routeKey
decl_stmt|;
DECL|field|instanceDir
specifier|private
name|String
name|instanceDir
decl_stmt|;
DECL|field|dataDir
specifier|private
name|String
name|dataDir
decl_stmt|;
DECL|method|AddReplica
specifier|public
name|AddReplica
parameter_list|()
block|{
name|action
operator|=
name|CollectionAction
operator|.
name|ADDREPLICA
expr_stmt|;
block|}
DECL|method|getNode
specifier|public
name|String
name|getNode
parameter_list|()
block|{
return|return
name|node
return|;
block|}
DECL|method|setNode
specifier|public
name|void
name|setNode
parameter_list|(
name|String
name|node
parameter_list|)
block|{
name|this
operator|.
name|node
operator|=
name|node
expr_stmt|;
block|}
DECL|method|getRouteKey
specifier|public
name|String
name|getRouteKey
parameter_list|()
block|{
return|return
name|routeKey
return|;
block|}
DECL|method|setRouteKey
specifier|public
name|void
name|setRouteKey
parameter_list|(
name|String
name|routeKey
parameter_list|)
block|{
name|this
operator|.
name|routeKey
operator|=
name|routeKey
expr_stmt|;
block|}
DECL|method|getInstanceDir
specifier|public
name|String
name|getInstanceDir
parameter_list|()
block|{
return|return
name|instanceDir
return|;
block|}
DECL|method|setInstanceDir
specifier|public
name|void
name|setInstanceDir
parameter_list|(
name|String
name|instanceDir
parameter_list|)
block|{
name|this
operator|.
name|instanceDir
operator|=
name|instanceDir
expr_stmt|;
block|}
DECL|method|getDataDir
specifier|public
name|String
name|getDataDir
parameter_list|()
block|{
return|return
name|dataDir
return|;
block|}
DECL|method|setDataDir
specifier|public
name|void
name|setDataDir
parameter_list|(
name|String
name|dataDir
parameter_list|)
block|{
name|this
operator|.
name|dataDir
operator|=
name|dataDir
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|(
name|super
operator|.
name|getParams
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|shardName
operator|==
literal|null
operator|||
name|shardName
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|params
operator|.
name|remove
argument_list|(
literal|"shard"
argument_list|)
expr_stmt|;
if|if
condition|(
name|routeKey
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|SolrException
argument_list|(
name|SolrException
operator|.
name|ErrorCode
operator|.
name|BAD_REQUEST
argument_list|,
literal|"Either shard or routeKey must be provided"
argument_list|)
throw|;
block|}
name|params
operator|.
name|add
argument_list|(
name|ShardParams
operator|.
name|_ROUTE_
argument_list|,
name|routeKey
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|node
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"node"
argument_list|,
name|node
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|instanceDir
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"instanceDir"
argument_list|,
name|instanceDir
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|dataDir
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
literal|"dataDir"
argument_list|,
name|dataDir
argument_list|)
expr_stmt|;
block|}
return|return
name|params
return|;
block|}
block|}
DECL|method|CollectionAdminRequest
specifier|public
name|CollectionAdminRequest
parameter_list|()
block|{
name|super
argument_list|(
name|METHOD
operator|.
name|GET
argument_list|,
literal|"/admin/collections"
argument_list|)
expr_stmt|;
block|}
DECL|method|CollectionAdminRequest
specifier|public
name|CollectionAdminRequest
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
name|METHOD
operator|.
name|GET
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
DECL|method|setCollectionName
specifier|public
specifier|final
name|void
name|setCollectionName
parameter_list|(
name|String
name|collectionName
parameter_list|)
block|{
name|this
operator|.
name|collection
operator|=
name|collectionName
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------------------
comment|//
comment|//---------------------------------------------------------------------------------------
DECL|method|setAction
specifier|public
name|void
name|setAction
parameter_list|(
name|CollectionAction
name|action
parameter_list|)
block|{
name|this
operator|.
name|action
operator|=
name|action
expr_stmt|;
block|}
DECL|method|setAsyncId
specifier|public
name|void
name|setAsyncId
parameter_list|(
name|String
name|asyncId
parameter_list|)
block|{
name|this
operator|.
name|asyncId
operator|=
name|asyncId
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------------------
comment|//
comment|//---------------------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|getParams
specifier|public
name|SolrParams
name|getParams
parameter_list|()
block|{
if|if
condition|(
name|action
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"no action specified!"
argument_list|)
throw|;
block|}
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|ACTION
argument_list|,
name|action
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|NAME
argument_list|,
name|collection
argument_list|)
expr_stmt|;
return|return
name|params
return|;
block|}
comment|//---------------------------------------------------------------------------------------
comment|//
comment|//---------------------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|getContentStreams
specifier|public
name|Collection
argument_list|<
name|ContentStream
argument_list|>
name|getContentStreams
parameter_list|()
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|process
specifier|public
name|CollectionAdminResponse
name|process
parameter_list|(
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|long
name|startTime
init|=
name|TimeUnit
operator|.
name|MILLISECONDS
operator|.
name|convert
argument_list|(
name|System
operator|.
name|nanoTime
argument_list|()
argument_list|,
name|TimeUnit
operator|.
name|NANOSECONDS
argument_list|)
decl_stmt|;
name|CollectionAdminResponse
name|res
init|=
operator|new
name|CollectionAdminResponse
argument_list|()
decl_stmt|;
name|res
operator|.
name|setResponse
argument_list|(
name|server
operator|.
name|request
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
name|long
name|endTime
init|=
name|TimeUnit
operator|.
name|MILLISECONDS
operator|.
name|convert
argument_list|(
name|System
operator|.
name|nanoTime
argument_list|()
argument_list|,
name|TimeUnit
operator|.
name|NANOSECONDS
argument_list|)
decl_stmt|;
name|res
operator|.
name|setElapsedTime
argument_list|(
name|endTime
operator|-
name|startTime
argument_list|)
expr_stmt|;
return|return
name|res
return|;
block|}
comment|//---------------------------------------------------------------------------------------
comment|//
comment|//---------------------------------------------------------------------------------------
comment|// creates collection using a compositeId router
DECL|method|createCollection
specifier|public
specifier|static
name|CollectionAdminResponse
name|createCollection
parameter_list|(
name|String
name|name
parameter_list|,
name|Integer
name|shards
parameter_list|,
name|Integer
name|repl
parameter_list|,
name|Integer
name|maxShards
parameter_list|,
name|String
name|nodeSet
parameter_list|,
name|String
name|conf
parameter_list|,
name|String
name|routerField
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
return|return
name|createCollection
argument_list|(
name|name
argument_list|,
name|shards
argument_list|,
name|repl
argument_list|,
name|maxShards
argument_list|,
name|nodeSet
argument_list|,
name|conf
argument_list|,
name|routerField
argument_list|,
name|server
argument_list|,
literal|null
argument_list|)
return|;
block|}
comment|// creates collection using a compositeId router
DECL|method|createCollection
specifier|public
specifier|static
name|CollectionAdminResponse
name|createCollection
parameter_list|(
name|String
name|name
parameter_list|,
name|Integer
name|shards
parameter_list|,
name|Integer
name|repl
parameter_list|,
name|Integer
name|maxShards
parameter_list|,
name|String
name|nodeSet
parameter_list|,
name|String
name|conf
parameter_list|,
name|String
name|routerField
parameter_list|,
name|Boolean
name|autoAddReplicas
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|Create
name|req
init|=
operator|new
name|Create
argument_list|()
decl_stmt|;
name|req
operator|.
name|setCollectionName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|req
operator|.
name|setRouterName
argument_list|(
literal|"compositeId"
argument_list|)
expr_stmt|;
name|req
operator|.
name|setNumShards
argument_list|(
name|shards
argument_list|)
expr_stmt|;
name|req
operator|.
name|setReplicationFactor
argument_list|(
name|repl
argument_list|)
expr_stmt|;
name|req
operator|.
name|setMaxShardsPerNode
argument_list|(
name|maxShards
argument_list|)
expr_stmt|;
name|req
operator|.
name|setCreateNodeSet
argument_list|(
name|nodeSet
argument_list|)
expr_stmt|;
name|req
operator|.
name|setConfigName
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|req
operator|.
name|setRouterField
argument_list|(
name|routerField
argument_list|)
expr_stmt|;
name|req
operator|.
name|setAutoAddReplicas
argument_list|(
name|autoAddReplicas
argument_list|)
expr_stmt|;
return|return
name|req
operator|.
name|process
argument_list|(
name|server
argument_list|)
return|;
block|}
comment|// creates collection using a compositeId router
DECL|method|createCollection
specifier|public
specifier|static
name|CollectionAdminResponse
name|createCollection
parameter_list|(
name|String
name|name
parameter_list|,
name|Integer
name|shards
parameter_list|,
name|Integer
name|repl
parameter_list|,
name|Integer
name|maxShards
parameter_list|,
name|String
name|nodeSet
parameter_list|,
name|String
name|conf
parameter_list|,
name|String
name|routerField
parameter_list|,
name|SolrServer
name|server
parameter_list|,
name|String
name|asyncId
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|Create
name|req
init|=
operator|new
name|Create
argument_list|()
decl_stmt|;
name|req
operator|.
name|setCollectionName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|req
operator|.
name|setRouterName
argument_list|(
literal|"compositeId"
argument_list|)
expr_stmt|;
name|req
operator|.
name|setNumShards
argument_list|(
name|shards
argument_list|)
expr_stmt|;
name|req
operator|.
name|setReplicationFactor
argument_list|(
name|repl
argument_list|)
expr_stmt|;
name|req
operator|.
name|setMaxShardsPerNode
argument_list|(
name|maxShards
argument_list|)
expr_stmt|;
name|req
operator|.
name|setCreateNodeSet
argument_list|(
name|nodeSet
argument_list|)
expr_stmt|;
name|req
operator|.
name|setConfigName
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|req
operator|.
name|setRouterField
argument_list|(
name|routerField
argument_list|)
expr_stmt|;
name|req
operator|.
name|setAsyncId
argument_list|(
name|asyncId
argument_list|)
expr_stmt|;
return|return
name|req
operator|.
name|process
argument_list|(
name|server
argument_list|)
return|;
block|}
DECL|method|createCollection
specifier|public
specifier|static
name|CollectionAdminResponse
name|createCollection
parameter_list|(
name|String
name|name
parameter_list|,
name|Integer
name|shards
parameter_list|,
name|String
name|conf
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
return|return
name|createCollection
argument_list|(
name|name
argument_list|,
name|shards
argument_list|,
name|conf
argument_list|,
name|server
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|createCollection
specifier|public
specifier|static
name|CollectionAdminResponse
name|createCollection
parameter_list|(
name|String
name|name
parameter_list|,
name|Integer
name|shards
parameter_list|,
name|String
name|conf
parameter_list|,
name|SolrServer
name|server
parameter_list|,
name|String
name|asyncId
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|Create
name|req
init|=
operator|new
name|Create
argument_list|()
decl_stmt|;
name|req
operator|.
name|setCollectionName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|req
operator|.
name|setRouterName
argument_list|(
literal|"compositeId"
argument_list|)
expr_stmt|;
name|req
operator|.
name|setNumShards
argument_list|(
name|shards
argument_list|)
expr_stmt|;
name|req
operator|.
name|setConfigName
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|req
operator|.
name|setAsyncId
argument_list|(
name|asyncId
argument_list|)
expr_stmt|;
return|return
name|req
operator|.
name|process
argument_list|(
name|server
argument_list|)
return|;
block|}
DECL|method|createCollection
specifier|public
specifier|static
name|CollectionAdminResponse
name|createCollection
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|shards
parameter_list|,
name|Integer
name|repl
parameter_list|,
name|Integer
name|maxShards
parameter_list|,
name|String
name|nodeSet
parameter_list|,
name|String
name|conf
parameter_list|,
name|String
name|routerField
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
return|return
name|createCollection
argument_list|(
name|name
argument_list|,
name|shards
argument_list|,
name|repl
argument_list|,
name|maxShards
argument_list|,
name|nodeSet
argument_list|,
name|conf
argument_list|,
name|routerField
argument_list|,
name|server
argument_list|,
literal|null
argument_list|)
return|;
block|}
comment|// creates a collection using an implicit router
DECL|method|createCollection
specifier|public
specifier|static
name|CollectionAdminResponse
name|createCollection
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|shards
parameter_list|,
name|Integer
name|repl
parameter_list|,
name|Integer
name|maxShards
parameter_list|,
name|String
name|nodeSet
parameter_list|,
name|String
name|conf
parameter_list|,
name|String
name|routerField
parameter_list|,
name|SolrServer
name|server
parameter_list|,
name|String
name|asyncId
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|Create
name|req
init|=
operator|new
name|Create
argument_list|()
decl_stmt|;
name|req
operator|.
name|setCollectionName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|req
operator|.
name|setRouterName
argument_list|(
literal|"implicit"
argument_list|)
expr_stmt|;
name|req
operator|.
name|setShards
argument_list|(
name|shards
argument_list|)
expr_stmt|;
name|req
operator|.
name|setReplicationFactor
argument_list|(
name|repl
argument_list|)
expr_stmt|;
name|req
operator|.
name|setMaxShardsPerNode
argument_list|(
name|maxShards
argument_list|)
expr_stmt|;
name|req
operator|.
name|setCreateNodeSet
argument_list|(
name|nodeSet
argument_list|)
expr_stmt|;
name|req
operator|.
name|setConfigName
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|req
operator|.
name|setRouterField
argument_list|(
name|routerField
argument_list|)
expr_stmt|;
name|req
operator|.
name|setAsyncId
argument_list|(
name|asyncId
argument_list|)
expr_stmt|;
return|return
name|req
operator|.
name|process
argument_list|(
name|server
argument_list|)
return|;
block|}
DECL|method|createCollection
specifier|public
specifier|static
name|CollectionAdminResponse
name|createCollection
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|shards
parameter_list|,
name|String
name|conf
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
return|return
name|createCollection
argument_list|(
name|name
argument_list|,
name|shards
argument_list|,
name|conf
argument_list|,
name|server
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|createCollection
specifier|public
specifier|static
name|CollectionAdminResponse
name|createCollection
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|shards
parameter_list|,
name|String
name|conf
parameter_list|,
name|SolrServer
name|server
parameter_list|,
name|String
name|asyncId
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|Create
name|req
init|=
operator|new
name|Create
argument_list|()
decl_stmt|;
name|req
operator|.
name|setCollectionName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|req
operator|.
name|setRouterName
argument_list|(
literal|"implicit"
argument_list|)
expr_stmt|;
name|req
operator|.
name|setShards
argument_list|(
name|shards
argument_list|)
expr_stmt|;
name|req
operator|.
name|setConfigName
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|req
operator|.
name|setAsyncId
argument_list|(
name|asyncId
argument_list|)
expr_stmt|;
return|return
name|req
operator|.
name|process
argument_list|(
name|server
argument_list|)
return|;
block|}
DECL|method|reloadCollection
specifier|public
specifier|static
name|CollectionAdminResponse
name|reloadCollection
parameter_list|(
name|String
name|name
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
return|return
name|reloadCollection
argument_list|(
name|name
argument_list|,
name|server
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|reloadCollection
specifier|public
specifier|static
name|CollectionAdminResponse
name|reloadCollection
parameter_list|(
name|String
name|name
parameter_list|,
name|SolrServer
name|server
parameter_list|,
name|String
name|asyncId
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|CollectionAdminRequest
name|req
init|=
operator|new
name|Reload
argument_list|()
decl_stmt|;
name|req
operator|.
name|setCollectionName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|req
operator|.
name|setAsyncId
argument_list|(
name|asyncId
argument_list|)
expr_stmt|;
return|return
name|req
operator|.
name|process
argument_list|(
name|server
argument_list|)
return|;
block|}
DECL|method|deleteCollection
specifier|public
specifier|static
name|CollectionAdminResponse
name|deleteCollection
parameter_list|(
name|String
name|name
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
return|return
name|deleteCollection
argument_list|(
name|name
argument_list|,
name|server
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|deleteCollection
specifier|public
specifier|static
name|CollectionAdminResponse
name|deleteCollection
parameter_list|(
name|String
name|name
parameter_list|,
name|SolrServer
name|server
parameter_list|,
name|String
name|asyncId
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|CollectionAdminRequest
name|req
init|=
operator|new
name|Delete
argument_list|()
decl_stmt|;
name|req
operator|.
name|setCollectionName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|req
operator|.
name|setAsyncId
argument_list|(
name|asyncId
argument_list|)
expr_stmt|;
return|return
name|req
operator|.
name|process
argument_list|(
name|server
argument_list|)
return|;
block|}
DECL|method|requestStatus
specifier|public
specifier|static
name|CollectionAdminResponse
name|requestStatus
parameter_list|(
name|String
name|requestId
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|RequestStatus
name|req
init|=
operator|new
name|RequestStatus
argument_list|()
decl_stmt|;
name|req
operator|.
name|setRequestId
argument_list|(
name|requestId
argument_list|)
expr_stmt|;
return|return
name|req
operator|.
name|process
argument_list|(
name|server
argument_list|)
return|;
block|}
DECL|method|createShard
specifier|public
specifier|static
name|CollectionAdminResponse
name|createShard
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|shard
parameter_list|,
name|String
name|nodeSet
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|CreateShard
name|req
init|=
operator|new
name|CreateShard
argument_list|()
decl_stmt|;
name|req
operator|.
name|setCollectionName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|req
operator|.
name|setShardName
argument_list|(
name|shard
argument_list|)
expr_stmt|;
name|req
operator|.
name|setNodeSet
argument_list|(
name|nodeSet
argument_list|)
expr_stmt|;
return|return
name|req
operator|.
name|process
argument_list|(
name|server
argument_list|)
return|;
block|}
DECL|method|createShard
specifier|public
specifier|static
name|CollectionAdminResponse
name|createShard
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|shard
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
return|return
name|createShard
argument_list|(
name|name
argument_list|,
name|shard
argument_list|,
literal|null
argument_list|,
name|server
argument_list|)
return|;
block|}
DECL|method|splitShard
specifier|public
specifier|static
name|CollectionAdminResponse
name|splitShard
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|shard
parameter_list|,
name|String
name|ranges
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
return|return
name|splitShard
argument_list|(
name|name
argument_list|,
name|shard
argument_list|,
name|ranges
argument_list|,
name|server
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|splitShard
specifier|public
specifier|static
name|CollectionAdminResponse
name|splitShard
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|shard
parameter_list|,
name|String
name|ranges
parameter_list|,
name|SolrServer
name|server
parameter_list|,
name|String
name|asyncId
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|SplitShard
name|req
init|=
operator|new
name|SplitShard
argument_list|()
decl_stmt|;
name|req
operator|.
name|setCollectionName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|req
operator|.
name|setShardName
argument_list|(
name|shard
argument_list|)
expr_stmt|;
name|req
operator|.
name|setRanges
argument_list|(
name|ranges
argument_list|)
expr_stmt|;
name|req
operator|.
name|setAsyncId
argument_list|(
name|asyncId
argument_list|)
expr_stmt|;
return|return
name|req
operator|.
name|process
argument_list|(
name|server
argument_list|)
return|;
block|}
DECL|method|splitShard
specifier|public
specifier|static
name|CollectionAdminResponse
name|splitShard
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|shard
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
return|return
name|splitShard
argument_list|(
name|name
argument_list|,
name|shard
argument_list|,
literal|null
argument_list|,
name|server
argument_list|,
literal|null
argument_list|)
return|;
block|}
DECL|method|splitShard
specifier|public
specifier|static
name|CollectionAdminResponse
name|splitShard
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|shard
parameter_list|,
name|SolrServer
name|server
parameter_list|,
name|String
name|asyncId
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
return|return
name|splitShard
argument_list|(
name|name
argument_list|,
name|shard
argument_list|,
literal|null
argument_list|,
name|server
argument_list|,
name|asyncId
argument_list|)
return|;
block|}
DECL|method|deleteShard
specifier|public
specifier|static
name|CollectionAdminResponse
name|deleteShard
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|shard
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|CollectionShardAdminRequest
name|req
init|=
operator|new
name|DeleteShard
argument_list|()
decl_stmt|;
name|req
operator|.
name|setCollectionName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|req
operator|.
name|setShardName
argument_list|(
name|shard
argument_list|)
expr_stmt|;
return|return
name|req
operator|.
name|process
argument_list|(
name|server
argument_list|)
return|;
block|}
DECL|method|createAlias
specifier|public
specifier|static
name|CollectionAdminResponse
name|createAlias
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|collections
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|CreateAlias
name|req
init|=
operator|new
name|CreateAlias
argument_list|()
decl_stmt|;
name|req
operator|.
name|setCollectionName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|req
operator|.
name|setAliasedCollections
argument_list|(
name|collections
argument_list|)
expr_stmt|;
return|return
name|req
operator|.
name|process
argument_list|(
name|server
argument_list|)
return|;
block|}
DECL|method|deleteAlias
specifier|public
specifier|static
name|CollectionAdminResponse
name|deleteAlias
parameter_list|(
name|String
name|name
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|SolrServerException
throws|,
name|IOException
block|{
name|CollectionAdminRequest
name|req
init|=
operator|new
name|DeleteAlias
argument_list|()
decl_stmt|;
name|req
operator|.
name|setCollectionName
argument_list|(
name|name
argument_list|)
expr_stmt|;
return|return
name|req
operator|.
name|process
argument_list|(
name|server
argument_list|)
return|;
block|}
block|}
end_class
end_unit
