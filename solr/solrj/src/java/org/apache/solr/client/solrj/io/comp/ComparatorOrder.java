begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.client.solrj.io.comp
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|io
operator|.
name|comp
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import
begin_comment
comment|/**  * Enum for supported comparator ordering  */
end_comment
begin_enum
DECL|enum|ComparatorOrder
specifier|public
enum|enum
name|ComparatorOrder
block|{
DECL|enum constant|ASCENDING
DECL|enum constant|DESCENDING
name|ASCENDING
block|,
name|DESCENDING
block|;
DECL|method|fromString
specifier|public
specifier|static
name|ComparatorOrder
name|fromString
parameter_list|(
name|String
name|order
parameter_list|)
block|{
switch|switch
condition|(
name|order
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
condition|)
block|{
case|case
literal|"asc"
case|:
return|return
name|ComparatorOrder
operator|.
name|ASCENDING
return|;
case|case
literal|"desc"
case|:
return|return
name|ComparatorOrder
operator|.
name|DESCENDING
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"Unknown order '%s'"
argument_list|,
name|order
argument_list|)
argument_list|)
throw|;
block|}
block|}
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
switch|switch
condition|(
name|this
condition|)
block|{
case|case
name|DESCENDING
case|:
return|return
literal|"desc"
return|;
default|default:
return|return
literal|"asc"
return|;
block|}
block|}
block|}
end_enum
end_unit
