begin_unit
begin_package
DECL|package|org.apache.solr.client.solrj.response
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/**  * This class models a Suggestion coming from Solr Suggest Component.  * It is a direct mapping fo the Json object Solr is returning.  */
end_comment
begin_class
DECL|class|Suggestion
specifier|public
class|class
name|Suggestion
block|{
DECL|field|term
specifier|private
name|String
name|term
decl_stmt|;
DECL|field|weight
specifier|private
name|long
name|weight
decl_stmt|;
DECL|field|payload
specifier|private
name|String
name|payload
decl_stmt|;
DECL|method|Suggestion
specifier|public
name|Suggestion
parameter_list|(
name|String
name|term
parameter_list|,
name|long
name|weight
parameter_list|,
name|String
name|payload
parameter_list|)
block|{
name|this
operator|.
name|term
operator|=
name|term
expr_stmt|;
name|this
operator|.
name|weight
operator|=
name|weight
expr_stmt|;
name|this
operator|.
name|payload
operator|=
name|payload
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|equals
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
return|return
literal|true
return|;
if|if
condition|(
operator|!
operator|(
name|o
operator|instanceof
name|Suggestion
operator|)
condition|)
return|return
literal|false
return|;
name|Suggestion
name|that
init|=
operator|(
name|Suggestion
operator|)
name|o
decl_stmt|;
return|return
name|payload
operator|.
name|equals
argument_list|(
name|that
operator|.
name|payload
argument_list|)
operator|&&
name|term
operator|.
name|equals
argument_list|(
name|that
operator|.
name|term
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
name|int
name|result
init|=
name|term
operator|.
name|hashCode
argument_list|()
decl_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
name|payload
operator|.
name|hashCode
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
DECL|method|getTerm
specifier|public
name|String
name|getTerm
parameter_list|()
block|{
return|return
name|term
return|;
block|}
DECL|method|getWeight
specifier|public
name|long
name|getWeight
parameter_list|()
block|{
return|return
name|weight
return|;
block|}
DECL|method|getPayload
specifier|public
name|String
name|getPayload
parameter_list|()
block|{
return|return
name|payload
return|;
block|}
block|}
end_class
end_unit
