begin_unit
begin_package
DECL|package|org.apache.solr.client.solrj.impl
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|CloudSolrClient
operator|.
name|Builder
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_class
DECL|class|CloudSolrClientBuilderTest
specifier|public
class|class
name|CloudSolrClientBuilderTest
extends|extends
name|LuceneTestCase
block|{
DECL|field|ANY_CHROOT
specifier|private
specifier|static
specifier|final
name|String
name|ANY_CHROOT
init|=
literal|"/ANY_CHROOT"
decl_stmt|;
DECL|field|ANY_ZK_HOST
specifier|private
specifier|static
specifier|final
name|String
name|ANY_ZK_HOST
init|=
literal|"ANY_ZK_HOST"
decl_stmt|;
DECL|field|ANY_OTHER_ZK_HOST
specifier|private
specifier|static
specifier|final
name|String
name|ANY_OTHER_ZK_HOST
init|=
literal|"ANY_OTHER_ZK_HOST"
decl_stmt|;
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|testNoZkHostSpecified
specifier|public
name|void
name|testNoZkHostSpecified
parameter_list|()
block|{
operator|new
name|Builder
argument_list|()
operator|.
name|withZkChroot
argument_list|(
name|ANY_CHROOT
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSingleZkHostSpecified
specifier|public
name|void
name|testSingleZkHostSpecified
parameter_list|()
throws|throws
name|IOException
block|{
try|try
init|(
name|CloudSolrClient
name|createdClient
init|=
operator|new
name|Builder
argument_list|()
operator|.
name|withZkHost
argument_list|(
name|ANY_ZK_HOST
argument_list|)
operator|.
name|withZkChroot
argument_list|(
name|ANY_CHROOT
argument_list|)
operator|.
name|build
argument_list|()
init|)
block|{
specifier|final
name|String
name|clientZkHost
init|=
name|createdClient
operator|.
name|getZkHost
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|clientZkHost
operator|.
name|contains
argument_list|(
name|ANY_ZK_HOST
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testSeveralZkHostsSpecifiedSingly
specifier|public
name|void
name|testSeveralZkHostsSpecifiedSingly
parameter_list|()
throws|throws
name|IOException
block|{
try|try
init|(
name|CloudSolrClient
name|createdClient
init|=
operator|new
name|Builder
argument_list|()
operator|.
name|withZkHost
argument_list|(
name|ANY_ZK_HOST
argument_list|)
operator|.
name|withZkHost
argument_list|(
name|ANY_OTHER_ZK_HOST
argument_list|)
operator|.
name|withZkChroot
argument_list|(
name|ANY_CHROOT
argument_list|)
operator|.
name|build
argument_list|()
init|)
block|{
specifier|final
name|String
name|clientZkHost
init|=
name|createdClient
operator|.
name|getZkHost
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|clientZkHost
operator|.
name|contains
argument_list|(
name|ANY_ZK_HOST
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|clientZkHost
operator|.
name|contains
argument_list|(
name|ANY_OTHER_ZK_HOST
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testSeveralZkHostsSpecifiedTogether
specifier|public
name|void
name|testSeveralZkHostsSpecifiedTogether
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|ArrayList
argument_list|<
name|String
argument_list|>
name|zkHosts
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|zkHosts
operator|.
name|add
argument_list|(
name|ANY_ZK_HOST
argument_list|)
expr_stmt|;
name|zkHosts
operator|.
name|add
argument_list|(
name|ANY_OTHER_ZK_HOST
argument_list|)
expr_stmt|;
try|try
init|(
name|CloudSolrClient
name|createdClient
init|=
operator|new
name|Builder
argument_list|()
operator|.
name|withZkHost
argument_list|(
name|zkHosts
argument_list|)
operator|.
name|withZkChroot
argument_list|(
name|ANY_CHROOT
argument_list|)
operator|.
name|build
argument_list|()
init|)
block|{
specifier|final
name|String
name|clientZkHost
init|=
name|createdClient
operator|.
name|getZkHost
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|clientZkHost
operator|.
name|contains
argument_list|(
name|ANY_ZK_HOST
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|clientZkHost
operator|.
name|contains
argument_list|(
name|ANY_OTHER_ZK_HOST
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testByDefaultConfiguresClientToSendUpdatesOnlyToShardLeaders
specifier|public
name|void
name|testByDefaultConfiguresClientToSendUpdatesOnlyToShardLeaders
parameter_list|()
throws|throws
name|IOException
block|{
try|try
init|(
name|CloudSolrClient
name|createdClient
init|=
operator|new
name|Builder
argument_list|()
operator|.
name|withZkHost
argument_list|(
name|ANY_ZK_HOST
argument_list|)
operator|.
name|withZkChroot
argument_list|(
name|ANY_CHROOT
argument_list|)
operator|.
name|build
argument_list|()
init|)
block|{
name|assertTrue
argument_list|(
name|createdClient
operator|.
name|isUpdatesToLeaders
argument_list|()
operator|==
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
