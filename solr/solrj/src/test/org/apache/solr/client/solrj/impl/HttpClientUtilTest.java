begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.client.solrj.impl
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
package|;
end_package
begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|auth
operator|.
name|AuthScope
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|HttpClient
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|params
operator|.
name|ClientPNames
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|conn
operator|.
name|PoolingClientConnectionManager
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|DefaultHttpClient
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|params
operator|.
name|HttpConnectionParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ModifiableSolrParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|SolrParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_class
DECL|class|HttpClientUtilTest
specifier|public
class|class
name|HttpClientUtilTest
block|{
annotation|@
name|Test
DECL|method|testNoParamsSucceeds
specifier|public
name|void
name|testNoParamsSucceeds
parameter_list|()
block|{
name|HttpClient
name|clien
init|=
name|HttpClientUtil
operator|.
name|createClient
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|clien
operator|.
name|getConnectionManager
argument_list|()
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetParams
specifier|public
name|void
name|testSetParams
parameter_list|()
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|HttpClientUtil
operator|.
name|PROP_ALLOW_COMPRESSION
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
name|HttpClientUtil
operator|.
name|PROP_BASIC_AUTH_PASS
argument_list|,
literal|"pass"
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
name|HttpClientUtil
operator|.
name|PROP_BASIC_AUTH_USER
argument_list|,
literal|"user"
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
name|HttpClientUtil
operator|.
name|PROP_CONNECTION_TIMEOUT
argument_list|,
literal|12345
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
name|HttpClientUtil
operator|.
name|PROP_FOLLOW_REDIRECTS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
name|HttpClientUtil
operator|.
name|PROP_MAX_CONNECTIONS
argument_list|,
literal|22345
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
name|HttpClientUtil
operator|.
name|PROP_MAX_CONNECTIONS_PER_HOST
argument_list|,
literal|32345
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
name|HttpClientUtil
operator|.
name|PROP_SO_TIMEOUT
argument_list|,
literal|42345
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
name|HttpClientUtil
operator|.
name|PROP_USE_RETRY
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|DefaultHttpClient
name|client
init|=
operator|(
name|DefaultHttpClient
operator|)
name|HttpClientUtil
operator|.
name|createClient
argument_list|(
name|params
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|12345
argument_list|,
name|HttpConnectionParams
operator|.
name|getConnectionTimeout
argument_list|(
name|client
operator|.
name|getParams
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PoolingClientConnectionManager
operator|.
name|class
argument_list|,
name|client
operator|.
name|getConnectionManager
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|22345
argument_list|,
operator|(
operator|(
name|PoolingClientConnectionManager
operator|)
name|client
operator|.
name|getConnectionManager
argument_list|()
operator|)
operator|.
name|getMaxTotal
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|32345
argument_list|,
operator|(
operator|(
name|PoolingClientConnectionManager
operator|)
name|client
operator|.
name|getConnectionManager
argument_list|()
operator|)
operator|.
name|getDefaultMaxPerRoute
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|42345
argument_list|,
name|HttpConnectionParams
operator|.
name|getSoTimeout
argument_list|(
name|client
operator|.
name|getParams
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HttpClientUtil
operator|.
name|NO_RETRY
argument_list|,
name|client
operator|.
name|getHttpRequestRetryHandler
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"pass"
argument_list|,
name|client
operator|.
name|getCredentialsProvider
argument_list|()
operator|.
name|getCredentials
argument_list|(
operator|new
name|AuthScope
argument_list|(
literal|"127.0.0.1"
argument_list|,
literal|1234
argument_list|)
argument_list|)
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"user"
argument_list|,
name|client
operator|.
name|getCredentialsProvider
argument_list|()
operator|.
name|getCredentials
argument_list|(
operator|new
name|AuthScope
argument_list|(
literal|"127.0.0.1"
argument_list|,
literal|1234
argument_list|)
argument_list|)
operator|.
name|getUserPrincipal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|client
operator|.
name|getParams
argument_list|()
operator|.
name|getParameter
argument_list|(
name|ClientPNames
operator|.
name|HANDLE_REDIRECTS
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|getConnectionManager
argument_list|()
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceConfigurer
specifier|public
name|void
name|testReplaceConfigurer
parameter_list|()
block|{
try|try
block|{
specifier|final
name|AtomicInteger
name|counter
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
name|HttpClientConfigurer
name|custom
init|=
operator|new
name|HttpClientConfigurer
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|configure
parameter_list|(
name|DefaultHttpClient
name|httpClient
parameter_list|,
name|SolrParams
name|config
parameter_list|)
block|{
name|super
operator|.
name|configure
argument_list|(
name|httpClient
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|counter
operator|.
name|set
argument_list|(
name|config
operator|.
name|getInt
argument_list|(
literal|"custom-param"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|HttpClientUtil
operator|.
name|setConfigurer
argument_list|(
name|custom
argument_list|)
expr_stmt|;
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"custom-param"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|HttpClientUtil
operator|.
name|createClient
argument_list|(
name|params
argument_list|)
operator|.
name|getConnectionManager
argument_list|()
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|counter
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
comment|//restore default configurer
name|HttpClientUtil
operator|.
name|setConfigurer
argument_list|(
operator|new
name|HttpClientConfigurer
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
