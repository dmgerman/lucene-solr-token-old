begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.client.solrj.io.sql
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|io
operator|.
name|sql
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import
begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import
begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|DatabaseMetaData
import|;
end_import
begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|DriverManager
import|;
end_import
begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSet
import|;
end_import
begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSetMetaData
import|;
end_import
begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Statement
import|;
end_import
begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Types
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
operator|.
name|Slow
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
operator|.
name|AbstractFullDistribZkTestBase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
operator|.
name|AbstractZkTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_comment
comment|/**  * All base tests will be done with CloudSolrStream. Under the covers CloudSolrStream uses SolrStream so  * SolrStream will get fully exercised through these tests.  **/
end_comment
begin_class
annotation|@
name|Slow
annotation|@
name|LuceneTestCase
operator|.
name|SuppressCodecs
argument_list|(
block|{
literal|"Lucene3x"
block|,
literal|"Lucene40"
block|,
literal|"Lucene41"
block|,
literal|"Lucene42"
block|,
literal|"Lucene45"
block|}
argument_list|)
DECL|class|JdbcTest
specifier|public
class|class
name|JdbcTest
extends|extends
name|AbstractFullDistribZkTestBase
block|{
DECL|field|SOLR_HOME
specifier|private
specifier|static
specifier|final
name|String
name|SOLR_HOME
init|=
name|getFile
argument_list|(
literal|"solrj"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"solr"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
static|static
block|{
name|schemaString
operator|=
literal|"schema-sql.xml"
expr_stmt|;
block|}
annotation|@
name|BeforeClass
DECL|method|beforeSuperClass
specifier|public
specifier|static
name|void
name|beforeSuperClass
parameter_list|()
block|{
name|AbstractZkTestCase
operator|.
name|SOLRHOME
operator|=
operator|new
name|File
argument_list|(
name|SOLR_HOME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|afterSuperClass
specifier|public
specifier|static
name|void
name|afterSuperClass
parameter_list|()
block|{    }
DECL|method|getCloudSolrConfig
specifier|protected
name|String
name|getCloudSolrConfig
parameter_list|()
block|{
return|return
literal|"solrconfig-sql.xml"
return|;
block|}
annotation|@
name|Override
DECL|method|getSolrHome
specifier|public
name|String
name|getSolrHome
parameter_list|()
block|{
return|return
name|SOLR_HOME
return|;
block|}
annotation|@
name|Override
DECL|method|distribSetUp
specifier|public
name|void
name|distribSetUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|distribSetUp
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|After
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|resetExceptionIgnores
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|ShardsFixed
argument_list|(
name|num
operator|=
literal|2
argument_list|)
DECL|method|doTest
specifier|public
name|void
name|doTest
parameter_list|()
throws|throws
name|Exception
block|{
name|waitForRecoveriesToFinish
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"0"
argument_list|,
literal|"a_s"
argument_list|,
literal|"hello0"
argument_list|,
literal|"a_i"
argument_list|,
literal|"0"
argument_list|,
literal|"a_f"
argument_list|,
literal|"1"
argument_list|,
literal|"testnull_i"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"2"
argument_list|,
literal|"a_s"
argument_list|,
literal|"hello0"
argument_list|,
literal|"a_i"
argument_list|,
literal|"2"
argument_list|,
literal|"a_f"
argument_list|,
literal|"2"
argument_list|,
literal|"testnull_i"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"3"
argument_list|,
literal|"a_s"
argument_list|,
literal|"hello3"
argument_list|,
literal|"a_i"
argument_list|,
literal|"3"
argument_list|,
literal|"a_f"
argument_list|,
literal|"3"
argument_list|,
literal|"testnull_i"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"4"
argument_list|,
literal|"a_s"
argument_list|,
literal|"hello4"
argument_list|,
literal|"a_i"
argument_list|,
literal|"4"
argument_list|,
literal|"a_f"
argument_list|,
literal|"4"
argument_list|,
literal|"testnull_i"
argument_list|,
literal|"4"
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"1"
argument_list|,
literal|"a_s"
argument_list|,
literal|"hello0"
argument_list|,
literal|"a_i"
argument_list|,
literal|"1"
argument_list|,
literal|"a_f"
argument_list|,
literal|"5"
argument_list|,
literal|"testnull_i"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"5"
argument_list|,
literal|"a_s"
argument_list|,
literal|"hello3"
argument_list|,
literal|"a_i"
argument_list|,
literal|"10"
argument_list|,
literal|"a_f"
argument_list|,
literal|"6"
argument_list|,
literal|"testnull_i"
argument_list|,
literal|"6"
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"6"
argument_list|,
literal|"a_s"
argument_list|,
literal|"hello4"
argument_list|,
literal|"a_i"
argument_list|,
literal|"11"
argument_list|,
literal|"a_f"
argument_list|,
literal|"7"
argument_list|,
literal|"testnull_i"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"7"
argument_list|,
literal|"a_s"
argument_list|,
literal|"hello3"
argument_list|,
literal|"a_i"
argument_list|,
literal|"12"
argument_list|,
literal|"a_f"
argument_list|,
literal|"8"
argument_list|,
literal|"testnull_i"
argument_list|,
literal|"8"
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"8"
argument_list|,
literal|"a_s"
argument_list|,
literal|"hello3"
argument_list|,
literal|"a_i"
argument_list|,
literal|"13"
argument_list|,
literal|"a_f"
argument_list|,
literal|"9"
argument_list|,
literal|"testnull_i"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|indexr
argument_list|(
name|id
argument_list|,
literal|"9"
argument_list|,
literal|"a_s"
argument_list|,
literal|"hello0"
argument_list|,
literal|"a_i"
argument_list|,
literal|"14"
argument_list|,
literal|"a_f"
argument_list|,
literal|"10"
argument_list|,
literal|"testnull_i"
argument_list|,
literal|"10"
argument_list|)
expr_stmt|;
name|commit
argument_list|()
expr_stmt|;
name|String
name|zkHost
init|=
name|zkServer
operator|.
name|getZkAddress
argument_list|()
decl_stmt|;
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
try|try
init|(
name|Connection
name|con
init|=
name|DriverManager
operator|.
name|getConnection
argument_list|(
literal|"jdbc:solr://"
operator|+
name|zkHost
operator|+
literal|"?collection=collection1"
argument_list|,
name|props
argument_list|)
init|)
block|{
try|try
init|(
name|Statement
name|stmt
init|=
name|con
operator|.
name|createStatement
argument_list|()
init|)
block|{
try|try
init|(
name|ResultSet
name|rs
init|=
name|stmt
operator|.
name|executeQuery
argument_list|(
literal|"select id, a_i, a_s, a_f from collection1 order by a_i desc limit 2"
argument_list|)
init|)
block|{
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"a_f"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"a_f"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//Test statement reuse
try|try
init|(
name|ResultSet
name|rs
init|=
name|stmt
operator|.
name|executeQuery
argument_list|(
literal|"select id, a_i, a_s, a_f from collection1 order by a_i asc limit 2"
argument_list|)
init|)
block|{
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"a_f"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"a_f"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|//Test connection reuse
try|try
init|(
name|Statement
name|stmt
init|=
name|con
operator|.
name|createStatement
argument_list|()
init|)
block|{
try|try
init|(
name|ResultSet
name|rs
init|=
name|stmt
operator|.
name|executeQuery
argument_list|(
literal|"select id, a_i, a_s, a_f from collection1 order by a_i desc limit 2"
argument_list|)
init|)
block|{
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//Test statement reuse
name|stmt
operator|.
name|setMaxRows
argument_list|(
literal|2
argument_list|)
expr_stmt|;
try|try
init|(
name|ResultSet
name|rs
init|=
name|stmt
operator|.
name|executeQuery
argument_list|(
literal|"select id, a_i, a_s, a_f from collection1 order by a_i asc"
argument_list|)
init|)
block|{
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//Test simple loop. Since limit is set it will override the statement maxRows.
try|try
init|(
name|ResultSet
name|rs
init|=
name|stmt
operator|.
name|executeQuery
argument_list|(
literal|"select id, a_i, a_s, a_f from collection1 order by a_i asc    LIMIT   100"
argument_list|)
init|)
block|{
name|int
name|count
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rs
operator|.
name|next
argument_list|()
condition|)
block|{
operator|++
name|count
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|//Test facet aggregation
name|props
operator|=
operator|new
name|Properties
argument_list|()
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"aggregationMode"
argument_list|,
literal|"facet"
argument_list|)
expr_stmt|;
try|try
init|(
name|Connection
name|con
init|=
name|DriverManager
operator|.
name|getConnection
argument_list|(
literal|"jdbc:solr://"
operator|+
name|zkHost
operator|+
literal|"?collection=collection1"
argument_list|,
name|props
argument_list|)
init|)
block|{
try|try
init|(
name|Statement
name|stmt
init|=
name|con
operator|.
name|createStatement
argument_list|()
init|)
block|{
try|try
init|(
name|ResultSet
name|rs
init|=
name|stmt
operator|.
name|executeQuery
argument_list|(
literal|"select a_s, sum(a_f) from collection1 group by a_s "
operator|+
literal|"order by sum(a_f) desc"
argument_list|)
init|)
block|{
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|26
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|26
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|18
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|18
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello4"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello4"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|//Test map / reduce aggregation
name|props
operator|=
operator|new
name|Properties
argument_list|()
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"aggregationMode"
argument_list|,
literal|"map_reduce"
argument_list|)
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"numWorkers"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
try|try
init|(
name|Connection
name|con
init|=
name|DriverManager
operator|.
name|getConnection
argument_list|(
literal|"jdbc:solr://"
operator|+
name|zkHost
operator|+
literal|"?collection=collection1"
argument_list|,
name|props
argument_list|)
init|)
block|{
try|try
init|(
name|Statement
name|stmt
init|=
name|con
operator|.
name|createStatement
argument_list|()
init|)
block|{
try|try
init|(
name|ResultSet
name|rs
init|=
name|stmt
operator|.
name|executeQuery
argument_list|(
literal|"select a_s, sum(a_f) from collection1 group by a_s "
operator|+
literal|"order by sum(a_f) desc"
argument_list|)
init|)
block|{
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|26
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|26
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|18
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|18
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello4"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello4"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|//Test params on the url
try|try
init|(
name|Connection
name|con
init|=
name|DriverManager
operator|.
name|getConnection
argument_list|(
literal|"jdbc:solr://"
operator|+
name|zkHost
operator|+
literal|"?collection=collection1&aggregationMode=map_reduce&numWorkers=2"
argument_list|)
init|)
block|{
name|Properties
name|p
init|=
operator|(
operator|(
name|ConnectionImpl
operator|)
name|con
operator|)
operator|.
name|getProperties
argument_list|()
decl_stmt|;
assert|assert
operator|(
name|p
operator|.
name|getProperty
argument_list|(
literal|"aggregationMode"
argument_list|)
operator|.
name|equals
argument_list|(
literal|"map_reduce"
argument_list|)
operator|)
assert|;
assert|assert
operator|(
name|p
operator|.
name|getProperty
argument_list|(
literal|"numWorkers"
argument_list|)
operator|.
name|equals
argument_list|(
literal|"2"
argument_list|)
operator|)
assert|;
try|try
init|(
name|Statement
name|stmt
init|=
name|con
operator|.
name|createStatement
argument_list|()
init|)
block|{
try|try
init|(
name|ResultSet
name|rs
init|=
name|stmt
operator|.
name|executeQuery
argument_list|(
literal|"select a_s, sum(a_f) from collection1 group by a_s "
operator|+
literal|"order by sum(a_f) desc"
argument_list|)
init|)
block|{
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|26
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|26
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|18
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|18
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello4"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello4"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// Test JDBC paramters in URL
try|try
init|(
name|Connection
name|con
init|=
name|DriverManager
operator|.
name|getConnection
argument_list|(
literal|"jdbc:solr://"
operator|+
name|zkHost
operator|+
literal|"?collection=collection1&username=&password=&testKey1=testValue&testKey2"
argument_list|)
init|)
block|{
name|Properties
name|p
init|=
operator|(
operator|(
name|ConnectionImpl
operator|)
name|con
operator|)
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|p
operator|.
name|getProperty
argument_list|(
literal|"username"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|p
operator|.
name|getProperty
argument_list|(
literal|"password"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testValue"
argument_list|,
name|p
operator|.
name|getProperty
argument_list|(
literal|"testKey1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|p
operator|.
name|getProperty
argument_list|(
literal|"testKey2"
argument_list|)
argument_list|)
expr_stmt|;
try|try
init|(
name|Statement
name|stmt
init|=
name|con
operator|.
name|createStatement
argument_list|()
init|)
block|{
try|try
init|(
name|ResultSet
name|rs
init|=
name|stmt
operator|.
name|executeQuery
argument_list|(
literal|"select a_s, sum(a_f) from collection1 group by a_s "
operator|+
literal|"order by sum(a_f) desc"
argument_list|)
init|)
block|{
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|26
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|26
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|18
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|18
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello4"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello4"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// Test JDBC paramters in properties
name|Properties
name|providedProperties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|providedProperties
operator|.
name|put
argument_list|(
literal|"collection"
argument_list|,
literal|"collection1"
argument_list|)
expr_stmt|;
name|providedProperties
operator|.
name|put
argument_list|(
literal|"username"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|providedProperties
operator|.
name|put
argument_list|(
literal|"password"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|providedProperties
operator|.
name|put
argument_list|(
literal|"testKey1"
argument_list|,
literal|"testValue"
argument_list|)
expr_stmt|;
name|providedProperties
operator|.
name|put
argument_list|(
literal|"testKey2"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
try|try
init|(
name|Connection
name|con
init|=
name|DriverManager
operator|.
name|getConnection
argument_list|(
literal|"jdbc:solr://"
operator|+
name|zkHost
argument_list|,
name|providedProperties
argument_list|)
init|)
block|{
name|Properties
name|p
init|=
operator|(
operator|(
name|ConnectionImpl
operator|)
name|con
operator|)
operator|.
name|getProperties
argument_list|()
decl_stmt|;
assert|assert
operator|(
name|p
operator|.
name|getProperty
argument_list|(
literal|"username"
argument_list|)
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|)
assert|;
assert|assert
operator|(
name|p
operator|.
name|getProperty
argument_list|(
literal|"password"
argument_list|)
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|)
assert|;
assert|assert
operator|(
name|p
operator|.
name|getProperty
argument_list|(
literal|"testKey1"
argument_list|)
operator|.
name|equals
argument_list|(
literal|"testValue"
argument_list|)
operator|)
assert|;
assert|assert
operator|(
name|p
operator|.
name|getProperty
argument_list|(
literal|"testKey2"
argument_list|)
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|)
assert|;
try|try
init|(
name|Statement
name|stmt
init|=
name|con
operator|.
name|createStatement
argument_list|()
init|)
block|{
try|try
init|(
name|ResultSet
name|rs
init|=
name|stmt
operator|.
name|executeQuery
argument_list|(
literal|"select a_s, sum(a_f) from collection1 group by a_s "
operator|+
literal|"order by sum(a_f) desc"
argument_list|)
init|)
block|{
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|26
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|26
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|18
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|18
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello4"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello4"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"sum(a_f)"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|//Test error propagation
name|props
operator|=
operator|new
name|Properties
argument_list|()
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"aggregationMode"
argument_list|,
literal|"facet"
argument_list|)
expr_stmt|;
try|try
init|(
name|Connection
name|con
init|=
name|DriverManager
operator|.
name|getConnection
argument_list|(
literal|"jdbc:solr://"
operator|+
name|zkHost
operator|+
literal|"?collection=collection1"
argument_list|,
name|props
argument_list|)
init|)
block|{
try|try
init|(
name|Statement
name|stmt
init|=
name|con
operator|.
name|createStatement
argument_list|()
init|)
block|{
try|try
init|(
name|ResultSet
name|rs
init|=
name|stmt
operator|.
name|executeQuery
argument_list|(
literal|"select crap from collection1 group by a_s "
operator|+
literal|"order by sum(a_f) desc"
argument_list|)
init|)
block|{         }
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|String
name|errorMessage
init|=
name|e
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|errorMessage
operator|.
name|contains
argument_list|(
literal|"Group by queries must include atleast one aggregate function"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|testDriverMetadata
argument_list|()
expr_stmt|;
block|}
DECL|method|testDriverMetadata
specifier|private
name|void
name|testDriverMetadata
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|collection
init|=
name|DEFAULT_COLLECTION
decl_stmt|;
name|String
name|connectionString1
init|=
literal|"jdbc:solr://"
operator|+
name|zkServer
operator|.
name|getZkAddress
argument_list|()
operator|+
literal|"?collection="
operator|+
name|collection
operator|+
literal|"&username=&password=&testKey1=testValue&testKey2"
decl_stmt|;
name|Properties
name|properties1
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|String
name|sql
init|=
literal|"select id, a_i, a_s, a_f as my_float_col, testnull_i from "
operator|+
name|collection
operator|+
literal|" order by a_i desc"
decl_stmt|;
name|String
name|connectionString2
init|=
literal|"jdbc:solr://"
operator|+
name|zkServer
operator|.
name|getZkAddress
argument_list|()
operator|+
literal|"?collection="
operator|+
name|collection
operator|+
literal|"&aggregationMode=map_reduce&numWorkers=2&username=&password=&testKey1=testValue&testKey2"
decl_stmt|;
name|Properties
name|properties2
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|String
name|sql2
init|=
name|sql
operator|+
literal|" limit 2"
decl_stmt|;
comment|//testJDBCMethods(collection, connectionString1, properties1, sql);
comment|//testJDBCMethods(collection, connectionString2, properties2, sql);
name|testJDBCMethods
argument_list|(
name|collection
argument_list|,
name|connectionString1
argument_list|,
name|properties1
argument_list|,
name|sql2
argument_list|)
expr_stmt|;
name|testJDBCMethods
argument_list|(
name|collection
argument_list|,
name|connectionString2
argument_list|,
name|properties2
argument_list|,
name|sql2
argument_list|)
expr_stmt|;
block|}
DECL|method|testJDBCMethods
specifier|private
name|void
name|testJDBCMethods
parameter_list|(
name|String
name|collection
parameter_list|,
name|String
name|connectionString
parameter_list|,
name|Properties
name|properties
parameter_list|,
name|String
name|sql
parameter_list|)
throws|throws
name|Exception
block|{
try|try
init|(
name|Connection
name|con
init|=
name|DriverManager
operator|.
name|getConnection
argument_list|(
name|connectionString
argument_list|,
name|properties
argument_list|)
init|)
block|{
name|assertTrue
argument_list|(
name|con
operator|.
name|isValid
argument_list|(
name|DEFAULT_CONNECTION_TIMEOUT
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|zkServer
operator|.
name|getZkAddress
argument_list|()
argument_list|,
name|con
operator|.
name|getCatalog
argument_list|()
argument_list|)
expr_stmt|;
name|con
operator|.
name|setCatalog
argument_list|(
name|zkServer
operator|.
name|getZkAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|zkServer
operator|.
name|getZkAddress
argument_list|()
argument_list|,
name|con
operator|.
name|getCatalog
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|con
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|con
operator|.
name|setSchema
argument_list|(
literal|"myschema"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|con
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|DatabaseMetaData
name|databaseMetaData
init|=
name|con
operator|.
name|getMetaData
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|databaseMetaData
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|con
argument_list|,
name|databaseMetaData
operator|.
name|getConnection
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|connectionString
argument_list|,
name|databaseMetaData
operator|.
name|getURL
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|databaseMetaData
operator|.
name|getJDBCMajorVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|databaseMetaData
operator|.
name|getJDBCMinorVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Apache Solr"
argument_list|,
name|databaseMetaData
operator|.
name|getDatabaseProductName
argument_list|()
argument_list|)
expr_stmt|;
comment|// The following tests require package information that is not available when running via Maven
comment|//      assertEquals(this.getClass().getPackage().getSpecificationVersion(), databaseMetaData.getDatabaseProductVersion());
comment|//      assertEquals(0, databaseMetaData.getDatabaseMajorVersion());
comment|//      assertEquals(0, databaseMetaData.getDatabaseMinorVersion());
comment|//      assertEquals(this.getClass().getPackage().getSpecificationTitle(), databaseMetaData.getDriverName());
comment|//      assertEquals(this.getClass().getPackage().getSpecificationVersion(), databaseMetaData.getDriverVersion());
comment|//      assertEquals(0, databaseMetaData.getDriverMajorVersion());
comment|//      assertEquals(0, databaseMetaData.getDriverMinorVersion());
try|try
init|(
name|ResultSet
name|rs
init|=
name|databaseMetaData
operator|.
name|getCatalogs
argument_list|()
init|)
block|{
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|zkServer
operator|.
name|getZkAddress
argument_list|()
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"TABLE_CAT"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|String
argument_list|>
name|collections
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|collections
operator|.
name|addAll
argument_list|(
name|cloudClient
operator|.
name|getZkStateReader
argument_list|()
operator|.
name|getClusterState
argument_list|()
operator|.
name|getCollections
argument_list|()
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|collections
argument_list|)
expr_stmt|;
try|try
init|(
name|ResultSet
name|rs
init|=
name|databaseMetaData
operator|.
name|getSchemas
argument_list|()
init|)
block|{
name|assertFalse
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
try|try
init|(
name|ResultSet
name|rs
init|=
name|databaseMetaData
operator|.
name|getTables
argument_list|(
name|zkServer
operator|.
name|getZkAddress
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|"%"
argument_list|,
literal|null
argument_list|)
init|)
block|{
for|for
control|(
name|String
name|acollection
range|:
name|collections
control|)
block|{
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|zkServer
operator|.
name|getZkAddress
argument_list|()
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"TABLE_CAT"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|rs
operator|.
name|getString
argument_list|(
literal|"TABLE_SCHEM"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acollection
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"TABLE_NAME"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TABLE"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"TABLE_TYPE"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|rs
operator|.
name|getString
argument_list|(
literal|"REMARKS"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertNull
argument_list|(
name|con
operator|.
name|getWarnings
argument_list|()
argument_list|)
expr_stmt|;
name|con
operator|.
name|clearWarnings
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|con
operator|.
name|getWarnings
argument_list|()
argument_list|)
expr_stmt|;
try|try
init|(
name|Statement
name|statement
init|=
name|con
operator|.
name|createStatement
argument_list|()
init|)
block|{
name|assertEquals
argument_list|(
name|con
argument_list|,
name|statement
operator|.
name|getConnection
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|statement
operator|.
name|getWarnings
argument_list|()
argument_list|)
expr_stmt|;
name|statement
operator|.
name|clearWarnings
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|statement
operator|.
name|getWarnings
argument_list|()
argument_list|)
expr_stmt|;
try|try
init|(
name|ResultSet
name|rs
init|=
name|statement
operator|.
name|executeQuery
argument_list|(
name|sql
argument_list|)
init|)
block|{
name|assertEquals
argument_list|(
name|statement
argument_list|,
name|rs
operator|.
name|getStatement
argument_list|()
argument_list|)
expr_stmt|;
name|checkResultSetMetadata
argument_list|(
name|rs
argument_list|)
expr_stmt|;
name|checkResultSet
argument_list|(
name|rs
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|statement
operator|.
name|execute
argument_list|(
name|sql
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|statement
operator|.
name|getUpdateCount
argument_list|()
argument_list|)
expr_stmt|;
try|try
init|(
name|ResultSet
name|rs
init|=
name|statement
operator|.
name|getResultSet
argument_list|()
init|)
block|{
name|assertEquals
argument_list|(
name|statement
argument_list|,
name|rs
operator|.
name|getStatement
argument_list|()
argument_list|)
expr_stmt|;
name|checkResultSetMetadata
argument_list|(
name|rs
argument_list|)
expr_stmt|;
name|checkResultSet
argument_list|(
name|rs
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|statement
operator|.
name|getMoreResults
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|checkResultSetMetadata
specifier|private
name|void
name|checkResultSetMetadata
parameter_list|(
name|ResultSet
name|rs
parameter_list|)
throws|throws
name|Exception
block|{
name|ResultSetMetaData
name|resultSetMetaData
init|=
name|rs
operator|.
name|getMetaData
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|resultSetMetaData
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnName
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a_i"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnName
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a_s"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnName
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a_f"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnName
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testnull_i"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnName
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnLabel
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a_i"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnLabel
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a_s"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnLabel
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"my_float_col"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnLabel
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testnull_i"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnLabel
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id"
operator|.
name|length
argument_list|()
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnDisplaySize
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a_i"
operator|.
name|length
argument_list|()
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnDisplaySize
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a_s"
operator|.
name|length
argument_list|()
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnDisplaySize
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"my_float_col"
operator|.
name|length
argument_list|()
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnDisplaySize
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testnull_i"
operator|.
name|length
argument_list|()
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnDisplaySize
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Long"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnTypeName
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Long"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnTypeName
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"String"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnTypeName
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Double"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnTypeName
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Long"
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnTypeName
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Types
operator|.
name|DOUBLE
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnType
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Types
operator|.
name|DOUBLE
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnType
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Types
operator|.
name|VARCHAR
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnType
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Types
operator|.
name|DOUBLE
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnType
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Types
operator|.
name|DOUBLE
argument_list|,
name|resultSetMetaData
operator|.
name|getColumnType
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|checkResultSet
specifier|private
name|void
name|checkResultSet
parameter_list|(
name|ResultSet
name|rs
parameter_list|)
throws|throws
name|Exception
block|{
name|assertNull
argument_list|(
name|rs
operator|.
name|getWarnings
argument_list|()
argument_list|)
expr_stmt|;
name|rs
operator|.
name|clearWarnings
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|rs
operator|.
name|getWarnings
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14L
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14L
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14L
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14L
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14D
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"a_i"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14D
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14f
argument_list|,
name|rs
operator|.
name|getFloat
argument_list|(
literal|"a_i"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14f
argument_list|,
name|rs
operator|.
name|getFloat
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14
argument_list|,
name|rs
operator|.
name|getShort
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14
argument_list|,
name|rs
operator|.
name|getShort
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14
argument_list|,
name|rs
operator|.
name|getByte
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14
argument_list|,
name|rs
operator|.
name|getByte
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello0"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10D
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|"my_float_col"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10D
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10D
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"my_float_col"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10D
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10F
argument_list|,
name|rs
operator|.
name|getFloat
argument_list|(
literal|"my_float_col"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10F
argument_list|,
name|rs
operator|.
name|getFloat
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rs
operator|.
name|getInt
argument_list|(
literal|"my_float_col"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rs
operator|.
name|getInt
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10L
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|"my_float_col"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10L
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rs
operator|.
name|getShort
argument_list|(
literal|"my_float_col"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rs
operator|.
name|getShort
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rs
operator|.
name|getByte
argument_list|(
literal|"my_float_col"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rs
operator|.
name|getByte
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10L
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10L
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"10"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"10"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10D
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10D
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10F
argument_list|,
name|rs
operator|.
name|getFloat
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10F
argument_list|,
name|rs
operator|.
name|getFloat
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rs
operator|.
name|getInt
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rs
operator|.
name|getInt
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10L
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10L
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rs
operator|.
name|getShort
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rs
operator|.
name|getShort
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rs
operator|.
name|getByte
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|rs
operator|.
name|getByte
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13L
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13L
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13L
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13L
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13D
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"a_i"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13D
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13f
argument_list|,
name|rs
operator|.
name|getFloat
argument_list|(
literal|"a_i"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13f
argument_list|,
name|rs
operator|.
name|getFloat
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13
argument_list|,
name|rs
operator|.
name|getShort
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13
argument_list|,
name|rs
operator|.
name|getShort
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13
argument_list|,
name|rs
operator|.
name|getByte
argument_list|(
literal|"a_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|13
argument_list|,
name|rs
operator|.
name|getByte
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"a_s"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello3"
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9D
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|"my_float_col"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9D
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9D
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"my_float_col"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9D
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9F
argument_list|,
name|rs
operator|.
name|getFloat
argument_list|(
literal|"my_float_col"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9F
argument_list|,
name|rs
operator|.
name|getFloat
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|rs
operator|.
name|getInt
argument_list|(
literal|"my_float_col"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|rs
operator|.
name|getInt
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9L
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|"my_float_col"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9L
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|rs
operator|.
name|getShort
argument_list|(
literal|"my_float_col"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|rs
operator|.
name|getShort
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|rs
operator|.
name|getByte
argument_list|(
literal|"my_float_col"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|9
argument_list|,
name|rs
operator|.
name|getByte
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|rs
operator|.
name|getObject
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|rs
operator|.
name|getString
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0D
argument_list|,
name|rs
operator|.
name|getDouble
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|rs
operator|.
name|getFloat
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0F
argument_list|,
name|rs
operator|.
name|getFloat
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rs
operator|.
name|getInt
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rs
operator|.
name|getInt
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|rs
operator|.
name|getLong
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rs
operator|.
name|getShort
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rs
operator|.
name|getShort
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rs
operator|.
name|getByte
argument_list|(
literal|"testnull_i"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rs
operator|.
name|getByte
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|rs
operator|.
name|wasNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|rs
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
