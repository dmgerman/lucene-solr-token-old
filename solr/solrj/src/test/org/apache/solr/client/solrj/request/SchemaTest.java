begin_unit
begin_package
DECL|package|org.apache.solr.client.solrj.request
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|SortedMap
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrClient
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|schema
operator|.
name|AnalyzerDefinition
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|schema
operator|.
name|FieldTypeDefinition
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|schema
operator|.
name|SchemaRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|SolrResponseBase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|schema
operator|.
name|FieldTypeRepresentation
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|schema
operator|.
name|SchemaRepresentation
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|schema
operator|.
name|SchemaResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|RestTestBase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletHolder
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import
name|org
operator|.
name|restlet
operator|.
name|ext
operator|.
name|servlet
operator|.
name|ServerServlet
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|anyOf
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|equalTo
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import
begin_comment
comment|/**  * Test the functionality (accuracy and failure) of the methods exposed by the classes  * {@link SchemaRequest} and {@link SchemaResponse}.  */
end_comment
begin_class
DECL|class|SchemaTest
specifier|public
class|class
name|SchemaTest
extends|extends
name|RestTestBase
block|{
DECL|method|assertValidSchemaResponse
specifier|private
specifier|static
name|void
name|assertValidSchemaResponse
parameter_list|(
name|SolrResponseBase
name|schemaResponse
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|schemaResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|schemaResponse
operator|.
name|getResponse
argument_list|()
operator|.
name|get
argument_list|(
literal|"errors"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|createStoredStringField
specifier|private
specifier|static
name|void
name|createStoredStringField
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|SolrClient
name|solrClient
parameter_list|)
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|fieldName
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"stored"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddField
name|addFieldRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddField
argument_list|(
name|fieldAttributes
argument_list|)
decl_stmt|;
name|addFieldRequest
operator|.
name|process
argument_list|(
name|solrClient
argument_list|)
expr_stmt|;
block|}
DECL|method|createFieldTypeRequest
specifier|private
specifier|static
name|SchemaRequest
operator|.
name|AddFieldType
name|createFieldTypeRequest
parameter_list|(
name|String
name|fieldTypeName
parameter_list|)
block|{
name|FieldTypeDefinition
name|fieldTypeDefinition
init|=
operator|new
name|FieldTypeDefinition
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldTypeAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|fieldTypeName
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"solr.TextField"
argument_list|)
expr_stmt|;
name|fieldTypeDefinition
operator|.
name|setAttributes
argument_list|(
name|fieldTypeAttributes
argument_list|)
expr_stmt|;
name|AnalyzerDefinition
name|indexAnalyzerDefinition
init|=
operator|new
name|AnalyzerDefinition
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|iTokenizerAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|iTokenizerAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"solr.PathHierarchyTokenizerFactory"
argument_list|)
expr_stmt|;
name|iTokenizerAttributes
operator|.
name|put
argument_list|(
literal|"delimiter"
argument_list|,
literal|"/"
argument_list|)
expr_stmt|;
name|indexAnalyzerDefinition
operator|.
name|setTokenizer
argument_list|(
name|iTokenizerAttributes
argument_list|)
expr_stmt|;
name|fieldTypeDefinition
operator|.
name|setIndexAnalyzer
argument_list|(
name|indexAnalyzerDefinition
argument_list|)
expr_stmt|;
name|AnalyzerDefinition
name|queryAnalyzerDefinition
init|=
operator|new
name|AnalyzerDefinition
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|qTokenizerAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|qTokenizerAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"solr.KeywordTokenizerFactory"
argument_list|)
expr_stmt|;
name|queryAnalyzerDefinition
operator|.
name|setTokenizer
argument_list|(
name|qTokenizerAttributes
argument_list|)
expr_stmt|;
name|fieldTypeDefinition
operator|.
name|setQueryAnalyzer
argument_list|(
name|queryAnalyzerDefinition
argument_list|)
expr_stmt|;
return|return
operator|new
name|SchemaRequest
operator|.
name|AddFieldType
argument_list|(
name|fieldTypeDefinition
argument_list|)
return|;
block|}
annotation|@
name|Before
DECL|method|init
specifier|public
name|void
name|init
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|tmpSolrHome
init|=
name|createTempDir
argument_list|()
operator|.
name|toFile
argument_list|()
decl_stmt|;
name|FileUtils
operator|.
name|copyDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|getFile
argument_list|(
literal|"solrj/solr/collection1"
argument_list|)
operator|.
name|getParent
argument_list|()
argument_list|)
argument_list|,
name|tmpSolrHome
operator|.
name|getAbsoluteFile
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|SortedMap
argument_list|<
name|ServletHolder
argument_list|,
name|String
argument_list|>
name|extraServlets
init|=
operator|new
name|TreeMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|final
name|ServletHolder
name|solrRestApi
init|=
operator|new
name|ServletHolder
argument_list|(
literal|"SolrSchemaRestApi"
argument_list|,
name|ServerServlet
operator|.
name|class
argument_list|)
decl_stmt|;
name|solrRestApi
operator|.
name|setInitParameter
argument_list|(
literal|"org.restlet.application"
argument_list|,
literal|"org.apache.solr.rest.SolrSchemaRestApi"
argument_list|)
expr_stmt|;
name|extraServlets
operator|.
name|put
argument_list|(
name|solrRestApi
argument_list|,
literal|"/schema/*"
argument_list|)
expr_stmt|;
comment|// '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'
name|System
operator|.
name|setProperty
argument_list|(
literal|"managed.schema.mutable"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"enable.update.log"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|createJettyAndHarness
argument_list|(
name|tmpSolrHome
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
literal|"solrconfig-managed-schema.xml"
argument_list|,
literal|"schema.xml"
argument_list|,
literal|"/solr"
argument_list|,
literal|true
argument_list|,
name|extraServlets
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|cleanup
specifier|public
name|void
name|cleanup
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|jetty
operator|!=
literal|null
condition|)
block|{
name|jetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|jetty
operator|=
literal|null
expr_stmt|;
block|}
name|client
operator|=
literal|null
expr_stmt|;
if|if
condition|(
name|restTestHarness
operator|!=
literal|null
condition|)
block|{
name|restTestHarness
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|restTestHarness
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSchemaRequestAccuracy
specifier|public
name|void
name|testSchemaRequestAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
name|schemaRequest
init|=
operator|new
name|SchemaRequest
argument_list|()
decl_stmt|;
name|SchemaResponse
name|schemaResponse
init|=
name|schemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|schemaResponse
argument_list|)
expr_stmt|;
name|SchemaRepresentation
name|schemaRepresentation
init|=
name|schemaResponse
operator|.
name|getSchemaRepresentation
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|schemaRepresentation
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|schemaRepresentation
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.6
argument_list|,
name|schemaRepresentation
operator|.
name|getVersion
argument_list|()
argument_list|,
literal|0.001f
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|schemaRepresentation
operator|.
name|getUniqueKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaRepresentation
operator|.
name|getFields
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaRepresentation
operator|.
name|getDynamicFields
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaRepresentation
operator|.
name|getFieldTypes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaRepresentation
operator|.
name|getCopyFields
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSchemaNameRequestAccuracy
specifier|public
name|void
name|testSchemaNameRequestAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|SchemaName
name|schemaNameRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|SchemaName
argument_list|()
decl_stmt|;
name|SchemaResponse
operator|.
name|SchemaNameResponse
name|schemaNameResponse
init|=
name|schemaNameRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|schemaNameResponse
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|schemaNameResponse
operator|.
name|getSchemaName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSchemaVersionRequestAccuracy
specifier|public
name|void
name|testSchemaVersionRequestAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|SchemaVersion
name|schemaVersionRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|SchemaVersion
argument_list|()
decl_stmt|;
name|SchemaResponse
operator|.
name|SchemaVersionResponse
name|schemaVersionResponse
init|=
name|schemaVersionRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|schemaVersionResponse
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.6
argument_list|,
name|schemaVersionResponse
operator|.
name|getSchemaVersion
argument_list|()
argument_list|,
literal|0.001
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetFieldsAccuracy
specifier|public
name|void
name|testGetFieldsAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|Fields
name|fieldsSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|Fields
argument_list|()
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldsResponse
name|fieldsResponse
init|=
name|fieldsSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|fieldsResponse
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|fields
init|=
name|fieldsResponse
operator|.
name|getFields
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fields
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetFieldAccuracy
specifier|public
name|void
name|testGetFieldAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|fieldName
init|=
literal|"signatureField"
decl_stmt|;
name|SchemaRequest
operator|.
name|Field
name|fieldSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|Field
argument_list|(
name|fieldName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldResponse
name|fieldResponse
init|=
name|fieldSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|fieldResponse
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributes
init|=
name|fieldResponse
operator|.
name|getField
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fieldName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|fieldAttributes
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"string"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|fieldAttributes
operator|.
name|get
argument_list|(
literal|"type"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetDynamicFieldsAccuracy
specifier|public
name|void
name|testGetDynamicFieldsAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|DynamicFields
name|dynamicFieldsSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|DynamicFields
argument_list|()
decl_stmt|;
name|SchemaResponse
operator|.
name|DynamicFieldsResponse
name|dynamicFieldsResponse
init|=
name|dynamicFieldsSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|dynamicFieldsResponse
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|fields
init|=
name|dynamicFieldsResponse
operator|.
name|getDynamicFields
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fields
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetDynamicFieldAccuracy
specifier|public
name|void
name|testGetDynamicFieldAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dynamicFieldName
init|=
literal|"*_i"
decl_stmt|;
name|SchemaRequest
operator|.
name|DynamicField
name|dynamicFieldSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|DynamicField
argument_list|(
name|dynamicFieldName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|DynamicFieldResponse
name|dynamicFieldResponse
init|=
name|dynamicFieldSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|dynamicFieldResponse
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|dynamicFieldAttributes
init|=
name|dynamicFieldResponse
operator|.
name|getDynamicField
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|dynamicFieldName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|dynamicFieldAttributes
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"int"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|dynamicFieldAttributes
operator|.
name|get
argument_list|(
literal|"type"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetFieldTypesAccuracy
specifier|public
name|void
name|testGetFieldTypesAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|FieldTypes
name|fieldTypesRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|FieldTypes
argument_list|()
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldTypesResponse
name|fieldTypesResponse
init|=
name|fieldTypesRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|fieldTypesResponse
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldTypeRepresentation
argument_list|>
name|fieldTypes
init|=
name|fieldTypesResponse
operator|.
name|getFieldTypes
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fieldTypes
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetFieldTypeAccuracy
specifier|public
name|void
name|testGetFieldTypeAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|fieldType
init|=
literal|"string"
decl_stmt|;
name|SchemaRequest
operator|.
name|FieldType
name|fieldTypeSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|FieldType
argument_list|(
name|fieldType
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldTypeResponse
name|fieldTypeResponse
init|=
name|fieldTypeSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|fieldTypeResponse
argument_list|)
expr_stmt|;
name|FieldTypeRepresentation
name|fieldTypeDefinition
init|=
name|fieldTypeResponse
operator|.
name|getFieldType
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fieldType
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|fieldTypeDefinition
operator|.
name|getAttributes
argument_list|()
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"solr.StrField"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|fieldTypeDefinition
operator|.
name|getAttributes
argument_list|()
operator|.
name|get
argument_list|(
literal|"class"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetCopyFieldsAccuracy
specifier|public
name|void
name|testGetCopyFieldsAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|CopyFields
name|copyFieldsRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|CopyFields
argument_list|()
decl_stmt|;
name|SchemaResponse
operator|.
name|CopyFieldsResponse
name|copyFieldsResponse
init|=
name|copyFieldsRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|copyFieldsResponse
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|copyFieldsAttributes
init|=
name|copyFieldsResponse
operator|.
name|getCopyFields
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|copyFieldsAttributes
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetUniqueKeyAccuracy
specifier|public
name|void
name|testGetUniqueKeyAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|UniqueKey
name|uniqueKeyRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|UniqueKey
argument_list|()
decl_stmt|;
name|SchemaResponse
operator|.
name|UniqueKeyResponse
name|uniqueKeyResponse
init|=
name|uniqueKeyRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|uniqueKeyResponse
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|uniqueKeyResponse
operator|.
name|getUniqueKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetGlobalSimilarityAccuracy
specifier|public
name|void
name|testGetGlobalSimilarityAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|GlobalSimilarity
name|globalSimilarityRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|GlobalSimilarity
argument_list|()
decl_stmt|;
name|SchemaResponse
operator|.
name|GlobalSimilarityResponse
name|globalSimilarityResponse
init|=
name|globalSimilarityRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|globalSimilarityResponse
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.solr.search.similarities.SchemaSimilarityFactory"
argument_list|,
name|globalSimilarityResponse
operator|.
name|getSimilarity
argument_list|()
operator|.
name|get
argument_list|(
literal|"class"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetDefaultQueryOperatorAccuracy
specifier|public
name|void
name|testGetDefaultQueryOperatorAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|DefaultQueryOperator
name|defaultQueryOperatorRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|DefaultQueryOperator
argument_list|()
decl_stmt|;
name|SchemaResponse
operator|.
name|DefaultQueryOperatorResponse
name|defaultQueryOperatorResponse
init|=
name|defaultQueryOperatorRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|defaultQueryOperatorResponse
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OR"
argument_list|,
name|defaultQueryOperatorResponse
operator|.
name|getDefaultOperator
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddFieldAccuracy
specifier|public
name|void
name|testAddFieldAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|Fields
name|fieldsSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|Fields
argument_list|()
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldsResponse
name|initialFieldsResponse
init|=
name|fieldsSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|initialFieldsResponse
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|initialFields
init|=
name|initialFieldsResponse
operator|.
name|getFields
argument_list|()
decl_stmt|;
name|String
name|fieldName
init|=
literal|"accuracyField"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|fieldName
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"stored"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"indexed"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"default"
argument_list|,
literal|"accuracy"
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"required"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddField
name|addFieldUpdateSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddField
argument_list|(
name|fieldAttributes
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldResponse
init|=
name|addFieldUpdateSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addFieldResponse
argument_list|)
expr_stmt|;
name|SchemaResponse
operator|.
name|FieldsResponse
name|currentFieldsResponse
init|=
name|fieldsSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|currentFieldsResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|currentFields
init|=
name|currentFieldsResponse
operator|.
name|getFields
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|initialFields
operator|.
name|size
argument_list|()
operator|+
literal|1
argument_list|,
name|currentFields
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|Field
name|fieldSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|Field
argument_list|(
name|fieldName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldResponse
name|newFieldResponse
init|=
name|fieldSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|newFieldResponse
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|newFieldAttributes
init|=
name|newFieldResponse
operator|.
name|getField
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fieldName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"string"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"type"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|false
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"stored"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|true
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"indexed"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"accuracy"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"default"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|true
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"required"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addFieldShouldntBeCalledTwiceWithTheSameName
specifier|public
name|void
name|addFieldShouldntBeCalledTwiceWithTheSameName
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
literal|"failureField"
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddField
name|addFieldUpdateSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddField
argument_list|(
name|fieldAttributes
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldFirstResponse
init|=
name|addFieldUpdateSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addFieldFirstResponse
argument_list|)
expr_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldSecondResponse
init|=
name|addFieldUpdateSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|addFieldSecondResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|addFieldSecondResponse
operator|.
name|getResponse
argument_list|()
operator|.
name|get
argument_list|(
literal|"errors"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteFieldAccuracy
specifier|public
name|void
name|testDeleteFieldAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|fieldName
init|=
literal|"fieldToBeDeleted"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributesRequest
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fieldAttributesRequest
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|fieldName
argument_list|)
expr_stmt|;
name|fieldAttributesRequest
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddField
name|addFieldUpdateSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddField
argument_list|(
name|fieldAttributesRequest
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldResponse
init|=
name|addFieldUpdateSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addFieldResponse
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|Field
name|fieldSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|Field
argument_list|(
name|fieldName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldResponse
name|initialFieldResponse
init|=
name|fieldSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|initialFieldResponse
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributesResponse
init|=
name|initialFieldResponse
operator|.
name|getField
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fieldName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|fieldAttributesResponse
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|DeleteField
name|deleteFieldRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|DeleteField
argument_list|(
name|fieldName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|deleteFieldResponse
init|=
name|deleteFieldRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|deleteFieldResponse
argument_list|)
expr_stmt|;
try|try
block|{
name|fieldSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"after removal, the field %s shouldn't be anymore available over Schema API"
argument_list|,
name|fieldName
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|e
parameter_list|)
block|{
comment|//success
block|}
block|}
annotation|@
name|Test
DECL|method|deletingAFieldThatDoesntExistInTheSchemaShouldFail
specifier|public
name|void
name|deletingAFieldThatDoesntExistInTheSchemaShouldFail
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|DeleteField
name|deleteFieldRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|DeleteField
argument_list|(
literal|"fieldToBeDeleted"
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|deleteFieldResponse
init|=
name|deleteFieldRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|deleteFieldResponse
operator|.
name|getResponse
argument_list|()
operator|.
name|get
argument_list|(
literal|"errors"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceFieldAccuracy
specifier|public
name|void
name|testReplaceFieldAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Given
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|fieldName
init|=
literal|"accuracyField"
decl_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|fieldName
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"stored"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"indexed"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"required"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddField
name|addFieldUpdateSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddField
argument_list|(
name|fieldAttributes
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldResponse
init|=
name|addFieldUpdateSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addFieldResponse
argument_list|)
expr_stmt|;
comment|// When : update the field definition
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"stored"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"indexed"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|ReplaceField
name|replaceFieldRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|ReplaceField
argument_list|(
name|fieldAttributes
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|replaceFieldResponse
init|=
name|replaceFieldRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|replaceFieldResponse
argument_list|)
expr_stmt|;
comment|// Then
name|SchemaRequest
operator|.
name|Field
name|fieldSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|Field
argument_list|(
name|fieldName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldResponse
name|newFieldResponse
init|=
name|fieldSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|newFieldResponse
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|newFieldAttributes
init|=
name|newFieldResponse
operator|.
name|getField
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fieldName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"string"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"type"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|true
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"stored"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|false
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"indexed"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|true
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"required"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddDynamicFieldAccuracy
specifier|public
name|void
name|testAddDynamicFieldAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|DynamicFields
name|dynamicFieldsSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|DynamicFields
argument_list|()
decl_stmt|;
name|SchemaResponse
operator|.
name|DynamicFieldsResponse
name|initialDFieldsResponse
init|=
name|dynamicFieldsSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|initialDFieldsResponse
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|initialDFields
init|=
name|initialDFieldsResponse
operator|.
name|getDynamicFields
argument_list|()
decl_stmt|;
name|String
name|dFieldName
init|=
literal|"*_acc"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|dFieldName
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"stored"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"indexed"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"default"
argument_list|,
literal|"accuracy"
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"required"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddDynamicField
name|addFieldUpdateSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddDynamicField
argument_list|(
name|fieldAttributes
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldResponse
init|=
name|addFieldUpdateSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addFieldResponse
argument_list|)
expr_stmt|;
name|SchemaResponse
operator|.
name|DynamicFieldsResponse
name|currentDFieldsResponse
init|=
name|dynamicFieldsSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|currentDFieldsResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|currentFields
init|=
name|currentDFieldsResponse
operator|.
name|getDynamicFields
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|initialDFields
operator|.
name|size
argument_list|()
operator|+
literal|1
argument_list|,
name|currentFields
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|DynamicField
name|dFieldRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|DynamicField
argument_list|(
name|dFieldName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|DynamicFieldResponse
name|newFieldResponse
init|=
name|dFieldRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|newFieldResponse
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|newFieldAttributes
init|=
name|newFieldResponse
operator|.
name|getDynamicField
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|dFieldName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"string"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"type"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|false
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"stored"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|true
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"indexed"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"accuracy"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"default"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|true
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"required"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addDynamicFieldShouldntBeCalledTwiceWithTheSameName
specifier|public
name|void
name|addDynamicFieldShouldntBeCalledTwiceWithTheSameName
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
literal|"*_failure"
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddDynamicField
name|addDFieldUpdateSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddDynamicField
argument_list|(
name|fieldAttributes
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addDFieldFirstResponse
init|=
name|addDFieldUpdateSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addDFieldFirstResponse
argument_list|)
expr_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addDFieldSecondResponse
init|=
name|addDFieldUpdateSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|addDFieldSecondResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|addDFieldSecondResponse
operator|.
name|getResponse
argument_list|()
operator|.
name|get
argument_list|(
literal|"errors"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteDynamicFieldAccuracy
specifier|public
name|void
name|testDeleteDynamicFieldAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dynamicFieldName
init|=
literal|"*_del"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|dynamicFieldName
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddDynamicField
name|addFieldUpdateSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddDynamicField
argument_list|(
name|fieldAttributes
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addDynamicFieldResponse
init|=
name|addFieldUpdateSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addDynamicFieldResponse
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|DynamicField
name|dynamicFieldSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|DynamicField
argument_list|(
name|dynamicFieldName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|DynamicFieldResponse
name|initialDFieldResponse
init|=
name|dynamicFieldSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|initialDFieldResponse
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributesResponse
init|=
name|initialDFieldResponse
operator|.
name|getDynamicField
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|dynamicFieldName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|fieldAttributesResponse
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|DeleteDynamicField
name|deleteFieldRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|DeleteDynamicField
argument_list|(
name|dynamicFieldName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|deleteDynamicFieldResponse
init|=
name|deleteFieldRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|deleteDynamicFieldResponse
argument_list|)
expr_stmt|;
try|try
block|{
name|dynamicFieldSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"after removal, the dynamic field %s shouldn't be anymore available over Schema API"
argument_list|,
name|dynamicFieldName
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|e
parameter_list|)
block|{
comment|//success
block|}
block|}
annotation|@
name|Test
DECL|method|deletingADynamicFieldThatDoesntExistInTheSchemaShouldFail
specifier|public
name|void
name|deletingADynamicFieldThatDoesntExistInTheSchemaShouldFail
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|DeleteDynamicField
name|deleteDynamicFieldRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|DeleteDynamicField
argument_list|(
literal|"*_notexists"
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|deleteDynamicFieldResponse
init|=
name|deleteDynamicFieldRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|deleteDynamicFieldResponse
operator|.
name|getResponse
argument_list|()
operator|.
name|get
argument_list|(
literal|"errors"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceDynamicFieldAccuracy
specifier|public
name|void
name|testReplaceDynamicFieldAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Given
name|String
name|fieldName
init|=
literal|"*_replace"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|fieldName
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"stored"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"indexed"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"required"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddDynamicField
name|addDFieldUpdateSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddDynamicField
argument_list|(
name|fieldAttributes
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldResponse
init|=
name|addDFieldUpdateSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addFieldResponse
argument_list|)
expr_stmt|;
comment|// When : update the field definition
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|replaceFieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|(
name|fieldAttributes
argument_list|)
decl_stmt|;
name|replaceFieldAttributes
operator|.
name|put
argument_list|(
literal|"stored"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|replaceFieldAttributes
operator|.
name|put
argument_list|(
literal|"indexed"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|ReplaceDynamicField
name|replaceFieldRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|ReplaceDynamicField
argument_list|(
name|replaceFieldAttributes
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|replaceFieldResponse
init|=
name|replaceFieldRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|replaceFieldResponse
argument_list|)
expr_stmt|;
comment|// Then
name|SchemaRequest
operator|.
name|DynamicField
name|dynamicFieldSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|DynamicField
argument_list|(
name|fieldName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|DynamicFieldResponse
name|newFieldResponse
init|=
name|dynamicFieldSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|newFieldResponse
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|newFieldAttributes
init|=
name|newFieldResponse
operator|.
name|getDynamicField
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fieldName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"string"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"type"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|true
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"stored"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|false
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"indexed"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|true
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldAttributes
operator|.
name|get
argument_list|(
literal|"required"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddFieldTypeAccuracy
specifier|public
name|void
name|testAddFieldTypeAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|FieldTypes
name|fieldTypesRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|FieldTypes
argument_list|()
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldTypesResponse
name|initialFieldTypesResponse
init|=
name|fieldTypesRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|initialFieldTypesResponse
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldTypeRepresentation
argument_list|>
name|initialFieldTypes
init|=
name|initialFieldTypesResponse
operator|.
name|getFieldTypes
argument_list|()
decl_stmt|;
name|FieldTypeDefinition
name|fieldTypeDefinition
init|=
operator|new
name|FieldTypeDefinition
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldTypeAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|fieldTypeName
init|=
literal|"accuracyTextField"
decl_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|fieldTypeName
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"solr.TextField"
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"positionIncrementGap"
argument_list|,
literal|"100"
argument_list|)
expr_stmt|;
name|fieldTypeDefinition
operator|.
name|setAttributes
argument_list|(
name|fieldTypeAttributes
argument_list|)
expr_stmt|;
name|AnalyzerDefinition
name|analyzerDefinition
init|=
operator|new
name|AnalyzerDefinition
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|charFilterAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|charFilterAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"solr.PatternReplaceCharFilterFactory"
argument_list|)
expr_stmt|;
name|charFilterAttributes
operator|.
name|put
argument_list|(
literal|"replacement"
argument_list|,
literal|"$1$1"
argument_list|)
expr_stmt|;
name|charFilterAttributes
operator|.
name|put
argument_list|(
literal|"pattern"
argument_list|,
literal|"([a-zA-Z])\\\\1+"
argument_list|)
expr_stmt|;
name|analyzerDefinition
operator|.
name|setCharFilters
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|charFilterAttributes
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|tokenizerAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|tokenizerAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"solr.WhitespaceTokenizerFactory"
argument_list|)
expr_stmt|;
name|analyzerDefinition
operator|.
name|setTokenizer
argument_list|(
name|tokenizerAttributes
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|filterAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|filterAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"solr.WordDelimiterFilterFactory"
argument_list|)
expr_stmt|;
name|filterAttributes
operator|.
name|put
argument_list|(
literal|"preserveOriginal"
argument_list|,
literal|"0"
argument_list|)
expr_stmt|;
name|analyzerDefinition
operator|.
name|setFilters
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|filterAttributes
argument_list|)
argument_list|)
expr_stmt|;
name|fieldTypeDefinition
operator|.
name|setAnalyzer
argument_list|(
name|analyzerDefinition
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddFieldType
name|addFieldTypeRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddFieldType
argument_list|(
name|fieldTypeDefinition
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldTypeResponse
init|=
name|addFieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addFieldTypeResponse
argument_list|)
expr_stmt|;
name|SchemaResponse
operator|.
name|FieldTypesResponse
name|currentFieldTypesResponse
init|=
name|fieldTypesRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|currentFieldTypesResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldTypeRepresentation
argument_list|>
name|currentFieldTypes
init|=
name|currentFieldTypesResponse
operator|.
name|getFieldTypes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|initialFieldTypes
operator|.
name|size
argument_list|()
operator|+
literal|1
argument_list|,
name|currentFieldTypes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|fieldName
init|=
literal|"accuracyField"
decl_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|fieldName
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
name|fieldTypeName
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddField
name|addFieldRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddField
argument_list|(
name|fieldAttributes
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldResponse
init|=
name|addFieldRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addFieldResponse
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|dynamicFieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|dynamicFieldName
init|=
literal|"*_accuracy"
decl_stmt|;
name|dynamicFieldAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|dynamicFieldName
argument_list|)
expr_stmt|;
name|dynamicFieldAttributes
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
name|fieldTypeName
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddDynamicField
name|addDynamicFieldRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddDynamicField
argument_list|(
name|dynamicFieldAttributes
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addDynamicFieldResponse
init|=
name|addDynamicFieldRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addDynamicFieldResponse
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|FieldType
name|fieldTypeRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|FieldType
argument_list|(
name|fieldTypeName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldTypeResponse
name|newFieldTypeResponse
init|=
name|fieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|newFieldTypeResponse
argument_list|)
expr_stmt|;
name|FieldTypeRepresentation
name|newFieldTypeRepresentation
init|=
name|newFieldTypeResponse
operator|.
name|getFieldType
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fieldTypeName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldTypeRepresentation
operator|.
name|getAttributes
argument_list|()
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"solr.TextField"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldTypeRepresentation
operator|.
name|getAttributes
argument_list|()
operator|.
name|get
argument_list|(
literal|"class"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzerDefinition
operator|.
name|getTokenizer
argument_list|()
operator|.
name|get
argument_list|(
literal|"class"
argument_list|)
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldTypeRepresentation
operator|.
name|getAnalyzer
argument_list|()
operator|.
name|getTokenizer
argument_list|()
operator|.
name|get
argument_list|(
literal|"class"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|newFieldTypeRepresentation
operator|.
name|getFields
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|newFieldTypeRepresentation
operator|.
name|getFields
argument_list|()
operator|.
name|contains
argument_list|(
name|fieldName
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|newFieldTypeRepresentation
operator|.
name|getDynamicFields
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|newFieldTypeRepresentation
operator|.
name|getDynamicFields
argument_list|()
operator|.
name|contains
argument_list|(
name|dynamicFieldName
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addFieldTypeWithSimilarityAccuracy
specifier|public
name|void
name|addFieldTypeWithSimilarityAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|FieldTypeDefinition
name|fieldTypeDefinition
init|=
operator|new
name|FieldTypeDefinition
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldTypeAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|fieldTypeName
init|=
literal|"fullClassNames"
decl_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|fieldTypeName
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"org.apache.solr.schema.TextField"
argument_list|)
expr_stmt|;
name|fieldTypeDefinition
operator|.
name|setAttributes
argument_list|(
name|fieldTypeAttributes
argument_list|)
expr_stmt|;
name|AnalyzerDefinition
name|analyzerDefinition
init|=
operator|new
name|AnalyzerDefinition
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|charFilterAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|charFilterAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"solr.PatternReplaceCharFilterFactory"
argument_list|)
expr_stmt|;
name|charFilterAttributes
operator|.
name|put
argument_list|(
literal|"replacement"
argument_list|,
literal|"$1$1"
argument_list|)
expr_stmt|;
name|charFilterAttributes
operator|.
name|put
argument_list|(
literal|"pattern"
argument_list|,
literal|"([a-zA-Z])\\\\1+"
argument_list|)
expr_stmt|;
name|analyzerDefinition
operator|.
name|setCharFilters
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|charFilterAttributes
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|tokenizerAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|tokenizerAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"solr.WhitespaceTokenizerFactory"
argument_list|)
expr_stmt|;
name|analyzerDefinition
operator|.
name|setTokenizer
argument_list|(
name|tokenizerAttributes
argument_list|)
expr_stmt|;
name|fieldTypeDefinition
operator|.
name|setAnalyzer
argument_list|(
name|analyzerDefinition
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|similarityAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|similarityAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"org.apache.lucene.misc.SweetSpotSimilarity"
argument_list|)
expr_stmt|;
name|fieldTypeDefinition
operator|.
name|setSimilarity
argument_list|(
name|similarityAttributes
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddFieldType
name|addFieldTypeRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddFieldType
argument_list|(
name|fieldTypeDefinition
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldTypeResponse
init|=
name|addFieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addFieldTypeResponse
argument_list|)
expr_stmt|;
comment|// similarity is not shown by default for the fieldType
name|SchemaRequest
operator|.
name|FieldType
name|fieldTypeRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|FieldType
argument_list|(
name|fieldTypeName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldTypeResponse
name|newFieldTypeResponse
init|=
name|fieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|newFieldTypeResponse
argument_list|)
expr_stmt|;
name|FieldTypeRepresentation
name|newFieldTypeRepresentation
init|=
name|newFieldTypeResponse
operator|.
name|getFieldType
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fieldTypeName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldTypeRepresentation
operator|.
name|getAttributes
argument_list|()
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|similarityAttributes
operator|.
name|get
argument_list|(
literal|"class"
argument_list|)
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldTypeRepresentation
operator|.
name|getSimilarity
argument_list|()
operator|.
name|get
argument_list|(
literal|"class"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addFieldTypeWithAnalyzerClassAccuracy
specifier|public
name|void
name|addFieldTypeWithAnalyzerClassAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldTypeAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|fieldTypeName
init|=
literal|"nameText"
decl_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|fieldTypeName
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"solr.TextField"
argument_list|)
expr_stmt|;
name|FieldTypeDefinition
name|fieldTypeDefinition
init|=
operator|new
name|FieldTypeDefinition
argument_list|()
decl_stmt|;
name|fieldTypeDefinition
operator|.
name|setAttributes
argument_list|(
name|fieldTypeAttributes
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|analyzerAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|analyzerAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"org.apache.lucene.analysis.core.WhitespaceAnalyzer"
argument_list|)
expr_stmt|;
name|analyzerAttributes
operator|.
name|put
argument_list|(
literal|"luceneMatchVersion"
argument_list|,
literal|"5.0.0"
argument_list|)
expr_stmt|;
name|AnalyzerDefinition
name|analyzerDefinition
init|=
operator|new
name|AnalyzerDefinition
argument_list|()
decl_stmt|;
name|analyzerDefinition
operator|.
name|setAttributes
argument_list|(
name|analyzerAttributes
argument_list|)
expr_stmt|;
name|fieldTypeDefinition
operator|.
name|setAnalyzer
argument_list|(
name|analyzerDefinition
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddFieldType
name|addFieldTypeRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddFieldType
argument_list|(
name|fieldTypeDefinition
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldTypeResponse
init|=
name|addFieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addFieldTypeResponse
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|FieldType
name|fieldTypeRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|FieldType
argument_list|(
name|fieldTypeName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldTypeResponse
name|newFieldTypeResponse
init|=
name|fieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|newFieldTypeResponse
argument_list|)
expr_stmt|;
name|FieldTypeRepresentation
name|newFieldTypeRepresentation
init|=
name|newFieldTypeResponse
operator|.
name|getFieldType
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fieldTypeName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldTypeRepresentation
operator|.
name|getAttributes
argument_list|()
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzerAttributes
operator|.
name|get
argument_list|(
literal|"class"
argument_list|)
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldTypeRepresentation
operator|.
name|getAnalyzer
argument_list|()
operator|.
name|getAttributes
argument_list|()
operator|.
name|get
argument_list|(
literal|"class"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|analyzerAttributes
operator|.
name|get
argument_list|(
literal|"luceneMatchVersion"
argument_list|)
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|newFieldTypeRepresentation
operator|.
name|getAnalyzer
argument_list|()
operator|.
name|getAttributes
argument_list|()
operator|.
name|get
argument_list|(
literal|"luceneMatchVersion"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addFieldTypeShouldntBeCalledTwiceWithTheSameName
specifier|public
name|void
name|addFieldTypeShouldntBeCalledTwiceWithTheSameName
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldTypeAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
literal|"failureInt"
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"solr.TrieIntField"
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"precisionStep"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"omitNorms"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"positionIncrementGap"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|FieldTypeDefinition
name|fieldTypeDefinition
init|=
operator|new
name|FieldTypeDefinition
argument_list|()
decl_stmt|;
name|fieldTypeDefinition
operator|.
name|setAttributes
argument_list|(
name|fieldTypeAttributes
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddFieldType
name|addFieldTypeRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddFieldType
argument_list|(
name|fieldTypeDefinition
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldTypeFirstResponse
init|=
name|addFieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addFieldTypeFirstResponse
argument_list|)
expr_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldTypeSecondResponse
init|=
name|addFieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|addFieldTypeSecondResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|addFieldTypeSecondResponse
operator|.
name|getResponse
argument_list|()
operator|.
name|get
argument_list|(
literal|"errors"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteFieldTypeAccuracy
specifier|public
name|void
name|testDeleteFieldTypeAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldTypeAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|fieldTypeName
init|=
literal|"delInt"
decl_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|fieldTypeName
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"solr.TrieIntField"
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"precisionStep"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"omitNorms"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"positionIncrementGap"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|FieldTypeDefinition
name|fieldTypeDefinition
init|=
operator|new
name|FieldTypeDefinition
argument_list|()
decl_stmt|;
name|fieldTypeDefinition
operator|.
name|setAttributes
argument_list|(
name|fieldTypeAttributes
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddFieldType
name|addFieldTypeRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddFieldType
argument_list|(
name|fieldTypeDefinition
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldTypeResponse
init|=
name|addFieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addFieldTypeResponse
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|FieldType
name|fieldTypeRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|FieldType
argument_list|(
name|fieldTypeName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldTypeResponse
name|initialFieldTypeResponse
init|=
name|fieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|initialFieldTypeResponse
argument_list|)
expr_stmt|;
name|FieldTypeRepresentation
name|responseFieldTypeRepresentation
init|=
name|initialFieldTypeResponse
operator|.
name|getFieldType
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fieldTypeName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|responseFieldTypeRepresentation
operator|.
name|getAttributes
argument_list|()
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|DeleteFieldType
name|deleteFieldTypeRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|DeleteFieldType
argument_list|(
name|fieldTypeName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|deleteFieldTypeResponse
init|=
name|deleteFieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|deleteFieldTypeResponse
argument_list|)
expr_stmt|;
try|try
block|{
name|fieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
name|String
operator|.
name|format
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|,
literal|"after removal, the field type %s shouldn't be anymore available over Schema API"
argument_list|,
name|fieldTypeName
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|e
parameter_list|)
block|{
comment|//success
block|}
block|}
annotation|@
name|Test
DECL|method|deletingAFieldTypeThatDoesntExistInTheSchemaShouldFail
specifier|public
name|void
name|deletingAFieldTypeThatDoesntExistInTheSchemaShouldFail
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|DeleteFieldType
name|deleteFieldTypeRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|DeleteFieldType
argument_list|(
literal|"fieldTypeToBeDeleted"
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|deleteFieldResponse
init|=
name|deleteFieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|deleteFieldResponse
operator|.
name|getResponse
argument_list|()
operator|.
name|get
argument_list|(
literal|"errors"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceFieldTypeAccuracy
specifier|public
name|void
name|testReplaceFieldTypeAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Given
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldTypeAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|fieldTypeName
init|=
literal|"replaceInt"
decl_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|fieldTypeName
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"class"
argument_list|,
literal|"solr.TrieIntField"
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"precisionStep"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"omitNorms"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"positionIncrementGap"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|FieldTypeDefinition
name|fieldTypeDefinition
init|=
operator|new
name|FieldTypeDefinition
argument_list|()
decl_stmt|;
name|fieldTypeDefinition
operator|.
name|setAttributes
argument_list|(
name|fieldTypeAttributes
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddFieldType
name|addFieldTypeRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddFieldType
argument_list|(
name|fieldTypeDefinition
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldTypeResponse
init|=
name|addFieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addFieldTypeResponse
argument_list|)
expr_stmt|;
comment|// When : update the field definition
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"precisionStep"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|fieldTypeAttributes
operator|.
name|put
argument_list|(
literal|"omitNorms"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|FieldTypeDefinition
name|replaceFieldTypeDefinition
init|=
operator|new
name|FieldTypeDefinition
argument_list|()
decl_stmt|;
name|replaceFieldTypeDefinition
operator|.
name|setAttributes
argument_list|(
name|fieldTypeAttributes
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|ReplaceFieldType
name|replaceFieldTypeRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|ReplaceFieldType
argument_list|(
name|replaceFieldTypeDefinition
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|replaceFieldTypeResponse
init|=
name|replaceFieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|replaceFieldTypeResponse
argument_list|)
expr_stmt|;
comment|// Then
name|SchemaRequest
operator|.
name|FieldType
name|fieldTypeRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|FieldType
argument_list|(
name|fieldTypeName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldTypeResponse
name|newFieldTypeResponse
init|=
name|fieldTypeRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|newFieldTypeResponse
argument_list|)
expr_stmt|;
name|FieldTypeRepresentation
name|replacedFieldTypeRepresentation
init|=
name|newFieldTypeResponse
operator|.
name|getFieldType
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|replacedFieldTypeAttributes
init|=
name|replacedFieldTypeRepresentation
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fieldTypeName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|replacedFieldTypeAttributes
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"solr.TrieIntField"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|replacedFieldTypeAttributes
operator|.
name|get
argument_list|(
literal|"class"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|false
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|replacedFieldTypeAttributes
operator|.
name|get
argument_list|(
literal|"omitNorms"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"1"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|replacedFieldTypeAttributes
operator|.
name|get
argument_list|(
literal|"precisionStep"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|"0"
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|replacedFieldTypeAttributes
operator|.
name|get
argument_list|(
literal|"positionIncrementGap"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCopyFieldAccuracy
specifier|public
name|void
name|testCopyFieldAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|CopyFields
name|copyFieldsSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|CopyFields
argument_list|()
decl_stmt|;
name|SchemaResponse
operator|.
name|CopyFieldsResponse
name|initialCopyFieldsResponse
init|=
name|copyFieldsSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|initialCopyFieldsAttributes
init|=
name|initialCopyFieldsResponse
operator|.
name|getCopyFields
argument_list|()
decl_stmt|;
name|String
name|srcFieldName
init|=
literal|"copyfield"
decl_stmt|;
name|String
name|destFieldName1
init|=
literal|"destField1"
decl_stmt|,
name|destFieldName2
init|=
literal|"destField2"
decl_stmt|;
name|createStoredStringField
argument_list|(
name|srcFieldName
argument_list|,
name|getSolrClient
argument_list|()
argument_list|)
expr_stmt|;
name|createStoredStringField
argument_list|(
name|destFieldName1
argument_list|,
name|getSolrClient
argument_list|()
argument_list|)
expr_stmt|;
name|createStoredStringField
argument_list|(
name|destFieldName2
argument_list|,
name|getSolrClient
argument_list|()
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddCopyField
name|addCopyFieldRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddCopyField
argument_list|(
name|srcFieldName
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|destFieldName1
argument_list|,
name|destFieldName2
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addCopyFieldResponse
init|=
name|addCopyFieldRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addCopyFieldResponse
argument_list|)
expr_stmt|;
name|SchemaResponse
operator|.
name|CopyFieldsResponse
name|currentCopyFieldsResponse
init|=
name|copyFieldsSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|currentCopyFields
init|=
name|currentCopyFieldsResponse
operator|.
name|getCopyFields
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|initialCopyFieldsAttributes
operator|.
name|size
argument_list|()
operator|+
literal|2
argument_list|,
name|currentCopyFields
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCopyFieldWithMaxCharsAccuracy
specifier|public
name|void
name|testCopyFieldWithMaxCharsAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|SchemaRequest
operator|.
name|CopyFields
name|copyFieldsSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|CopyFields
argument_list|()
decl_stmt|;
name|SchemaResponse
operator|.
name|CopyFieldsResponse
name|initialCopyFieldsResponse
init|=
name|copyFieldsSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|initialCopyFieldsAttributes
init|=
name|initialCopyFieldsResponse
operator|.
name|getCopyFields
argument_list|()
decl_stmt|;
name|String
name|srcFieldName
init|=
literal|"copyfield"
decl_stmt|;
name|String
name|destFieldName1
init|=
literal|"destField1"
decl_stmt|,
name|destFieldName2
init|=
literal|"destField2"
decl_stmt|;
name|createStoredStringField
argument_list|(
name|srcFieldName
argument_list|,
name|getSolrClient
argument_list|()
argument_list|)
expr_stmt|;
name|createStoredStringField
argument_list|(
name|destFieldName1
argument_list|,
name|getSolrClient
argument_list|()
argument_list|)
expr_stmt|;
name|createStoredStringField
argument_list|(
name|destFieldName2
argument_list|,
name|getSolrClient
argument_list|()
argument_list|)
expr_stmt|;
name|Integer
name|maxChars
init|=
literal|200
decl_stmt|;
name|SchemaRequest
operator|.
name|AddCopyField
name|addCopyFieldRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddCopyField
argument_list|(
name|srcFieldName
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|destFieldName1
argument_list|,
name|destFieldName2
argument_list|)
argument_list|,
name|maxChars
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addCopyFieldResponse
init|=
name|addCopyFieldRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addCopyFieldResponse
argument_list|)
expr_stmt|;
name|SchemaResponse
operator|.
name|CopyFieldsResponse
name|currentCopyFieldsResponse
init|=
name|copyFieldsSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|currentCopyFields
init|=
name|currentCopyFieldsResponse
operator|.
name|getCopyFields
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|initialCopyFieldsAttributes
operator|.
name|size
argument_list|()
operator|+
literal|2
argument_list|,
name|currentCopyFields
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|currentCopyField
range|:
name|currentCopyFields
control|)
block|{
if|if
condition|(
name|srcFieldName
operator|.
name|equals
argument_list|(
name|currentCopyField
operator|.
name|get
argument_list|(
literal|"source"
argument_list|)
argument_list|)
condition|)
block|{
name|String
name|currentDestFieldName
init|=
operator|(
name|String
operator|)
name|currentCopyField
operator|.
name|get
argument_list|(
literal|"dest"
argument_list|)
decl_stmt|;
name|int
name|currentMaxChars
init|=
operator|(
name|Integer
operator|)
name|currentCopyField
operator|.
name|get
argument_list|(
literal|"maxChars"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|currentDestFieldName
argument_list|,
name|anyOf
argument_list|(
name|is
argument_list|(
name|equalTo
argument_list|(
name|destFieldName1
argument_list|)
argument_list|)
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|destFieldName2
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|maxChars
operator|==
name|currentMaxChars
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|copyFieldsShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema
specifier|public
name|void
name|copyFieldsShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|srcFieldName
init|=
literal|"srcnotexist"
decl_stmt|;
name|String
name|destFieldName1
init|=
literal|"destNotExist1"
decl_stmt|,
name|destFieldName2
init|=
literal|"destNotExist2"
decl_stmt|;
name|SchemaRequest
operator|.
name|AddCopyField
name|addCopyFieldRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddCopyField
argument_list|(
name|srcFieldName
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|destFieldName1
argument_list|,
name|destFieldName2
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addCopyFieldResponse
init|=
name|addCopyFieldRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|addCopyFieldResponse
operator|.
name|getResponse
argument_list|()
operator|.
name|get
argument_list|(
literal|"errors"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDeleteCopyFieldAccuracy
specifier|public
name|void
name|testDeleteCopyFieldAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|srcFieldName
init|=
literal|"copyfield"
decl_stmt|;
name|String
name|destFieldName1
init|=
literal|"destField1"
decl_stmt|,
name|destFieldName2
init|=
literal|"destField2"
decl_stmt|;
name|createStoredStringField
argument_list|(
name|srcFieldName
argument_list|,
name|getSolrClient
argument_list|()
argument_list|)
expr_stmt|;
name|createStoredStringField
argument_list|(
name|destFieldName1
argument_list|,
name|getSolrClient
argument_list|()
argument_list|)
expr_stmt|;
name|createStoredStringField
argument_list|(
name|destFieldName2
argument_list|,
name|getSolrClient
argument_list|()
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddCopyField
name|addCopyFieldRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddCopyField
argument_list|(
name|srcFieldName
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|destFieldName1
argument_list|,
name|destFieldName2
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addCopyFieldResponse
init|=
name|addCopyFieldRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|addCopyFieldResponse
argument_list|)
expr_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|addCopyFieldResponse
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|DeleteCopyField
name|deleteCopyFieldRequest1
init|=
operator|new
name|SchemaRequest
operator|.
name|DeleteCopyField
argument_list|(
name|srcFieldName
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|destFieldName1
argument_list|)
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|deleteCopyFieldRequest1
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|DeleteCopyField
name|deleteCopyFieldRequest2
init|=
operator|new
name|SchemaRequest
operator|.
name|DeleteCopyField
argument_list|(
name|srcFieldName
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|destFieldName2
argument_list|)
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|deleteCopyFieldRequest2
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema
specifier|public
name|void
name|deleteCopyFieldShouldFailWhenOneOfTheFieldsDoesntExistInTheSchema
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|srcFieldName
init|=
literal|"copyfield"
decl_stmt|;
name|String
name|destFieldName1
init|=
literal|"destField1"
decl_stmt|,
name|destFieldName2
init|=
literal|"destField2"
decl_stmt|;
name|SchemaRequest
operator|.
name|DeleteCopyField
name|deleteCopyFieldsRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|DeleteCopyField
argument_list|(
name|srcFieldName
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|destFieldName1
argument_list|,
name|destFieldName2
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|deleteCopyFieldResponse
init|=
name|deleteCopyFieldsRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|deleteCopyFieldResponse
operator|.
name|getResponse
argument_list|()
operator|.
name|get
argument_list|(
literal|"errors"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultipleUpdateRequestAccuracy
specifier|public
name|void
name|testMultipleUpdateRequestAccuracy
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|fieldTypeName
init|=
literal|"accuracyTextField"
decl_stmt|;
name|SchemaRequest
operator|.
name|AddFieldType
name|addFieldTypeRequest
init|=
name|createFieldTypeRequest
argument_list|(
name|fieldTypeName
argument_list|)
decl_stmt|;
name|String
name|field1Name
init|=
literal|"accuracyField1"
decl_stmt|;
name|String
name|field2Name
init|=
literal|"accuracyField2"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|field1Name
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
name|fieldTypeName
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"stored"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"indexed"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddField
name|addFieldName1Request
init|=
operator|new
name|SchemaRequest
operator|.
name|AddField
argument_list|(
name|fieldAttributes
argument_list|)
decl_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|field2Name
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddField
name|addFieldName2Request
init|=
operator|new
name|SchemaRequest
operator|.
name|AddField
argument_list|(
name|fieldAttributes
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|SchemaRequest
operator|.
name|Update
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
name|addFieldTypeRequest
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|addFieldName1Request
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|addFieldName2Request
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|MultiUpdate
name|multiUpdateRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|MultiUpdate
argument_list|(
name|list
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|multipleUpdatesResponse
init|=
name|multiUpdateRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|multipleUpdatesResponse
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|FieldType
name|fieldTypeSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|FieldType
argument_list|(
name|fieldTypeName
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldTypeResponse
name|fieldTypeResponse
init|=
name|fieldTypeSchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|fieldTypeResponse
argument_list|)
expr_stmt|;
name|FieldTypeRepresentation
name|fieldTypeRepresentation
init|=
name|fieldTypeResponse
operator|.
name|getFieldType
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|fieldTypeName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|fieldTypeRepresentation
operator|.
name|getAttributes
argument_list|()
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|Field
name|field1SchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|Field
argument_list|(
name|field1Name
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldResponse
name|field1Response
init|=
name|field1SchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|field1Response
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|field1Attributes
init|=
name|field1Response
operator|.
name|getField
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|field1Name
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|field1Attributes
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldTypeName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|field1Attributes
operator|.
name|get
argument_list|(
literal|"type"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|true
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|field1Attributes
operator|.
name|get
argument_list|(
literal|"stored"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|true
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|field1Attributes
operator|.
name|get
argument_list|(
literal|"indexed"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|Field
name|field2SchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|Field
argument_list|(
name|field1Name
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|FieldResponse
name|field2Response
init|=
name|field2SchemaRequest
operator|.
name|process
argument_list|(
name|getSolrClient
argument_list|()
argument_list|)
decl_stmt|;
name|assertValidSchemaResponse
argument_list|(
name|field2Response
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|field2Attributes
init|=
name|field2Response
operator|.
name|getField
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|field1Name
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|field2Attributes
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|fieldTypeName
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|field2Attributes
operator|.
name|get
argument_list|(
literal|"type"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|true
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|field2Attributes
operator|.
name|get
argument_list|(
literal|"stored"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
literal|true
argument_list|,
name|is
argument_list|(
name|equalTo
argument_list|(
name|field2Attributes
operator|.
name|get
argument_list|(
literal|"indexed"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
