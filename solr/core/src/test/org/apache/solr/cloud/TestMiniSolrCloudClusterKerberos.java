begin_unit
begin_package
DECL|package|org.apache.solr.cloud
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|Configuration
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import
begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|annotations
operator|.
name|ThreadLeakFilters
import|;
end_import
begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|rules
operator|.
name|SystemPropertiesRestoreRule
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|minikdc
operator|.
name|MiniKdc
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
operator|.
name|SuppressSysoutChecks
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|BadZookeeperThreadsFilter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|RevertDefaultThreadHandlerRule
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|RuleChain
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestRule
import|;
end_import
begin_comment
comment|/**  * Test 5 nodes Solr cluster with Kerberos plugin enabled.  * This test is Ignored right now as Mini KDC has a known bug that  * doesn't allow us to run multiple nodes on the same host.  * https://issues.apache.org/jira/browse/HADOOP-9893  */
end_comment
begin_class
annotation|@
name|ThreadLeakFilters
argument_list|(
name|defaultFilters
operator|=
literal|true
argument_list|,
name|filters
operator|=
block|{
name|BadZookeeperThreadsFilter
operator|.
name|class
comment|// Zookeeper login leaks TGT renewal threads
block|}
argument_list|)
annotation|@
name|Ignore
annotation|@
name|LuceneTestCase
operator|.
name|Slow
annotation|@
name|SuppressSysoutChecks
argument_list|(
name|bugUrl
operator|=
literal|"Solr logs to JUL"
argument_list|)
DECL|class|TestMiniSolrCloudClusterKerberos
specifier|public
class|class
name|TestMiniSolrCloudClusterKerberos
extends|extends
name|TestMiniSolrCloudCluster
block|{
DECL|field|originalConfig
specifier|private
specifier|final
name|Configuration
name|originalConfig
init|=
name|Configuration
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
DECL|method|TestMiniSolrCloudClusterKerberos
specifier|public
name|TestMiniSolrCloudClusterKerberos
parameter_list|()
block|{
name|NUM_SERVERS
operator|=
literal|5
expr_stmt|;
name|NUM_SHARDS
operator|=
literal|2
expr_stmt|;
name|REPLICATION_FACTOR
operator|=
literal|2
expr_stmt|;
block|}
DECL|field|kdc
specifier|private
name|MiniKdc
name|kdc
decl_stmt|;
DECL|field|savedLocale
specifier|private
name|Locale
name|savedLocale
decl_stmt|;
comment|// in case locale is broken and we need to fill in a working locale
annotation|@
name|Rule
DECL|field|solrTestRules
specifier|public
name|TestRule
name|solrTestRules
init|=
name|RuleChain
operator|.
name|outerRule
argument_list|(
operator|new
name|SystemPropertiesRestoreRule
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|ClassRule
DECL|field|solrClassRules
specifier|public
specifier|static
name|TestRule
name|solrClassRules
init|=
name|RuleChain
operator|.
name|outerRule
argument_list|(
operator|new
name|SystemPropertiesRestoreRule
argument_list|()
argument_list|)
operator|.
name|around
argument_list|(
operator|new
name|RevertDefaultThreadHandlerRule
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|savedLocale
operator|=
name|KerberosTestUtil
operator|.
name|overrideLocaleIfNotSpportedByMiniKdc
argument_list|()
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|setupMiniKdc
argument_list|()
expr_stmt|;
block|}
DECL|method|setupMiniKdc
specifier|private
name|void
name|setupMiniKdc
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|kdcDir
init|=
name|createTempDir
argument_list|()
operator|+
name|File
operator|.
name|separator
operator|+
literal|"minikdc"
decl_stmt|;
name|kdc
operator|=
name|KerberosTestUtil
operator|.
name|getKdc
argument_list|(
operator|new
name|File
argument_list|(
name|kdcDir
argument_list|)
argument_list|)
expr_stmt|;
name|File
name|keytabFile
init|=
operator|new
name|File
argument_list|(
name|kdcDir
argument_list|,
literal|"keytabs"
argument_list|)
decl_stmt|;
name|String
name|principal
init|=
literal|"HTTP/127.0.0.1"
decl_stmt|;
name|String
name|zkServerPrincipal
init|=
literal|"zookeeper/127.0.0.1"
decl_stmt|;
name|kdc
operator|.
name|start
argument_list|()
expr_stmt|;
name|kdc
operator|.
name|createPrincipal
argument_list|(
name|keytabFile
argument_list|,
name|principal
argument_list|,
name|zkServerPrincipal
argument_list|)
expr_stmt|;
name|String
name|jaas
init|=
literal|"Client {\n"
operator|+
literal|" com.sun.security.auth.module.Krb5LoginModule required\n"
operator|+
literal|" useKeyTab=true\n"
operator|+
literal|" keyTab=\""
operator|+
name|keytabFile
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|"\"\n"
operator|+
literal|" storeKey=true\n"
operator|+
literal|" useTicketCache=false\n"
operator|+
literal|" doNotPrompt=true\n"
operator|+
literal|" debug=true\n"
operator|+
literal|" principal=\""
operator|+
name|principal
operator|+
literal|"\";\n"
operator|+
literal|"};\n"
operator|+
literal|"Server {\n"
operator|+
literal|" com.sun.security.auth.module.Krb5LoginModule required\n"
operator|+
literal|" useKeyTab=true\n"
operator|+
literal|" keyTab=\""
operator|+
name|keytabFile
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|"\"\n"
operator|+
literal|" storeKey=true\n"
operator|+
literal|" doNotPrompt=true\n"
operator|+
literal|" useTicketCache=false\n"
operator|+
literal|" debug=true\n"
operator|+
literal|" principal=\""
operator|+
name|zkServerPrincipal
operator|+
literal|"\";\n"
operator|+
literal|"};\n"
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|KerberosTestUtil
operator|.
name|JaasConfiguration
argument_list|(
name|principal
argument_list|,
name|keytabFile
argument_list|,
name|zkServerPrincipal
argument_list|,
name|keytabFile
argument_list|)
decl_stmt|;
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|Configuration
operator|.
name|setConfiguration
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|String
name|jaasFilePath
init|=
name|kdcDir
operator|+
name|File
operator|.
name|separator
operator|+
literal|"jaas-client.conf"
decl_stmt|;
name|FileUtils
operator|.
name|write
argument_list|(
operator|new
name|File
argument_list|(
name|jaasFilePath
argument_list|)
argument_list|,
name|jaas
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"java.security.auth.login.config"
argument_list|,
name|jaasFilePath
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.kerberos.cookie.domain"
argument_list|,
literal|"127.0.0.1"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.kerberos.principal"
argument_list|,
name|principal
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.kerberos.keytab"
argument_list|,
name|keytabFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"authenticationPlugin"
argument_list|,
literal|"org.apache.solr.security.KerberosPlugin"
argument_list|)
expr_stmt|;
comment|// more debugging, if needed
comment|/*System.setProperty("sun.security.jgss.debug", "true");     System.setProperty("sun.security.krb5.debug", "true");     System.setProperty("sun.security.jgss.debug", "true");     System.setProperty("java.security.debug", "logincontext,policy,scl,gssloginconfig");*/
block|}
annotation|@
name|AwaitsFix
argument_list|(
name|bugUrl
operator|=
literal|"https://issues.apache.org/jira/browse/HADOOP-9893"
argument_list|)
annotation|@
name|Test
annotation|@
name|Override
DECL|method|testCollectionCreateSearchDelete
specifier|public
name|void
name|testCollectionCreateSearchDelete
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|testCollectionCreateSearchDelete
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AwaitsFix
argument_list|(
name|bugUrl
operator|=
literal|"https://issues.apache.org/jira/browse/HADOOP-9893"
argument_list|)
annotation|@
name|Test
annotation|@
name|Override
DECL|method|testErrorsInShutdown
specifier|public
name|void
name|testErrorsInShutdown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|testErrorsInShutdown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AwaitsFix
argument_list|(
name|bugUrl
operator|=
literal|"https://issues.apache.org/jira/browse/HADOOP-9893"
argument_list|)
annotation|@
name|Test
annotation|@
name|Override
DECL|method|testErrorsInStartup
specifier|public
name|void
name|testErrorsInStartup
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|testErrorsInStartup
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|clearProperty
argument_list|(
literal|"java.security.auth.login.config"
argument_list|)
expr_stmt|;
name|System
operator|.
name|clearProperty
argument_list|(
literal|"cookie.domain"
argument_list|)
expr_stmt|;
name|System
operator|.
name|clearProperty
argument_list|(
literal|"kerberos.principal"
argument_list|)
expr_stmt|;
name|System
operator|.
name|clearProperty
argument_list|(
literal|"kerberos.keytab"
argument_list|)
expr_stmt|;
name|System
operator|.
name|clearProperty
argument_list|(
literal|"authenticationPlugin"
argument_list|)
expr_stmt|;
name|Configuration
operator|.
name|setConfiguration
argument_list|(
name|this
operator|.
name|originalConfig
argument_list|)
expr_stmt|;
if|if
condition|(
name|kdc
operator|!=
literal|null
condition|)
block|{
name|kdc
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|Locale
operator|.
name|setDefault
argument_list|(
name|savedLocale
argument_list|)
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
block|}
end_class
end_unit
