begin_unit
begin_package
DECL|package|org.apache.solr.schema
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|schema
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServerException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|HttpSolrServer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|QueryRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
operator|.
name|AbstractFullDistribZkTestBase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|cloud
operator|.
name|SolrZkClient
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|CoreAdminParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ModifiableSolrParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|KeeperException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_class
DECL|class|TestCloudManagedSchema
specifier|public
class|class
name|TestCloudManagedSchema
extends|extends
name|AbstractFullDistribZkTestBase
block|{
DECL|method|TestCloudManagedSchema
specifier|public
name|TestCloudManagedSchema
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
annotation|@
name|BeforeClass
DECL|method|initSysProperties
specifier|public
specifier|static
name|void
name|initSysProperties
parameter_list|()
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"managed.schema.mutable"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"enable.update.log"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getCloudSolrConfig
specifier|protected
name|String
name|getCloudSolrConfig
parameter_list|()
block|{
return|return
literal|"solrconfig-managed-schema.xml"
return|;
block|}
annotation|@
name|Override
DECL|method|doTest
specifier|public
name|void
name|doTest
parameter_list|()
throws|throws
name|Exception
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
name|CoreAdminParams
operator|.
name|ACTION
argument_list|,
name|CoreAdminParams
operator|.
name|CoreAdminAction
operator|.
name|STATUS
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|QueryRequest
name|request
init|=
operator|new
name|QueryRequest
argument_list|(
name|params
argument_list|)
decl_stmt|;
name|request
operator|.
name|setPath
argument_list|(
literal|"/admin/cores"
argument_list|)
expr_stmt|;
name|int
name|which
init|=
name|r
operator|.
name|nextInt
argument_list|(
name|clients
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|HttpSolrServer
name|client
init|=
operator|(
name|HttpSolrServer
operator|)
name|clients
operator|.
name|get
argument_list|(
name|which
argument_list|)
decl_stmt|;
name|String
name|previousBaseURL
init|=
name|client
operator|.
name|getBaseURL
argument_list|()
decl_stmt|;
comment|// Strip /collection1 step from baseURL - requests fail otherwise
name|client
operator|.
name|setBaseURL
argument_list|(
name|previousBaseURL
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|previousBaseURL
operator|.
name|lastIndexOf
argument_list|(
literal|"/"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|NamedList
name|namedListResponse
init|=
name|client
operator|.
name|request
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|client
operator|.
name|setBaseURL
argument_list|(
name|previousBaseURL
argument_list|)
expr_stmt|;
comment|// Restore baseURL
name|NamedList
name|status
init|=
operator|(
name|NamedList
operator|)
name|namedListResponse
operator|.
name|get
argument_list|(
literal|"status"
argument_list|)
decl_stmt|;
name|NamedList
name|collectionStatus
init|=
operator|(
name|NamedList
operator|)
name|status
operator|.
name|get
argument_list|(
literal|"collection1"
argument_list|)
decl_stmt|;
name|String
name|collectionSchema
init|=
operator|(
name|String
operator|)
name|collectionStatus
operator|.
name|get
argument_list|(
name|CoreAdminParams
operator|.
name|SCHEMA
argument_list|)
decl_stmt|;
comment|// Make sure the upgrade to managed schema happened
name|assertEquals
argument_list|(
literal|"Schema resource name differs from expected name"
argument_list|,
literal|"managed-schema"
argument_list|,
name|collectionSchema
argument_list|)
expr_stmt|;
name|SolrZkClient
name|zkClient
init|=
operator|new
name|SolrZkClient
argument_list|(
name|zkServer
operator|.
name|getZkHost
argument_list|()
argument_list|,
literal|30000
argument_list|)
decl_stmt|;
try|try
block|{
comment|// Make sure "DO NOT EDIT" is in the content of the managed schema
name|String
name|fileContent
init|=
name|getFileContentFromZooKeeper
argument_list|(
name|zkClient
argument_list|,
literal|"/solr/configs/conf1/managed-schema"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Managed schema is missing"
argument_list|,
name|fileContent
operator|.
name|contains
argument_list|(
literal|"DO NOT EDIT"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure the original non-managed schema is no longer in ZooKeeper
name|assertFileNotInZooKeeper
argument_list|(
name|zkClient
argument_list|,
literal|"/solr/configs/conf1"
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
comment|// Make sure the renamed non-managed schema is present in ZooKeeper
name|fileContent
operator|=
name|getFileContentFromZooKeeper
argument_list|(
name|zkClient
argument_list|,
literal|"/solr/configs/conf1/schema.xml.bak"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"schema file doesn't contain '<schema'"
argument_list|,
name|fileContent
operator|.
name|contains
argument_list|(
literal|"<schema"
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|zkClient
operator|!=
literal|null
condition|)
block|{
name|zkClient
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
DECL|method|getFileContentFromZooKeeper
specifier|private
name|String
name|getFileContentFromZooKeeper
parameter_list|(
name|SolrZkClient
name|zkClient
parameter_list|,
name|String
name|fileName
parameter_list|)
throws|throws
name|IOException
throws|,
name|SolrServerException
throws|,
name|KeeperException
throws|,
name|InterruptedException
block|{
return|return
operator|(
operator|new
name|String
argument_list|(
name|zkClient
operator|.
name|getData
argument_list|(
name|fileName
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
operator|)
return|;
block|}
DECL|method|assertFileNotInZooKeeper
specifier|protected
specifier|final
name|void
name|assertFileNotInZooKeeper
parameter_list|(
name|SolrZkClient
name|zkClient
parameter_list|,
name|String
name|parent
parameter_list|,
name|String
name|fileName
parameter_list|)
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|kids
init|=
name|zkClient
operator|.
name|getChildren
argument_list|(
name|parent
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|kid
range|:
name|kids
control|)
block|{
if|if
condition|(
name|kid
operator|.
name|equalsIgnoreCase
argument_list|(
name|fileName
argument_list|)
condition|)
block|{
name|String
name|rawContent
init|=
operator|new
name|String
argument_list|(
name|zkClient
operator|.
name|getData
argument_list|(
name|fileName
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
decl_stmt|;
name|fail
argument_list|(
literal|"File '"
operator|+
name|fileName
operator|+
literal|"' was unexpectedly found in ZooKeeper.  Content starts with '"
operator|+
name|rawContent
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
operator|+
literal|" [...]'"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class
end_unit
