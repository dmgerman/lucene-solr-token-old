begin_unit
begin_package
DECL|package|org.apache.solr.schema
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|schema
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|invoke
operator|.
name|MethodHandles
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServerException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|CloudSolrClient
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|CollectionAdminRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|UpdateRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|schema
operator|.
name|SchemaRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|CollectionAdminResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|schema
operator|.
name|SchemaResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
operator|.
name|SolrCloudTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputDocument
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import
begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_class
DECL|class|TestManagedSchemaAPI
specifier|public
class|class
name|TestManagedSchemaAPI
extends|extends
name|SolrCloudTestCase
block|{
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MethodHandles
operator|.
name|lookup
argument_list|()
operator|.
name|lookupClass
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|createCluster
specifier|public
specifier|static
name|void
name|createCluster
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"managed.schema.mutable"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|configureCluster
argument_list|(
literal|2
argument_list|)
operator|.
name|addConfig
argument_list|(
literal|"conf1"
argument_list|,
name|TEST_PATH
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"configsets"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"cloud-managed"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"conf"
argument_list|)
argument_list|)
operator|.
name|configure
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|test
specifier|public
name|void
name|test
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|collection
init|=
literal|"testschemaapi"
decl_stmt|;
name|cluster
operator|.
name|createCollection
argument_list|(
name|collection
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|"conf1"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|testReloadAndAddSimple
argument_list|(
name|collection
argument_list|)
expr_stmt|;
name|testAddFieldAndDocument
argument_list|(
name|collection
argument_list|)
expr_stmt|;
block|}
DECL|method|testReloadAndAddSimple
specifier|private
name|void
name|testReloadAndAddSimple
parameter_list|(
name|String
name|collection
parameter_list|)
throws|throws
name|IOException
throws|,
name|SolrServerException
block|{
name|CloudSolrClient
name|cloudClient
init|=
name|cluster
operator|.
name|getSolrClient
argument_list|()
decl_stmt|;
name|String
name|fieldName
init|=
literal|"myNewField"
decl_stmt|;
name|addStringField
argument_list|(
name|fieldName
argument_list|,
name|collection
argument_list|,
name|cloudClient
argument_list|)
expr_stmt|;
name|CollectionAdminRequest
operator|.
name|Reload
name|reloadRequest
init|=
name|CollectionAdminRequest
operator|.
name|reloadCollection
argument_list|(
name|collection
argument_list|)
decl_stmt|;
name|CollectionAdminResponse
name|response
init|=
name|reloadRequest
operator|.
name|process
argument_list|(
name|cloudClient
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|response
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|response
operator|.
name|isSuccess
argument_list|()
argument_list|)
expr_stmt|;
name|SolrInputDocument
name|doc
init|=
operator|new
name|SolrInputDocument
argument_list|()
decl_stmt|;
name|doc
operator|.
name|addField
argument_list|(
literal|"id"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addField
argument_list|(
name|fieldName
argument_list|,
literal|"val"
argument_list|)
expr_stmt|;
name|UpdateRequest
name|ureq
init|=
operator|new
name|UpdateRequest
argument_list|()
operator|.
name|add
argument_list|(
name|doc
argument_list|)
decl_stmt|;
name|cloudClient
operator|.
name|request
argument_list|(
name|ureq
argument_list|,
name|collection
argument_list|)
expr_stmt|;
block|}
DECL|method|testAddFieldAndDocument
specifier|private
name|void
name|testAddFieldAndDocument
parameter_list|(
name|String
name|collection
parameter_list|)
throws|throws
name|IOException
throws|,
name|SolrServerException
block|{
name|CloudSolrClient
name|cloudClient
init|=
name|cluster
operator|.
name|getSolrClient
argument_list|()
decl_stmt|;
name|String
name|fieldName
init|=
literal|"myNewField1"
decl_stmt|;
name|addStringField
argument_list|(
name|fieldName
argument_list|,
name|collection
argument_list|,
name|cloudClient
argument_list|)
expr_stmt|;
name|SolrInputDocument
name|doc
init|=
operator|new
name|SolrInputDocument
argument_list|()
decl_stmt|;
name|doc
operator|.
name|addField
argument_list|(
literal|"id"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addField
argument_list|(
name|fieldName
argument_list|,
literal|"val1"
argument_list|)
expr_stmt|;
name|UpdateRequest
name|ureq
init|=
operator|new
name|UpdateRequest
argument_list|()
operator|.
name|add
argument_list|(
name|doc
argument_list|)
decl_stmt|;
name|cloudClient
operator|.
name|request
argument_list|(
name|ureq
argument_list|,
name|collection
argument_list|)
expr_stmt|;
empty_stmt|;
block|}
DECL|method|addStringField
specifier|private
name|void
name|addStringField
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|String
name|collection
parameter_list|,
name|CloudSolrClient
name|cloudClient
parameter_list|)
throws|throws
name|IOException
throws|,
name|SolrServerException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|fieldAttributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|fieldName
argument_list|)
expr_stmt|;
name|fieldAttributes
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|SchemaRequest
operator|.
name|AddField
name|addFieldUpdateSchemaRequest
init|=
operator|new
name|SchemaRequest
operator|.
name|AddField
argument_list|(
name|fieldAttributes
argument_list|)
decl_stmt|;
name|SchemaResponse
operator|.
name|UpdateResponse
name|addFieldResponse
init|=
name|addFieldUpdateSchemaRequest
operator|.
name|process
argument_list|(
name|cloudClient
argument_list|,
name|collection
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|addFieldResponse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|addFieldResponse
operator|.
name|getResponse
argument_list|()
operator|.
name|get
argument_list|(
literal|"errors"
argument_list|)
argument_list|)
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"added new field="
operator|+
name|fieldName
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
