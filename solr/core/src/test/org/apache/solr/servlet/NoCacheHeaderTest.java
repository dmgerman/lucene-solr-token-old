begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.servlet
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|servlet
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|Header
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpMethodBase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|util
operator|.
name|DateUtil
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_comment
comment|/**  * A test case for the several HTTP cache headers emitted by Solr  */
end_comment
begin_class
DECL|class|NoCacheHeaderTest
specifier|public
class|class
name|NoCacheHeaderTest
extends|extends
name|CacheHeaderTestBase
block|{
annotation|@
name|BeforeClass
DECL|method|beforeTest
specifier|public
specifier|static
name|void
name|beforeTest
parameter_list|()
throws|throws
name|Exception
block|{
name|createJetty
argument_list|(
name|TEST_HOME
argument_list|()
argument_list|,
literal|"solr/conf/solrconfig-nocache.xml"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|// The tests
annotation|@
name|Override
annotation|@
name|Test
DECL|method|testLastModified
specifier|public
name|void
name|testLastModified
parameter_list|()
throws|throws
name|Exception
block|{
name|doLastModified
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|doLastModified
argument_list|(
literal|"HEAD"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|Test
DECL|method|testEtag
specifier|public
name|void
name|testEtag
parameter_list|()
throws|throws
name|Exception
block|{
name|doETag
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|doETag
argument_list|(
literal|"HEAD"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
annotation|@
name|Test
DECL|method|testCacheControl
specifier|public
name|void
name|testCacheControl
parameter_list|()
throws|throws
name|Exception
block|{
name|doCacheControl
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|doCacheControl
argument_list|(
literal|"HEAD"
argument_list|)
expr_stmt|;
name|doCacheControl
argument_list|(
literal|"POST"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doLastModified
specifier|protected
name|void
name|doLastModified
parameter_list|(
name|String
name|method
parameter_list|)
throws|throws
name|Exception
block|{
comment|// We do a first request to get the last modified
comment|// This must result in a 200 OK response
name|HttpMethodBase
name|get
init|=
name|getSelectMethod
argument_list|(
name|method
argument_list|)
decl_stmt|;
name|getClient
argument_list|()
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
expr_stmt|;
name|checkResponseBody
argument_list|(
name|method
argument_list|,
name|get
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Got no response code 200 in initial request"
argument_list|,
literal|200
argument_list|,
name|get
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|Header
name|head
init|=
name|get
operator|.
name|getResponseHeader
argument_list|(
literal|"Last-Modified"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
literal|"We got a Last-Modified header"
argument_list|,
name|head
argument_list|)
expr_stmt|;
comment|// If-Modified-Since tests
name|get
operator|=
name|getSelectMethod
argument_list|(
name|method
argument_list|)
expr_stmt|;
name|get
operator|.
name|addRequestHeader
argument_list|(
literal|"If-Modified-Since"
argument_list|,
name|DateUtil
operator|.
name|formatDate
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|getClient
argument_list|()
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
expr_stmt|;
name|checkResponseBody
argument_list|(
name|method
argument_list|,
name|get
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Expected 200 with If-Modified-Since header. We should never get a 304 here"
argument_list|,
literal|200
argument_list|,
name|get
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|get
operator|=
name|getSelectMethod
argument_list|(
name|method
argument_list|)
expr_stmt|;
name|get
operator|.
name|addRequestHeader
argument_list|(
literal|"If-Modified-Since"
argument_list|,
name|DateUtil
operator|.
name|formatDate
argument_list|(
operator|new
name|Date
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
literal|10000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|getClient
argument_list|()
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
expr_stmt|;
name|checkResponseBody
argument_list|(
name|method
argument_list|,
name|get
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Expected 200 with If-Modified-Since header. We should never get a 304 here"
argument_list|,
literal|200
argument_list|,
name|get
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
comment|// If-Unmodified-Since tests
name|get
operator|=
name|getSelectMethod
argument_list|(
name|method
argument_list|)
expr_stmt|;
name|get
operator|.
name|addRequestHeader
argument_list|(
literal|"If-Unmodified-Since"
argument_list|,
name|DateUtil
operator|.
name|formatDate
argument_list|(
operator|new
name|Date
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
literal|10000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|getClient
argument_list|()
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
expr_stmt|;
name|checkResponseBody
argument_list|(
name|method
argument_list|,
name|get
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Expected 200 with If-Unmodified-Since header. We should never get a 304 here"
argument_list|,
literal|200
argument_list|,
name|get
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|get
operator|=
name|getSelectMethod
argument_list|(
name|method
argument_list|)
expr_stmt|;
name|get
operator|.
name|addRequestHeader
argument_list|(
literal|"If-Unmodified-Since"
argument_list|,
name|DateUtil
operator|.
name|formatDate
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|getClient
argument_list|()
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
expr_stmt|;
name|checkResponseBody
argument_list|(
name|method
argument_list|,
name|get
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Expected 200 with If-Unmodified-Since header. We should never get a 304 here"
argument_list|,
literal|200
argument_list|,
name|get
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// test ETag
annotation|@
name|Override
DECL|method|doETag
specifier|protected
name|void
name|doETag
parameter_list|(
name|String
name|method
parameter_list|)
throws|throws
name|Exception
block|{
name|HttpMethodBase
name|get
init|=
name|getSelectMethod
argument_list|(
name|method
argument_list|)
decl_stmt|;
name|getClient
argument_list|()
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
expr_stmt|;
name|checkResponseBody
argument_list|(
name|method
argument_list|,
name|get
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Got no response code 200 in initial request"
argument_list|,
literal|200
argument_list|,
name|get
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|Header
name|head
init|=
name|get
operator|.
name|getResponseHeader
argument_list|(
literal|"ETag"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
literal|"We got an ETag in the response"
argument_list|,
name|head
argument_list|)
expr_stmt|;
comment|// If-None-Match tests
comment|// we set a non matching ETag
name|get
operator|=
name|getSelectMethod
argument_list|(
name|method
argument_list|)
expr_stmt|;
name|get
operator|.
name|addRequestHeader
argument_list|(
literal|"If-None-Match"
argument_list|,
literal|"\"xyz123456\""
argument_list|)
expr_stmt|;
name|getClient
argument_list|()
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
expr_stmt|;
name|checkResponseBody
argument_list|(
name|method
argument_list|,
name|get
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"If-None-Match: Got no response code 200 in response to non matching ETag"
argument_list|,
literal|200
argument_list|,
name|get
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
comment|// we now set the special star ETag
name|get
operator|=
name|getSelectMethod
argument_list|(
name|method
argument_list|)
expr_stmt|;
name|get
operator|.
name|addRequestHeader
argument_list|(
literal|"If-None-Match"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|getClient
argument_list|()
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
expr_stmt|;
name|checkResponseBody
argument_list|(
name|method
argument_list|,
name|get
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"If-None-Match: Got no response 200 for star ETag"
argument_list|,
literal|200
argument_list|,
name|get
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
comment|// If-Match tests
comment|// we set a non matching ETag
name|get
operator|=
name|getSelectMethod
argument_list|(
name|method
argument_list|)
expr_stmt|;
name|get
operator|.
name|addRequestHeader
argument_list|(
literal|"If-Match"
argument_list|,
literal|"\"xyz123456\""
argument_list|)
expr_stmt|;
name|getClient
argument_list|()
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
expr_stmt|;
name|checkResponseBody
argument_list|(
name|method
argument_list|,
name|get
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"If-Match: Got no response code 200 in response to non matching ETag"
argument_list|,
literal|200
argument_list|,
name|get
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
comment|// now we set the special star ETag
name|get
operator|=
name|getSelectMethod
argument_list|(
name|method
argument_list|)
expr_stmt|;
name|get
operator|.
name|addRequestHeader
argument_list|(
literal|"If-Match"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|getClient
argument_list|()
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
expr_stmt|;
name|checkResponseBody
argument_list|(
name|method
argument_list|,
name|get
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"If-Match: Got no response 200 to star ETag"
argument_list|,
literal|200
argument_list|,
name|get
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doCacheControl
specifier|protected
name|void
name|doCacheControl
parameter_list|(
name|String
name|method
parameter_list|)
throws|throws
name|Exception
block|{
name|HttpMethodBase
name|m
init|=
name|getSelectMethod
argument_list|(
name|method
argument_list|)
decl_stmt|;
name|getClient
argument_list|()
operator|.
name|executeMethod
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|checkResponseBody
argument_list|(
name|method
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|Header
name|head
init|=
name|m
operator|.
name|getResponseHeader
argument_list|(
literal|"Cache-Control"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
literal|"We got a cache-control header in response"
argument_list|,
name|head
argument_list|)
expr_stmt|;
name|head
operator|=
name|m
operator|.
name|getResponseHeader
argument_list|(
literal|"Expires"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"We got an Expires header in response"
argument_list|,
name|head
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
