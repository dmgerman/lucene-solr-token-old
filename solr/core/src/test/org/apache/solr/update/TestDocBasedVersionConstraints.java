begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.update
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|TestUtil
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|DefaultSolrThreadFactory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executors
import|;
end_import
begin_class
DECL|class|TestDocBasedVersionConstraints
specifier|public
class|class
name|TestDocBasedVersionConstraints
extends|extends
name|SolrTestCaseJ4
block|{
annotation|@
name|BeforeClass
DECL|method|beforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|initCore
argument_list|(
literal|"solrconfig-externalversionconstraint.xml"
argument_list|,
literal|"schema15.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
DECL|method|before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|assertU
argument_list|(
name|delQ
argument_list|(
literal|"*:*"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testSimpleUpdates
specifier|public
name|void
name|testSimpleUpdates
parameter_list|()
throws|throws
name|Exception
block|{
comment|// skip low version against commited data
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"a1"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"1001"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"a2"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"1002"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"XX"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a2'}}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa +name:XX"
argument_list|)
argument_list|,
literal|"/response/numFound==0"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa +name:a2"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a2'}}"
argument_list|)
expr_stmt|;
comment|// skip low version against uncommited data from updateLog
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"a3"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"1003"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"XX"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"7"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a3'}}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa +name:XX"
argument_list|)
argument_list|,
literal|"/response/numFound==0"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa +name:a3"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a3'}}"
argument_list|)
expr_stmt|;
comment|// interleave updates to multiple docs using same versions
for|for
control|(
name|long
name|ver
init|=
literal|1010
init|;
name|ver
operator|<
literal|1020
condition|;
name|ver
operator|++
control|)
block|{
for|for
control|(
name|String
name|id
range|:
operator|new
name|String
index|[]
block|{
literal|"aaa"
block|,
literal|"bbb"
block|,
literal|"ccc"
block|,
literal|"ddd"
block|}
control|)
block|{
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
name|id
argument_list|,
literal|"my_version_l"
argument_list|,
literal|""
operator|+
name|ver
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|String
name|id
range|:
operator|new
name|String
index|[]
block|{
literal|"aaa"
block|,
literal|"bbb"
block|,
literal|"ccc"
block|,
literal|"ddd"
block|}
control|)
block|{
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
name|id
argument_list|,
literal|"name"
argument_list|,
literal|"XX"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"10"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
name|id
argument_list|,
literal|"fl"
argument_list|,
literal|"my_version_l"
argument_list|)
argument_list|,
literal|"=={'doc':{'my_version_l':"
operator|+
literal|1019
operator|+
literal|"}}"
argument_list|)
expr_stmt|;
block|}
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"name:XX"
argument_list|)
argument_list|,
literal|"/response/numFound==0"
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|id
range|:
operator|new
name|String
index|[]
block|{
literal|"aaa"
block|,
literal|"bbb"
block|,
literal|"ccc"
block|,
literal|"ddd"
block|}
control|)
block|{
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:"
operator|+
name|id
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+name:XX +id:"
operator|+
name|id
argument_list|)
argument_list|,
literal|"/response/numFound==0"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:"
operator|+
name|id
operator|+
literal|" +my_version_l:1019"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
name|id
argument_list|,
literal|"fl"
argument_list|,
literal|"my_version_l"
argument_list|)
argument_list|,
literal|"=={'doc':{'my_version_l':"
operator|+
literal|1019
operator|+
literal|"}}"
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testSimpleDeletes
specifier|public
name|void
name|testSimpleDeletes
parameter_list|()
throws|throws
name|Exception
block|{
comment|// skip low version delete against commited doc
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"a1"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"1001"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"a2"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"1002"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|deleteAndGetVersion
argument_list|(
literal|"aaa"
argument_list|,
name|params
argument_list|(
literal|"del_version"
argument_list|,
literal|"7"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a2'}}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa +name:a2"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a2'}}"
argument_list|)
expr_stmt|;
comment|// skip low version delete against uncommited doc from updateLog
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"a3"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"1003"
argument_list|)
argument_list|)
expr_stmt|;
name|deleteAndGetVersion
argument_list|(
literal|"aaa"
argument_list|,
name|params
argument_list|(
literal|"del_version"
argument_list|,
literal|"8"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a3'}}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa +name:a3"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a3'}}"
argument_list|)
expr_stmt|;
comment|// skip low version add against uncommited "delete" from updateLog
name|deleteAndGetVersion
argument_list|(
literal|"aaa"
argument_list|,
name|params
argument_list|(
literal|"del_version"
argument_list|,
literal|"1010"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"XX"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"22"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"my_version_l"
argument_list|)
argument_list|,
literal|"=={'doc':{'my_version_l':1010}}}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa +name:XX"
argument_list|)
argument_list|,
literal|"/response/numFound==0"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"my_version_l"
argument_list|)
argument_list|,
literal|"=={'doc':{'my_version_l':1010}}"
argument_list|)
expr_stmt|;
comment|// skip low version add against committed "delete"
comment|// (delete was already done& committed above)
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"XX"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"23"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"my_version_l"
argument_list|)
argument_list|,
literal|"=={'doc':{'my_version_l':1010}}}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa +name:XX"
argument_list|)
argument_list|,
literal|"/response/numFound==0"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"my_version_l"
argument_list|)
argument_list|,
literal|"=={'doc':{'my_version_l':1010}}"
argument_list|)
expr_stmt|;
block|}
comment|/**    * Sanity check that there are no hardcoded assumptions about the     * field type used that could byte us in the ass.    */
DECL|method|testFloatVersionField
specifier|public
name|void
name|testFloatVersionField
parameter_list|()
throws|throws
name|Exception
block|{
comment|// skip low version add& low version delete against commited doc
name|updateJ
argument_list|(
name|jsonAdd
argument_list|(
name|sdoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"a1"
argument_list|,
literal|"my_version_f"
argument_list|,
literal|"10.01"
argument_list|)
argument_list|)
argument_list|,
name|params
argument_list|(
literal|"update.chain"
argument_list|,
literal|"external-version-float"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|updateJ
argument_list|(
name|jsonAdd
argument_list|(
name|sdoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"XX"
argument_list|,
literal|"my_version_f"
argument_list|,
literal|"4.2"
argument_list|)
argument_list|)
argument_list|,
name|params
argument_list|(
literal|"update.chain"
argument_list|,
literal|"external-version-float"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a1'}}"
argument_list|)
expr_stmt|;
name|deleteAndGetVersion
argument_list|(
literal|"aaa"
argument_list|,
name|params
argument_list|(
literal|"del_version"
argument_list|,
literal|"7"
argument_list|,
literal|"update.chain"
argument_list|,
literal|"external-version-float"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a1'}}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
comment|// skip low version delete against uncommited doc from updateLog
name|updateJ
argument_list|(
name|jsonAdd
argument_list|(
name|sdoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"a2"
argument_list|,
literal|"my_version_f"
argument_list|,
literal|"10.02"
argument_list|)
argument_list|)
argument_list|,
name|params
argument_list|(
literal|"update.chain"
argument_list|,
literal|"external-version-float"
argument_list|)
argument_list|)
expr_stmt|;
name|deleteAndGetVersion
argument_list|(
literal|"aaa"
argument_list|,
name|params
argument_list|(
literal|"del_version"
argument_list|,
literal|"8"
argument_list|,
literal|"update.chain"
argument_list|,
literal|"external-version-float"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a2'}}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa +name:a2"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a2'}}"
argument_list|)
expr_stmt|;
comment|// skip low version add against uncommited "delete" from updateLog
name|deleteAndGetVersion
argument_list|(
literal|"aaa"
argument_list|,
name|params
argument_list|(
literal|"del_version"
argument_list|,
literal|"10.10"
argument_list|,
literal|"update.chain"
argument_list|,
literal|"external-version-float"
argument_list|)
argument_list|)
expr_stmt|;
name|updateJ
argument_list|(
name|jsonAdd
argument_list|(
name|sdoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"XX"
argument_list|,
literal|"my_version_f"
argument_list|,
literal|"10.05"
argument_list|)
argument_list|)
argument_list|,
name|params
argument_list|(
literal|"update.chain"
argument_list|,
literal|"external-version-float"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"my_version_f"
argument_list|)
argument_list|,
literal|"=={'doc':{'my_version_f':10.10}}}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa +name:XX"
argument_list|)
argument_list|,
literal|"/response/numFound==0"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"my_version_f"
argument_list|)
argument_list|,
literal|"=={'doc':{'my_version_f':10.10}}"
argument_list|)
expr_stmt|;
comment|// skip low version add against committed "delete"
comment|// (delete was already done& committed above)
name|updateJ
argument_list|(
name|jsonAdd
argument_list|(
name|sdoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"XX"
argument_list|,
literal|"my_version_f"
argument_list|,
literal|"10.09"
argument_list|)
argument_list|)
argument_list|,
name|params
argument_list|(
literal|"update.chain"
argument_list|,
literal|"external-version-float"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"my_version_f"
argument_list|)
argument_list|,
literal|"=={'doc':{'my_version_f':10.10}}}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa +name:XX"
argument_list|)
argument_list|,
literal|"/response/numFound==0"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"my_version_f"
argument_list|)
argument_list|,
literal|"=={'doc':{'my_version_f':10.10}}"
argument_list|)
expr_stmt|;
block|}
DECL|method|testFailOnOldVersion
specifier|public
name|void
name|testFailOnOldVersion
parameter_list|()
throws|throws
name|Exception
block|{
comment|// fail low version add& low version delete against commited doc
name|updateJ
argument_list|(
name|jsonAdd
argument_list|(
name|sdoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"a1"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"1001"
argument_list|)
argument_list|)
argument_list|,
name|params
argument_list|(
literal|"update.chain"
argument_list|,
literal|"external-version-failhard"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|updateJ
argument_list|(
name|jsonAdd
argument_list|(
name|sdoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"XX"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"42"
argument_list|)
argument_list|)
argument_list|,
name|params
argument_list|(
literal|"update.chain"
argument_list|,
literal|"external-version-failhard"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"no 409"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|409
argument_list|,
name|ex
operator|.
name|code
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a1'}}"
argument_list|)
expr_stmt|;
try|try
block|{
name|deleteAndGetVersion
argument_list|(
literal|"aaa"
argument_list|,
name|params
argument_list|(
literal|"del_version"
argument_list|,
literal|"7"
argument_list|,
literal|"update.chain"
argument_list|,
literal|"external-version-failhard"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"no 409"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|409
argument_list|,
name|ex
operator|.
name|code
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a1'}}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
comment|// fail low version delete against uncommited doc from updateLog
name|updateJ
argument_list|(
name|jsonAdd
argument_list|(
name|sdoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"a2"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"1002"
argument_list|)
argument_list|)
argument_list|,
name|params
argument_list|(
literal|"update.chain"
argument_list|,
literal|"external-version-failhard"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|deleteAndGetVersion
argument_list|(
literal|"aaa"
argument_list|,
name|params
argument_list|(
literal|"del_version"
argument_list|,
literal|"8"
argument_list|,
literal|"update.chain"
argument_list|,
literal|"external-version-failhard"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"no 409"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|409
argument_list|,
name|ex
operator|.
name|code
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a2'}}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa +name:a2"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"=={'doc':{'name':'a2'}}"
argument_list|)
expr_stmt|;
comment|// fail low version add against uncommited "delete" from updateLog
name|deleteAndGetVersion
argument_list|(
literal|"aaa"
argument_list|,
name|params
argument_list|(
literal|"del_version"
argument_list|,
literal|"1010"
argument_list|,
literal|"update.chain"
argument_list|,
literal|"external-version-failhard"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|updateJ
argument_list|(
name|jsonAdd
argument_list|(
name|sdoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"XX"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"1005"
argument_list|)
argument_list|)
argument_list|,
name|params
argument_list|(
literal|"update.chain"
argument_list|,
literal|"external-version-failhard"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"no 409"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|409
argument_list|,
name|ex
operator|.
name|code
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"my_version_l"
argument_list|)
argument_list|,
literal|"=={'doc':{'my_version_l':1010}}}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa +name:XX"
argument_list|)
argument_list|,
literal|"/response/numFound==0"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"my_version_l"
argument_list|)
argument_list|,
literal|"=={'doc':{'my_version_l':1010}}"
argument_list|)
expr_stmt|;
comment|// fail low version add against committed "delete"
comment|// (delete was already done& committed above)
try|try
block|{
name|updateJ
argument_list|(
name|jsonAdd
argument_list|(
name|sdoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"XX"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"1009"
argument_list|)
argument_list|)
argument_list|,
name|params
argument_list|(
literal|"update.chain"
argument_list|,
literal|"external-version-failhard"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"no 409"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|409
argument_list|,
name|ex
operator|.
name|code
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"my_version_l"
argument_list|)
argument_list|,
literal|"=={'doc':{'my_version_l':1010}}}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"+id:aaa +name:XX"
argument_list|)
argument_list|,
literal|"/response/numFound==0"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"fl"
argument_list|,
literal|"my_version_l"
argument_list|)
argument_list|,
literal|"=={'doc':{'my_version_l':1010}}"
argument_list|)
expr_stmt|;
block|}
comment|/**     * Proof of concept test demonstrating how to manage and periodically cleanup    * the "logically" deleted documents    */
DECL|method|testManagingDeletes
specifier|public
name|void
name|testManagingDeletes
parameter_list|()
throws|throws
name|Exception
block|{
comment|// add some docs
for|for
control|(
name|long
name|ver
init|=
literal|1010
init|;
name|ver
operator|<
literal|1020
condition|;
name|ver
operator|++
control|)
block|{
for|for
control|(
name|String
name|id
range|:
operator|new
name|String
index|[]
block|{
literal|"aaa"
block|,
literal|"bbb"
block|,
literal|"ccc"
block|,
literal|"ddd"
block|}
control|)
block|{
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
name|id
argument_list|,
literal|"name"
argument_list|,
literal|"name_"
operator|+
name|id
argument_list|,
literal|"my_version_l"
argument_list|,
literal|""
operator|+
name|ver
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"name_aaa"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"1030"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
comment|// sample queries
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"*:*"
argument_list|,
literal|"fq"
argument_list|,
literal|"live_b:true"
argument_list|)
argument_list|,
literal|"/response/numFound==4"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"id:aaa"
argument_list|,
literal|"fq"
argument_list|,
literal|"live_b:true"
argument_list|,
literal|"fl"
argument_list|,
literal|"id,my_version_l"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|,
literal|"/response/docs==[{'id':'aaa','my_version_l':1030}]}"
argument_list|)
expr_stmt|;
comment|// logically delete
name|deleteAndGetVersion
argument_list|(
literal|"aaa"
argument_list|,
name|params
argument_list|(
literal|"del_version"
argument_list|,
literal|"1031"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
comment|// sample queries
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"*:*"
argument_list|,
literal|"fq"
argument_list|,
literal|"live_b:true"
argument_list|)
argument_list|,
literal|"/response/numFound==3"
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"id:aaa"
argument_list|,
literal|"fq"
argument_list|,
literal|"live_b:true"
argument_list|)
argument_list|,
literal|"/response/numFound==0"
argument_list|)
expr_stmt|;
comment|// placeholder doc is still in the index though
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"id:aaa"
argument_list|,
literal|"fq"
argument_list|,
literal|"live_b:false"
argument_list|,
literal|"fq"
argument_list|,
literal|"timestamp_tdt:[* TO *]"
argument_list|,
literal|"fl"
argument_list|,
literal|"id,live_b,my_version_l"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|,
literal|"/response/docs==[{'id':'aaa','my_version_l':1031,'live_b':false}]}"
argument_list|)
expr_stmt|;
comment|// doc can't be re-added with a low version
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"XX"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"1025"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"id:aaa"
argument_list|,
literal|"fq"
argument_list|,
literal|"live_b:true"
argument_list|)
argument_list|,
literal|"/response/numFound==0"
argument_list|)
expr_stmt|;
comment|// "dead" placeholder docs can be periodically cleaned up
comment|// ie: assertU(delQ("+live_b:false +timestamp_tdt:[* TO NOW/MINUTE-5MINUTE]"));
comment|// but to prevent the test from ebing time sensitive we'll just purge them all
name|assertU
argument_list|(
name|delQ
argument_list|(
literal|"+live_b:false"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
comment|// now doc can be re-added w/any version, no matter how low
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"aaa"
argument_list|,
literal|"name"
argument_list|,
literal|"aaa"
argument_list|,
literal|"my_version_l"
argument_list|,
literal|"7"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"id:aaa"
argument_list|,
literal|"fq"
argument_list|,
literal|"live_b:true"
argument_list|,
literal|"fl"
argument_list|,
literal|"id,live_b,my_version_l"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|,
literal|"/response/docs==[{'id':'aaa','my_version_l':7,'live_b':true}]}"
argument_list|)
expr_stmt|;
block|}
comment|/**     * Constantly hammer the same doc with multiple concurrent threads and diff versions,    * confirm that the highest version wins.    */
DECL|method|testConcurrentAdds
specifier|public
name|void
name|testConcurrentAdds
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|int
name|NUM_DOCS
init|=
name|atLeast
argument_list|(
literal|50
argument_list|)
decl_stmt|;
specifier|final
name|int
name|MAX_CONCURENT
init|=
name|atLeast
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|ExecutorService
name|runner
init|=
name|Executors
operator|.
name|newFixedThreadPool
argument_list|(
name|MAX_CONCURENT
argument_list|,
operator|new
name|DefaultSolrThreadFactory
argument_list|(
literal|"TestDocBasedVersionConstraints"
argument_list|)
argument_list|)
decl_stmt|;
comment|// runner = Executors.newFixedThreadPool(1);    // to test single threaded
try|try
block|{
for|for
control|(
name|int
name|id
init|=
literal|0
init|;
name|id
operator|<
name|NUM_DOCS
condition|;
name|id
operator|++
control|)
block|{
specifier|final
name|int
name|numAdds
init|=
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|()
argument_list|,
literal|3
argument_list|,
name|MAX_CONCURENT
argument_list|)
decl_stmt|;
specifier|final
name|int
name|winner
init|=
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|()
argument_list|,
literal|0
argument_list|,
name|numAdds
operator|-
literal|1
argument_list|)
decl_stmt|;
specifier|final
name|int
name|winnerVersion
init|=
name|atLeast
argument_list|(
literal|100
argument_list|)
decl_stmt|;
specifier|final
name|boolean
name|winnerIsDeleted
init|=
operator|(
literal|0
operator|==
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
operator|)
decl_stmt|;
name|List
argument_list|<
name|Callable
argument_list|<
name|Object
argument_list|>
argument_list|>
name|tasks
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|numAdds
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|variant
init|=
literal|0
init|;
name|variant
operator|<
name|numAdds
condition|;
name|variant
operator|++
control|)
block|{
specifier|final
name|boolean
name|iShouldWin
init|=
operator|(
name|variant
operator|==
name|winner
operator|)
decl_stmt|;
specifier|final
name|long
name|version
init|=
operator|(
name|iShouldWin
condition|?
name|winnerVersion
else|:
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|()
argument_list|,
literal|1
argument_list|,
name|winnerVersion
operator|-
literal|1
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
operator|(
name|iShouldWin
operator|&&
name|winnerIsDeleted
operator|)
operator|||
operator|(
operator|!
name|iShouldWin
operator|&&
literal|0
operator|==
name|TestUtil
operator|.
name|nextInt
argument_list|(
name|random
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
operator|)
condition|)
block|{
name|tasks
operator|.
name|add
argument_list|(
name|delayedDelete
argument_list|(
literal|""
operator|+
name|id
argument_list|,
literal|""
operator|+
name|version
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|tasks
operator|.
name|add
argument_list|(
name|delayedAdd
argument_list|(
literal|"id"
argument_list|,
literal|""
operator|+
name|id
argument_list|,
literal|"name"
argument_list|,
literal|"name"
operator|+
name|id
operator|+
literal|"_"
operator|+
name|variant
argument_list|,
literal|"my_version_l"
argument_list|,
literal|""
operator|+
name|version
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|runner
operator|.
name|invokeAll
argument_list|(
name|tasks
argument_list|)
expr_stmt|;
specifier|final
name|String
name|expectedDoc
init|=
literal|"{'id':'"
operator|+
name|id
operator|+
literal|"','my_version_l':"
operator|+
name|winnerVersion
operator|+
operator|(
operator|!
name|winnerIsDeleted
condition|?
literal|",'name':'name"
operator|+
name|id
operator|+
literal|"_"
operator|+
name|winner
operator|+
literal|"'}"
else|:
literal|"}"
operator|)
decl_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/get"
argument_list|,
literal|"id"
argument_list|,
literal|""
operator|+
name|id
argument_list|,
literal|"fl"
argument_list|,
literal|"id,name,my_version_l"
argument_list|)
argument_list|,
literal|"=={'doc':"
operator|+
name|expectedDoc
operator|+
literal|"}"
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"id:"
operator|+
name|id
argument_list|,
literal|"fl"
argument_list|,
literal|"id,name,my_version_l"
argument_list|)
argument_list|,
literal|"/response/numFound==1"
argument_list|,
literal|"/response/docs==["
operator|+
name|expectedDoc
operator|+
literal|"]"
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|runner
operator|.
name|shutdownNow
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|delayedAdd
specifier|private
name|Callable
argument_list|<
name|Object
argument_list|>
name|delayedAdd
parameter_list|(
specifier|final
name|String
modifier|...
name|fields
parameter_list|)
block|{
return|return
name|Executors
operator|.
name|callable
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
comment|// log.info("ADDING DOC: " + adoc(fields));
name|assertU
argument_list|(
name|adoc
argument_list|(
name|fields
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|delayedDelete
specifier|private
name|Callable
argument_list|<
name|Object
argument_list|>
name|delayedDelete
parameter_list|(
specifier|final
name|String
name|id
parameter_list|,
specifier|final
name|String
name|externalVersion
parameter_list|)
block|{
return|return
name|Executors
operator|.
name|callable
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
comment|// Why does this throw "Exception" ???
comment|// log.info("DELETING DOC: " + id + " v="+externalVersion);
name|deleteAndGetVersion
argument_list|(
name|id
argument_list|,
name|params
argument_list|(
literal|"del_version"
argument_list|,
name|externalVersion
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
argument_list|)
return|;
block|}
block|}
end_class
end_unit
