begin_unit
begin_package
DECL|package|org.apache.solr.update
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|ConcurrentMergeScheduler
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriterConfig
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|SimpleMergedSegmentWarmer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|TieredMergePolicy
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|SolrConfig
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|TestMergePolicyConfig
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|schema
operator|.
name|IndexSchema
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|schema
operator|.
name|IndexSchemaFactory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_comment
comment|/**  * Testcase for {@link SolrIndexConfig}  *  * @see TestMergePolicyConfig  */
end_comment
begin_class
DECL|class|SolrIndexConfigTest
specifier|public
class|class
name|SolrIndexConfigTest
extends|extends
name|SolrTestCaseJ4
block|{
annotation|@
name|Test
DECL|method|testFailingSolrIndexConfigCreation
specifier|public
name|void
name|testFailingSolrIndexConfigCreation
parameter_list|()
block|{
try|try
block|{
name|SolrConfig
name|solrConfig
init|=
operator|new
name|SolrConfig
argument_list|(
literal|"bad-mp-solrconfig.xml"
argument_list|)
decl_stmt|;
name|SolrIndexConfig
name|solrIndexConfig
init|=
operator|new
name|SolrIndexConfig
argument_list|(
name|solrConfig
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|IndexSchema
name|indexSchema
init|=
name|IndexSchemaFactory
operator|.
name|buildIndexSchema
argument_list|(
literal|"schema.xml"
argument_list|,
name|solrConfig
argument_list|)
decl_stmt|;
name|solrIndexConfig
operator|.
name|toIndexWriterConfig
argument_list|(
name|indexSchema
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"a mergePolicy should have an empty constructor in order to be instantiated in Solr thus this should fail "
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// it failed as expected
block|}
block|}
annotation|@
name|Test
DECL|method|testTieredMPSolrIndexConfigCreation
specifier|public
name|void
name|testTieredMPSolrIndexConfigCreation
parameter_list|()
throws|throws
name|Exception
block|{
name|SolrConfig
name|solrConfig
init|=
operator|new
name|SolrConfig
argument_list|(
literal|"solr"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"collection1"
argument_list|,
literal|"solrconfig-tieredmergepolicy.xml"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|SolrIndexConfig
name|solrIndexConfig
init|=
operator|new
name|SolrIndexConfig
argument_list|(
name|solrConfig
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|solrIndexConfig
argument_list|)
expr_stmt|;
name|IndexSchema
name|indexSchema
init|=
name|IndexSchemaFactory
operator|.
name|buildIndexSchema
argument_list|(
literal|"schema.xml"
argument_list|,
name|solrConfig
argument_list|)
decl_stmt|;
name|IndexWriterConfig
name|iwc
init|=
name|solrIndexConfig
operator|.
name|toIndexWriterConfig
argument_list|(
name|indexSchema
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"null mp"
argument_list|,
name|iwc
operator|.
name|getMergePolicy
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"mp is not TMP"
argument_list|,
name|iwc
operator|.
name|getMergePolicy
argument_list|()
operator|instanceof
name|TieredMergePolicy
argument_list|)
expr_stmt|;
name|TieredMergePolicy
name|mp
init|=
operator|(
name|TieredMergePolicy
operator|)
name|iwc
operator|.
name|getMergePolicy
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"mp.maxMergeAtOnceExplicit"
argument_list|,
literal|19
argument_list|,
name|mp
operator|.
name|getMaxMergeAtOnceExplicit
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mp.segmentsPerTier"
argument_list|,
literal|9
argument_list|,
operator|(
name|int
operator|)
name|mp
operator|.
name|getSegmentsPerTier
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"null ms"
argument_list|,
name|iwc
operator|.
name|getMergeScheduler
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"ms is not CMS"
argument_list|,
name|iwc
operator|.
name|getMergeScheduler
argument_list|()
operator|instanceof
name|ConcurrentMergeScheduler
argument_list|)
expr_stmt|;
name|ConcurrentMergeScheduler
name|ms
init|=
operator|(
name|ConcurrentMergeScheduler
operator|)
name|iwc
operator|.
name|getMergeScheduler
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ms.maxMergeCount"
argument_list|,
literal|987
argument_list|,
name|ms
operator|.
name|getMaxMergeCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ms.maxThreadCount"
argument_list|,
literal|42
argument_list|,
name|ms
operator|.
name|getMaxThreadCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testMergedSegmentWarmerIndexConfigCreation
specifier|public
name|void
name|testMergedSegmentWarmerIndexConfigCreation
parameter_list|()
throws|throws
name|Exception
block|{
name|SolrConfig
name|solrConfig
init|=
operator|new
name|SolrConfig
argument_list|(
literal|"solr"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"collection1"
argument_list|,
literal|"solrconfig-warmer.xml"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|SolrIndexConfig
name|solrIndexConfig
init|=
operator|new
name|SolrIndexConfig
argument_list|(
name|solrConfig
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|solrIndexConfig
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|solrIndexConfig
operator|.
name|mergedSegmentWarmerInfo
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|SimpleMergedSegmentWarmer
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|solrIndexConfig
operator|.
name|mergedSegmentWarmerInfo
operator|.
name|className
argument_list|)
expr_stmt|;
name|IndexSchema
name|indexSchema
init|=
name|IndexSchemaFactory
operator|.
name|buildIndexSchema
argument_list|(
literal|"schema.xml"
argument_list|,
name|solrConfig
argument_list|)
decl_stmt|;
name|IndexWriterConfig
name|iwc
init|=
name|solrIndexConfig
operator|.
name|toIndexWriterConfig
argument_list|(
name|indexSchema
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|SimpleMergedSegmentWarmer
operator|.
name|class
argument_list|,
name|iwc
operator|.
name|getMergedSegmentWarmer
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
