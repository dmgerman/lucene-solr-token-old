begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.handler
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileReader
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FilenameFilter
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import
begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|MatchAllDocsQuery
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TopDocs
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|Directory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|SimpleFSDirectory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|TestDistributedSearch
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServerException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|embedded
operator|.
name|JettySolrRunner
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|CommonsHttpSolrServer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|QueryRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|QueryResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrDocument
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrDocumentList
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputDocument
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ModifiableSolrParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|SimpleOrderedMap
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|AbstractSolrTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_comment
comment|/**  * Test for ReplicationHandler  *  *  * @since 1.4  */
end_comment
begin_class
DECL|class|TestReplicationHandler
specifier|public
class|class
name|TestReplicationHandler
extends|extends
name|SolrTestCaseJ4
block|{
DECL|field|CONF_DIR
specifier|private
specifier|static
specifier|final
name|String
name|CONF_DIR
init|=
literal|"."
operator|+
name|File
operator|.
name|separator
operator|+
literal|"solr"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"conf"
operator|+
name|File
operator|.
name|separator
decl_stmt|;
DECL|field|masterJetty
DECL|field|slaveJetty
specifier|static
name|JettySolrRunner
name|masterJetty
decl_stmt|,
name|slaveJetty
decl_stmt|;
DECL|field|masterClient
DECL|field|slaveClient
specifier|static
name|SolrServer
name|masterClient
decl_stmt|,
name|slaveClient
decl_stmt|;
DECL|field|master
DECL|field|slave
specifier|static
name|SolrInstance
name|master
init|=
literal|null
decl_stmt|,
name|slave
init|=
literal|null
decl_stmt|;
DECL|field|context
specifier|static
name|String
name|context
init|=
literal|"/solr"
decl_stmt|;
comment|// number of docs to index... decremented for each test case to tell if we accidentally reuse
comment|// index from previous test method
DECL|field|nDocs
specifier|static
name|int
name|nDocs
init|=
literal|500
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|beforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|master
operator|=
operator|new
name|SolrInstance
argument_list|(
literal|"master"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|master
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|masterJetty
operator|=
name|createJetty
argument_list|(
name|master
argument_list|)
expr_stmt|;
name|masterClient
operator|=
name|createNewSolrServer
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slave
operator|=
operator|new
name|SolrInstance
argument_list|(
literal|"slave"
argument_list|,
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slave
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|slaveJetty
operator|=
name|createJetty
argument_list|(
name|slave
argument_list|)
expr_stmt|;
name|slaveClient
operator|=
name|createNewSolrServer
argument_list|(
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|clearIndexWithReplication
specifier|public
name|void
name|clearIndexWithReplication
parameter_list|()
throws|throws
name|Exception
block|{
name|NamedList
name|res
init|=
name|query
argument_list|(
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|docs
init|=
operator|(
name|SolrDocumentList
operator|)
name|res
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
if|if
condition|(
name|docs
operator|.
name|getNumFound
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|masterClient
operator|.
name|deleteByQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// wait for replication to sync
name|res
operator|=
name|rQuery
argument_list|(
literal|0
argument_list|,
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
operator|(
operator|(
name|SolrDocumentList
operator|)
name|res
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
operator|)
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|AfterClass
DECL|method|afterClass
specifier|public
specifier|static
name|void
name|afterClass
parameter_list|()
throws|throws
name|Exception
block|{
name|masterJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|slaveJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|master
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|slave
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
DECL|method|createJetty
specifier|private
specifier|static
name|JettySolrRunner
name|createJetty
parameter_list|(
name|SolrInstance
name|instance
parameter_list|)
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.solr.home"
argument_list|,
name|instance
operator|.
name|getHomeDir
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.data.dir"
argument_list|,
name|instance
operator|.
name|getDataDir
argument_list|()
argument_list|)
expr_stmt|;
name|JettySolrRunner
name|jetty
init|=
operator|new
name|JettySolrRunner
argument_list|(
literal|"/solr"
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|jetty
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
name|jetty
return|;
block|}
DECL|method|createNewSolrServer
specifier|private
specifier|static
name|SolrServer
name|createNewSolrServer
parameter_list|(
name|int
name|port
parameter_list|)
block|{
try|try
block|{
comment|// setup the server...
name|String
name|url
init|=
literal|"http://localhost:"
operator|+
name|port
operator|+
name|context
decl_stmt|;
name|CommonsHttpSolrServer
name|s
init|=
operator|new
name|CommonsHttpSolrServer
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|s
operator|.
name|setDefaultMaxConnectionsPerHost
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|s
operator|.
name|setMaxTotalConnections
argument_list|(
literal|100
argument_list|)
expr_stmt|;
return|return
name|s
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
DECL|method|index
name|int
name|index
parameter_list|(
name|SolrServer
name|s
parameter_list|,
name|Object
modifier|...
name|fields
parameter_list|)
throws|throws
name|Exception
block|{
name|SolrInputDocument
name|doc
init|=
operator|new
name|SolrInputDocument
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|fields
operator|.
name|length
condition|;
name|i
operator|+=
literal|2
control|)
block|{
name|doc
operator|.
name|addField
argument_list|(
call|(
name|String
call|)
argument_list|(
name|fields
index|[
name|i
index|]
argument_list|)
argument_list|,
name|fields
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
return|return
name|s
operator|.
name|add
argument_list|(
name|doc
argument_list|)
operator|.
name|getStatus
argument_list|()
return|;
block|}
DECL|method|query
name|NamedList
name|query
parameter_list|(
name|String
name|query
parameter_list|,
name|SolrServer
name|s
parameter_list|)
throws|throws
name|SolrServerException
block|{
name|NamedList
name|res
init|=
operator|new
name|SimpleOrderedMap
argument_list|()
decl_stmt|;
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
literal|"q"
argument_list|,
name|query
argument_list|)
expr_stmt|;
name|QueryResponse
name|qres
init|=
name|s
operator|.
name|query
argument_list|(
name|params
argument_list|)
decl_stmt|;
name|res
operator|=
name|qres
operator|.
name|getResponse
argument_list|()
expr_stmt|;
return|return
name|res
return|;
block|}
comment|/** will sleep up to 30 seconds, looking for expectedDocCount */
DECL|method|rQuery
specifier|private
name|NamedList
name|rQuery
parameter_list|(
name|int
name|expectedDocCount
parameter_list|,
name|String
name|query
parameter_list|,
name|SolrServer
name|server
parameter_list|)
throws|throws
name|Exception
block|{
name|int
name|timeSlept
init|=
literal|0
decl_stmt|;
name|NamedList
name|res
init|=
literal|null
decl_stmt|;
name|SolrDocumentList
name|docList
init|=
literal|null
decl_stmt|;
do|do
block|{
name|res
operator|=
name|query
argument_list|(
name|query
argument_list|,
name|server
argument_list|)
expr_stmt|;
name|docList
operator|=
operator|(
name|SolrDocumentList
operator|)
name|res
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
expr_stmt|;
name|timeSlept
operator|+=
literal|100
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|docList
operator|.
name|getNumFound
argument_list|()
operator|!=
name|expectedDocCount
operator|&&
name|timeSlept
operator|<
literal|30000
condition|)
do|;
return|return
name|res
return|;
block|}
DECL|method|getDetails
specifier|private
name|NamedList
argument_list|<
name|Object
argument_list|>
name|getDetails
parameter_list|(
name|SolrServer
name|s
parameter_list|)
throws|throws
name|Exception
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"command"
argument_list|,
literal|"details"
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"qt"
argument_list|,
literal|"/replication"
argument_list|)
expr_stmt|;
name|QueryRequest
name|req
init|=
operator|new
name|QueryRequest
argument_list|(
name|params
argument_list|)
decl_stmt|;
name|NamedList
argument_list|<
name|Object
argument_list|>
name|res
init|=
name|s
operator|.
name|request
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"null response from server"
argument_list|,
name|res
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|NamedList
argument_list|<
name|Object
argument_list|>
name|details
init|=
operator|(
name|NamedList
argument_list|<
name|Object
argument_list|>
operator|)
name|res
operator|.
name|get
argument_list|(
literal|"details"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"null details"
argument_list|,
name|details
argument_list|)
expr_stmt|;
return|return
name|details
return|;
block|}
DECL|method|getCommits
specifier|private
name|NamedList
argument_list|<
name|Object
argument_list|>
name|getCommits
parameter_list|(
name|SolrServer
name|s
parameter_list|)
throws|throws
name|Exception
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"command"
argument_list|,
literal|"commits"
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"qt"
argument_list|,
literal|"/replication"
argument_list|)
expr_stmt|;
name|QueryRequest
name|req
init|=
operator|new
name|QueryRequest
argument_list|(
name|params
argument_list|)
decl_stmt|;
name|NamedList
argument_list|<
name|Object
argument_list|>
name|res
init|=
name|s
operator|.
name|request
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"null response from server"
argument_list|,
name|res
argument_list|)
expr_stmt|;
return|return
name|res
return|;
block|}
DECL|method|getIndexVersion
specifier|private
name|NamedList
argument_list|<
name|Object
argument_list|>
name|getIndexVersion
parameter_list|(
name|SolrServer
name|s
parameter_list|)
throws|throws
name|Exception
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"command"
argument_list|,
literal|"indexversion"
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"qt"
argument_list|,
literal|"/replication"
argument_list|)
expr_stmt|;
name|QueryRequest
name|req
init|=
operator|new
name|QueryRequest
argument_list|(
name|params
argument_list|)
decl_stmt|;
name|NamedList
argument_list|<
name|Object
argument_list|>
name|res
init|=
name|s
operator|.
name|request
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"null response from server"
argument_list|,
name|res
argument_list|)
expr_stmt|;
return|return
name|res
return|;
block|}
DECL|method|reloadCore
specifier|private
name|NamedList
argument_list|<
name|Object
argument_list|>
name|reloadCore
parameter_list|(
name|SolrServer
name|s
parameter_list|,
name|String
name|core
parameter_list|)
throws|throws
name|Exception
block|{
name|ModifiableSolrParams
name|params
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"action"
argument_list|,
literal|"reload"
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"core"
argument_list|,
name|core
argument_list|)
expr_stmt|;
name|params
operator|.
name|set
argument_list|(
literal|"qt"
argument_list|,
literal|"/admin/cores"
argument_list|)
expr_stmt|;
name|QueryRequest
name|req
init|=
operator|new
name|QueryRequest
argument_list|(
name|params
argument_list|)
decl_stmt|;
name|NamedList
argument_list|<
name|Object
argument_list|>
name|res
init|=
name|s
operator|.
name|request
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"null response from server"
argument_list|,
name|res
argument_list|)
expr_stmt|;
return|return
name|res
return|;
block|}
DECL|method|test
specifier|public
name|void
name|test
parameter_list|()
throws|throws
name|Exception
block|{
name|doTestReplicateAfterCoreReload
argument_list|()
expr_stmt|;
name|doTestDetails
argument_list|()
expr_stmt|;
name|doTestReplicateAfterWrite2Slave
argument_list|()
expr_stmt|;
name|doTestIndexAndConfigReplication
argument_list|()
expr_stmt|;
name|doTestStopPoll
argument_list|()
expr_stmt|;
name|doTestSnapPullWithMasterUrl
argument_list|()
expr_stmt|;
name|doTestReplicateAfterStartup
argument_list|()
expr_stmt|;
name|doTestIndexAndConfigAliasReplication
argument_list|()
expr_stmt|;
name|doTestBackup
argument_list|()
expr_stmt|;
block|}
DECL|method|doTestDetails
specifier|private
name|void
name|doTestDetails
parameter_list|()
throws|throws
name|Exception
block|{
block|{
name|NamedList
argument_list|<
name|Object
argument_list|>
name|details
init|=
name|getDetails
argument_list|(
name|masterClient
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"master isMaster?"
argument_list|,
literal|"true"
argument_list|,
name|details
operator|.
name|get
argument_list|(
literal|"isMaster"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"master isSlave?"
argument_list|,
literal|"false"
argument_list|,
name|details
operator|.
name|get
argument_list|(
literal|"isSlave"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"master has master section"
argument_list|,
name|details
operator|.
name|get
argument_list|(
literal|"master"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|NamedList
argument_list|<
name|Object
argument_list|>
name|details
init|=
name|getDetails
argument_list|(
name|slaveClient
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"slave isMaster?"
argument_list|,
literal|"false"
argument_list|,
name|details
operator|.
name|get
argument_list|(
literal|"isMaster"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"slave isSlave?"
argument_list|,
literal|"true"
argument_list|,
name|details
operator|.
name|get
argument_list|(
literal|"isSlave"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"slave has slave section"
argument_list|,
name|details
operator|.
name|get
argument_list|(
literal|"slave"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|SolrInstance
name|repeater
init|=
literal|null
decl_stmt|;
name|JettySolrRunner
name|repeaterJetty
init|=
literal|null
decl_stmt|;
name|SolrServer
name|repeaterClient
init|=
literal|null
decl_stmt|;
try|try
block|{
name|repeater
operator|=
operator|new
name|SolrInstance
argument_list|(
literal|"repeater"
argument_list|,
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|repeater
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|repeaterJetty
operator|=
name|createJetty
argument_list|(
name|repeater
argument_list|)
expr_stmt|;
name|repeaterClient
operator|=
name|createNewSolrServer
argument_list|(
name|repeaterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|NamedList
argument_list|<
name|Object
argument_list|>
name|details
init|=
name|getDetails
argument_list|(
name|repeaterClient
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"repeater isMaster?"
argument_list|,
literal|"true"
argument_list|,
name|details
operator|.
name|get
argument_list|(
literal|"isMaster"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"repeater isSlave?"
argument_list|,
literal|"true"
argument_list|,
name|details
operator|.
name|get
argument_list|(
literal|"isSlave"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"repeater has master section"
argument_list|,
name|details
operator|.
name|get
argument_list|(
literal|"master"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"repeater has slave section"
argument_list|,
name|details
operator|.
name|get
argument_list|(
literal|"slave"
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
try|try
block|{
if|if
condition|(
name|repeaterJetty
operator|!=
literal|null
condition|)
name|repeaterJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|/* :NOOP: */
block|}
try|try
block|{
if|if
condition|(
name|repeater
operator|!=
literal|null
condition|)
name|repeater
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|/* :NOOP: */
block|}
block|}
block|}
DECL|method|doTestReplicateAfterWrite2Slave
specifier|private
name|void
name|doTestReplicateAfterWrite2Slave
parameter_list|()
throws|throws
name|Exception
block|{
name|clearIndexWithReplication
argument_list|()
expr_stmt|;
name|nDocs
operator|--
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nDocs
condition|;
name|i
operator|++
control|)
block|{
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|String
name|masterUrl
init|=
literal|"http://localhost:"
operator|+
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
operator|+
literal|"/solr/replication?command=disableReplication"
decl_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|masterUrl
argument_list|)
decl_stmt|;
name|InputStream
name|stream
init|=
name|url
operator|.
name|openStream
argument_list|()
decl_stmt|;
try|try
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|//e.printStackTrace();
block|}
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|NamedList
name|masterQueryRsp
init|=
name|rQuery
argument_list|(
name|nDocs
argument_list|,
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|masterQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|masterQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|nDocs
argument_list|,
name|masterQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|// Make sure that both the index version and index generation on the slave is
comment|// higher than that of the master, just to make the test harder.
name|index
argument_list|(
name|slaveClient
argument_list|,
literal|"id"
argument_list|,
literal|551
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
literal|551
argument_list|)
expr_stmt|;
name|slaveClient
operator|.
name|commit
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|index
argument_list|(
name|slaveClient
argument_list|,
literal|"id"
argument_list|,
literal|552
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
literal|552
argument_list|)
expr_stmt|;
name|slaveClient
operator|.
name|commit
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|index
argument_list|(
name|slaveClient
argument_list|,
literal|"id"
argument_list|,
literal|553
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
literal|553
argument_list|)
expr_stmt|;
name|slaveClient
operator|.
name|commit
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|index
argument_list|(
name|slaveClient
argument_list|,
literal|"id"
argument_list|,
literal|554
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
literal|554
argument_list|)
expr_stmt|;
name|slaveClient
operator|.
name|commit
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|index
argument_list|(
name|slaveClient
argument_list|,
literal|"id"
argument_list|,
literal|555
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
literal|555
argument_list|)
expr_stmt|;
name|slaveClient
operator|.
name|commit
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//this doc is added to slave so it should show an item w/ that result
name|SolrDocumentList
name|slaveQueryResult
init|=
literal|null
decl_stmt|;
name|NamedList
name|slaveQueryRsp
decl_stmt|;
name|slaveQueryRsp
operator|=
name|rQuery
argument_list|(
literal|1
argument_list|,
literal|"id:555"
argument_list|,
name|slaveClient
argument_list|)
expr_stmt|;
name|slaveQueryResult
operator|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
name|masterUrl
operator|=
literal|"http://localhost:"
operator|+
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
operator|+
literal|"/solr/replication?command=enableReplication"
expr_stmt|;
name|url
operator|=
operator|new
name|URL
argument_list|(
name|masterUrl
argument_list|)
expr_stmt|;
name|stream
operator|=
name|url
operator|.
name|openStream
argument_list|()
expr_stmt|;
try|try
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|//e.printStackTrace();
block|}
comment|//the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now
name|slaveQueryRsp
operator|=
name|rQuery
argument_list|(
literal|0
argument_list|,
literal|"id:555"
argument_list|,
name|slaveClient
argument_list|)
expr_stmt|;
name|slaveQueryResult
operator|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|// make sure we replicated the correct index from the master
name|slaveQueryRsp
operator|=
name|rQuery
argument_list|(
name|nDocs
argument_list|,
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
expr_stmt|;
name|slaveQueryResult
operator|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nDocs
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|doTestIndexAndConfigReplication
specifier|private
name|void
name|doTestIndexAndConfigReplication
parameter_list|()
throws|throws
name|Exception
block|{
name|clearIndexWithReplication
argument_list|()
expr_stmt|;
name|nDocs
operator|--
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nDocs
condition|;
name|i
operator|++
control|)
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
name|i
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|NamedList
name|masterQueryRsp
init|=
name|rQuery
argument_list|(
name|nDocs
argument_list|,
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|masterQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|masterQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|nDocs
argument_list|,
name|masterQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//get docs from slave and check if number is equal to master
name|NamedList
name|slaveQueryRsp
init|=
name|rQuery
argument_list|(
name|nDocs
argument_list|,
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|slaveQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|nDocs
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//compare results
name|String
name|cmp
init|=
name|TestDistributedSearch
operator|.
name|compare
argument_list|(
name|masterQueryResult
argument_list|,
name|slaveQueryResult
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|cmp
argument_list|)
expr_stmt|;
comment|//start config files replication test
name|masterClient
operator|.
name|deleteByQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|//change the schema on master
name|master
operator|.
name|copyConfigFile
argument_list|(
name|CONF_DIR
operator|+
literal|"schema-replication2.xml"
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
name|masterJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|masterJetty
operator|=
name|createJetty
argument_list|(
name|master
argument_list|)
expr_stmt|;
name|masterClient
operator|=
name|createNewSolrServer
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slave
operator|.
name|setTestPort
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slave
operator|.
name|copyConfigFile
argument_list|(
name|slave
operator|.
name|getSolrConfigFile
argument_list|()
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
name|slaveJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|slaveJetty
operator|=
name|createJetty
argument_list|(
name|slave
argument_list|)
expr_stmt|;
name|slaveClient
operator|=
name|createNewSolrServer
argument_list|(
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
comment|//add a doc with new field and commit on master to trigger snappull from slave.
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
literal|"2000"
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
literal|2000
argument_list|,
literal|"newname"
argument_list|,
literal|"newname = "
operator|+
literal|2000
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|NamedList
name|masterQueryRsp2
init|=
name|rQuery
argument_list|(
literal|1
argument_list|,
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|masterQueryResult2
init|=
operator|(
name|SolrDocumentList
operator|)
name|masterQueryRsp2
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|masterQueryResult2
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
name|slaveQueryRsp
operator|=
name|rQuery
argument_list|(
literal|1
argument_list|,
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
expr_stmt|;
name|SolrDocument
name|d
init|=
operator|(
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"newname = 2000"
argument_list|,
operator|(
name|String
operator|)
name|d
operator|.
name|getFieldValue
argument_list|(
literal|"newname"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|doTestStopPoll
specifier|private
name|void
name|doTestStopPoll
parameter_list|()
throws|throws
name|Exception
block|{
name|clearIndexWithReplication
argument_list|()
expr_stmt|;
comment|// Test:
comment|// setup master/slave.
comment|// stop polling on slave, add a doc to master and verify slave hasn't picked it.
name|nDocs
operator|--
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nDocs
condition|;
name|i
operator|++
control|)
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
name|i
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|NamedList
name|masterQueryRsp
init|=
name|rQuery
argument_list|(
name|nDocs
argument_list|,
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|masterQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|masterQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|nDocs
argument_list|,
name|masterQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//get docs from slave and check if number is equal to master
name|NamedList
name|slaveQueryRsp
init|=
name|rQuery
argument_list|(
name|nDocs
argument_list|,
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|slaveQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|nDocs
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//compare results
name|String
name|cmp
init|=
name|TestDistributedSearch
operator|.
name|compare
argument_list|(
name|masterQueryResult
argument_list|,
name|slaveQueryResult
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|cmp
argument_list|)
expr_stmt|;
comment|// start stop polling test
name|String
name|slaveURL
init|=
literal|"http://localhost:"
operator|+
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
operator|+
literal|"/solr/replication?command=disablepoll"
decl_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|slaveURL
argument_list|)
decl_stmt|;
name|InputStream
name|stream
init|=
name|url
operator|.
name|openStream
argument_list|()
decl_stmt|;
try|try
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|//e.printStackTrace();
block|}
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
literal|501
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
literal|501
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|//get docs from master and check if number is equal to master
name|masterQueryRsp
operator|=
name|rQuery
argument_list|(
name|nDocs
operator|+
literal|1
argument_list|,
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
expr_stmt|;
name|masterQueryResult
operator|=
operator|(
name|SolrDocumentList
operator|)
name|masterQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nDocs
operator|+
literal|1
argument_list|,
name|masterQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|// NOTE: this test is wierd, we want to verify it DOESNT replicate...
comment|// for now, add a sleep for this.., but the logic is wierd.
name|Thread
operator|.
name|sleep
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
comment|//get docs from slave and check if number is not equal to master; polling is disabled
name|slaveQueryRsp
operator|=
name|rQuery
argument_list|(
name|nDocs
argument_list|,
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
expr_stmt|;
name|slaveQueryResult
operator|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nDocs
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|// re-enable replication
name|slaveURL
operator|=
literal|"http://localhost:"
operator|+
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
operator|+
literal|"/solr/replication?command=enablepoll"
expr_stmt|;
name|url
operator|=
operator|new
name|URL
argument_list|(
name|slaveURL
argument_list|)
expr_stmt|;
name|stream
operator|=
name|url
operator|.
name|openStream
argument_list|()
expr_stmt|;
try|try
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|//e.printStackTrace();
block|}
name|slaveQueryRsp
operator|=
name|rQuery
argument_list|(
name|nDocs
operator|+
literal|1
argument_list|,
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
expr_stmt|;
name|slaveQueryResult
operator|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|nDocs
operator|+
literal|1
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|doTestSnapPullWithMasterUrl
specifier|private
name|void
name|doTestSnapPullWithMasterUrl
parameter_list|()
throws|throws
name|Exception
block|{
comment|//change solrconfig on slave
comment|//this has no entry for pollinginterval
name|slave
operator|.
name|copyConfigFile
argument_list|(
name|CONF_DIR
operator|+
literal|"solrconfig-slave1.xml"
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
name|slaveJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|slaveJetty
operator|=
name|createJetty
argument_list|(
name|slave
argument_list|)
expr_stmt|;
name|slaveClient
operator|=
name|createNewSolrServer
argument_list|(
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|deleteByQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
name|nDocs
operator|--
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nDocs
condition|;
name|i
operator|++
control|)
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
name|i
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|NamedList
name|masterQueryRsp
init|=
name|rQuery
argument_list|(
name|nDocs
argument_list|,
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|masterQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|masterQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|nDocs
argument_list|,
name|masterQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|// snappull
name|String
name|masterUrl
init|=
literal|"http://localhost:"
operator|+
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
operator|+
literal|"/solr/replication?command=fetchindex&masterUrl="
decl_stmt|;
name|masterUrl
operator|+=
literal|"http://localhost:"
operator|+
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
operator|+
literal|"/solr/replication"
expr_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|masterUrl
argument_list|)
decl_stmt|;
name|InputStream
name|stream
init|=
name|url
operator|.
name|openStream
argument_list|()
decl_stmt|;
try|try
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|//e.printStackTrace();
block|}
comment|//get docs from slave and check if number is equal to master
name|NamedList
name|slaveQueryRsp
init|=
name|rQuery
argument_list|(
name|nDocs
argument_list|,
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|slaveQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|nDocs
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//compare results
name|String
name|cmp
init|=
name|TestDistributedSearch
operator|.
name|compare
argument_list|(
name|masterQueryResult
argument_list|,
name|slaveQueryResult
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|cmp
argument_list|)
expr_stmt|;
comment|// NOTE: at this point, the slave is not polling any more
comment|// restore it.
name|slave
operator|.
name|copyConfigFile
argument_list|(
name|CONF_DIR
operator|+
literal|"solrconfig-slave.xml"
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
name|slaveJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|slaveJetty
operator|=
name|createJetty
argument_list|(
name|slave
argument_list|)
expr_stmt|;
name|slaveClient
operator|=
name|createNewSolrServer
argument_list|(
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|doTestReplicateAfterStartup
specifier|private
name|void
name|doTestReplicateAfterStartup
parameter_list|()
throws|throws
name|Exception
block|{
comment|//stop slave
name|slaveJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|nDocs
operator|--
expr_stmt|;
name|masterClient
operator|.
name|deleteByQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nDocs
condition|;
name|i
operator|++
control|)
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
name|i
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|NamedList
name|masterQueryRsp
init|=
name|rQuery
argument_list|(
name|nDocs
argument_list|,
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|masterQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|masterQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|nDocs
argument_list|,
name|masterQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//change solrconfig having 'replicateAfter startup' option on master
name|master
operator|.
name|copyConfigFile
argument_list|(
name|CONF_DIR
operator|+
literal|"solrconfig-master2.xml"
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
name|masterJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|masterJetty
operator|=
name|createJetty
argument_list|(
name|master
argument_list|)
expr_stmt|;
name|masterClient
operator|=
name|createNewSolrServer
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slave
operator|.
name|setTestPort
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slave
operator|.
name|copyConfigFile
argument_list|(
name|slave
operator|.
name|getSolrConfigFile
argument_list|()
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
comment|//start slave
name|slaveJetty
operator|=
name|createJetty
argument_list|(
name|slave
argument_list|)
expr_stmt|;
name|slaveClient
operator|=
name|createNewSolrServer
argument_list|(
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
comment|//get docs from slave and check if number is equal to master
name|NamedList
name|slaveQueryRsp
init|=
name|rQuery
argument_list|(
name|nDocs
argument_list|,
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|slaveQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|nDocs
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//compare results
name|String
name|cmp
init|=
name|TestDistributedSearch
operator|.
name|compare
argument_list|(
name|masterQueryResult
argument_list|,
name|slaveQueryResult
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|cmp
argument_list|)
expr_stmt|;
comment|// NOTE: the master only replicates after startup now!
comment|// revert that change.
name|master
operator|.
name|copyConfigFile
argument_list|(
name|CONF_DIR
operator|+
literal|"solrconfig-master.xml"
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
name|masterJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|masterJetty
operator|=
name|createJetty
argument_list|(
name|master
argument_list|)
expr_stmt|;
name|masterClient
operator|=
name|createNewSolrServer
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slave
operator|.
name|setTestPort
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slave
operator|.
name|copyConfigFile
argument_list|(
name|slave
operator|.
name|getSolrConfigFile
argument_list|()
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
comment|//start slave
name|slaveJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|slaveJetty
operator|=
name|createJetty
argument_list|(
name|slave
argument_list|)
expr_stmt|;
name|slaveClient
operator|=
name|createNewSolrServer
argument_list|(
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|doTestReplicateAfterCoreReload
specifier|private
name|void
name|doTestReplicateAfterCoreReload
parameter_list|()
throws|throws
name|Exception
block|{
comment|//stop slave
name|slaveJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|masterClient
operator|.
name|deleteByQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
name|i
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|NamedList
name|masterQueryRsp
init|=
name|rQuery
argument_list|(
literal|10
argument_list|,
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|masterQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|masterQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|masterQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//change solrconfig having 'replicateAfter startup' option on master
name|master
operator|.
name|copyConfigFile
argument_list|(
name|CONF_DIR
operator|+
literal|"solrconfig-master3.xml"
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
name|masterJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|masterJetty
operator|=
name|createJetty
argument_list|(
name|master
argument_list|)
expr_stmt|;
name|masterClient
operator|=
name|createNewSolrServer
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slave
operator|.
name|setTestPort
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slave
operator|.
name|copyConfigFile
argument_list|(
name|slave
operator|.
name|getSolrConfigFile
argument_list|()
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
comment|//start slave
name|slaveJetty
operator|=
name|createJetty
argument_list|(
name|slave
argument_list|)
expr_stmt|;
name|slaveClient
operator|=
name|createNewSolrServer
argument_list|(
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
comment|//get docs from slave and check if number is equal to master
name|NamedList
name|slaveQueryRsp
init|=
name|rQuery
argument_list|(
literal|10
argument_list|,
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|slaveQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//compare results
name|String
name|cmp
init|=
name|TestDistributedSearch
operator|.
name|compare
argument_list|(
name|masterQueryResult
argument_list|,
name|slaveQueryResult
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|cmp
argument_list|)
expr_stmt|;
name|Object
name|version
init|=
name|getIndexVersion
argument_list|(
name|masterClient
argument_list|)
operator|.
name|get
argument_list|(
literal|"indexversion"
argument_list|)
decl_stmt|;
name|NamedList
argument_list|<
name|Object
argument_list|>
name|commits
init|=
name|getCommits
argument_list|(
name|masterClient
argument_list|)
decl_stmt|;
name|reloadCore
argument_list|(
name|masterClient
argument_list|,
literal|"collection1"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|version
argument_list|,
name|getIndexVersion
argument_list|(
name|masterClient
argument_list|)
operator|.
name|get
argument_list|(
literal|"indexversion"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|commits
operator|.
name|get
argument_list|(
literal|"commits"
argument_list|)
argument_list|,
name|getCommits
argument_list|(
name|masterClient
argument_list|)
operator|.
name|get
argument_list|(
literal|"commits"
argument_list|)
argument_list|)
expr_stmt|;
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
literal|110
argument_list|,
literal|"name"
argument_list|,
literal|"name = 1"
argument_list|)
expr_stmt|;
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
literal|120
argument_list|,
literal|"name"
argument_list|,
literal|"name = 2"
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|NamedList
name|resp
init|=
name|rQuery
argument_list|(
literal|12
argument_list|,
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|masterQueryResult
operator|=
operator|(
name|SolrDocumentList
operator|)
name|resp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|masterQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//get docs from slave and check if number is equal to master
name|slaveQueryRsp
operator|=
name|rQuery
argument_list|(
literal|12
argument_list|,
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
expr_stmt|;
name|slaveQueryResult
operator|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|// NOTE: revert config on master.
name|master
operator|.
name|copyConfigFile
argument_list|(
name|CONF_DIR
operator|+
literal|"solrconfig-master.xml"
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
name|masterJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|masterJetty
operator|=
name|createJetty
argument_list|(
name|master
argument_list|)
expr_stmt|;
name|masterClient
operator|=
name|createNewSolrServer
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slave
operator|.
name|setTestPort
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slave
operator|.
name|copyConfigFile
argument_list|(
name|slave
operator|.
name|getSolrConfigFile
argument_list|()
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
comment|//start slave
name|slaveJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|slaveJetty
operator|=
name|createJetty
argument_list|(
name|slave
argument_list|)
expr_stmt|;
name|slaveClient
operator|=
name|createNewSolrServer
argument_list|(
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|doTestIndexAndConfigAliasReplication
specifier|private
name|void
name|doTestIndexAndConfigAliasReplication
parameter_list|()
throws|throws
name|Exception
block|{
name|clearIndexWithReplication
argument_list|()
expr_stmt|;
name|nDocs
operator|--
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nDocs
condition|;
name|i
operator|++
control|)
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
name|i
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|NamedList
name|masterQueryRsp
init|=
name|rQuery
argument_list|(
name|nDocs
argument_list|,
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|masterQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|masterQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|nDocs
argument_list|,
name|masterQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//get docs from slave and check if number is equal to master
name|NamedList
name|slaveQueryRsp
init|=
name|rQuery
argument_list|(
name|nDocs
argument_list|,
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|slaveQueryResult
init|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|nDocs
argument_list|,
name|slaveQueryResult
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
comment|//compare results
name|String
name|cmp
init|=
name|TestDistributedSearch
operator|.
name|compare
argument_list|(
name|masterQueryResult
argument_list|,
name|slaveQueryResult
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|cmp
argument_list|)
expr_stmt|;
comment|//start config files replication test
comment|//clear master index
name|masterClient
operator|.
name|deleteByQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|//change solrconfig on master
name|master
operator|.
name|copyConfigFile
argument_list|(
name|CONF_DIR
operator|+
literal|"solrconfig-master1.xml"
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
comment|//change schema on master
name|master
operator|.
name|copyConfigFile
argument_list|(
name|CONF_DIR
operator|+
literal|"schema-replication2.xml"
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
comment|//keep a copy of the new schema
name|master
operator|.
name|copyConfigFile
argument_list|(
name|CONF_DIR
operator|+
literal|"schema-replication2.xml"
argument_list|,
literal|"schema-replication2.xml"
argument_list|)
expr_stmt|;
name|masterJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|masterJetty
operator|=
name|createJetty
argument_list|(
name|master
argument_list|)
expr_stmt|;
name|masterClient
operator|=
name|createNewSolrServer
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slave
operator|.
name|setTestPort
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|slave
operator|.
name|copyConfigFile
argument_list|(
name|slave
operator|.
name|getSolrConfigFile
argument_list|()
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
name|slaveJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|slaveJetty
operator|=
name|createJetty
argument_list|(
name|slave
argument_list|)
expr_stmt|;
name|slaveClient
operator|=
name|createNewSolrServer
argument_list|(
name|slaveJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
comment|//add a doc with new field and commit on master to trigger snappull from slave.
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
literal|"2000"
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
literal|2000
argument_list|,
literal|"newname"
argument_list|,
literal|"newname = "
operator|+
literal|2000
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|NamedList
name|masterQueryRsp2
init|=
name|rQuery
argument_list|(
literal|1
argument_list|,
literal|"*:*"
argument_list|,
name|masterClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|masterQueryResult2
init|=
operator|(
name|SolrDocumentList
operator|)
name|masterQueryRsp2
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|masterQueryResult2
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
name|NamedList
name|slaveQueryRsp2
init|=
name|rQuery
argument_list|(
literal|1
argument_list|,
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|slaveQueryResult2
init|=
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp2
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|slaveQueryResult2
operator|.
name|getNumFound
argument_list|()
argument_list|)
expr_stmt|;
name|index
argument_list|(
name|slaveClient
argument_list|,
literal|"id"
argument_list|,
literal|"2000"
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
literal|2001
argument_list|,
literal|"newname"
argument_list|,
literal|"newname = "
operator|+
literal|2001
argument_list|)
expr_stmt|;
name|slaveClient
operator|.
name|commit
argument_list|()
expr_stmt|;
name|slaveQueryRsp
operator|=
name|rQuery
argument_list|(
literal|1
argument_list|,
literal|"*:*"
argument_list|,
name|slaveClient
argument_list|)
expr_stmt|;
name|SolrDocument
name|d
init|=
operator|(
operator|(
name|SolrDocumentList
operator|)
name|slaveQueryRsp
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
operator|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"newname = 2001"
argument_list|,
operator|(
name|String
operator|)
name|d
operator|.
name|getFieldValue
argument_list|(
literal|"newname"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|doTestBackup
specifier|private
name|void
name|doTestBackup
parameter_list|()
throws|throws
name|Exception
block|{
name|masterJetty
operator|.
name|stop
argument_list|()
expr_stmt|;
name|master
operator|.
name|copyConfigFile
argument_list|(
name|CONF_DIR
operator|+
literal|"solrconfig-master1.xml"
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
name|masterJetty
operator|=
name|createJetty
argument_list|(
name|master
argument_list|)
expr_stmt|;
name|masterClient
operator|=
name|createNewSolrServer
argument_list|(
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
argument_list|)
expr_stmt|;
name|nDocs
operator|--
expr_stmt|;
name|masterClient
operator|.
name|deleteByQuery
argument_list|(
literal|"*:*"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nDocs
condition|;
name|i
operator|++
control|)
name|index
argument_list|(
name|masterClient
argument_list|,
literal|"id"
argument_list|,
name|i
argument_list|,
literal|"name"
argument_list|,
literal|"name = "
operator|+
name|i
argument_list|)
expr_stmt|;
name|masterClient
operator|.
name|commit
argument_list|()
expr_stmt|;
class|class
name|BackupThread
extends|extends
name|Thread
block|{
specifier|volatile
name|String
name|fail
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|String
name|masterUrl
init|=
literal|"http://localhost:"
operator|+
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
operator|+
literal|"/solr/replication?command="
operator|+
name|ReplicationHandler
operator|.
name|CMD_BACKUP
decl_stmt|;
name|URL
name|url
decl_stmt|;
name|InputStream
name|stream
init|=
literal|null
decl_stmt|;
try|try
block|{
name|url
operator|=
operator|new
name|URL
argument_list|(
name|masterUrl
argument_list|)
expr_stmt|;
name|stream
operator|=
name|url
operator|.
name|openStream
argument_list|()
expr_stmt|;
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
operator|=
name|e
operator|.
name|getMessage
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|stream
argument_list|)
expr_stmt|;
block|}
block|}
empty_stmt|;
block|}
empty_stmt|;
name|BackupThread
name|backupThread
init|=
operator|new
name|BackupThread
argument_list|()
decl_stmt|;
name|backupThread
operator|.
name|start
argument_list|()
expr_stmt|;
name|File
name|dataDir
init|=
operator|new
name|File
argument_list|(
name|master
operator|.
name|getDataDir
argument_list|()
argument_list|)
decl_stmt|;
class|class
name|CheckStatus
extends|extends
name|Thread
block|{
specifier|volatile
name|String
name|fail
init|=
literal|null
decl_stmt|;
specifier|volatile
name|String
name|response
init|=
literal|null
decl_stmt|;
specifier|volatile
name|boolean
name|success
init|=
literal|false
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|String
name|masterUrl
init|=
literal|"http://localhost:"
operator|+
name|masterJetty
operator|.
name|getLocalPort
argument_list|()
operator|+
literal|"/solr/replication?command="
operator|+
name|ReplicationHandler
operator|.
name|CMD_DETAILS
decl_stmt|;
name|URL
name|url
decl_stmt|;
name|InputStream
name|stream
init|=
literal|null
decl_stmt|;
try|try
block|{
name|url
operator|=
operator|new
name|URL
argument_list|(
name|masterUrl
argument_list|)
expr_stmt|;
name|stream
operator|=
name|url
operator|.
name|openStream
argument_list|()
expr_stmt|;
name|response
operator|=
name|IOUtils
operator|.
name|toString
argument_list|(
name|stream
argument_list|,
literal|"UTF-8"
argument_list|)
expr_stmt|;
if|if
condition|(
name|response
operator|.
name|contains
argument_list|(
literal|"<str name=\"status\">success</str>"
argument_list|)
condition|)
block|{
name|success
operator|=
literal|true
expr_stmt|;
block|}
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
operator|=
name|e
operator|.
name|getMessage
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|stream
argument_list|)
expr_stmt|;
block|}
block|}
empty_stmt|;
block|}
empty_stmt|;
name|int
name|waitCnt
init|=
literal|0
decl_stmt|;
name|CheckStatus
name|checkStatus
init|=
operator|new
name|CheckStatus
argument_list|()
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
name|checkStatus
operator|.
name|run
argument_list|()
expr_stmt|;
if|if
condition|(
name|checkStatus
operator|.
name|fail
operator|!=
literal|null
condition|)
block|{
name|fail
argument_list|(
name|checkStatus
operator|.
name|fail
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|checkStatus
operator|.
name|success
condition|)
block|{
break|break;
block|}
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
if|if
condition|(
name|waitCnt
operator|==
literal|10
condition|)
block|{
name|fail
argument_list|(
literal|"Backup success not detected:"
operator|+
name|checkStatus
operator|.
name|response
argument_list|)
expr_stmt|;
block|}
name|waitCnt
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|backupThread
operator|.
name|fail
operator|!=
literal|null
condition|)
block|{
name|fail
argument_list|(
name|backupThread
operator|.
name|fail
argument_list|)
expr_stmt|;
block|}
name|File
index|[]
name|files
init|=
name|dataDir
operator|.
name|listFiles
argument_list|(
operator|new
name|FilenameFilter
argument_list|()
block|{
specifier|public
name|boolean
name|accept
parameter_list|(
name|File
name|dir
parameter_list|,
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|name
operator|.
name|startsWith
argument_list|(
literal|"snapshot"
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|files
operator|.
name|length
argument_list|)
expr_stmt|;
name|File
name|snapDir
init|=
name|files
index|[
literal|0
index|]
decl_stmt|;
name|Directory
name|dir
init|=
operator|new
name|SimpleFSDirectory
argument_list|(
name|snapDir
operator|.
name|getAbsoluteFile
argument_list|()
argument_list|)
decl_stmt|;
name|IndexReader
name|reader
init|=
name|IndexReader
operator|.
name|open
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|IndexSearcher
name|searcher
init|=
operator|new
name|IndexSearcher
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|TopDocs
name|hits
init|=
name|searcher
operator|.
name|search
argument_list|(
operator|new
name|MatchAllDocsQuery
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|nDocs
argument_list|,
name|hits
operator|.
name|totalHits
argument_list|)
expr_stmt|;
name|searcher
operator|.
name|close
argument_list|()
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
name|dir
operator|.
name|close
argument_list|()
expr_stmt|;
name|AbstractSolrTestCase
operator|.
name|recurseDelete
argument_list|(
name|snapDir
argument_list|)
expr_stmt|;
comment|// clean up the snap dir
block|}
comment|/* character copy of file using UTF-8 */
DECL|method|copyFile
specifier|private
specifier|static
name|void
name|copyFile
parameter_list|(
name|File
name|src
parameter_list|,
name|File
name|dst
parameter_list|)
throws|throws
name|IOException
block|{
name|copyFile
argument_list|(
name|src
argument_list|,
name|dst
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**    * character copy of file using UTF-8. If port is non-null, will be substituted any time "TEST_PORT" is found.    */
DECL|method|copyFile
specifier|private
specifier|static
name|void
name|copyFile
parameter_list|(
name|File
name|src
parameter_list|,
name|File
name|dst
parameter_list|,
name|Integer
name|port
parameter_list|)
throws|throws
name|IOException
block|{
name|BufferedReader
name|in
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|src
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|out
init|=
operator|new
name|FileWriter
argument_list|(
name|dst
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|line
init|=
name|in
operator|.
name|readLine
argument_list|()
init|;
literal|null
operator|!=
name|line
condition|;
name|line
operator|=
name|in
operator|.
name|readLine
argument_list|()
control|)
block|{
if|if
condition|(
literal|null
operator|!=
name|port
condition|)
name|line
operator|=
name|line
operator|.
name|replace
argument_list|(
literal|"TEST_PORT"
argument_list|,
name|port
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|class|SolrInstance
specifier|private
specifier|static
class|class
name|SolrInstance
block|{
DECL|field|name
specifier|private
name|String
name|name
decl_stmt|;
DECL|field|testPort
specifier|private
name|Integer
name|testPort
decl_stmt|;
DECL|field|homeDir
specifier|private
name|File
name|homeDir
decl_stmt|;
DECL|field|confDir
specifier|private
name|File
name|confDir
decl_stmt|;
DECL|field|dataDir
specifier|private
name|File
name|dataDir
decl_stmt|;
comment|/**      * @param name used to pick new solr home dir, as well as which       *        "solrconfig-${name}.xml" file gets copied      *        to solrconfig.xml in new conf dir.      * @param testPort if not null, used as a replacement for      *        TEST_PORT in the cloned config files.      */
DECL|method|SolrInstance
specifier|public
name|SolrInstance
parameter_list|(
name|String
name|name
parameter_list|,
name|Integer
name|testPort
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|testPort
operator|=
name|testPort
expr_stmt|;
block|}
DECL|method|getHomeDir
specifier|public
name|String
name|getHomeDir
parameter_list|()
block|{
return|return
name|homeDir
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|getSchemaFile
specifier|public
name|String
name|getSchemaFile
parameter_list|()
block|{
return|return
name|CONF_DIR
operator|+
literal|"schema-replication1.xml"
return|;
block|}
DECL|method|getConfDir
specifier|public
name|String
name|getConfDir
parameter_list|()
block|{
return|return
name|confDir
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|getDataDir
specifier|public
name|String
name|getDataDir
parameter_list|()
block|{
return|return
name|dataDir
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|getSolrConfigFile
specifier|public
name|String
name|getSolrConfigFile
parameter_list|()
block|{
return|return
name|CONF_DIR
operator|+
literal|"solrconfig-"
operator|+
name|name
operator|+
literal|".xml"
return|;
block|}
comment|/** If it needs to change */
DECL|method|setTestPort
specifier|public
name|void
name|setTestPort
parameter_list|(
name|Integer
name|testPort
parameter_list|)
block|{
name|this
operator|.
name|testPort
operator|=
name|testPort
expr_stmt|;
block|}
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.test.sys.prop1"
argument_list|,
literal|"propone"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"solr.test.sys.prop2"
argument_list|,
literal|"proptwo"
argument_list|)
expr_stmt|;
name|File
name|home
init|=
operator|new
name|File
argument_list|(
name|TEMP_DIR
argument_list|,
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"-"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|homeDir
operator|=
operator|new
name|File
argument_list|(
name|home
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|dataDir
operator|=
operator|new
name|File
argument_list|(
name|homeDir
argument_list|,
literal|"data"
argument_list|)
expr_stmt|;
name|confDir
operator|=
operator|new
name|File
argument_list|(
name|homeDir
argument_list|,
literal|"conf"
argument_list|)
expr_stmt|;
name|homeDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|dataDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|confDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|copyConfigFile
argument_list|(
name|getSolrConfigFile
argument_list|()
argument_list|,
literal|"solrconfig.xml"
argument_list|)
expr_stmt|;
name|copyConfigFile
argument_list|(
name|getSchemaFile
argument_list|()
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
block|}
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|AbstractSolrTestCase
operator|.
name|recurseDelete
argument_list|(
name|homeDir
argument_list|)
expr_stmt|;
block|}
DECL|method|copyConfigFile
specifier|public
name|void
name|copyConfigFile
parameter_list|(
name|String
name|srcFile
parameter_list|,
name|String
name|destFile
parameter_list|)
throws|throws
name|IOException
block|{
name|copyFile
argument_list|(
name|getFile
argument_list|(
name|srcFile
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|confDir
argument_list|,
name|destFile
argument_list|)
argument_list|,
name|testPort
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
