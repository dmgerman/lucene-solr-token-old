begin_unit
begin_package
DECL|package|org.apache.solr.handler.admin
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|AbstractSolrTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_comment
comment|/**  * Tests for SegmentsInfoRequestHandler. Plugin entry, returning data of created segment.  */
end_comment
begin_class
DECL|class|SegmentsInfoRequestHandlerTest
specifier|public
class|class
name|SegmentsInfoRequestHandlerTest
extends|extends
name|AbstractSolrTestCase
block|{
DECL|field|DOC_COUNT
specifier|private
specifier|static
specifier|final
name|int
name|DOC_COUNT
init|=
literal|5
decl_stmt|;
DECL|field|DEL_COUNT
specifier|private
specifier|static
specifier|final
name|int
name|DEL_COUNT
init|=
literal|1
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|beforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"enable.update.log"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|initCore
argument_list|(
literal|"solrconfig.xml"
argument_list|,
literal|"schema12.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
DECL|method|before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|DOC_COUNT
condition|;
name|i
operator|++
control|)
block|{
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"SOLR100"
operator|+
name|i
argument_list|,
literal|"name"
argument_list|,
literal|"Apache Solr:"
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|DEL_COUNT
condition|;
name|i
operator|++
control|)
block|{
name|assertU
argument_list|(
name|delI
argument_list|(
literal|"SOLR100"
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertU
argument_list|(
name|commit
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSegmentInfos
specifier|public
name|void
name|testSegmentInfos
parameter_list|()
block|{
name|assertQ
argument_list|(
literal|"No segments mentioned in result"
argument_list|,
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/admin/segments"
argument_list|)
argument_list|,
literal|"0<count(//lst[@name='segments']/lst)"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSegmentInfosData
specifier|public
name|void
name|testSegmentInfosData
parameter_list|()
block|{
name|assertQ
argument_list|(
literal|"No segments mentioned in result"
argument_list|,
name|req
argument_list|(
literal|"qt"
argument_list|,
literal|"/admin/segments"
argument_list|)
argument_list|,
comment|//#Document
name|DOC_COUNT
operator|+
literal|"=sum(//lst[@name='segments']/lst[*]/int[@name='size'])"
argument_list|,
comment|//#Deletes
name|DEL_COUNT
operator|+
literal|"=sum(//lst[@name='segments']/lst[*]/int[@name='delCount'])"
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
