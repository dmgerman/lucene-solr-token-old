begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.handler
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputDocument
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputField
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|ContentStreamBase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|loader
operator|.
name|JsonLoader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|SolrQueryResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|AddUpdateCommand
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|CommitUpdateCommand
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|DeleteUpdateCommand
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|processor
operator|.
name|BufferingRequestProcessor
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import
begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_class
DECL|class|JsonLoaderTest
specifier|public
class|class
name|JsonLoaderTest
extends|extends
name|SolrTestCaseJ4
block|{
annotation|@
name|BeforeClass
DECL|method|beforeTests
specifier|public
specifier|static
name|void
name|beforeTests
parameter_list|()
throws|throws
name|Exception
block|{
name|initCore
argument_list|(
literal|"solrconfig.xml"
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
block|}
DECL|field|input
specifier|static
name|String
name|input
init|=
operator|(
literal|"{\n"
operator|+
literal|"\n"
operator|+
literal|"'add': {\n"
operator|+
literal|"  'doc': {\n"
operator|+
literal|"    'bool': true,\n"
operator|+
literal|"    'f0': 'v0',\n"
operator|+
literal|"    'f2': {\n"
operator|+
literal|"      'boost': 2.3,\n"
operator|+
literal|"      'value': 'test'\n"
operator|+
literal|"    },\n"
operator|+
literal|"    'array': [ 'aaa', 'bbb' ],\n"
operator|+
literal|"    'boosted': {\n"
operator|+
literal|"      'boost': 6.7,\n"
operator|+
literal|"      'value': [ 'aaa', 'bbb' ]\n"
operator|+
literal|"    }\n"
operator|+
literal|"  }\n"
operator|+
literal|"},\n"
operator|+
literal|"'add': {\n"
operator|+
literal|"  'commitWithin': 1234,\n"
operator|+
literal|"  'overwrite': false,\n"
operator|+
literal|"  'boost': 3.45,\n"
operator|+
literal|"  'doc': {\n"
operator|+
literal|"    'f1': 'v1',\n"
operator|+
literal|"    'f1': 'v2',\n"
operator|+
literal|"    'f2': null\n"
operator|+
literal|"  }\n"
operator|+
literal|"},\n"
operator|+
literal|"\n"
operator|+
literal|"'commit': {},\n"
operator|+
literal|"'optimize': { 'waitSearcher':false, 'openSearcher':false },\n"
operator|+
literal|"\n"
operator|+
literal|"'delete': { 'id':'ID' },\n"
operator|+
literal|"'delete': { 'id':'ID', 'commitWithin':500 },\n"
operator|+
literal|"'delete': { 'query':'QUERY' },\n"
operator|+
literal|"'delete': { 'query':'QUERY', 'commitWithin':500 },\n"
operator|+
literal|"'rollback': {}\n"
operator|+
literal|"\n"
operator|+
literal|"}\n"
operator|+
literal|""
operator|)
operator|.
name|replace
argument_list|(
literal|'\''
argument_list|,
literal|'"'
argument_list|)
decl_stmt|;
DECL|method|testParsing
specifier|public
name|void
name|testParsing
parameter_list|()
throws|throws
name|Exception
block|{
name|SolrQueryRequest
name|req
init|=
name|req
argument_list|()
decl_stmt|;
name|SolrQueryResponse
name|rsp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|BufferingRequestProcessor
name|p
init|=
operator|new
name|BufferingRequestProcessor
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|JsonLoader
name|loader
init|=
operator|new
name|JsonLoader
argument_list|()
decl_stmt|;
name|loader
operator|.
name|load
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|,
operator|new
name|ContentStreamBase
operator|.
name|StringStream
argument_list|(
name|input
argument_list|)
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|p
operator|.
name|addCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|AddUpdateCommand
name|add
init|=
name|p
operator|.
name|addCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|d
init|=
name|add
operator|.
name|solrDoc
decl_stmt|;
name|SolrInputField
name|f
init|=
name|d
operator|.
name|getField
argument_list|(
literal|"boosted"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|6.7f
argument_list|,
name|f
operator|.
name|getBoost
argument_list|()
argument_list|,
literal|0.1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|f
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|//
name|add
operator|=
name|p
operator|.
name|addCommands
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|d
operator|=
name|add
operator|.
name|solrDoc
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"f1"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|f
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3.45f
argument_list|,
name|d
operator|.
name|getDocumentBoost
argument_list|()
argument_list|,
literal|0.001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|add
operator|.
name|overwrite
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|d
operator|.
name|getField
argument_list|(
literal|"f2"
argument_list|)
operator|.
name|getValueCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// parse the commit commands
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|p
operator|.
name|commitCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|CommitUpdateCommand
name|commit
init|=
name|p
operator|.
name|commitCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|commit
operator|.
name|optimize
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|commit
operator|.
name|waitSearcher
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|commit
operator|.
name|openSearcher
argument_list|)
expr_stmt|;
name|commit
operator|=
name|p
operator|.
name|commitCommands
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|commit
operator|.
name|optimize
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|commit
operator|.
name|waitSearcher
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|commit
operator|.
name|openSearcher
argument_list|)
expr_stmt|;
comment|// DELETE COMMANDS
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|p
operator|.
name|deleteCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|DeleteUpdateCommand
name|delete
init|=
name|p
operator|.
name|deleteCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|id
argument_list|,
literal|"ID"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|query
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|commitWithin
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|delete
operator|=
name|p
operator|.
name|deleteCommands
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|id
argument_list|,
literal|"ID"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|query
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|commitWithin
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|delete
operator|=
name|p
operator|.
name|deleteCommands
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|id
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|query
argument_list|,
literal|"QUERY"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|commitWithin
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|delete
operator|=
name|p
operator|.
name|deleteCommands
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|id
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|query
argument_list|,
literal|"QUERY"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|commitWithin
argument_list|,
literal|500
argument_list|)
expr_stmt|;
comment|// ROLLBACK COMMANDS
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|p
operator|.
name|rollbackCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|req
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testSimpleFormat
specifier|public
name|void
name|testSimpleFormat
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|str
init|=
literal|"[{'id':'1'},{'id':'2'}]"
operator|.
name|replace
argument_list|(
literal|'\''
argument_list|,
literal|'"'
argument_list|)
decl_stmt|;
name|SolrQueryRequest
name|req
init|=
name|req
argument_list|(
literal|"commitWithin"
argument_list|,
literal|"100"
argument_list|,
literal|"overwrite"
argument_list|,
literal|"false"
argument_list|)
decl_stmt|;
name|SolrQueryResponse
name|rsp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|BufferingRequestProcessor
name|p
init|=
operator|new
name|BufferingRequestProcessor
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|JsonLoader
name|loader
init|=
operator|new
name|JsonLoader
argument_list|()
decl_stmt|;
name|loader
operator|.
name|load
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|,
operator|new
name|ContentStreamBase
operator|.
name|StringStream
argument_list|(
name|str
argument_list|)
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|p
operator|.
name|addCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|AddUpdateCommand
name|add
init|=
name|p
operator|.
name|addCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|d
init|=
name|add
operator|.
name|solrDoc
decl_stmt|;
name|SolrInputField
name|f
init|=
name|d
operator|.
name|getField
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|add
operator|.
name|commitWithin
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|add
operator|.
name|overwrite
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|add
operator|=
name|p
operator|.
name|addCommands
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|d
operator|=
name|add
operator|.
name|solrDoc
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"id"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|add
operator|.
name|commitWithin
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|add
operator|.
name|overwrite
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|req
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testSimpleFormatInAdd
specifier|public
name|void
name|testSimpleFormatInAdd
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|str
init|=
literal|"{'add':[{'id':'1'},{'id':'2'}]}"
operator|.
name|replace
argument_list|(
literal|'\''
argument_list|,
literal|'"'
argument_list|)
decl_stmt|;
name|SolrQueryRequest
name|req
init|=
name|req
argument_list|()
decl_stmt|;
name|SolrQueryResponse
name|rsp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|BufferingRequestProcessor
name|p
init|=
operator|new
name|BufferingRequestProcessor
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|JsonLoader
name|loader
init|=
operator|new
name|JsonLoader
argument_list|()
decl_stmt|;
name|loader
operator|.
name|load
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|,
operator|new
name|ContentStreamBase
operator|.
name|StringStream
argument_list|(
name|str
argument_list|)
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|p
operator|.
name|addCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|AddUpdateCommand
name|add
init|=
name|p
operator|.
name|addCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|d
init|=
name|add
operator|.
name|solrDoc
decl_stmt|;
name|SolrInputField
name|f
init|=
name|d
operator|.
name|getField
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|add
operator|.
name|commitWithin
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|add
operator|.
name|overwrite
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|add
operator|=
name|p
operator|.
name|addCommands
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|d
operator|=
name|add
operator|.
name|solrDoc
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"id"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2"
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|add
operator|.
name|commitWithin
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|add
operator|.
name|overwrite
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|req
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|testExtendedFieldValues
specifier|public
name|void
name|testExtendedFieldValues
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|str
init|=
literal|"[{'id':'1', 'val_s':{'add':'foo'}}]"
operator|.
name|replace
argument_list|(
literal|'\''
argument_list|,
literal|'"'
argument_list|)
decl_stmt|;
name|SolrQueryRequest
name|req
init|=
name|req
argument_list|()
decl_stmt|;
name|SolrQueryResponse
name|rsp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|BufferingRequestProcessor
name|p
init|=
operator|new
name|BufferingRequestProcessor
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|JsonLoader
name|loader
init|=
operator|new
name|JsonLoader
argument_list|()
decl_stmt|;
name|loader
operator|.
name|load
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|,
operator|new
name|ContentStreamBase
operator|.
name|StringStream
argument_list|(
name|str
argument_list|)
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|p
operator|.
name|addCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|AddUpdateCommand
name|add
init|=
name|p
operator|.
name|addCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|add
operator|.
name|commitWithin
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|add
operator|.
name|overwrite
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|SolrInputDocument
name|d
init|=
name|add
operator|.
name|solrDoc
decl_stmt|;
name|SolrInputField
name|f
init|=
name|d
operator|.
name|getField
argument_list|(
literal|"id"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"val_s"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|map
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|f
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|map
operator|.
name|get
argument_list|(
literal|"add"
argument_list|)
argument_list|)
expr_stmt|;
name|req
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNullValues
specifier|public
name|void
name|testNullValues
parameter_list|()
throws|throws
name|Exception
block|{
name|updateJ
argument_list|(
name|json
argument_list|(
literal|"[{'id':'10','foo_s':null,'foo2_s':['hi',null,'there']}]"
argument_list|)
argument_list|,
name|params
argument_list|(
literal|"commit"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"id:10"
argument_list|,
literal|"fl"
argument_list|,
literal|"foo_s,foo2_s"
argument_list|)
argument_list|,
literal|"/response/docs/[0]=={'foo2_s':['hi','there']}"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBooleanValuesInAdd
specifier|public
name|void
name|testBooleanValuesInAdd
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|str
init|=
literal|"{'add':[{'id':'1','b1':true,'b2':false,'b3':[false,true]}]}"
operator|.
name|replace
argument_list|(
literal|'\''
argument_list|,
literal|'"'
argument_list|)
decl_stmt|;
name|SolrQueryRequest
name|req
init|=
name|req
argument_list|()
decl_stmt|;
name|SolrQueryResponse
name|rsp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|BufferingRequestProcessor
name|p
init|=
operator|new
name|BufferingRequestProcessor
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|JsonLoader
name|loader
init|=
operator|new
name|JsonLoader
argument_list|()
decl_stmt|;
name|loader
operator|.
name|load
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|,
operator|new
name|ContentStreamBase
operator|.
name|StringStream
argument_list|(
name|str
argument_list|)
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|p
operator|.
name|addCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|AddUpdateCommand
name|add
init|=
name|p
operator|.
name|addCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|d
init|=
name|add
operator|.
name|solrDoc
decl_stmt|;
name|SolrInputField
name|f
init|=
name|d
operator|.
name|getField
argument_list|(
literal|"b1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"b2"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"b3"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|,
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|,
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|req
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIntegerValuesInAdd
specifier|public
name|void
name|testIntegerValuesInAdd
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|str
init|=
literal|"{'add':[{'id':'1','i1':256,'i2':-5123456789,'i3':[0,1]}]}"
operator|.
name|replace
argument_list|(
literal|'\''
argument_list|,
literal|'"'
argument_list|)
decl_stmt|;
name|SolrQueryRequest
name|req
init|=
name|req
argument_list|()
decl_stmt|;
name|SolrQueryResponse
name|rsp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|BufferingRequestProcessor
name|p
init|=
operator|new
name|BufferingRequestProcessor
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|JsonLoader
name|loader
init|=
operator|new
name|JsonLoader
argument_list|()
decl_stmt|;
name|loader
operator|.
name|load
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|,
operator|new
name|ContentStreamBase
operator|.
name|StringStream
argument_list|(
name|str
argument_list|)
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|p
operator|.
name|addCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|AddUpdateCommand
name|add
init|=
name|p
operator|.
name|addCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|d
init|=
name|add
operator|.
name|solrDoc
decl_stmt|;
name|SolrInputField
name|f
init|=
name|d
operator|.
name|getField
argument_list|(
literal|"i1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|256L
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"i2"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|5123456789L
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"i3"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|req
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDecimalValuesInAdd
specifier|public
name|void
name|testDecimalValuesInAdd
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|str
init|=
literal|"{'add':[{'id':'1','d1':256.78,'d2':-5123456789.0,'d3':0.0,'d3':1.0,'d4':1.7E-10}]}"
operator|.
name|replace
argument_list|(
literal|'\''
argument_list|,
literal|'"'
argument_list|)
decl_stmt|;
name|SolrQueryRequest
name|req
init|=
name|req
argument_list|()
decl_stmt|;
name|SolrQueryResponse
name|rsp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|BufferingRequestProcessor
name|p
init|=
operator|new
name|BufferingRequestProcessor
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|JsonLoader
name|loader
init|=
operator|new
name|JsonLoader
argument_list|()
decl_stmt|;
name|loader
operator|.
name|load
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|,
operator|new
name|ContentStreamBase
operator|.
name|StringStream
argument_list|(
name|str
argument_list|)
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|p
operator|.
name|addCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|AddUpdateCommand
name|add
init|=
name|p
operator|.
name|addCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|d
init|=
name|add
operator|.
name|solrDoc
decl_stmt|;
name|SolrInputField
name|f
init|=
name|d
operator|.
name|getField
argument_list|(
literal|"d1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|256.78
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"d2"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|5123456789.0
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"d3"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|contains
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|contains
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"d4"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.7E
operator|-
literal|10
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|req
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBigDecimalValuesInAdd
specifier|public
name|void
name|testBigDecimalValuesInAdd
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|str
init|=
operator|(
literal|"{'add':[{'id':'1','bd1':0.12345678901234567890123456789012345,"
operator|+
literal|"'bd2':12345678901234567890.12345678901234567890,'bd3':0.012345678901234567890123456789012345,"
operator|+
literal|"'bd3':123456789012345678900.012345678901234567890}]}"
operator|)
operator|.
name|replace
argument_list|(
literal|'\''
argument_list|,
literal|'"'
argument_list|)
decl_stmt|;
name|SolrQueryRequest
name|req
init|=
name|req
argument_list|()
decl_stmt|;
name|SolrQueryResponse
name|rsp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|BufferingRequestProcessor
name|p
init|=
operator|new
name|BufferingRequestProcessor
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|JsonLoader
name|loader
init|=
operator|new
name|JsonLoader
argument_list|()
decl_stmt|;
name|loader
operator|.
name|load
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|,
operator|new
name|ContentStreamBase
operator|.
name|StringStream
argument_list|(
name|str
argument_list|)
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|p
operator|.
name|addCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|AddUpdateCommand
name|add
init|=
name|p
operator|.
name|addCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|d
init|=
name|add
operator|.
name|solrDoc
decl_stmt|;
name|SolrInputField
name|f
init|=
name|d
operator|.
name|getField
argument_list|(
literal|"bd1"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|f
operator|.
name|getValue
argument_list|()
operator|instanceof
name|String
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0.12345678901234567890123456789012345"
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"bd2"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|f
operator|.
name|getValue
argument_list|()
operator|instanceof
name|String
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"12345678901234567890.12345678901234567890"
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"bd3"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|contains
argument_list|(
literal|"0.012345678901234567890123456789012345"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|contains
argument_list|(
literal|"123456789012345678900.012345678901234567890"
argument_list|)
argument_list|)
expr_stmt|;
name|req
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBigIntegerValuesInAdd
specifier|public
name|void
name|testBigIntegerValuesInAdd
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|str
init|=
operator|(
literal|"{'add':[{'id':'1','bi1':123456789012345678901,'bi2':1098765432109876543210,"
operator|+
literal|"'bi3':[1234567890123456789012,10987654321098765432109]}]}"
operator|)
operator|.
name|replace
argument_list|(
literal|'\''
argument_list|,
literal|'"'
argument_list|)
decl_stmt|;
name|SolrQueryRequest
name|req
init|=
name|req
argument_list|()
decl_stmt|;
name|SolrQueryResponse
name|rsp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|BufferingRequestProcessor
name|p
init|=
operator|new
name|BufferingRequestProcessor
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|JsonLoader
name|loader
init|=
operator|new
name|JsonLoader
argument_list|()
decl_stmt|;
name|loader
operator|.
name|load
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|,
operator|new
name|ContentStreamBase
operator|.
name|StringStream
argument_list|(
name|str
argument_list|)
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|p
operator|.
name|addCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|AddUpdateCommand
name|add
init|=
name|p
operator|.
name|addCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|SolrInputDocument
name|d
init|=
name|add
operator|.
name|solrDoc
decl_stmt|;
name|SolrInputField
name|f
init|=
name|d
operator|.
name|getField
argument_list|(
literal|"bi1"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|f
operator|.
name|getValue
argument_list|()
operator|instanceof
name|String
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"123456789012345678901"
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"bi2"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|f
operator|.
name|getValue
argument_list|()
operator|instanceof
name|String
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1098765432109876543210"
argument_list|,
name|f
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|=
name|d
operator|.
name|getField
argument_list|(
literal|"bi3"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|contains
argument_list|(
literal|"1234567890123456789012"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
operator|(
name|List
operator|)
name|f
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|contains
argument_list|(
literal|"10987654321098765432109"
argument_list|)
argument_list|)
expr_stmt|;
name|req
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddNonStringValues
specifier|public
name|void
name|testAddNonStringValues
parameter_list|()
throws|throws
name|Exception
block|{
comment|// BigInteger and BigDecimal should be typed as strings, since there is no direct support for them
name|updateJ
argument_list|(
name|json
argument_list|(
literal|"[{'id':'1','boolean_b':false,'long_l':19,'double_d':18.6,'big_integer_s':12345678901234567890,"
operator|+
literal|"      'big_decimal_s':0.1234567890123456789012345}]"
argument_list|)
argument_list|,
name|params
argument_list|(
literal|"commit"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"id:1"
argument_list|,
literal|"fl"
argument_list|,
literal|"boolean_b,long_l,double_d,big_integer_s,big_decimal_s"
argument_list|)
argument_list|,
literal|"/response/docs/[0]=={'boolean_b':[false],'long_l':[19],'double_d':[18.6],"
operator|+
literal|"'big_integer_s':['12345678901234567890'],"
operator|+
literal|"'big_decimal_s':['0.1234567890123456789012345']}]}"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAddBigIntegerValueToTrieField
specifier|public
name|void
name|testAddBigIntegerValueToTrieField
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Adding a BigInteger to a long field should fail
comment|// BigInteger.longValue() returns only the low-order 64 bits.
try|try
block|{
name|updateJ
argument_list|(
name|json
argument_list|(
literal|"[{'id':'1','big_integer_tl':12345678901234567890}]"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"A BigInteger value should overflow a long field"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|e
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|NumberFormatException
operator|)
condition|)
block|{
throw|throw
name|e
throw|;
block|}
block|}
comment|// Adding a BigInteger to an integer field should fail
comment|// BigInteger.intValue() returns only the low-order 32 bits.
try|try
block|{
name|updateJ
argument_list|(
name|json
argument_list|(
literal|"[{'id':'1','big_integer_ti':12345678901234567890}]"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"A BigInteger value should overflow an integer field"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|e
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|NumberFormatException
operator|)
condition|)
block|{
throw|throw
name|e
throw|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|testAddBigDecimalValueToTrieField
specifier|public
name|void
name|testAddBigDecimalValueToTrieField
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Adding a BigDecimal to a double field should succeed by reducing precision
name|updateJ
argument_list|(
name|json
argument_list|(
literal|"[{'id':'1','big_decimal_td':100000000000000000000000000001234567890.0987654321}]"
argument_list|)
argument_list|,
name|params
argument_list|(
literal|"commit"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"id:1"
argument_list|,
literal|"fl"
argument_list|,
literal|"big_decimal_td"
argument_list|)
argument_list|,
literal|"/response/docs/[0]=={'big_decimal_td':[1.0E38]}"
argument_list|)
expr_stmt|;
comment|// Adding a BigDecimal to a float field should succeed by reducing precision
name|updateJ
argument_list|(
name|json
argument_list|(
literal|"[{'id':'2','big_decimal_tf':100000000000000000000000000001234567890.0987654321}]"
argument_list|)
argument_list|,
name|params
argument_list|(
literal|"commit"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
expr_stmt|;
name|assertJQ
argument_list|(
name|req
argument_list|(
literal|"q"
argument_list|,
literal|"id:2"
argument_list|,
literal|"fl"
argument_list|,
literal|"big_decimal_tf"
argument_list|)
argument_list|,
literal|"/response/docs/[0]=={'big_decimal_tf':[1.0E38]}"
argument_list|)
expr_stmt|;
block|}
comment|// The delete syntax was both extended for simplification in 4.0
annotation|@
name|Test
DECL|method|testDeleteSyntax
specifier|public
name|void
name|testDeleteSyntax
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|str
init|=
literal|"{'delete':10"
operator|+
literal|"\n ,'delete':'20'"
operator|+
literal|"\n ,'delete':['30','40']"
operator|+
literal|"\n ,'delete':{'id':50, '_version_':12345}"
operator|+
literal|"\n ,'delete':[{'id':60, '_version_':67890}, {'id':70, '_version_':77777}, {'query':'id:80', '_version_':88888}]"
operator|+
literal|"\n}\n"
decl_stmt|;
name|str
operator|=
name|str
operator|.
name|replace
argument_list|(
literal|'\''
argument_list|,
literal|'"'
argument_list|)
expr_stmt|;
name|SolrQueryRequest
name|req
init|=
name|req
argument_list|()
decl_stmt|;
name|SolrQueryResponse
name|rsp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|BufferingRequestProcessor
name|p
init|=
operator|new
name|BufferingRequestProcessor
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|JsonLoader
name|loader
init|=
operator|new
name|JsonLoader
argument_list|()
decl_stmt|;
name|loader
operator|.
name|load
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|,
operator|new
name|ContentStreamBase
operator|.
name|StringStream
argument_list|(
name|str
argument_list|)
argument_list|,
name|p
argument_list|)
expr_stmt|;
comment|// DELETE COMMANDS
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|p
operator|.
name|deleteCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|DeleteUpdateCommand
name|delete
init|=
name|p
operator|.
name|deleteCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|id
argument_list|,
literal|"10"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|query
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|commitWithin
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|delete
operator|=
name|p
operator|.
name|deleteCommands
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|id
argument_list|,
literal|"20"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|query
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|commitWithin
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|delete
operator|=
name|p
operator|.
name|deleteCommands
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|id
argument_list|,
literal|"30"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|query
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|commitWithin
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|delete
operator|=
name|p
operator|.
name|deleteCommands
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|id
argument_list|,
literal|"40"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|query
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|commitWithin
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|delete
operator|=
name|p
operator|.
name|deleteCommands
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|id
argument_list|,
literal|"50"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|query
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|getVersion
argument_list|()
argument_list|,
literal|12345L
argument_list|)
expr_stmt|;
name|delete
operator|=
name|p
operator|.
name|deleteCommands
operator|.
name|get
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|id
argument_list|,
literal|"60"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|query
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|getVersion
argument_list|()
argument_list|,
literal|67890L
argument_list|)
expr_stmt|;
name|delete
operator|=
name|p
operator|.
name|deleteCommands
operator|.
name|get
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|id
argument_list|,
literal|"70"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|query
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|getVersion
argument_list|()
argument_list|,
literal|77777L
argument_list|)
expr_stmt|;
name|delete
operator|=
name|p
operator|.
name|deleteCommands
operator|.
name|get
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|id
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|query
argument_list|,
literal|"id:80"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|delete
operator|.
name|getVersion
argument_list|()
argument_list|,
literal|88888L
argument_list|)
expr_stmt|;
name|req
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class
end_unit
