begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.handler.admin
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|CommonParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|ContentStream
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|ContentStreamBase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|LocalSolrQueryRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_class
DECL|class|MBeansHandlerTest
specifier|public
class|class
name|MBeansHandlerTest
extends|extends
name|SolrTestCaseJ4
block|{
annotation|@
name|BeforeClass
DECL|method|beforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|initCore
argument_list|(
literal|"solrconfig.xml"
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDiff
specifier|public
name|void
name|testDiff
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
name|h
operator|.
name|query
argument_list|(
name|req
argument_list|(
name|CommonParams
operator|.
name|QT
argument_list|,
literal|"/admin/mbeans"
argument_list|,
literal|"stats"
argument_list|,
literal|"true"
argument_list|,
name|CommonParams
operator|.
name|WT
argument_list|,
literal|"xml"
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ContentStream
argument_list|>
name|streams
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|streams
operator|.
name|add
argument_list|(
operator|new
name|ContentStreamBase
operator|.
name|StringStream
argument_list|(
name|xml
argument_list|)
argument_list|)
expr_stmt|;
name|LocalSolrQueryRequest
name|req
init|=
name|lrf
operator|.
name|makeRequest
argument_list|(
name|CommonParams
operator|.
name|QT
argument_list|,
literal|"/admin/mbeans"
argument_list|,
literal|"stats"
argument_list|,
literal|"true"
argument_list|,
name|CommonParams
operator|.
name|WT
argument_list|,
literal|"xml"
argument_list|,
literal|"diff"
argument_list|,
literal|"true"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setContentStreams
argument_list|(
name|streams
argument_list|)
expr_stmt|;
name|xml
operator|=
name|h
operator|.
name|query
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|NamedList
argument_list|<
name|NamedList
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
argument_list|>
name|diff
init|=
name|SolrInfoMBeanHandler
operator|.
name|fromXML
argument_list|(
name|xml
argument_list|)
decl_stmt|;
comment|// The stats bean for SolrInfoMBeanHandler
name|NamedList
name|stats
init|=
operator|(
name|NamedList
operator|)
name|diff
operator|.
name|get
argument_list|(
literal|"QUERYHANDLER"
argument_list|)
operator|.
name|get
argument_list|(
literal|"/admin/mbeans"
argument_list|)
operator|.
name|get
argument_list|(
literal|"stats"
argument_list|)
decl_stmt|;
comment|//System.out.println("stats:"+stats);
name|assertEquals
argument_list|(
literal|"Was: 1, Now: 2, Delta: 1"
argument_list|,
name|stats
operator|.
name|get
argument_list|(
literal|"requests"
argument_list|)
argument_list|)
expr_stmt|;
name|xml
operator|=
name|h
operator|.
name|query
argument_list|(
name|req
argument_list|(
name|CommonParams
operator|.
name|QT
argument_list|,
literal|"/admin/mbeans"
argument_list|,
literal|"stats"
argument_list|,
literal|"true"
argument_list|,
literal|"key"
argument_list|,
literal|"org.apache.solr.handler.admin.CollectionsHandler"
argument_list|)
argument_list|)
expr_stmt|;
name|NamedList
argument_list|<
name|NamedList
argument_list|<
name|NamedList
argument_list|<
name|Object
argument_list|>
argument_list|>
argument_list|>
name|nl
init|=
name|SolrInfoMBeanHandler
operator|.
name|fromXML
argument_list|(
name|xml
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|nl
operator|.
name|get
argument_list|(
literal|"QUERYHANDLER"
argument_list|)
operator|.
name|get
argument_list|(
literal|"org.apache.solr.handler.admin.CollectionsHandler"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
