begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.handler.admin
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|CoreContainer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|SolrQueryResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_class
DECL|class|InfoHandlerTest
specifier|public
class|class
name|InfoHandlerTest
extends|extends
name|SolrTestCaseJ4
block|{
annotation|@
name|BeforeClass
DECL|method|beforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|initCore
argument_list|(
literal|"solrconfig.xml"
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCoreAdminHandler
specifier|public
name|void
name|testCoreAdminHandler
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|CoreContainer
name|cores
init|=
name|h
operator|.
name|getCoreContainer
argument_list|()
decl_stmt|;
name|InfoHandler
name|infoHandler
init|=
name|cores
operator|.
name|getInfoHandler
argument_list|()
decl_stmt|;
name|SolrQueryResponse
name|rsp
init|=
name|handleRequest
argument_list|(
name|infoHandler
argument_list|,
literal|"properties"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|rsp
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|"system.properties"
argument_list|)
argument_list|)
expr_stmt|;
name|rsp
operator|=
name|handleRequest
argument_list|(
name|infoHandler
argument_list|,
literal|"threads"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|rsp
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|"system"
argument_list|)
argument_list|)
expr_stmt|;
name|rsp
operator|=
name|handleRequest
argument_list|(
name|infoHandler
argument_list|,
literal|"logging"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|rsp
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|"watcher"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|rsp
operator|=
name|handleRequest
argument_list|(
name|infoHandler
argument_list|,
literal|"info"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have failed with not found"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|404
argument_list|,
name|e
operator|.
name|code
argument_list|()
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|rsp
operator|=
name|handleRequest
argument_list|(
name|infoHandler
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have failed with not found"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|e
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|404
argument_list|,
name|e
operator|.
name|code
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testOverriddenHandlers
specifier|public
name|void
name|testOverriddenHandlers
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|CoreContainer
name|cores
init|=
name|h
operator|.
name|getCoreContainer
argument_list|()
decl_stmt|;
specifier|final
name|InfoHandler
name|infoHandler
init|=
operator|new
name|InfoHandler
argument_list|(
name|cores
argument_list|)
decl_stmt|;
name|infoHandler
operator|.
name|init
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|CountPropertiesRequestHandler
name|propHandler
init|=
operator|new
name|CountPropertiesRequestHandler
argument_list|()
decl_stmt|;
name|CountThreadDumpHandler
name|threadHandler
init|=
operator|new
name|CountThreadDumpHandler
argument_list|()
decl_stmt|;
name|CountLoggingHandler
name|loggingHandler
init|=
operator|new
name|CountLoggingHandler
argument_list|(
name|cores
argument_list|)
decl_stmt|;
name|CountSystemInfoHandler
name|systemInfoHandler
init|=
operator|new
name|CountSystemInfoHandler
argument_list|(
name|cores
argument_list|)
decl_stmt|;
comment|// set the request handlers
name|infoHandler
operator|.
name|setPropertiesHandler
argument_list|(
name|propHandler
argument_list|)
expr_stmt|;
name|infoHandler
operator|.
name|setThreadDumpHandler
argument_list|(
name|threadHandler
argument_list|)
expr_stmt|;
name|infoHandler
operator|.
name|setLoggingHandler
argument_list|(
name|loggingHandler
argument_list|)
expr_stmt|;
name|infoHandler
operator|.
name|setSystemInfoHandler
argument_list|(
name|systemInfoHandler
argument_list|)
expr_stmt|;
comment|// verify that the sets are reflected in the gets
name|assertEquals
argument_list|(
name|propHandler
argument_list|,
name|infoHandler
operator|.
name|getPropertiesHandler
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|threadHandler
argument_list|,
name|infoHandler
operator|.
name|getThreadDumpHandler
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|loggingHandler
argument_list|,
name|infoHandler
operator|.
name|getLoggingHandler
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|systemInfoHandler
argument_list|,
name|infoHandler
operator|.
name|getSystemInfoHandler
argument_list|()
argument_list|)
expr_stmt|;
comment|// call each handler and verify it was actually called
name|handleRequest
argument_list|(
name|infoHandler
argument_list|,
literal|"properties"
argument_list|)
expr_stmt|;
name|handleRequest
argument_list|(
name|infoHandler
argument_list|,
literal|"threads"
argument_list|)
expr_stmt|;
name|handleRequest
argument_list|(
name|infoHandler
argument_list|,
literal|"logging"
argument_list|)
expr_stmt|;
name|handleRequest
argument_list|(
name|infoHandler
argument_list|,
literal|"system"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|propHandler
operator|.
name|getRequestCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|threadHandler
operator|.
name|getRequestCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|loggingHandler
operator|.
name|getRequestCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|systemInfoHandler
operator|.
name|getRequestCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// derived request handlers that count the number of request body counts made
DECL|class|CountPropertiesRequestHandler
specifier|public
specifier|static
class|class
name|CountPropertiesRequestHandler
extends|extends
name|PropertiesRequestHandler
block|{
DECL|field|requestCount
specifier|private
name|int
name|requestCount
init|=
literal|0
decl_stmt|;
annotation|@
name|Override
DECL|method|handleRequestBody
specifier|public
name|void
name|handleRequestBody
parameter_list|(
name|SolrQueryRequest
name|req
parameter_list|,
name|SolrQueryResponse
name|rsp
parameter_list|)
throws|throws
name|IOException
block|{
operator|++
name|requestCount
expr_stmt|;
name|super
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|)
expr_stmt|;
block|}
DECL|method|getRequestCount
specifier|public
name|int
name|getRequestCount
parameter_list|()
block|{
return|return
name|requestCount
return|;
block|}
block|}
DECL|class|CountThreadDumpHandler
specifier|public
specifier|static
class|class
name|CountThreadDumpHandler
extends|extends
name|ThreadDumpHandler
block|{
DECL|field|requestCount
specifier|private
name|int
name|requestCount
init|=
literal|0
decl_stmt|;
annotation|@
name|Override
DECL|method|handleRequestBody
specifier|public
name|void
name|handleRequestBody
parameter_list|(
name|SolrQueryRequest
name|req
parameter_list|,
name|SolrQueryResponse
name|rsp
parameter_list|)
throws|throws
name|IOException
block|{
operator|++
name|requestCount
expr_stmt|;
name|super
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|)
expr_stmt|;
block|}
DECL|method|getRequestCount
specifier|public
name|int
name|getRequestCount
parameter_list|()
block|{
return|return
name|requestCount
return|;
block|}
block|}
DECL|class|CountLoggingHandler
specifier|public
specifier|static
class|class
name|CountLoggingHandler
extends|extends
name|LoggingHandler
block|{
DECL|field|requestCount
specifier|private
name|int
name|requestCount
init|=
literal|0
decl_stmt|;
DECL|method|CountLoggingHandler
name|CountLoggingHandler
parameter_list|(
name|CoreContainer
name|cores
parameter_list|)
block|{
name|super
argument_list|(
name|cores
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|handleRequestBody
specifier|public
name|void
name|handleRequestBody
parameter_list|(
name|SolrQueryRequest
name|req
parameter_list|,
name|SolrQueryResponse
name|rsp
parameter_list|)
throws|throws
name|Exception
block|{
operator|++
name|requestCount
expr_stmt|;
name|super
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|)
expr_stmt|;
block|}
DECL|method|getRequestCount
specifier|public
name|int
name|getRequestCount
parameter_list|()
block|{
return|return
name|requestCount
return|;
block|}
block|}
DECL|class|CountSystemInfoHandler
specifier|public
specifier|static
class|class
name|CountSystemInfoHandler
extends|extends
name|SystemInfoHandler
block|{
DECL|field|requestCount
specifier|private
name|int
name|requestCount
init|=
literal|0
decl_stmt|;
DECL|method|CountSystemInfoHandler
name|CountSystemInfoHandler
parameter_list|(
name|CoreContainer
name|cores
parameter_list|)
block|{
name|super
argument_list|(
name|cores
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|handleRequestBody
specifier|public
name|void
name|handleRequestBody
parameter_list|(
name|SolrQueryRequest
name|req
parameter_list|,
name|SolrQueryResponse
name|rsp
parameter_list|)
throws|throws
name|Exception
block|{
operator|++
name|requestCount
expr_stmt|;
name|super
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|)
expr_stmt|;
block|}
DECL|method|getRequestCount
specifier|public
name|int
name|getRequestCount
parameter_list|()
block|{
return|return
name|requestCount
return|;
block|}
block|}
DECL|method|handleRequest
specifier|private
name|SolrQueryResponse
name|handleRequest
parameter_list|(
name|InfoHandler
name|infoHandler
parameter_list|,
name|String
name|path
parameter_list|)
throws|throws
name|Exception
block|{
name|SolrQueryResponse
name|rsp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|SolrQueryRequest
name|req
init|=
name|req
argument_list|()
decl_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"path"
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|infoHandler
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|)
expr_stmt|;
return|return
name|rsp
return|;
block|}
block|}
end_class
end_unit
