begin_unit
begin_package
DECL|package|org.apache.solr.handler
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpGet
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|BasicResponseHandler
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|HttpSolrClient
import|;
end_import
begin_class
DECL|class|CheckBackupStatus
specifier|public
class|class
name|CheckBackupStatus
extends|extends
name|SolrTestCaseJ4
block|{
DECL|field|response
name|String
name|response
init|=
literal|null
decl_stmt|;
DECL|field|success
specifier|public
name|boolean
name|success
init|=
literal|false
decl_stmt|;
DECL|field|backupTimestamp
name|String
name|backupTimestamp
init|=
literal|null
decl_stmt|;
DECL|field|lastBackupTimestamp
specifier|final
name|String
name|lastBackupTimestamp
decl_stmt|;
DECL|field|p
specifier|final
name|Pattern
name|p
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"<str name=\"snapshotCompletedAt\">(.*?)</str>"
argument_list|)
decl_stmt|;
DECL|field|pException
specifier|final
name|Pattern
name|pException
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"<str name=\"snapShootException\">(.*?)</str>"
argument_list|)
decl_stmt|;
DECL|field|client
specifier|final
name|HttpSolrClient
name|client
decl_stmt|;
DECL|method|CheckBackupStatus
specifier|public
name|CheckBackupStatus
parameter_list|(
specifier|final
name|HttpSolrClient
name|client
parameter_list|,
name|String
name|lastBackupTimestamp
parameter_list|)
block|{
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
name|this
operator|.
name|lastBackupTimestamp
operator|=
name|lastBackupTimestamp
expr_stmt|;
block|}
DECL|method|CheckBackupStatus
specifier|public
name|CheckBackupStatus
parameter_list|(
specifier|final
name|HttpSolrClient
name|client
parameter_list|)
block|{
name|this
argument_list|(
name|client
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|fetchStatus
specifier|public
name|void
name|fetchStatus
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|masterUrl
init|=
name|client
operator|.
name|getBaseURL
argument_list|()
operator|+
literal|"/replication?command="
operator|+
name|ReplicationHandler
operator|.
name|CMD_DETAILS
decl_stmt|;
name|response
operator|=
name|client
operator|.
name|getHttpClient
argument_list|()
operator|.
name|execute
argument_list|(
operator|new
name|HttpGet
argument_list|(
name|masterUrl
argument_list|)
argument_list|,
operator|new
name|BasicResponseHandler
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|pException
operator|.
name|matcher
argument_list|(
name|response
argument_list|)
operator|.
name|find
argument_list|()
condition|)
block|{
name|fail
argument_list|(
literal|"Failed to create backup"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|response
operator|.
name|contains
argument_list|(
literal|"<str name=\"status\">success</str>"
argument_list|)
condition|)
block|{
name|Matcher
name|m
init|=
name|p
operator|.
name|matcher
argument_list|(
name|response
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|m
operator|.
name|find
argument_list|()
condition|)
block|{
name|fail
argument_list|(
literal|"could not find the completed timestamp in response."
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|lastBackupTimestamp
operator|!=
literal|null
condition|)
block|{
name|backupTimestamp
operator|=
name|m
operator|.
name|group
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|backupTimestamp
operator|.
name|equals
argument_list|(
name|lastBackupTimestamp
argument_list|)
condition|)
block|{
name|success
operator|=
literal|true
expr_stmt|;
block|}
block|}
else|else
block|{
name|success
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
block|}
end_class
end_unit
