begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.handler.component
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|component
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|embedded
operator|.
name|JettySolrRunner
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|CloudSolrClient
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|QueryRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|SolrPing
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|QueryResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|response
operator|.
name|SolrPingResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|cloud
operator|.
name|MiniSolrCloudCluster
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|SolrCore
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|SolrQueryResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_class
DECL|class|SearchHandlerTest
specifier|public
class|class
name|SearchHandlerTest
extends|extends
name|SolrTestCaseJ4
block|{
annotation|@
name|BeforeClass
DECL|method|beforeTests
specifier|public
specifier|static
name|void
name|beforeTests
parameter_list|()
throws|throws
name|Exception
block|{
name|initCore
argument_list|(
literal|"solrconfig.xml"
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
DECL|method|testInitialization
specifier|public
name|void
name|testInitialization
parameter_list|()
block|{
name|SolrCore
name|core
init|=
name|h
operator|.
name|getCore
argument_list|()
decl_stmt|;
comment|// Build an explicit list
comment|//-----------------------------------------------
name|List
argument_list|<
name|String
argument_list|>
name|names0
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|names0
operator|.
name|add
argument_list|(
name|MoreLikeThisComponent
operator|.
name|COMPONENT_NAME
argument_list|)
expr_stmt|;
name|NamedList
name|args
init|=
operator|new
name|NamedList
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
name|SearchHandler
operator|.
name|INIT_COMPONENTS
argument_list|,
name|names0
argument_list|)
expr_stmt|;
name|SearchHandler
name|handler
init|=
operator|new
name|SearchHandler
argument_list|()
decl_stmt|;
name|handler
operator|.
name|init
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|handler
operator|.
name|inform
argument_list|(
name|core
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|handler
operator|.
name|getComponents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|core
operator|.
name|getSearchComponent
argument_list|(
name|MoreLikeThisComponent
operator|.
name|COMPONENT_NAME
argument_list|)
argument_list|,
name|handler
operator|.
name|getComponents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Build an explicit list that includes the debug comp.
comment|//-----------------------------------------------
name|names0
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|names0
operator|.
name|add
argument_list|(
name|FacetComponent
operator|.
name|COMPONENT_NAME
argument_list|)
expr_stmt|;
name|names0
operator|.
name|add
argument_list|(
name|DebugComponent
operator|.
name|COMPONENT_NAME
argument_list|)
expr_stmt|;
name|names0
operator|.
name|add
argument_list|(
name|MoreLikeThisComponent
operator|.
name|COMPONENT_NAME
argument_list|)
expr_stmt|;
name|args
operator|=
operator|new
name|NamedList
argument_list|()
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|SearchHandler
operator|.
name|INIT_COMPONENTS
argument_list|,
name|names0
argument_list|)
expr_stmt|;
name|handler
operator|=
operator|new
name|SearchHandler
argument_list|()
expr_stmt|;
name|handler
operator|.
name|init
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|handler
operator|.
name|inform
argument_list|(
name|core
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|handler
operator|.
name|getComponents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|core
operator|.
name|getSearchComponent
argument_list|(
name|FacetComponent
operator|.
name|COMPONENT_NAME
argument_list|)
argument_list|,
name|handler
operator|.
name|getComponents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|core
operator|.
name|getSearchComponent
argument_list|(
name|DebugComponent
operator|.
name|COMPONENT_NAME
argument_list|)
argument_list|,
name|handler
operator|.
name|getComponents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|core
operator|.
name|getSearchComponent
argument_list|(
name|MoreLikeThisComponent
operator|.
name|COMPONENT_NAME
argument_list|)
argument_list|,
name|handler
operator|.
name|getComponents
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// First/Last list
comment|//-----------------------------------------------
name|names0
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|names0
operator|.
name|add
argument_list|(
name|MoreLikeThisComponent
operator|.
name|COMPONENT_NAME
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|names1
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|names1
operator|.
name|add
argument_list|(
name|FacetComponent
operator|.
name|COMPONENT_NAME
argument_list|)
expr_stmt|;
name|args
operator|=
operator|new
name|NamedList
argument_list|()
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|SearchHandler
operator|.
name|INIT_FIRST_COMPONENTS
argument_list|,
name|names0
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|SearchHandler
operator|.
name|INIT_LAST_COMPONENTS
argument_list|,
name|names1
argument_list|)
expr_stmt|;
name|handler
operator|=
operator|new
name|SearchHandler
argument_list|()
expr_stmt|;
name|handler
operator|.
name|init
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|handler
operator|.
name|inform
argument_list|(
name|core
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|SearchComponent
argument_list|>
name|comps
init|=
name|handler
operator|.
name|getComponents
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
operator|+
name|handler
operator|.
name|getDefaultComponents
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|comps
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|core
operator|.
name|getSearchComponent
argument_list|(
name|MoreLikeThisComponent
operator|.
name|COMPONENT_NAME
argument_list|)
argument_list|,
name|comps
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|core
operator|.
name|getSearchComponent
argument_list|(
name|FacetComponent
operator|.
name|COMPONENT_NAME
argument_list|)
argument_list|,
name|comps
operator|.
name|get
argument_list|(
name|comps
operator|.
name|size
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|//Debug component is always last in this case
name|assertEquals
argument_list|(
name|core
operator|.
name|getSearchComponent
argument_list|(
name|DebugComponent
operator|.
name|COMPONENT_NAME
argument_list|)
argument_list|,
name|comps
operator|.
name|get
argument_list|(
name|comps
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testZkConnected
specifier|public
name|void
name|testZkConnected
parameter_list|()
throws|throws
name|Exception
block|{
name|MiniSolrCloudCluster
name|miniCluster
init|=
operator|new
name|MiniSolrCloudCluster
argument_list|(
literal|5
argument_list|,
name|createTempDir
argument_list|()
argument_list|,
name|buildJettyConfig
argument_list|(
literal|"/solr"
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|CloudSolrClient
name|cloudSolrClient
init|=
name|miniCluster
operator|.
name|getSolrClient
argument_list|()
decl_stmt|;
try|try
block|{
name|assertNotNull
argument_list|(
name|miniCluster
operator|.
name|getZkServer
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|JettySolrRunner
argument_list|>
name|jettys
init|=
name|miniCluster
operator|.
name|getJettySolrRunners
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|jettys
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|JettySolrRunner
name|jetty
range|:
name|jettys
control|)
block|{
name|assertTrue
argument_list|(
name|jetty
operator|.
name|isRunning
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// create collection
name|String
name|collectionName
init|=
literal|"testSolrCloudCollection"
decl_stmt|;
name|String
name|configName
init|=
literal|"solrCloudCollectionConfig"
decl_stmt|;
name|File
name|configDir
init|=
operator|new
name|File
argument_list|(
name|SolrTestCaseJ4
operator|.
name|TEST_HOME
argument_list|()
operator|+
name|File
operator|.
name|separator
operator|+
literal|"collection1"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"conf"
argument_list|)
decl_stmt|;
name|miniCluster
operator|.
name|uploadConfigDir
argument_list|(
name|configDir
argument_list|,
name|configName
argument_list|)
expr_stmt|;
name|miniCluster
operator|.
name|createCollection
argument_list|(
name|collectionName
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|configName
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|QueryRequest
name|req
init|=
operator|new
name|QueryRequest
argument_list|()
decl_stmt|;
name|QueryResponse
name|rsp
init|=
name|req
operator|.
name|process
argument_list|(
name|cloudSolrClient
argument_list|,
name|collectionName
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|rsp
operator|.
name|getResponseHeader
argument_list|()
operator|.
name|getBooleanArg
argument_list|(
literal|"zkConnected"
argument_list|)
argument_list|)
expr_stmt|;
comment|// delete the collection we created earlier
name|miniCluster
operator|.
name|deleteCollection
argument_list|(
name|collectionName
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|miniCluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
