begin_unit
begin_package
DECL|package|org.apache.solr.handler.admin
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|cloud
operator|.
name|ZkStateReader
operator|.
name|ConfigData
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ModifiableSolrParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|ContentStreamBase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|Utils
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|LocalSolrQueryRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|SolrQueryResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|security
operator|.
name|BasicAuthPlugin
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|security
operator|.
name|RuleBasedAuthorizationPlugin
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|CommandOperation
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|Utils
operator|.
name|makeMap
import|;
end_import
begin_class
DECL|class|SecurityConfHandlerTest
specifier|public
class|class
name|SecurityConfHandlerTest
extends|extends
name|SolrTestCaseJ4
block|{
DECL|method|testEdit
specifier|public
name|void
name|testEdit
parameter_list|()
throws|throws
name|Exception
block|{
name|MockSecurityHandler
name|handler
init|=
operator|new
name|MockSecurityHandler
argument_list|()
decl_stmt|;
name|String
name|command
init|=
literal|"{\n"
operator|+
literal|"'set-user': {'tom':'TomIsCool'},\n"
operator|+
literal|"'set-user':{ 'tom':'TomIsUberCool'}\n"
operator|+
literal|"}"
decl_stmt|;
name|LocalSolrQueryRequest
name|req
init|=
operator|new
name|LocalSolrQueryRequest
argument_list|(
literal|null
argument_list|,
operator|new
name|ModifiableSolrParams
argument_list|()
argument_list|)
decl_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"httpMethod"
argument_list|,
literal|"POST"
argument_list|)
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"path"
argument_list|,
literal|"/admin/authentication"
argument_list|)
expr_stmt|;
name|ContentStreamBase
operator|.
name|ByteArrayStream
name|o
init|=
operator|new
name|ContentStreamBase
operator|.
name|ByteArrayStream
argument_list|(
name|command
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|req
operator|.
name|setContentStreams
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|handler
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|,
operator|new
name|SolrQueryResponse
argument_list|()
argument_list|)
expr_stmt|;
name|BasicAuthPlugin
name|basicAuth
init|=
operator|new
name|BasicAuthPlugin
argument_list|()
decl_stmt|;
name|ConfigData
name|securityCfg
init|=
operator|(
name|ConfigData
operator|)
name|handler
operator|.
name|m
operator|.
name|get
argument_list|(
literal|"/security.json"
argument_list|)
decl_stmt|;
name|basicAuth
operator|.
name|init
argument_list|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|securityCfg
operator|.
name|data
operator|.
name|get
argument_list|(
literal|"authentication"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|basicAuth
operator|.
name|authenticate
argument_list|(
literal|"tom"
argument_list|,
literal|"TomIsUberCool"
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|=
literal|"{\n"
operator|+
literal|"'set-user': {'harry':'HarryIsCool'},\n"
operator|+
literal|"'delete-user': ['tom','harry']\n"
operator|+
literal|"}"
expr_stmt|;
name|o
operator|=
operator|new
name|ContentStreamBase
operator|.
name|ByteArrayStream
argument_list|(
name|command
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|req
operator|.
name|setContentStreams
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|handler
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|,
operator|new
name|SolrQueryResponse
argument_list|()
argument_list|)
expr_stmt|;
name|securityCfg
operator|=
operator|(
name|ConfigData
operator|)
name|handler
operator|.
name|m
operator|.
name|get
argument_list|(
literal|"/security.json"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|securityCfg
operator|.
name|version
argument_list|)
expr_stmt|;
name|Map
name|result
init|=
operator|(
name|Map
operator|)
name|securityCfg
operator|.
name|data
operator|.
name|get
argument_list|(
literal|"authentication"
argument_list|)
decl_stmt|;
name|result
operator|=
operator|(
name|Map
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"credentials"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|=
literal|"{'set-user-role': { 'tom': ['admin','dev']},\n"
operator|+
literal|"'set-permission':{'name': 'security-edit',\n"
operator|+
literal|"                  'role': 'admin'\n"
operator|+
literal|"                  },\n"
operator|+
literal|"'set-permission':{'name':'some-permission',\n"
operator|+
literal|"                      'collection':'acoll',\n"
operator|+
literal|"                      'path':'/nonexistentpath',\n"
operator|+
literal|"                      'role':'guest',\n"
operator|+
literal|"                      'before':'security-edit'\n"
operator|+
literal|"                      }\n"
operator|+
literal|"}"
expr_stmt|;
name|req
operator|=
operator|new
name|LocalSolrQueryRequest
argument_list|(
literal|null
argument_list|,
operator|new
name|ModifiableSolrParams
argument_list|()
argument_list|)
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"httpMethod"
argument_list|,
literal|"POST"
argument_list|)
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"path"
argument_list|,
literal|"/admin/authorization"
argument_list|)
expr_stmt|;
name|o
operator|=
operator|new
name|ContentStreamBase
operator|.
name|ByteArrayStream
argument_list|(
name|command
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|req
operator|.
name|setContentStreams
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|SolrQueryResponse
name|rsp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|handler
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|rsp
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|CommandOperation
operator|.
name|ERR_MSGS
argument_list|)
argument_list|)
expr_stmt|;
name|Map
name|authzconf
init|=
call|(
name|Map
call|)
argument_list|(
operator|(
name|ConfigData
operator|)
name|handler
operator|.
name|m
operator|.
name|get
argument_list|(
literal|"/security.json"
argument_list|)
argument_list|)
operator|.
name|data
operator|.
name|get
argument_list|(
literal|"authorization"
argument_list|)
decl_stmt|;
name|Map
name|userRoles
init|=
operator|(
name|Map
operator|)
name|authzconf
operator|.
name|get
argument_list|(
literal|"user-role"
argument_list|)
decl_stmt|;
name|List
name|tomRoles
init|=
operator|(
name|List
operator|)
name|userRoles
operator|.
name|get
argument_list|(
literal|"tom"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|tomRoles
operator|.
name|contains
argument_list|(
literal|"admin"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|tomRoles
operator|.
name|contains
argument_list|(
literal|"dev"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Map
argument_list|>
name|permissions
init|=
operator|(
name|List
argument_list|<
name|Map
argument_list|>
operator|)
name|authzconf
operator|.
name|get
argument_list|(
literal|"permissions"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|permissions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
name|p
range|:
name|permissions
control|)
block|{
name|assertEquals
argument_list|(
literal|"some-permission"
argument_list|,
name|p
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
name|command
operator|=
literal|"{\n"
operator|+
literal|"'set-permission':{'name': 'security-edit',\n"
operator|+
literal|"                  'role': ['admin','dev']\n"
operator|+
literal|"                  }}"
expr_stmt|;
name|req
operator|=
operator|new
name|LocalSolrQueryRequest
argument_list|(
literal|null
argument_list|,
operator|new
name|ModifiableSolrParams
argument_list|()
argument_list|)
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"httpMethod"
argument_list|,
literal|"POST"
argument_list|)
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"path"
argument_list|,
literal|"/admin/authorization"
argument_list|)
expr_stmt|;
name|o
operator|=
operator|new
name|ContentStreamBase
operator|.
name|ByteArrayStream
argument_list|(
name|command
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|req
operator|.
name|setContentStreams
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|rsp
operator|=
operator|new
name|SolrQueryResponse
argument_list|()
expr_stmt|;
name|handler
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|)
expr_stmt|;
name|authzconf
operator|=
call|(
name|Map
call|)
argument_list|(
operator|(
name|ConfigData
operator|)
name|handler
operator|.
name|m
operator|.
name|get
argument_list|(
literal|"/security.json"
argument_list|)
argument_list|)
operator|.
name|data
operator|.
name|get
argument_list|(
literal|"authorization"
argument_list|)
expr_stmt|;
name|permissions
operator|=
operator|(
name|List
argument_list|<
name|Map
argument_list|>
operator|)
name|authzconf
operator|.
name|get
argument_list|(
literal|"permissions"
argument_list|)
expr_stmt|;
name|Map
name|p
init|=
name|permissions
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"security-edit"
argument_list|,
name|p
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|List
name|rol
init|=
operator|(
name|List
operator|)
name|p
operator|.
name|get
argument_list|(
literal|"role"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"admin"
argument_list|,
name|rol
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dev"
argument_list|,
name|rol
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|=
literal|"{\n"
operator|+
literal|"'update-permission':{'name': 'some-permission',\n"
operator|+
literal|"                  'role': ['guest','admin']\n"
operator|+
literal|"                  }}"
expr_stmt|;
name|req
operator|=
operator|new
name|LocalSolrQueryRequest
argument_list|(
literal|null
argument_list|,
operator|new
name|ModifiableSolrParams
argument_list|()
argument_list|)
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"httpMethod"
argument_list|,
literal|"POST"
argument_list|)
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"path"
argument_list|,
literal|"/admin/authorization"
argument_list|)
expr_stmt|;
name|o
operator|=
operator|new
name|ContentStreamBase
operator|.
name|ByteArrayStream
argument_list|(
name|command
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|req
operator|.
name|setContentStreams
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|rsp
operator|=
operator|new
name|SolrQueryResponse
argument_list|()
expr_stmt|;
name|handler
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|)
expr_stmt|;
name|authzconf
operator|=
call|(
name|Map
call|)
argument_list|(
operator|(
name|ConfigData
operator|)
name|handler
operator|.
name|m
operator|.
name|get
argument_list|(
literal|"/security.json"
argument_list|)
argument_list|)
operator|.
name|data
operator|.
name|get
argument_list|(
literal|"authorization"
argument_list|)
expr_stmt|;
name|permissions
operator|=
operator|(
name|List
argument_list|<
name|Map
argument_list|>
operator|)
name|authzconf
operator|.
name|get
argument_list|(
literal|"permissions"
argument_list|)
expr_stmt|;
name|p
operator|=
name|permissions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"some-permission"
argument_list|,
name|p
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|rol
operator|=
operator|(
name|List
operator|)
name|p
operator|.
name|get
argument_list|(
literal|"role"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"guest"
argument_list|,
name|rol
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"admin"
argument_list|,
name|rol
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|=
literal|"{\n"
operator|+
literal|"'delete-permission': 'some-permission',\n"
operator|+
literal|"'set-user-role':{'tom':null}\n"
operator|+
literal|"}"
expr_stmt|;
name|req
operator|=
operator|new
name|LocalSolrQueryRequest
argument_list|(
literal|null
argument_list|,
operator|new
name|ModifiableSolrParams
argument_list|()
argument_list|)
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"httpMethod"
argument_list|,
literal|"POST"
argument_list|)
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"path"
argument_list|,
literal|"/admin/authorization"
argument_list|)
expr_stmt|;
name|o
operator|=
operator|new
name|ContentStreamBase
operator|.
name|ByteArrayStream
argument_list|(
name|command
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|req
operator|.
name|setContentStreams
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|rsp
operator|=
operator|new
name|SolrQueryResponse
argument_list|()
expr_stmt|;
name|handler
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|rsp
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|CommandOperation
operator|.
name|ERR_MSGS
argument_list|)
argument_list|)
expr_stmt|;
name|authzconf
operator|=
call|(
name|Map
call|)
argument_list|(
operator|(
name|ConfigData
operator|)
name|handler
operator|.
name|m
operator|.
name|get
argument_list|(
literal|"/security.json"
argument_list|)
argument_list|)
operator|.
name|data
operator|.
name|get
argument_list|(
literal|"authorization"
argument_list|)
expr_stmt|;
name|userRoles
operator|=
operator|(
name|Map
operator|)
name|authzconf
operator|.
name|get
argument_list|(
literal|"user-role"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|userRoles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|permissions
operator|=
operator|(
name|List
argument_list|<
name|Map
argument_list|>
operator|)
name|authzconf
operator|.
name|get
argument_list|(
literal|"permissions"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|permissions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
name|permission
range|:
name|permissions
control|)
block|{
name|assertFalse
argument_list|(
literal|"some-permission"
operator|.
name|equals
argument_list|(
name|permission
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|command
operator|=
literal|"{\n"
operator|+
literal|"'set-permission':{'name': 'security-edit',\n"
operator|+
literal|"                  'method':'POST',"
operator|+
comment|// -ve test security edit is a well-known permission , only role attribute should be provided
literal|"                  'role': 'admin'\n"
operator|+
literal|"                  }}"
expr_stmt|;
name|req
operator|=
operator|new
name|LocalSolrQueryRequest
argument_list|(
literal|null
argument_list|,
operator|new
name|ModifiableSolrParams
argument_list|()
argument_list|)
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"httpMethod"
argument_list|,
literal|"POST"
argument_list|)
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"path"
argument_list|,
literal|"/admin/authorization"
argument_list|)
expr_stmt|;
name|o
operator|=
operator|new
name|ContentStreamBase
operator|.
name|ByteArrayStream
argument_list|(
name|command
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|req
operator|.
name|setContentStreams
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|rsp
operator|=
operator|new
name|SolrQueryResponse
argument_list|()
expr_stmt|;
name|handler
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|)
expr_stmt|;
name|List
name|l
init|=
call|(
name|List
call|)
argument_list|(
call|(
name|Map
call|)
argument_list|(
operator|(
name|List
operator|)
name|rsp
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|"errorMessages"
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
literal|"errorMessages"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|l
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|class|MockSecurityHandler
specifier|public
specifier|static
class|class
name|MockSecurityHandler
extends|extends
name|SecurityConfHandler
block|{
DECL|field|m
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|m
decl_stmt|;
DECL|field|basicAuthPlugin
specifier|final
name|BasicAuthPlugin
name|basicAuthPlugin
init|=
operator|new
name|BasicAuthPlugin
argument_list|()
decl_stmt|;
DECL|field|rulesBasedAuthorizationPlugin
specifier|final
name|RuleBasedAuthorizationPlugin
name|rulesBasedAuthorizationPlugin
init|=
operator|new
name|RuleBasedAuthorizationPlugin
argument_list|()
decl_stmt|;
DECL|method|MockSecurityHandler
specifier|public
name|MockSecurityHandler
parameter_list|()
block|{
name|super
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|m
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|ConfigData
name|data
init|=
operator|new
name|ConfigData
argument_list|(
name|makeMap
argument_list|(
literal|"authentication"
argument_list|,
name|makeMap
argument_list|(
literal|"class"
argument_list|,
literal|"solr."
operator|+
name|BasicAuthPlugin
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|data
operator|.
name|data
operator|.
name|put
argument_list|(
literal|"authorization"
argument_list|,
name|makeMap
argument_list|(
literal|"class"
argument_list|,
literal|"solr."
operator|+
name|RuleBasedAuthorizationPlugin
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
literal|"/security.json"
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|basicAuthPlugin
operator|.
name|init
argument_list|(
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|rulesBasedAuthorizationPlugin
operator|.
name|init
argument_list|(
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getM
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getM
parameter_list|()
block|{
return|return
name|m
return|;
block|}
annotation|@
name|Override
DECL|method|getPlugin
name|Object
name|getPlugin
parameter_list|(
name|String
name|key
parameter_list|)
block|{
if|if
condition|(
name|key
operator|.
name|equals
argument_list|(
literal|"authentication"
argument_list|)
condition|)
block|{
return|return
name|basicAuthPlugin
return|;
block|}
if|if
condition|(
name|key
operator|.
name|equals
argument_list|(
literal|"authorization"
argument_list|)
condition|)
block|{
return|return
name|rulesBasedAuthorizationPlugin
return|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getSecurityProps
name|ConfigData
name|getSecurityProps
parameter_list|(
name|boolean
name|getFresh
parameter_list|)
block|{
return|return
operator|(
name|ConfigData
operator|)
name|m
operator|.
name|get
argument_list|(
literal|"/security.json"
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|persistConf
name|boolean
name|persistConf
parameter_list|(
name|String
name|key
parameter_list|,
name|byte
index|[]
name|buf
parameter_list|,
name|int
name|version
parameter_list|)
block|{
name|Object
name|data
init|=
name|m
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|data
operator|instanceof
name|ConfigData
condition|)
block|{
name|ConfigData
name|configData
init|=
operator|(
name|ConfigData
operator|)
name|data
decl_stmt|;
if|if
condition|(
name|configData
operator|.
name|version
operator|==
name|version
condition|)
block|{
name|ConfigData
name|result
init|=
operator|new
name|ConfigData
argument_list|(
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|Utils
operator|.
name|fromJSON
argument_list|(
name|buf
argument_list|)
argument_list|,
name|version
operator|+
literal|1
argument_list|)
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|result
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
throw|throw
operator|new
name|RuntimeException
argument_list|()
throw|;
block|}
DECL|method|getStandardJson
specifier|public
name|String
name|getStandardJson
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|command
init|=
literal|"{\n"
operator|+
literal|"'set-user': {'solr':'SolrRocks'}\n"
operator|+
literal|"}"
decl_stmt|;
name|LocalSolrQueryRequest
name|req
init|=
operator|new
name|LocalSolrQueryRequest
argument_list|(
literal|null
argument_list|,
operator|new
name|ModifiableSolrParams
argument_list|()
argument_list|)
decl_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"httpMethod"
argument_list|,
literal|"POST"
argument_list|)
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"path"
argument_list|,
literal|"/admin/authentication"
argument_list|)
expr_stmt|;
name|ContentStreamBase
operator|.
name|ByteArrayStream
name|o
init|=
operator|new
name|ContentStreamBase
operator|.
name|ByteArrayStream
argument_list|(
name|command
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|req
operator|.
name|setContentStreams
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|handleRequestBody
argument_list|(
name|req
argument_list|,
operator|new
name|SolrQueryResponse
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|=
literal|"{'set-user-role': { 'solr': 'admin'},\n"
operator|+
literal|"'set-permission':{'name': 'security-edit', 'role': 'admin'}"
operator|+
literal|"}"
expr_stmt|;
name|req
operator|=
operator|new
name|LocalSolrQueryRequest
argument_list|(
literal|null
argument_list|,
operator|new
name|ModifiableSolrParams
argument_list|()
argument_list|)
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"httpMethod"
argument_list|,
literal|"POST"
argument_list|)
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
literal|"path"
argument_list|,
literal|"/admin/authorization"
argument_list|)
expr_stmt|;
name|o
operator|=
operator|new
name|ContentStreamBase
operator|.
name|ByteArrayStream
argument_list|(
name|command
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|req
operator|.
name|setContentStreams
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|SolrQueryResponse
name|rsp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|handleRequestBody
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|data
init|=
operator|(
operator|(
name|ConfigData
operator|)
name|m
operator|.
name|get
argument_list|(
literal|"/security.json"
argument_list|)
operator|)
operator|.
name|data
decl_stmt|;
operator|(
operator|(
name|Map
operator|)
name|data
operator|.
name|get
argument_list|(
literal|"authentication"
argument_list|)
operator|)
operator|.
name|remove
argument_list|(
literal|""
argument_list|)
expr_stmt|;
operator|(
operator|(
name|Map
operator|)
name|data
operator|.
name|get
argument_list|(
literal|"authorization"
argument_list|)
operator|)
operator|.
name|remove
argument_list|(
literal|""
argument_list|)
expr_stmt|;
return|return
name|Utils
operator|.
name|toJSONString
argument_list|(
name|data
argument_list|)
return|;
block|}
block|}
DECL|method|main
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
operator|new
name|MockSecurityHandler
argument_list|()
operator|.
name|getStandardJson
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
