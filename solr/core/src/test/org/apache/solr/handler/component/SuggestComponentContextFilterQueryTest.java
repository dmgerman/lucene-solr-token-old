begin_unit
begin_package
DECL|package|org.apache.solr.handler.component
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|component
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|spelling
operator|.
name|suggest
operator|.
name|SuggesterParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|Is
operator|.
name|is
import|;
end_import
begin_class
DECL|class|SuggestComponentContextFilterQueryTest
specifier|public
class|class
name|SuggestComponentContextFilterQueryTest
extends|extends
name|SolrTestCaseJ4
block|{
DECL|field|rh
specifier|static
name|String
name|rh
init|=
literal|"/suggest"
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|beforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|initCore
argument_list|(
literal|"solrconfig-suggestercomponent-context-filter-query.xml"
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|assertU
argument_list|(
name|delQ
argument_list|(
literal|"*:*"
argument_list|)
argument_list|)
expr_stmt|;
comment|// id, cat, price, weight, contexts
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"0"
argument_list|,
literal|"cat"
argument_list|,
literal|"This is a title"
argument_list|,
literal|"price"
argument_list|,
literal|"5"
argument_list|,
literal|"weight"
argument_list|,
literal|"10"
argument_list|,
literal|"my_contexts_t"
argument_list|,
literal|"ctx1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"1"
argument_list|,
literal|"cat"
argument_list|,
literal|"This is another title"
argument_list|,
literal|"price"
argument_list|,
literal|"10"
argument_list|,
literal|"weight"
argument_list|,
literal|"10"
argument_list|,
literal|"my_contexts_t"
argument_list|,
literal|"ctx1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"7"
argument_list|,
literal|"cat"
argument_list|,
literal|"example with ctx1 at 40"
argument_list|,
literal|"price"
argument_list|,
literal|"40"
argument_list|,
literal|"weight"
argument_list|,
literal|"30"
argument_list|,
literal|"my_contexts_t"
argument_list|,
literal|"ctx1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"8"
argument_list|,
literal|"cat"
argument_list|,
literal|"example with ctx2 and ctx3 at 45"
argument_list|,
literal|"price"
argument_list|,
literal|"45"
argument_list|,
literal|"weight"
argument_list|,
literal|"30"
argument_list|,
literal|"my_contexts_t"
argument_list|,
literal|"CTX2"
argument_list|,
literal|"my_contexts_t"
argument_list|,
literal|"CTX3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
name|adoc
argument_list|(
literal|"id"
argument_list|,
literal|"9"
argument_list|,
literal|"cat"
argument_list|,
literal|"example with ctx4 at 50 using my_contexts_s"
argument_list|,
literal|"price"
argument_list|,
literal|"50"
argument_list|,
literal|"weight"
argument_list|,
literal|"40"
argument_list|,
literal|"my_contexts_s"
argument_list|,
literal|"ctx4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertU
argument_list|(
operator|(
name|commit
argument_list|()
operator|)
argument_list|)
expr_stmt|;
name|waitForWarming
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testContextFilterParamIsIgnoredWhenContextIsNotImplemented
specifier|public
name|void
name|testContextFilterParamIsIgnoredWhenContextIsNotImplemented
parameter_list|()
throws|throws
name|Exception
block|{
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_lookup_has_no_context_implementation"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_CONTEXT_FILTER_QUERY
argument_list|,
literal|"ctx1"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_lookup_has_no_context_implementation']/lst[@name='examp']/int[@name='numFound'][.='3']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_lookup_has_no_context_implementation']/lst[@name='examp']/arr[@name='suggestions']/lst[1]/str[@name='term'][.='example with ctx4 at 50 using my_contexts_s']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_lookup_has_no_context_implementation']/lst[@name='examp']/arr[@name='suggestions']/lst[2]/str[@name='term'][.='example with ctx2 and ctx3 at 45']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_lookup_has_no_context_implementation']/lst[@name='examp']/arr[@name='suggestions']/lst[3]/str[@name='term'][.='example with ctx1 at 40']"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testContextFilteringIsIgnoredWhenContextIsImplementedButNotConfigured
specifier|public
name|void
name|testContextFilteringIsIgnoredWhenContextIsImplementedButNotConfigured
parameter_list|()
throws|throws
name|Exception
block|{
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_context_implemented_but_not_configured"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_context_implemented_but_not_configured']/lst[@name='examp']/int[@name='numFound'][.='3']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_context_implemented_but_not_configured']/lst[@name='examp']/arr[@name='suggestions']/lst[1]/str[@name='term'][.='example with ctx4 at 50 using my_contexts_s']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_context_implemented_but_not_configured']/lst[@name='examp']/arr[@name='suggestions']/lst[2]/str[@name='term'][.='example with ctx2 and ctx3 at 45']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_context_implemented_but_not_configured']/lst[@name='examp']/arr[@name='suggestions']/lst[3]/str[@name='term'][.='example with ctx1 at 40']"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented
specifier|public
name|void
name|testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_context_filtering_not_implemented"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expecting exception because "
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
name|Throwable
name|cause
init|=
name|e
operator|.
name|getCause
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|cause
operator|instanceof
name|IllegalArgumentException
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|cause
operator|.
name|getMessage
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"this suggester doesn't support contexts"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// When not building, no exception is thrown
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"false"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_context_filtering_not_implemented"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_context_filtering_not_implemented']/lst[@name='examp']/int[@name='numFound'][.='0']"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testContextFilterIsTrimmed
specifier|public
name|void
name|testContextFilterIsTrimmed
parameter_list|()
throws|throws
name|Exception
block|{
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_blended_infix_suggester"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_CONTEXT_FILTER_QUERY
argument_list|,
literal|"     "
argument_list|,
comment|//trimmed to null... just as if there was no context filter param
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/int[@name='numFound'][.='3']"
argument_list|)
expr_stmt|;
block|}
DECL|method|testExplicitFieldedQuery
specifier|public
name|void
name|testExplicitFieldedQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_blended_infix_suggester"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_CONTEXT_FILTER_QUERY
argument_list|,
literal|"contexts:ctx1"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/int[@name='numFound'][.='1']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/arr[@name='suggestions']/lst[1]/str[@name='term'][.='example with ctx1 at 40']"
argument_list|)
expr_stmt|;
block|}
DECL|method|testContextFilterOK
specifier|public
name|void
name|testContextFilterOK
parameter_list|()
throws|throws
name|Exception
block|{
comment|//No filtering
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_blended_infix_suggester"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/int[@name='numFound'][.='3']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/arr[@name='suggestions']/lst[1]/str[@name='term'][.='example with ctx4 at 50 using my_contexts_s']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/arr[@name='suggestions']/lst[2]/str[@name='term'][.='example with ctx2 and ctx3 at 45']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/arr[@name='suggestions']/lst[3]/str[@name='term'][.='example with ctx1 at 40']"
argument_list|)
expr_stmt|;
comment|//TermQuery
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_blended_infix_suggester"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_CONTEXT_FILTER_QUERY
argument_list|,
literal|"ctx1"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/int[@name='numFound'][.='1']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/arr[@name='suggestions']/lst[1]/str[@name='term'][.='example with ctx1 at 40']"
argument_list|)
expr_stmt|;
comment|//OR BooleanQuery
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_blended_infix_suggester"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_CONTEXT_FILTER_QUERY
argument_list|,
literal|"ctx1 OR CTX2"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/int[@name='numFound'][.='2']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/arr[@name='suggestions']/lst[1]/str[@name='term'][.='example with ctx2 and ctx3 at 45']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/arr[@name='suggestions']/lst[2]/str[@name='term'][.='example with ctx1 at 40']"
argument_list|)
expr_stmt|;
comment|//AND BooleanQuery
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_blended_infix_suggester"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_CONTEXT_FILTER_QUERY
argument_list|,
literal|"CTX2 AND CTX3"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/int[@name='numFound'][.='1']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/arr[@name='suggestions']/lst[1]/str[@name='term'][.='example with ctx2 and ctx3 at 45']"
argument_list|)
expr_stmt|;
comment|//PrefixQuery
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_blended_infix_suggester"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_CONTEXT_FILTER_QUERY
argument_list|,
literal|"ctx*"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/int[@name='numFound'][.='1']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/arr[@name='suggestions']/lst[1]/str[@name='term'][.='example with ctx1 at 40']"
argument_list|)
expr_stmt|;
comment|//RangeQuery
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_blended_infix_suggester"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_CONTEXT_FILTER_QUERY
argument_list|,
literal|"[* TO *]"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/int[@name='numFound'][.='2']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/arr[@name='suggestions']/lst[1]/str[@name='term'][.='example with ctx2 and ctx3 at 45']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/arr[@name='suggestions']/lst[2]/str[@name='term'][.='example with ctx1 at 40']"
argument_list|)
expr_stmt|;
comment|//WildcardQuery
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_blended_infix_suggester"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_CONTEXT_FILTER_QUERY
argument_list|,
literal|"c*1"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/int[@name='numFound'][.='1']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/arr[@name='suggestions']/lst[1]/str[@name='term'][.='example with ctx1 at 40']"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testStringContext
specifier|public
name|void
name|testStringContext
parameter_list|()
block|{
comment|//Here, the context field is a string, so it's case sensitive
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_blended_infix_suggester_string"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_CONTEXT_FILTER_QUERY
argument_list|,
literal|"Ctx4"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester_string']/lst[@name='examp']/int[@name='numFound'][.='0']"
argument_list|)
expr_stmt|;
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_blended_infix_suggester_string"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_CONTEXT_FILTER_QUERY
argument_list|,
literal|"ctx4"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester_string']/lst[@name='examp']/int[@name='numFound'][.='1']"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testContextFilterOnInvalidFieldGivesNoSuggestions
specifier|public
name|void
name|testContextFilterOnInvalidFieldGivesNoSuggestions
parameter_list|()
throws|throws
name|Exception
block|{
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_blended_infix_suggester"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_CONTEXT_FILTER_QUERY
argument_list|,
literal|"some_invalid_context_field:some_invalid_value"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/int[@name='numFound'][.='0']"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testContextFilterUsesAnalyzer
specifier|public
name|void
name|testContextFilterUsesAnalyzer
parameter_list|()
throws|throws
name|Exception
block|{
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_blended_infix_suggester"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_CONTEXT_FILTER_QUERY
argument_list|,
literal|"CTx1"
argument_list|,
comment|// Will not match due to case
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"examp"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='examp']/int[@name='numFound'][.='0']"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
comment|// TODO: SOLR-7964
annotation|@
name|Test
DECL|method|testContextFilterWithHighlight
specifier|public
name|void
name|testContextFilterWithHighlight
parameter_list|()
throws|throws
name|Exception
block|{
name|assertQ
argument_list|(
name|req
argument_list|(
literal|"qt"
argument_list|,
name|rh
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_BUILD
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_DICT
argument_list|,
literal|"suggest_blended_infix_suggester"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_CONTEXT_FILTER_QUERY
argument_list|,
literal|"ctx1"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_HIGHLIGHT
argument_list|,
literal|"true"
argument_list|,
name|SuggesterParams
operator|.
name|SUGGEST_Q
argument_list|,
literal|"example"
argument_list|)
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='example']/int[@name='numFound'][.='1']"
argument_list|,
literal|"//lst[@name='suggest']/lst[@name='suggest_blended_infix_suggester']/lst[@name='example']/arr[@name='suggestions']/lst[1]/str[@name='term'][.='<b>example</b> data']"
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
