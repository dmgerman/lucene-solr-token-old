begin_unit
begin_package
DECL|package|org.apache.solr.handler.admin
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|CoreAdminParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|CoreContainer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|SolrCore
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|SolrQueryResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import
begin_class
DECL|class|CoreAdminRequestStatusTest
specifier|public
class|class
name|CoreAdminRequestStatusTest
extends|extends
name|SolrTestCaseJ4
block|{
annotation|@
name|BeforeClass
DECL|method|beforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|initCore
argument_list|(
literal|"solrconfig.xml"
argument_list|,
literal|"schema.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCoreAdminRequestStatus
specifier|public
name|void
name|testCoreAdminRequestStatus
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|File
name|workDir
init|=
operator|new
name|File
argument_list|(
name|dataDir
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|workDir
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|workDir
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
literal|"Failed to mkdirs workDir"
argument_list|,
name|workDir
operator|.
name|mkdirs
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|CoreContainer
name|cores
init|=
name|h
operator|.
name|getCoreContainer
argument_list|()
decl_stmt|;
specifier|final
name|CoreAdminHandler
name|admin
init|=
operator|new
name|CoreAdminHandler
argument_list|(
name|cores
argument_list|)
decl_stmt|;
name|String
name|instDir
decl_stmt|;
try|try
init|(
name|SolrCore
name|template
init|=
name|cores
operator|.
name|getCore
argument_list|(
literal|"collection1"
argument_list|)
init|)
block|{
name|assertNotNull
argument_list|(
name|template
argument_list|)
expr_stmt|;
name|instDir
operator|=
name|template
operator|.
name|getCoreDescriptor
argument_list|()
operator|.
name|getInstanceDir
argument_list|()
expr_stmt|;
block|}
specifier|final
name|File
name|instDirFile
init|=
operator|new
name|File
argument_list|(
name|instDir
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"instDir doesn't exist: "
operator|+
name|instDir
argument_list|,
name|instDirFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|File
name|instPropFile
init|=
operator|new
name|File
argument_list|(
name|workDir
argument_list|,
literal|"instProp"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|copyDirectory
argument_list|(
name|instDirFile
argument_list|,
name|instPropFile
argument_list|)
expr_stmt|;
comment|// create a new core (using CoreAdminHandler) w/ properties
name|SolrQueryResponse
name|resp
init|=
operator|new
name|SolrQueryResponse
argument_list|()
decl_stmt|;
name|admin
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|(
name|CoreAdminParams
operator|.
name|ACTION
argument_list|,
name|CoreAdminParams
operator|.
name|CoreAdminAction
operator|.
name|CREATE
operator|.
name|toString
argument_list|()
argument_list|,
name|CoreAdminParams
operator|.
name|INSTANCE_DIR
argument_list|,
name|instPropFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|CoreAdminParams
operator|.
name|NAME
argument_list|,
literal|"dummycore"
argument_list|,
literal|"async"
argument_list|,
literal|"42"
argument_list|)
argument_list|,
name|resp
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"Exception on create"
argument_list|,
name|resp
operator|.
name|getException
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|maxRetries
init|=
literal|10
decl_stmt|;
while|while
condition|(
name|maxRetries
operator|--
operator|>
literal|0
condition|)
block|{
name|resp
operator|=
operator|new
name|SolrQueryResponse
argument_list|()
expr_stmt|;
name|admin
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|(
name|CoreAdminParams
operator|.
name|ACTION
argument_list|,
name|CoreAdminParams
operator|.
name|CoreAdminAction
operator|.
name|REQUESTSTATUS
operator|.
name|toString
argument_list|()
argument_list|,
name|CoreAdminParams
operator|.
name|REQUESTID
argument_list|,
literal|"42"
argument_list|)
argument_list|,
name|resp
argument_list|)
expr_stmt|;
if|if
condition|(
name|resp
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|"STATUS"
argument_list|)
operator|!=
literal|null
operator|&&
name|resp
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|"STATUS"
argument_list|)
operator|.
name|equals
argument_list|(
literal|"completed"
argument_list|)
condition|)
break|break;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|"The status of request was expected to be completed"
argument_list|,
literal|"completed"
argument_list|,
name|resp
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|"STATUS"
argument_list|)
argument_list|)
expr_stmt|;
name|resp
operator|=
operator|new
name|SolrQueryResponse
argument_list|()
expr_stmt|;
name|admin
operator|.
name|handleRequestBody
argument_list|(
name|req
argument_list|(
name|CoreAdminParams
operator|.
name|ACTION
argument_list|,
name|CoreAdminParams
operator|.
name|CoreAdminAction
operator|.
name|REQUESTSTATUS
operator|.
name|toString
argument_list|()
argument_list|,
name|CoreAdminParams
operator|.
name|REQUESTID
argument_list|,
literal|"9999999"
argument_list|)
argument_list|,
name|resp
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Was expecting it to be invalid but found a task with the id."
argument_list|,
literal|"notfound"
argument_list|,
name|resp
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|"STATUS"
argument_list|)
argument_list|)
expr_stmt|;
name|admin
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
end_class
end_unit
