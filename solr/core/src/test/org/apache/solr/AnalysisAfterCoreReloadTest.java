begin_unit
begin_package
DECL|package|org.apache.solr
package|package
name|org
operator|.
name|apache
operator|.
name|solr
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrQuery
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|SolrServer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|embedded
operator|.
name|EmbeddedSolrServer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|AbstractUpdateRequest
operator|.
name|ACTION
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|QueryRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|request
operator|.
name|UpdateRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputDocument
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|SolrCore
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import
begin_class
DECL|class|AnalysisAfterCoreReloadTest
specifier|public
class|class
name|AnalysisAfterCoreReloadTest
extends|extends
name|SolrTestCaseJ4
block|{
DECL|field|tmpSolrHome
specifier|private
specifier|static
name|String
name|tmpSolrHome
decl_stmt|;
DECL|field|port
name|int
name|port
init|=
literal|0
decl_stmt|;
DECL|field|context
specifier|static
specifier|final
name|String
name|context
init|=
literal|"/solr"
decl_stmt|;
DECL|field|collection
specifier|static
specifier|final
name|String
name|collection
init|=
literal|"collection1"
decl_stmt|;
annotation|@
name|BeforeClass
DECL|method|beforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|createTempDir
argument_list|()
expr_stmt|;
name|tmpSolrHome
operator|=
name|TEMP_DIR
operator|+
name|File
operator|.
name|separator
operator|+
name|AnalysisAfterCoreReloadTest
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|copyDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|TEST_HOME
argument_list|()
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|tmpSolrHome
argument_list|)
operator|.
name|getAbsoluteFile
argument_list|()
argument_list|)
expr_stmt|;
name|initCore
argument_list|(
literal|"solrconfig.xml"
argument_list|,
literal|"schema.xml"
argument_list|,
operator|new
name|File
argument_list|(
name|tmpSolrHome
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
DECL|method|AfterClass
specifier|public
specifier|static
name|void
name|AfterClass
parameter_list|()
throws|throws
name|Exception
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|tmpSolrHome
argument_list|)
operator|.
name|getAbsoluteFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testStopwordsAfterCoreReload
specifier|public
name|void
name|testStopwordsAfterCoreReload
parameter_list|()
throws|throws
name|Exception
block|{
name|SolrInputDocument
name|doc
init|=
operator|new
name|SolrInputDocument
argument_list|()
decl_stmt|;
name|doc
operator|.
name|setField
argument_list|(
literal|"id"
argument_list|,
literal|"42"
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setField
argument_list|(
literal|"teststop"
argument_list|,
literal|"terma stopworda stopwordb stopwordc"
argument_list|)
expr_stmt|;
comment|// default stopwords - stopworda and stopwordb
name|UpdateRequest
name|up
init|=
operator|new
name|UpdateRequest
argument_list|()
decl_stmt|;
name|up
operator|.
name|setAction
argument_list|(
name|ACTION
operator|.
name|COMMIT
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|up
operator|.
name|add
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|up
operator|.
name|process
argument_list|(
name|getSolrCore
argument_list|()
argument_list|)
expr_stmt|;
name|SolrQuery
name|q
init|=
operator|new
name|SolrQuery
argument_list|()
decl_stmt|;
name|QueryRequest
name|r
init|=
operator|new
name|QueryRequest
argument_list|(
name|q
argument_list|)
decl_stmt|;
name|q
operator|.
name|setQuery
argument_list|(
literal|"teststop:terma"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|r
operator|.
name|process
argument_list|(
name|getSolrCore
argument_list|()
argument_list|)
operator|.
name|getResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|=
operator|new
name|SolrQuery
argument_list|()
expr_stmt|;
name|r
operator|=
operator|new
name|QueryRequest
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|q
operator|.
name|setQuery
argument_list|(
literal|"teststop:stopworda"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|r
operator|.
name|process
argument_list|(
name|getSolrCore
argument_list|()
argument_list|)
operator|.
name|getResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|=
operator|new
name|SolrQuery
argument_list|()
expr_stmt|;
name|r
operator|=
operator|new
name|QueryRequest
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|q
operator|.
name|setQuery
argument_list|(
literal|"teststop:stopwordb"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|r
operator|.
name|process
argument_list|(
name|getSolrCore
argument_list|()
argument_list|)
operator|.
name|getResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|=
operator|new
name|SolrQuery
argument_list|()
expr_stmt|;
name|r
operator|=
operator|new
name|QueryRequest
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|q
operator|.
name|setQuery
argument_list|(
literal|"teststop:stopwordc"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|r
operator|.
name|process
argument_list|(
name|getSolrCore
argument_list|()
argument_list|)
operator|.
name|getResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// overwrite stopwords file with stopword list ["stopwordc"] and reload the core
name|overwriteStopwords
argument_list|(
literal|"stopwordc\n"
argument_list|)
expr_stmt|;
name|h
operator|.
name|getCoreContainer
argument_list|()
operator|.
name|reload
argument_list|(
name|collection
argument_list|)
expr_stmt|;
name|up
operator|.
name|process
argument_list|(
name|getSolrCore
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|=
operator|new
name|SolrQuery
argument_list|()
expr_stmt|;
name|r
operator|=
operator|new
name|QueryRequest
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|q
operator|.
name|setQuery
argument_list|(
literal|"teststop:terma"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|r
operator|.
name|process
argument_list|(
name|getSolrCore
argument_list|()
argument_list|)
operator|.
name|getResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|=
operator|new
name|SolrQuery
argument_list|()
expr_stmt|;
name|r
operator|=
operator|new
name|QueryRequest
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|q
operator|.
name|setQuery
argument_list|(
literal|"teststop:stopworda"
argument_list|)
expr_stmt|;
comment|// stopworda is no longer a stopword
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|r
operator|.
name|process
argument_list|(
name|getSolrCore
argument_list|()
argument_list|)
operator|.
name|getResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|=
operator|new
name|SolrQuery
argument_list|()
expr_stmt|;
name|r
operator|=
operator|new
name|QueryRequest
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|q
operator|.
name|setQuery
argument_list|(
literal|"teststop:stopwordb"
argument_list|)
expr_stmt|;
comment|// stopwordb is no longer a stopword
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|r
operator|.
name|process
argument_list|(
name|getSolrCore
argument_list|()
argument_list|)
operator|.
name|getResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|=
operator|new
name|SolrQuery
argument_list|()
expr_stmt|;
name|r
operator|=
operator|new
name|QueryRequest
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|q
operator|.
name|setQuery
argument_list|(
literal|"teststop:stopwordc"
argument_list|)
expr_stmt|;
comment|// stopwordc should be a stopword
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|r
operator|.
name|process
argument_list|(
name|getSolrCore
argument_list|()
argument_list|)
operator|.
name|getResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|overwriteStopwords
specifier|private
name|void
name|overwriteStopwords
parameter_list|(
name|String
name|stopwords
parameter_list|)
throws|throws
name|IOException
block|{
name|SolrCore
name|core
init|=
name|h
operator|.
name|getCoreContainer
argument_list|()
operator|.
name|getCore
argument_list|(
name|collection
argument_list|)
decl_stmt|;
try|try
block|{
name|String
name|configDir
init|=
name|core
operator|.
name|getResourceLoader
argument_list|()
operator|.
name|getConfigDir
argument_list|()
decl_stmt|;
name|FileUtils
operator|.
name|moveFile
argument_list|(
operator|new
name|File
argument_list|(
name|configDir
argument_list|,
literal|"stopwords.txt"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|configDir
argument_list|,
literal|"stopwords.txt.bak"
argument_list|)
argument_list|)
expr_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|configDir
argument_list|,
literal|"stopwords.txt"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|writeStringToFile
argument_list|(
name|file
argument_list|,
name|stopwords
argument_list|,
literal|"UTF-8"
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|core
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|SolrCore
name|core
init|=
name|h
operator|.
name|getCoreContainer
argument_list|()
operator|.
name|getCore
argument_list|(
name|collection
argument_list|)
decl_stmt|;
name|String
name|configDir
decl_stmt|;
try|try
block|{
name|configDir
operator|=
name|core
operator|.
name|getResourceLoader
argument_list|()
operator|.
name|getConfigDir
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|core
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
if|if
condition|(
operator|new
name|File
argument_list|(
name|configDir
argument_list|,
literal|"stopwords.txt.bak"
argument_list|)
operator|.
name|exists
argument_list|()
condition|)
block|{
name|FileUtils
operator|.
name|deleteQuietly
argument_list|(
operator|new
name|File
argument_list|(
name|configDir
argument_list|,
literal|"stopwords.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|moveFile
argument_list|(
operator|new
name|File
argument_list|(
name|configDir
argument_list|,
literal|"stopwords.txt.bak"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|configDir
argument_list|,
literal|"stopwords.txt"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getSolrCore
specifier|protected
name|SolrServer
name|getSolrCore
parameter_list|()
block|{
return|return
operator|new
name|EmbeddedSolrServer
argument_list|(
name|h
operator|.
name|getCore
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class
end_unit
