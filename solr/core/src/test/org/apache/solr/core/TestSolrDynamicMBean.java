begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.core
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|LuceneTestCase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
operator|.
name|JmxMonitoredMap
operator|.
name|SolrDynamicMBean
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_comment
comment|/**  * Test for JmxMonitoredMap  *  *  * @since solr 1.3  */
end_comment
begin_class
DECL|class|TestSolrDynamicMBean
specifier|public
class|class
name|TestSolrDynamicMBean
extends|extends
name|LuceneTestCase
block|{
annotation|@
name|Override
annotation|@
name|Before
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCachedStatsOption
specifier|public
name|void
name|testCachedStatsOption
parameter_list|()
throws|throws
name|Exception
block|{
comment|//  SOLR-6747 Add an optional caching option as a workaround for SOLR-6586.
name|SolrInfoMBean
name|solrmbeaninfo
init|=
operator|new
name|MockInfoMBean
argument_list|()
decl_stmt|;
name|SolrDynamicMBean
name|sdmbean
init|=
operator|new
name|SolrDynamicMBean
argument_list|(
literal|""
argument_list|,
name|solrmbeaninfo
argument_list|)
decl_stmt|;
name|sdmbean
operator|.
name|getMBeanInfo
argument_list|()
expr_stmt|;
name|Object
name|object1
init|=
name|sdmbean
operator|.
name|getAttribute
argument_list|(
literal|"Object"
argument_list|)
decl_stmt|;
name|Object
name|object2
init|=
name|sdmbean
operator|.
name|getAttribute
argument_list|(
literal|"Object"
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|object1
argument_list|,
name|object2
argument_list|)
expr_stmt|;
name|sdmbean
operator|.
name|getMBeanInfo
argument_list|()
expr_stmt|;
name|Object
name|object12
init|=
name|sdmbean
operator|.
name|getAttribute
argument_list|(
literal|"Object"
argument_list|)
decl_stmt|;
name|Object
name|object22
init|=
name|sdmbean
operator|.
name|getAttribute
argument_list|(
literal|"Object"
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|object1
argument_list|,
name|object12
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|object2
argument_list|,
name|object22
argument_list|)
expr_stmt|;
comment|// test cached stats
name|solrmbeaninfo
operator|=
operator|new
name|MockInfoMBean
argument_list|()
expr_stmt|;
name|sdmbean
operator|=
operator|new
name|SolrDynamicMBean
argument_list|(
literal|""
argument_list|,
name|solrmbeaninfo
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|sdmbean
operator|.
name|getMBeanInfo
argument_list|()
expr_stmt|;
name|object1
operator|=
name|sdmbean
operator|.
name|getAttribute
argument_list|(
literal|"Object"
argument_list|)
expr_stmt|;
name|object2
operator|=
name|sdmbean
operator|.
name|getAttribute
argument_list|(
literal|"Object"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|object1
argument_list|,
name|object2
argument_list|)
expr_stmt|;
name|sdmbean
operator|.
name|getMBeanInfo
argument_list|()
expr_stmt|;
name|object12
operator|=
name|sdmbean
operator|.
name|getAttribute
argument_list|(
literal|"Object"
argument_list|)
expr_stmt|;
name|object22
operator|=
name|sdmbean
operator|.
name|getAttribute
argument_list|(
literal|"Object"
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|object1
argument_list|,
name|object12
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|object2
argument_list|,
name|object22
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|object12
argument_list|,
name|object22
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
