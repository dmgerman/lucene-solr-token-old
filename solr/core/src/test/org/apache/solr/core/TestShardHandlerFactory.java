begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.core
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|component
operator|.
name|ShardHandlerFactory
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import
begin_comment
comment|/**  * Tests specifying a custom ShardHandlerFactory  */
end_comment
begin_class
DECL|class|TestShardHandlerFactory
specifier|public
class|class
name|TestShardHandlerFactory
extends|extends
name|SolrTestCaseJ4
block|{
DECL|method|testXML
specifier|public
name|void
name|testXML
parameter_list|()
throws|throws
name|Exception
block|{
name|CoreContainer
name|cc
init|=
operator|new
name|CoreContainer
argument_list|(
name|TEST_HOME
argument_list|()
argument_list|)
decl_stmt|;
name|cc
operator|.
name|load
argument_list|(
name|TEST_HOME
argument_list|()
argument_list|,
operator|new
name|File
argument_list|(
name|TEST_HOME
argument_list|()
argument_list|,
literal|"solr-shardhandler.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|ShardHandlerFactory
name|factory
init|=
name|cc
operator|.
name|getShardHandlerFactory
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|factory
operator|instanceof
name|MockShardHandlerFactory
argument_list|)
expr_stmt|;
name|NamedList
name|args
init|=
operator|(
operator|(
name|MockShardHandlerFactory
operator|)
name|factory
operator|)
operator|.
name|args
decl_stmt|;
name|assertEquals
argument_list|(
literal|"myMagicRequiredValue"
argument_list|,
name|args
operator|.
name|get
argument_list|(
literal|"myMagicRequiredParameter"
argument_list|)
argument_list|)
expr_stmt|;
name|factory
operator|.
name|close
argument_list|()
expr_stmt|;
name|cc
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
end_class
end_unit
