begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.core
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|TieredMergePolicy
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|admin
operator|.
name|ShowFileRequestHandler
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|DirectUpdateHandler2
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|SolrIndexConfig
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import
begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPathConstants
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import
begin_class
DECL|class|TestConfig
specifier|public
class|class
name|TestConfig
extends|extends
name|SolrTestCaseJ4
block|{
annotation|@
name|BeforeClass
DECL|method|beforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|initCore
argument_list|(
literal|"solrconfig-termindex.xml"
argument_list|,
literal|"schema-reversed.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testLib
specifier|public
name|void
name|testLib
parameter_list|()
throws|throws
name|IOException
block|{
name|SolrResourceLoader
name|loader
init|=
name|h
operator|.
name|getCore
argument_list|()
operator|.
name|getResourceLoader
argument_list|()
decl_stmt|;
name|InputStream
name|data
init|=
literal|null
decl_stmt|;
name|String
index|[]
name|expectedFiles
init|=
operator|new
name|String
index|[]
block|{
literal|"empty-file-main-lib.txt"
block|,
literal|"empty-file-a1.txt"
block|,
literal|"empty-file-a2.txt"
block|,
literal|"empty-file-b1.txt"
block|,
literal|"empty-file-b2.txt"
block|,
literal|"empty-file-c1.txt"
block|}
decl_stmt|;
for|for
control|(
name|String
name|f
range|:
name|expectedFiles
control|)
block|{
name|data
operator|=
name|loader
operator|.
name|openResource
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Should have found file "
operator|+
name|f
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|data
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|String
index|[]
name|unexpectedFiles
init|=
operator|new
name|String
index|[]
block|{
literal|"empty-file-c2.txt"
block|,
literal|"empty-file-d2.txt"
block|}
decl_stmt|;
for|for
control|(
name|String
name|f
range|:
name|unexpectedFiles
control|)
block|{
name|data
operator|=
literal|null
expr_stmt|;
try|try
block|{
name|data
operator|=
name|loader
operator|.
name|openResource
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|/* :NOOP: (un)expected */
block|}
name|assertNull
argument_list|(
literal|"should not have been able to find "
operator|+
name|f
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testJavaProperty
specifier|public
name|void
name|testJavaProperty
parameter_list|()
block|{
comment|// property values defined in build.xml
name|String
name|s
init|=
name|solrConfig
operator|.
name|get
argument_list|(
literal|"propTest"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"prefix-proptwo-suffix"
argument_list|,
name|s
argument_list|)
expr_stmt|;
name|s
operator|=
name|solrConfig
operator|.
name|get
argument_list|(
literal|"propTest/@attr1"
argument_list|,
literal|"default"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"propone-${literal}"
argument_list|,
name|s
argument_list|)
expr_stmt|;
name|s
operator|=
name|solrConfig
operator|.
name|get
argument_list|(
literal|"propTest/@attr2"
argument_list|,
literal|"default"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"default-from-config"
argument_list|,
name|s
argument_list|)
expr_stmt|;
name|s
operator|=
name|solrConfig
operator|.
name|get
argument_list|(
literal|"propTest[@attr2='default-from-config']"
argument_list|,
literal|"default"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"prefix-proptwo-suffix"
argument_list|,
name|s
argument_list|)
expr_stmt|;
name|NodeList
name|nl
init|=
operator|(
name|NodeList
operator|)
name|solrConfig
operator|.
name|evaluate
argument_list|(
literal|"propTest"
argument_list|,
name|XPathConstants
operator|.
name|NODESET
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|nl
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"prefix-proptwo-suffix"
argument_list|,
name|nl
operator|.
name|item
argument_list|(
literal|0
argument_list|)
operator|.
name|getTextContent
argument_list|()
argument_list|)
expr_stmt|;
name|Node
name|node
init|=
name|solrConfig
operator|.
name|getNode
argument_list|(
literal|"propTest"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"prefix-proptwo-suffix"
argument_list|,
name|node
operator|.
name|getTextContent
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testLucene23Upgrades
specifier|public
name|void
name|testLucene23Upgrades
parameter_list|()
throws|throws
name|Exception
block|{
name|double
name|bufferSize
init|=
name|solrConfig
operator|.
name|indexConfig
operator|.
name|ramBufferSizeMB
decl_stmt|;
name|assertTrue
argument_list|(
name|bufferSize
operator|+
literal|" does not equal: "
operator|+
literal|32
argument_list|,
name|bufferSize
operator|==
literal|32
argument_list|)
expr_stmt|;
name|String
name|mergePolicy
init|=
name|solrConfig
operator|.
name|indexConfig
operator|.
name|mergePolicyInfo
operator|.
name|className
decl_stmt|;
name|assertEquals
argument_list|(
name|TieredMergePolicy
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|mergePolicy
argument_list|)
expr_stmt|;
name|String
name|mergeSched
init|=
name|solrConfig
operator|.
name|indexConfig
operator|.
name|mergeSchedulerInfo
operator|.
name|className
decl_stmt|;
name|assertTrue
argument_list|(
name|mergeSched
operator|+
literal|" is not equal to "
operator|+
name|SolrIndexConfig
operator|.
name|DEFAULT_MERGE_SCHEDULER_CLASSNAME
argument_list|,
name|mergeSched
operator|.
name|equals
argument_list|(
name|SolrIndexConfig
operator|.
name|DEFAULT_MERGE_SCHEDULER_CLASSNAME
argument_list|)
operator|==
literal|true
argument_list|)
expr_stmt|;
block|}
comment|// sometime if the config referes to old things, it must be replaced with new stuff
annotation|@
name|Test
DECL|method|testAutomaticDeprecationSupport
specifier|public
name|void
name|testAutomaticDeprecationSupport
parameter_list|()
block|{
comment|// make sure the "admin/file" handler is registered
name|ShowFileRequestHandler
name|handler
init|=
operator|(
name|ShowFileRequestHandler
operator|)
name|h
operator|.
name|getCore
argument_list|()
operator|.
name|getRequestHandler
argument_list|(
literal|"/admin/file"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"file handler should have been automatically registered"
argument_list|,
name|handler
operator|!=
literal|null
argument_list|)
expr_stmt|;
comment|//System.out.println( handler.getHiddenFiles() );
comment|// should not contain:<gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>
name|assertFalse
argument_list|(
name|handler
operator|.
name|getHiddenFiles
argument_list|()
operator|.
name|contains
argument_list|(
literal|"scheam.xml"
operator|.
name|toUpperCase
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|handler
operator|.
name|getHiddenFiles
argument_list|()
operator|.
name|contains
argument_list|(
literal|"PROTWORDS.TXT"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTermIndexInterval
specifier|public
name|void
name|testTermIndexInterval
parameter_list|()
throws|throws
name|Exception
block|{
name|IndexWriter
name|writer
init|=
operator|(
operator|(
name|DirectUpdateHandler2
operator|)
name|h
operator|.
name|getCore
argument_list|()
operator|.
name|getUpdateHandler
argument_list|()
operator|)
operator|.
name|getSolrCoreState
argument_list|()
operator|.
name|getIndexWriter
argument_list|(
name|h
operator|.
name|getCore
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|interval
init|=
name|writer
operator|.
name|getConfig
argument_list|()
operator|.
name|getTermIndexInterval
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|256
argument_list|,
name|interval
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testTermIndexDivisor
specifier|public
name|void
name|testTermIndexDivisor
parameter_list|()
throws|throws
name|Exception
block|{
name|IndexReaderFactory
name|irf
init|=
name|h
operator|.
name|getCore
argument_list|()
operator|.
name|getIndexReaderFactory
argument_list|()
decl_stmt|;
name|StandardIndexReaderFactory
name|sirf
init|=
operator|(
name|StandardIndexReaderFactory
operator|)
name|irf
decl_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|sirf
operator|.
name|termInfosIndexDivisor
argument_list|)
expr_stmt|;
block|}
comment|// If defaults change, add test methods to cover each version
annotation|@
name|Test
DECL|method|testDefaults
specifier|public
name|void
name|testDefaults
parameter_list|()
throws|throws
name|Exception
block|{
name|SolrConfig
name|sc
init|=
operator|new
name|SolrConfig
argument_list|(
literal|"solrconfig-basic.xml"
argument_list|)
decl_stmt|;
name|SolrIndexConfig
name|sic
init|=
name|sc
operator|.
name|indexConfig
decl_stmt|;
name|assertTrue
argument_list|(
literal|"default ramBufferSizeMB should be 32"
argument_list|,
name|sic
operator|.
name|ramBufferSizeMB
operator|==
literal|32
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"default useCompoundFile should be false"
argument_list|,
name|sic
operator|.
name|useCompoundFile
operator|==
literal|false
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"default LockType should be native"
argument_list|,
name|sic
operator|.
name|lockType
operator|.
name|equals
argument_list|(
name|SolrIndexConfig
operator|.
name|LOCK_TYPE_NATIVE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDefaults31
specifier|public
name|void
name|testDefaults31
parameter_list|()
throws|throws
name|Exception
block|{
name|SolrConfig
name|sc
init|=
operator|new
name|SolrConfig
argument_list|(
literal|"solrconfig-basic-luceneVersion31.xml"
argument_list|)
decl_stmt|;
name|SolrIndexConfig
name|sic
init|=
name|sc
operator|.
name|indexConfig
decl_stmt|;
name|assertTrue
argument_list|(
literal|"default ramBufferSizeMB should be 16"
argument_list|,
name|sic
operator|.
name|ramBufferSizeMB
operator|==
literal|16
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"default useCompoundFile should be true"
argument_list|,
name|sic
operator|.
name|useCompoundFile
operator|==
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"default LockType should be simple"
argument_list|,
name|sic
operator|.
name|lockType
operator|.
name|equals
argument_list|(
name|SolrIndexConfig
operator|.
name|LOCK_TYPE_SIMPLE
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
