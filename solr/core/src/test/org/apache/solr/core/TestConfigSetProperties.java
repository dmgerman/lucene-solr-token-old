begin_unit
begin_package
DECL|package|org.apache.solr.core
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import
begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import
begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|com
operator|.
name|carrotsearch
operator|.
name|randomizedtesting
operator|.
name|rules
operator|.
name|SystemPropertiesRestoreRule
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|SolrTestCaseJ4
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
operator|.
name|ErrorCode
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|RuleChain
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestRule
import|;
end_import
begin_import
import|import
name|org
operator|.
name|noggit
operator|.
name|JSONUtil
import|;
end_import
begin_class
DECL|class|TestConfigSetProperties
specifier|public
class|class
name|TestConfigSetProperties
extends|extends
name|SolrTestCaseJ4
block|{
annotation|@
name|Rule
DECL|field|testRule
specifier|public
name|TestRule
name|testRule
init|=
name|RuleChain
operator|.
name|outerRule
argument_list|(
operator|new
name|SystemPropertiesRestoreRule
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Test
DECL|method|testNoConfigSetPropertiesFile
specifier|public
name|void
name|testNoConfigSetPropertiesFile
parameter_list|()
throws|throws
name|Exception
block|{
name|assertNull
argument_list|(
name|createConfigSetProps
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEmptyConfigSetProperties
specifier|public
name|void
name|testEmptyConfigSetProperties
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|createConfigSetProps
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Excepted SolrException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|ErrorCode
operator|.
name|SERVER_ERROR
operator|.
name|code
argument_list|,
name|ex
operator|.
name|code
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testConfigSetPropertiesNotMap
specifier|public
name|void
name|testConfigSetPropertiesNotMap
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|createConfigSetProps
argument_list|(
name|JSONUtil
operator|.
name|toJSON
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"test"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected SolrException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SolrException
name|ex
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|ErrorCode
operator|.
name|SERVER_ERROR
operator|.
name|code
argument_list|,
name|ex
operator|.
name|code
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testEmptyMap
specifier|public
name|void
name|testEmptyMap
parameter_list|()
throws|throws
name|Exception
block|{
name|NamedList
name|list
init|=
name|createConfigSetProps
argument_list|(
name|JSONUtil
operator|.
name|toJSON
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMultipleProps
specifier|public
name|void
name|testMultipleProps
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
name|map
init|=
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"immutable"
argument_list|,
literal|"true"
argument_list|,
literal|"someOtherProp"
argument_list|,
literal|"true"
argument_list|)
decl_stmt|;
name|NamedList
name|list
init|=
name|createConfigSetProps
argument_list|(
name|JSONUtil
operator|.
name|toJSON
argument_list|(
name|map
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"true"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|"immutable"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"true"
argument_list|,
name|list
operator|.
name|get
argument_list|(
literal|"someOtherProp"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|createConfigSetProps
specifier|private
name|NamedList
name|createConfigSetProps
parameter_list|(
name|String
name|props
parameter_list|)
throws|throws
name|Exception
block|{
name|Path
name|testDirectory
init|=
name|createTempDir
argument_list|()
decl_stmt|;
name|String
name|filename
init|=
literal|"configsetprops.json"
decl_stmt|;
if|if
condition|(
name|props
operator|!=
literal|null
condition|)
block|{
name|Path
name|confDir
init|=
name|testDirectory
operator|.
name|resolve
argument_list|(
literal|"conf"
argument_list|)
decl_stmt|;
name|Files
operator|.
name|createDirectories
argument_list|(
name|confDir
argument_list|)
expr_stmt|;
name|Files
operator|.
name|write
argument_list|(
name|confDir
operator|.
name|resolve
argument_list|(
name|filename
argument_list|)
argument_list|,
name|props
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|SolrResourceLoader
name|loader
init|=
operator|new
name|SolrResourceLoader
argument_list|(
name|testDirectory
argument_list|)
decl_stmt|;
return|return
name|ConfigSetProperties
operator|.
name|readFromResourceLoader
argument_list|(
name|loader
argument_list|,
name|filename
argument_list|)
return|;
block|}
block|}
end_class
end_unit
