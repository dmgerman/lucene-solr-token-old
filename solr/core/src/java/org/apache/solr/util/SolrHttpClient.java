begin_unit
begin_package
DECL|package|org.apache.solr.util
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpHost
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|ClientProtocolException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|ResponseHandler
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|CloseableHttpResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|methods
operator|.
name|HttpUriRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|conn
operator|.
name|ClientConnectionManager
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|DefaultHttpClient
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|impl
operator|.
name|client
operator|.
name|SystemDefaultHttpClient
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|protocol
operator|.
name|HttpContext
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|client
operator|.
name|solrj
operator|.
name|impl
operator|.
name|SolrHttpContext
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequestContext
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrRequestInfo
import|;
end_import
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_class
DECL|class|SolrHttpClient
specifier|public
class|class
name|SolrHttpClient
block|{
DECL|method|getHttpContext
specifier|private
specifier|static
name|HttpContext
name|getHttpContext
parameter_list|()
block|{
name|SolrRequestInfo
name|requestInfo
init|=
name|SolrRequestInfo
operator|.
name|getRequestInfo
argument_list|()
decl_stmt|;
name|SolrQueryRequest
name|request
init|=
name|requestInfo
operator|==
literal|null
condition|?
literal|null
else|:
name|requestInfo
operator|.
name|getReq
argument_list|()
decl_stmt|;
return|return
name|request
operator|==
literal|null
condition|?
name|SolrHttpContext
operator|.
name|EMPTY_CONTEXT
else|:
operator|new
name|SolrQueryRequestContext
argument_list|(
name|request
argument_list|)
return|;
block|}
DECL|class|SolrSystemDefaultHttpClient
specifier|public
specifier|static
class|class
name|SolrSystemDefaultHttpClient
extends|extends
name|SystemDefaultHttpClient
block|{
DECL|method|SolrSystemDefaultHttpClient
specifier|public
name|SolrSystemDefaultHttpClient
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|execute
specifier|public
name|CloseableHttpResponse
name|execute
parameter_list|(
name|HttpUriRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|super
operator|.
name|execute
argument_list|(
name|request
argument_list|,
name|getHttpContext
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|execute
specifier|public
name|CloseableHttpResponse
name|execute
parameter_list|(
name|HttpHost
name|target
parameter_list|,
name|HttpRequest
name|request
parameter_list|)
throws|throws
name|IOException
throws|,
name|ClientProtocolException
block|{
return|return
name|super
operator|.
name|execute
argument_list|(
name|target
argument_list|,
name|request
argument_list|,
name|getHttpContext
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|execute
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|execute
parameter_list|(
name|HttpUriRequest
name|request
parameter_list|,
name|ResponseHandler
argument_list|<
name|?
extends|extends
name|T
argument_list|>
name|responseHandler
parameter_list|)
throws|throws
name|IOException
throws|,
name|ClientProtocolException
block|{
return|return
name|super
operator|.
name|execute
argument_list|(
name|request
argument_list|,
name|responseHandler
argument_list|,
name|getHttpContext
argument_list|()
argument_list|)
return|;
block|}
block|}
DECL|class|SolrDefaultHttpClient
specifier|public
specifier|static
class|class
name|SolrDefaultHttpClient
extends|extends
name|DefaultHttpClient
block|{
DECL|method|SolrDefaultHttpClient
specifier|public
name|SolrDefaultHttpClient
parameter_list|(
name|ClientConnectionManager
name|cm
parameter_list|)
block|{
name|super
argument_list|(
name|cm
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|execute
specifier|public
name|CloseableHttpResponse
name|execute
parameter_list|(
name|HttpUriRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|super
operator|.
name|execute
argument_list|(
name|request
argument_list|,
name|getHttpContext
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|execute
specifier|public
name|CloseableHttpResponse
name|execute
parameter_list|(
name|HttpHost
name|target
parameter_list|,
name|HttpRequest
name|request
parameter_list|)
throws|throws
name|IOException
throws|,
name|ClientProtocolException
block|{
return|return
name|super
operator|.
name|execute
argument_list|(
name|target
argument_list|,
name|request
argument_list|,
name|getHttpContext
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|execute
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|execute
parameter_list|(
name|HttpUriRequest
name|request
parameter_list|,
name|ResponseHandler
argument_list|<
name|?
extends|extends
name|T
argument_list|>
name|responseHandler
parameter_list|)
throws|throws
name|IOException
throws|,
name|ClientProtocolException
block|{
return|return
name|super
operator|.
name|execute
argument_list|(
name|request
argument_list|,
name|responseHandler
argument_list|,
name|getHttpContext
argument_list|()
argument_list|)
return|;
block|}
block|}
block|}
end_class
end_unit
