begin_unit
begin_package
DECL|package|org.apache.solr.util
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import
begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import
begin_import
import|import
name|com
operator|.
name|spatial4j
operator|.
name|core
operator|.
name|distance
operator|.
name|DistanceUtils
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|schema
operator|.
name|AbstractSpatialFieldType
import|;
end_import
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/**  * Used with a spatial field type for all distance measurements.  *   * @see AbstractSpatialFieldType  */
end_comment
begin_class
DECL|class|DistanceUnits
specifier|public
class|class
name|DistanceUnits
block|{
DECL|field|KILOMETERS_PARAM
specifier|public
specifier|final
specifier|static
name|String
name|KILOMETERS_PARAM
init|=
literal|"kilometers"
decl_stmt|;
DECL|field|MILES_PARAM
specifier|public
specifier|final
specifier|static
name|String
name|MILES_PARAM
init|=
literal|"miles"
decl_stmt|;
DECL|field|DEGREES_PARAM
specifier|public
specifier|final
specifier|static
name|String
name|DEGREES_PARAM
init|=
literal|"degrees"
decl_stmt|;
comment|// Singleton distance units instances
DECL|field|KILOMETERS
specifier|public
specifier|final
specifier|static
name|DistanceUnits
name|KILOMETERS
init|=
operator|new
name|DistanceUnits
argument_list|(
name|KILOMETERS_PARAM
argument_list|,
name|DistanceUtils
operator|.
name|EARTH_MEAN_RADIUS_KM
argument_list|,
name|DistanceUtils
operator|.
name|KM_TO_DEG
argument_list|)
decl_stmt|;
DECL|field|MILES
specifier|public
specifier|final
specifier|static
name|DistanceUnits
name|MILES
init|=
operator|new
name|DistanceUnits
argument_list|(
name|MILES_PARAM
argument_list|,
name|DistanceUtils
operator|.
name|EARTH_MEAN_RADIUS_MI
argument_list|,
name|DistanceUtils
operator|.
name|MILES_TO_KM
operator|*
name|DistanceUtils
operator|.
name|KM_TO_DEG
argument_list|)
decl_stmt|;
DECL|field|DEGREES
specifier|public
specifier|final
specifier|static
name|DistanceUnits
name|DEGREES
init|=
operator|new
name|DistanceUnits
argument_list|(
name|DEGREES_PARAM
argument_list|,
literal|180.0
operator|/
name|Math
operator|.
name|PI
argument_list|,
literal|1.0
argument_list|)
decl_stmt|;
comment|// Previously, distance based filtering was done with km, but scores were based on degrees
annotation|@
name|Deprecated
DECL|field|BACKCOMPAT
specifier|public
specifier|final
specifier|static
name|DistanceUnits
name|BACKCOMPAT
init|=
operator|new
name|DistanceUnits
argument_list|(
literal|"backcompat"
argument_list|,
name|DistanceUtils
operator|.
name|EARTH_MEAN_RADIUS_KM
argument_list|,
literal|1.0
argument_list|)
decl_stmt|;
comment|//volatile so other threads see when we replace when copy-on-write
DECL|field|instances
specifier|private
specifier|static
specifier|volatile
name|Map
argument_list|<
name|String
argument_list|,
name|DistanceUnits
argument_list|>
name|instances
init|=
name|ImmutableMap
operator|.
name|of
argument_list|(
name|KILOMETERS_PARAM
argument_list|,
name|KILOMETERS
argument_list|,
name|MILES_PARAM
argument_list|,
name|MILES
argument_list|,
name|DEGREES_PARAM
argument_list|,
name|DEGREES
argument_list|)
decl_stmt|;
DECL|field|stringIdentifier
specifier|private
specifier|final
name|String
name|stringIdentifier
decl_stmt|;
DECL|field|earthRadius
specifier|private
specifier|final
name|double
name|earthRadius
decl_stmt|;
DECL|field|multiplierThisToDegrees
specifier|private
specifier|final
name|double
name|multiplierThisToDegrees
decl_stmt|;
DECL|field|multiplierDegreesToThis
specifier|private
specifier|final
name|double
name|multiplierDegreesToThis
decl_stmt|;
DECL|method|DistanceUnits
specifier|private
name|DistanceUnits
parameter_list|(
name|String
name|str
parameter_list|,
name|double
name|earthRadius
parameter_list|,
name|double
name|multiplierThisToDegrees
parameter_list|)
block|{
name|this
operator|.
name|stringIdentifier
operator|=
name|str
expr_stmt|;
name|this
operator|.
name|earthRadius
operator|=
name|earthRadius
expr_stmt|;
name|this
operator|.
name|multiplierThisToDegrees
operator|=
name|multiplierThisToDegrees
expr_stmt|;
name|this
operator|.
name|multiplierDegreesToThis
operator|=
literal|1.0
operator|/
name|multiplierThisToDegrees
expr_stmt|;
block|}
comment|/**    * Parses a string representation of distance units and returns its implementing class instance.    * Preferred way to parse a DistanceUnits would be to use {@link AbstractSpatialFieldType#parseDistanceUnits(String)},    * since it will default to one defined on the field type if the string is null.    *     * @param str String representation of distance units, e.g. "kilometers", "miles" etc. (null ok)    * @return an instance of the concrete DistanceUnits, null if not found.    */
DECL|method|valueOf
specifier|public
specifier|static
name|DistanceUnits
name|valueOf
parameter_list|(
name|String
name|str
parameter_list|)
block|{
return|return
name|instances
operator|.
name|get
argument_list|(
name|str
argument_list|)
return|;
block|}
DECL|method|getSupportedUnits
specifier|public
specifier|static
name|Set
argument_list|<
name|String
argument_list|>
name|getSupportedUnits
parameter_list|()
block|{
return|return
name|instances
operator|.
name|keySet
argument_list|()
return|;
block|}
comment|/**    *     * @return Radius of the earth in this distance units    */
DECL|method|getEarthRadius
specifier|public
name|double
name|getEarthRadius
parameter_list|()
block|{
return|return
name|earthRadius
return|;
block|}
comment|/**    *     * @return multiplier needed to convert a distance in current units to degrees    */
DECL|method|multiplierFromThisUnitToDegrees
specifier|public
name|double
name|multiplierFromThisUnitToDegrees
parameter_list|()
block|{
return|return
name|multiplierThisToDegrees
return|;
block|}
comment|/**    *     * @return multiplier needed to convert a distance in degrees to current units    */
DECL|method|multiplierFromDegreesToThisUnit
specifier|public
name|double
name|multiplierFromDegreesToThisUnit
parameter_list|()
block|{
return|return
name|multiplierDegreesToThis
return|;
block|}
comment|/**    *     * @return the string identifier associated with this units instance    */
DECL|method|getStringIdentifier
specifier|public
name|String
name|getStringIdentifier
parameter_list|()
block|{
return|return
name|stringIdentifier
return|;
block|}
comment|/**    * Custom distance units can be supplied using this method. It's thread-safe.    *     * @param strId string identifier for the units    * @param earthRadius radius of earth in supplied units    * @param multiplierThisToDegrees multiplier to convert to degrees    */
DECL|method|addUnits
specifier|public
specifier|static
specifier|synchronized
name|void
name|addUnits
parameter_list|(
name|String
name|strId
parameter_list|,
name|double
name|earthRadius
parameter_list|,
name|double
name|multiplierThisToDegrees
parameter_list|)
block|{
comment|//copy-on-write.
name|Map
argument_list|<
name|String
argument_list|,
name|DistanceUnits
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|DistanceUnits
argument_list|>
argument_list|(
name|instances
argument_list|)
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|strId
argument_list|,
operator|new
name|DistanceUnits
argument_list|(
name|strId
argument_list|,
name|earthRadius
argument_list|,
name|multiplierThisToDegrees
argument_list|)
argument_list|)
expr_stmt|;
name|instances
operator|=
name|ImmutableMap
operator|.
name|copyOf
argument_list|(
name|map
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getStringIdentifier
argument_list|()
return|;
block|}
block|}
end_class
end_unit
