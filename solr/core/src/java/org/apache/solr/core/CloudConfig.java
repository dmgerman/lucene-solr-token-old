begin_unit
begin_package
DECL|package|org.apache.solr.core
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|core
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
import|;
end_import
begin_class
DECL|class|CloudConfig
specifier|public
class|class
name|CloudConfig
block|{
DECL|field|zkHost
specifier|private
specifier|final
name|String
name|zkHost
decl_stmt|;
DECL|field|zkClientTimeout
specifier|private
specifier|final
name|int
name|zkClientTimeout
decl_stmt|;
DECL|field|hostPort
specifier|private
specifier|final
name|int
name|hostPort
decl_stmt|;
DECL|field|hostName
specifier|private
specifier|final
name|String
name|hostName
decl_stmt|;
DECL|field|hostContext
specifier|private
specifier|final
name|String
name|hostContext
decl_stmt|;
DECL|field|useGenericCoreNames
specifier|private
specifier|final
name|boolean
name|useGenericCoreNames
decl_stmt|;
DECL|field|leaderVoteWait
specifier|private
specifier|final
name|int
name|leaderVoteWait
decl_stmt|;
DECL|field|leaderConflictResolveWait
specifier|private
specifier|final
name|int
name|leaderConflictResolveWait
decl_stmt|;
DECL|field|autoReplicaFailoverWaitAfterExpiration
specifier|private
specifier|final
name|int
name|autoReplicaFailoverWaitAfterExpiration
decl_stmt|;
DECL|field|autoReplicaFailoverWorkLoopDelay
specifier|private
specifier|final
name|int
name|autoReplicaFailoverWorkLoopDelay
decl_stmt|;
DECL|field|autoReplicaFailoverBadNodeExpiration
specifier|private
specifier|final
name|int
name|autoReplicaFailoverBadNodeExpiration
decl_stmt|;
DECL|field|zkCredentialsProviderClass
specifier|private
specifier|final
name|String
name|zkCredentialsProviderClass
decl_stmt|;
DECL|field|zkACLProviderClass
specifier|private
specifier|final
name|String
name|zkACLProviderClass
decl_stmt|;
DECL|method|CloudConfig
name|CloudConfig
parameter_list|(
name|String
name|zkHost
parameter_list|,
name|int
name|zkClientTimeout
parameter_list|,
name|int
name|hostPort
parameter_list|,
name|String
name|hostName
parameter_list|,
name|String
name|hostContext
parameter_list|,
name|boolean
name|useGenericCoreNames
parameter_list|,
name|int
name|leaderVoteWait
parameter_list|,
name|int
name|leaderConflictResolveWait
parameter_list|,
name|int
name|autoReplicaFailoverWaitAfterExpiration
parameter_list|,
name|int
name|autoReplicaFailoverWorkLoopDelay
parameter_list|,
name|int
name|autoReplicaFailoverBadNodeExpiration
parameter_list|,
name|String
name|zkCredentialsProviderClass
parameter_list|,
name|String
name|zkACLProviderClass
parameter_list|)
block|{
name|this
operator|.
name|zkHost
operator|=
name|zkHost
expr_stmt|;
name|this
operator|.
name|zkClientTimeout
operator|=
name|zkClientTimeout
expr_stmt|;
name|this
operator|.
name|hostPort
operator|=
name|hostPort
expr_stmt|;
name|this
operator|.
name|hostName
operator|=
name|hostName
expr_stmt|;
name|this
operator|.
name|hostContext
operator|=
name|hostContext
expr_stmt|;
name|this
operator|.
name|useGenericCoreNames
operator|=
name|useGenericCoreNames
expr_stmt|;
name|this
operator|.
name|leaderVoteWait
operator|=
name|leaderVoteWait
expr_stmt|;
name|this
operator|.
name|leaderConflictResolveWait
operator|=
name|leaderConflictResolveWait
expr_stmt|;
name|this
operator|.
name|autoReplicaFailoverWaitAfterExpiration
operator|=
name|autoReplicaFailoverWaitAfterExpiration
expr_stmt|;
name|this
operator|.
name|autoReplicaFailoverWorkLoopDelay
operator|=
name|autoReplicaFailoverWorkLoopDelay
expr_stmt|;
name|this
operator|.
name|autoReplicaFailoverBadNodeExpiration
operator|=
name|autoReplicaFailoverBadNodeExpiration
expr_stmt|;
name|this
operator|.
name|zkCredentialsProviderClass
operator|=
name|zkCredentialsProviderClass
expr_stmt|;
name|this
operator|.
name|zkACLProviderClass
operator|=
name|zkACLProviderClass
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|hostPort
operator|==
operator|-
literal|1
condition|)
throw|throw
operator|new
name|SolrException
argument_list|(
name|SolrException
operator|.
name|ErrorCode
operator|.
name|SERVER_ERROR
argument_list|,
literal|"'hostPort' must be configured to run SolrCloud"
argument_list|)
throw|;
if|if
condition|(
name|this
operator|.
name|hostContext
operator|==
literal|null
condition|)
throw|throw
operator|new
name|SolrException
argument_list|(
name|SolrException
operator|.
name|ErrorCode
operator|.
name|SERVER_ERROR
argument_list|,
literal|"'hostContext' must be configured to run SolrCloud"
argument_list|)
throw|;
block|}
DECL|method|getZkHost
specifier|public
name|String
name|getZkHost
parameter_list|()
block|{
return|return
name|zkHost
return|;
block|}
DECL|method|getZkClientTimeout
specifier|public
name|int
name|getZkClientTimeout
parameter_list|()
block|{
return|return
name|zkClientTimeout
return|;
block|}
DECL|method|getSolrHostPort
specifier|public
name|int
name|getSolrHostPort
parameter_list|()
block|{
return|return
name|hostPort
return|;
block|}
DECL|method|getSolrHostContext
specifier|public
name|String
name|getSolrHostContext
parameter_list|()
block|{
return|return
name|hostContext
return|;
block|}
DECL|method|getHost
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
name|hostName
return|;
block|}
DECL|method|getZkCredentialsProviderClass
specifier|public
name|String
name|getZkCredentialsProviderClass
parameter_list|()
block|{
return|return
name|zkCredentialsProviderClass
return|;
block|}
DECL|method|getZkACLProviderClass
specifier|public
name|String
name|getZkACLProviderClass
parameter_list|()
block|{
return|return
name|zkACLProviderClass
return|;
block|}
DECL|method|getLeaderVoteWait
specifier|public
name|int
name|getLeaderVoteWait
parameter_list|()
block|{
return|return
name|leaderVoteWait
return|;
block|}
DECL|method|getLeaderConflictResolveWait
specifier|public
name|int
name|getLeaderConflictResolveWait
parameter_list|()
block|{
return|return
name|leaderConflictResolveWait
return|;
block|}
DECL|method|getAutoReplicaFailoverWaitAfterExpiration
specifier|public
name|int
name|getAutoReplicaFailoverWaitAfterExpiration
parameter_list|()
block|{
return|return
name|autoReplicaFailoverWaitAfterExpiration
return|;
block|}
DECL|method|getAutoReplicaFailoverWorkLoopDelay
specifier|public
name|int
name|getAutoReplicaFailoverWorkLoopDelay
parameter_list|()
block|{
return|return
name|autoReplicaFailoverWorkLoopDelay
return|;
block|}
DECL|method|getAutoReplicaFailoverBadNodeExpiration
specifier|public
name|int
name|getAutoReplicaFailoverBadNodeExpiration
parameter_list|()
block|{
return|return
name|autoReplicaFailoverBadNodeExpiration
return|;
block|}
DECL|method|getGenericCoreNodeNames
specifier|public
name|boolean
name|getGenericCoreNodeNames
parameter_list|()
block|{
return|return
name|useGenericCoreNames
return|;
block|}
DECL|class|CloudConfigBuilder
specifier|public
specifier|static
class|class
name|CloudConfigBuilder
block|{
DECL|field|DEFAULT_ZK_CLIENT_TIMEOUT
specifier|private
specifier|static
specifier|final
name|int
name|DEFAULT_ZK_CLIENT_TIMEOUT
init|=
literal|15000
decl_stmt|;
DECL|field|DEFAULT_LEADER_VOTE_WAIT
specifier|private
specifier|static
specifier|final
name|int
name|DEFAULT_LEADER_VOTE_WAIT
init|=
literal|180000
decl_stmt|;
comment|// 3 minutes
DECL|field|DEFAULT_LEADER_CONFLICT_RESOLVE_WAIT
specifier|private
specifier|static
specifier|final
name|int
name|DEFAULT_LEADER_CONFLICT_RESOLVE_WAIT
init|=
literal|180000
decl_stmt|;
comment|// TODO: tune defaults
DECL|field|DEFAULT_AUTO_REPLICA_FAILOVER_WAIT_AFTER_EXPIRATION
specifier|private
specifier|static
specifier|final
name|int
name|DEFAULT_AUTO_REPLICA_FAILOVER_WAIT_AFTER_EXPIRATION
init|=
literal|30000
decl_stmt|;
DECL|field|DEFAULT_AUTO_REPLICA_FAILOVER_WORKLOOP_DELAY
specifier|private
specifier|static
specifier|final
name|int
name|DEFAULT_AUTO_REPLICA_FAILOVER_WORKLOOP_DELAY
init|=
literal|10000
decl_stmt|;
DECL|field|DEFAULT_AUTO_REPLICA_FAILOVER_BAD_NODE_EXPIRATION
specifier|private
specifier|static
specifier|final
name|int
name|DEFAULT_AUTO_REPLICA_FAILOVER_BAD_NODE_EXPIRATION
init|=
literal|60000
decl_stmt|;
DECL|field|zkHost
specifier|private
name|String
name|zkHost
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"zkHost"
argument_list|)
decl_stmt|;
DECL|field|zkClientTimeout
specifier|private
name|int
name|zkClientTimeout
init|=
name|Integer
operator|.
name|getInteger
argument_list|(
literal|"zkClientTimeout"
argument_list|,
name|DEFAULT_ZK_CLIENT_TIMEOUT
argument_list|)
decl_stmt|;
DECL|field|hostPort
specifier|private
specifier|final
name|int
name|hostPort
decl_stmt|;
DECL|field|hostName
specifier|private
specifier|final
name|String
name|hostName
decl_stmt|;
DECL|field|hostContext
specifier|private
specifier|final
name|String
name|hostContext
decl_stmt|;
DECL|field|useGenericCoreNames
specifier|private
name|boolean
name|useGenericCoreNames
decl_stmt|;
DECL|field|leaderVoteWait
specifier|private
name|int
name|leaderVoteWait
init|=
name|DEFAULT_LEADER_VOTE_WAIT
decl_stmt|;
DECL|field|leaderConflictResolveWait
specifier|private
name|int
name|leaderConflictResolveWait
init|=
name|DEFAULT_LEADER_CONFLICT_RESOLVE_WAIT
decl_stmt|;
DECL|field|autoReplicaFailoverWaitAfterExpiration
specifier|private
name|int
name|autoReplicaFailoverWaitAfterExpiration
init|=
name|DEFAULT_AUTO_REPLICA_FAILOVER_WAIT_AFTER_EXPIRATION
decl_stmt|;
DECL|field|autoReplicaFailoverWorkLoopDelay
specifier|private
name|int
name|autoReplicaFailoverWorkLoopDelay
init|=
name|DEFAULT_AUTO_REPLICA_FAILOVER_WORKLOOP_DELAY
decl_stmt|;
DECL|field|autoReplicaFailoverBadNodeExpiration
specifier|private
name|int
name|autoReplicaFailoverBadNodeExpiration
init|=
name|DEFAULT_AUTO_REPLICA_FAILOVER_BAD_NODE_EXPIRATION
decl_stmt|;
DECL|field|zkCredentialsProviderClass
specifier|private
name|String
name|zkCredentialsProviderClass
decl_stmt|;
DECL|field|zkACLProviderClass
specifier|private
name|String
name|zkACLProviderClass
decl_stmt|;
DECL|method|CloudConfigBuilder
specifier|public
name|CloudConfigBuilder
parameter_list|(
name|String
name|hostName
parameter_list|,
name|int
name|hostPort
parameter_list|)
block|{
name|this
argument_list|(
name|hostName
argument_list|,
name|hostPort
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|CloudConfigBuilder
specifier|public
name|CloudConfigBuilder
parameter_list|(
name|String
name|hostName
parameter_list|,
name|int
name|hostPort
parameter_list|,
name|String
name|hostContext
parameter_list|)
block|{
name|this
operator|.
name|hostName
operator|=
name|hostName
expr_stmt|;
name|this
operator|.
name|hostPort
operator|=
name|hostPort
expr_stmt|;
name|this
operator|.
name|hostContext
operator|=
name|hostContext
expr_stmt|;
block|}
DECL|method|setZkHost
specifier|public
name|CloudConfigBuilder
name|setZkHost
parameter_list|(
name|String
name|zkHost
parameter_list|)
block|{
name|this
operator|.
name|zkHost
operator|=
name|zkHost
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setZkClientTimeout
specifier|public
name|CloudConfigBuilder
name|setZkClientTimeout
parameter_list|(
name|int
name|zkClientTimeout
parameter_list|)
block|{
name|this
operator|.
name|zkClientTimeout
operator|=
name|zkClientTimeout
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setUseGenericCoreNames
specifier|public
name|CloudConfigBuilder
name|setUseGenericCoreNames
parameter_list|(
name|boolean
name|useGenericCoreNames
parameter_list|)
block|{
name|this
operator|.
name|useGenericCoreNames
operator|=
name|useGenericCoreNames
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setLeaderVoteWait
specifier|public
name|CloudConfigBuilder
name|setLeaderVoteWait
parameter_list|(
name|int
name|leaderVoteWait
parameter_list|)
block|{
name|this
operator|.
name|leaderVoteWait
operator|=
name|leaderVoteWait
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setLeaderConflictResolveWait
specifier|public
name|CloudConfigBuilder
name|setLeaderConflictResolveWait
parameter_list|(
name|int
name|leaderConflictResolveWait
parameter_list|)
block|{
name|this
operator|.
name|leaderConflictResolveWait
operator|=
name|leaderConflictResolveWait
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setAutoReplicaFailoverWaitAfterExpiration
specifier|public
name|CloudConfigBuilder
name|setAutoReplicaFailoverWaitAfterExpiration
parameter_list|(
name|int
name|autoReplicaFailoverWaitAfterExpiration
parameter_list|)
block|{
name|this
operator|.
name|autoReplicaFailoverWaitAfterExpiration
operator|=
name|autoReplicaFailoverWaitAfterExpiration
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setAutoReplicaFailoverWorkLoopDelay
specifier|public
name|CloudConfigBuilder
name|setAutoReplicaFailoverWorkLoopDelay
parameter_list|(
name|int
name|autoReplicaFailoverWorkLoopDelay
parameter_list|)
block|{
name|this
operator|.
name|autoReplicaFailoverWorkLoopDelay
operator|=
name|autoReplicaFailoverWorkLoopDelay
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setAutoReplicaFailoverBadNodeExpiration
specifier|public
name|CloudConfigBuilder
name|setAutoReplicaFailoverBadNodeExpiration
parameter_list|(
name|int
name|autoReplicaFailoverBadNodeExpiration
parameter_list|)
block|{
name|this
operator|.
name|autoReplicaFailoverBadNodeExpiration
operator|=
name|autoReplicaFailoverBadNodeExpiration
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setZkCredentialsProviderClass
specifier|public
name|CloudConfigBuilder
name|setZkCredentialsProviderClass
parameter_list|(
name|String
name|zkCredentialsProviderClass
parameter_list|)
block|{
name|this
operator|.
name|zkCredentialsProviderClass
operator|=
name|zkCredentialsProviderClass
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setZkACLProviderClass
specifier|public
name|CloudConfigBuilder
name|setZkACLProviderClass
parameter_list|(
name|String
name|zkACLProviderClass
parameter_list|)
block|{
name|this
operator|.
name|zkACLProviderClass
operator|=
name|zkACLProviderClass
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|build
specifier|public
name|CloudConfig
name|build
parameter_list|()
block|{
return|return
operator|new
name|CloudConfig
argument_list|(
name|zkHost
argument_list|,
name|zkClientTimeout
argument_list|,
name|hostPort
argument_list|,
name|hostName
argument_list|,
name|hostContext
argument_list|,
name|useGenericCoreNames
argument_list|,
name|leaderVoteWait
argument_list|,
name|leaderConflictResolveWait
argument_list|,
name|autoReplicaFailoverWaitAfterExpiration
argument_list|,
name|autoReplicaFailoverWorkLoopDelay
argument_list|,
name|autoReplicaFailoverBadNodeExpiration
argument_list|,
name|zkCredentialsProviderClass
argument_list|,
name|zkACLProviderClass
argument_list|)
return|;
block|}
block|}
block|}
end_class
end_unit
