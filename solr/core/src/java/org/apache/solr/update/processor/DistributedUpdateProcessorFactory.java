begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.update.processor
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|processor
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|SolrQueryResponse
import|;
end_import
begin_comment
comment|/**  * Factory for {@link DistributedUpdateProcessor}.  *  * @see DistributedUpdateProcessor  */
end_comment
begin_class
DECL|class|DistributedUpdateProcessorFactory
specifier|public
class|class
name|DistributedUpdateProcessorFactory
extends|extends
name|UpdateRequestProcessorFactory
implements|implements
name|DistributingUpdateProcessorFactory
block|{
comment|/**    * By default, the {@link DistributedUpdateProcessor} is extremely conservative in the list of request     * params that will be copied/included when updates are forwarded to other nodes.  This method may be     * used by any {@link UpdateRequestProcessorFactory#getInstance} call to annotate a     * SolrQueryRequest with the names of parameters that should also be forwarded.    */
DECL|method|addParamToDistributedRequestWhitelist
specifier|public
specifier|static
name|void
name|addParamToDistributedRequestWhitelist
parameter_list|(
specifier|final
name|SolrQueryRequest
name|req
parameter_list|,
specifier|final
name|String
modifier|...
name|paramNames
parameter_list|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|whitelist
init|=
operator|(
name|Set
argument_list|<
name|String
argument_list|>
operator|)
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|get
argument_list|(
name|DistributedUpdateProcessor
operator|.
name|PARAM_WHITELIST_CTX_KEY
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|==
name|whitelist
condition|)
block|{
name|whitelist
operator|=
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|req
operator|.
name|getContext
argument_list|()
operator|.
name|put
argument_list|(
name|DistributedUpdateProcessor
operator|.
name|PARAM_WHITELIST_CTX_KEY
argument_list|,
name|whitelist
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|String
name|p
range|:
name|paramNames
control|)
block|{
name|whitelist
operator|.
name|add
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|init
specifier|public
name|void
name|init
parameter_list|(
name|NamedList
name|args
parameter_list|)
block|{    }
annotation|@
name|Override
DECL|method|getInstance
specifier|public
name|DistributedUpdateProcessor
name|getInstance
parameter_list|(
name|SolrQueryRequest
name|req
parameter_list|,
name|SolrQueryResponse
name|rsp
parameter_list|,
name|UpdateRequestProcessor
name|next
parameter_list|)
block|{
return|return
operator|new
name|DistributedUpdateProcessor
argument_list|(
name|req
argument_list|,
name|rsp
argument_list|,
name|next
argument_list|)
return|;
block|}
block|}
end_class
end_unit
