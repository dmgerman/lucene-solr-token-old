begin_unit
begin_package
DECL|package|org.apache.solr.update
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_class
DECL|class|UpdateShardHandlerConfig
specifier|public
class|class
name|UpdateShardHandlerConfig
block|{
DECL|field|DEFAULT_DISTRIBUPDATECONNTIMEOUT
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_DISTRIBUPDATECONNTIMEOUT
init|=
literal|60000
decl_stmt|;
DECL|field|DEFAULT_DISTRIBUPDATESOTIMEOUT
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_DISTRIBUPDATESOTIMEOUT
init|=
literal|600000
decl_stmt|;
DECL|field|DEFAULT_MAXUPDATECONNECTIONS
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MAXUPDATECONNECTIONS
init|=
literal|100000
decl_stmt|;
DECL|field|DEFAULT_MAXUPDATECONNECTIONSPERHOST
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MAXUPDATECONNECTIONSPERHOST
init|=
literal|100000
decl_stmt|;
DECL|field|DEFAULT
specifier|public
specifier|static
specifier|final
name|UpdateShardHandlerConfig
name|DEFAULT
init|=
operator|new
name|UpdateShardHandlerConfig
argument_list|(
name|DEFAULT_MAXUPDATECONNECTIONS
argument_list|,
name|DEFAULT_MAXUPDATECONNECTIONSPERHOST
argument_list|,
name|DEFAULT_DISTRIBUPDATESOTIMEOUT
argument_list|,
name|DEFAULT_DISTRIBUPDATECONNTIMEOUT
argument_list|)
decl_stmt|;
DECL|field|maxUpdateConnections
specifier|private
specifier|final
name|int
name|maxUpdateConnections
decl_stmt|;
DECL|field|maxUpdateConnectionsPerHost
specifier|private
specifier|final
name|int
name|maxUpdateConnectionsPerHost
decl_stmt|;
DECL|field|distributedSocketTimeout
specifier|private
specifier|final
name|int
name|distributedSocketTimeout
decl_stmt|;
DECL|field|distributedConnectionTimeout
specifier|private
specifier|final
name|int
name|distributedConnectionTimeout
decl_stmt|;
DECL|method|UpdateShardHandlerConfig
specifier|public
name|UpdateShardHandlerConfig
parameter_list|(
name|int
name|maxUpdateConnections
parameter_list|,
name|int
name|maxUpdateConnectionsPerHost
parameter_list|,
name|int
name|distributedSocketTimeout
parameter_list|,
name|int
name|distributedConnectionTimeout
parameter_list|)
block|{
name|this
operator|.
name|maxUpdateConnections
operator|=
name|maxUpdateConnections
expr_stmt|;
name|this
operator|.
name|maxUpdateConnectionsPerHost
operator|=
name|maxUpdateConnectionsPerHost
expr_stmt|;
name|this
operator|.
name|distributedSocketTimeout
operator|=
name|distributedSocketTimeout
expr_stmt|;
name|this
operator|.
name|distributedConnectionTimeout
operator|=
name|distributedConnectionTimeout
expr_stmt|;
block|}
DECL|method|getMaxUpdateConnectionsPerHost
specifier|public
name|int
name|getMaxUpdateConnectionsPerHost
parameter_list|()
block|{
return|return
name|maxUpdateConnectionsPerHost
return|;
block|}
DECL|method|getMaxUpdateConnections
specifier|public
name|int
name|getMaxUpdateConnections
parameter_list|()
block|{
return|return
name|maxUpdateConnections
return|;
block|}
DECL|method|getDistributedSocketTimeout
specifier|public
name|int
name|getDistributedSocketTimeout
parameter_list|()
block|{
return|return
name|distributedSocketTimeout
return|;
block|}
DECL|method|getDistributedConnectionTimeout
specifier|public
name|int
name|getDistributedConnectionTimeout
parameter_list|()
block|{
return|return
name|distributedConnectionTimeout
return|;
block|}
block|}
end_class
end_unit
