begin_unit
begin_package
DECL|package|org.apache.solr.rest
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrRequestInfo
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|CopyFieldCollectionResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|SchemaResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|DefaultSearchFieldResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|DynamicFieldCollectionResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|DynamicFieldResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|FieldCollectionResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|FieldResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|FieldTypeCollectionResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|FieldTypeResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|SchemaNameResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|SchemaSimilarityResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|SchemaVersionResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|SolrQueryParserDefaultOperatorResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|SolrQueryParserResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|rest
operator|.
name|schema
operator|.
name|UniqueKeyFieldResource
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|schema
operator|.
name|IndexSchema
import|;
end_import
begin_import
import|import
name|org
operator|.
name|restlet
operator|.
name|Application
import|;
end_import
begin_import
import|import
name|org
operator|.
name|restlet
operator|.
name|Restlet
import|;
end_import
begin_import
import|import
name|org
operator|.
name|restlet
operator|.
name|routing
operator|.
name|Router
import|;
end_import
begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import
begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import
begin_comment
comment|/**  * Restlet servlet handling /&lt;context&gt;/&lt;collection&gt;/schema/* URL paths  */
end_comment
begin_class
DECL|class|SolrSchemaRestApi
specifier|public
class|class
name|SolrSchemaRestApi
extends|extends
name|Application
block|{
DECL|field|log
specifier|public
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SolrSchemaRestApi
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|FIELDS_PATH
specifier|public
specifier|static
specifier|final
name|String
name|FIELDS_PATH
init|=
literal|"/"
operator|+
name|IndexSchema
operator|.
name|FIELDS
decl_stmt|;
DECL|field|DYNAMIC_FIELDS
specifier|public
specifier|static
specifier|final
name|String
name|DYNAMIC_FIELDS
init|=
name|IndexSchema
operator|.
name|DYNAMIC_FIELDS
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|DYNAMIC_FIELDS_PATH
specifier|public
specifier|static
specifier|final
name|String
name|DYNAMIC_FIELDS_PATH
init|=
literal|"/"
operator|+
name|DYNAMIC_FIELDS
decl_stmt|;
DECL|field|FIELDTYPES
specifier|public
specifier|static
specifier|final
name|String
name|FIELDTYPES
init|=
name|IndexSchema
operator|.
name|FIELD_TYPES
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|FIELDTYPES_PATH
specifier|public
specifier|static
specifier|final
name|String
name|FIELDTYPES_PATH
init|=
literal|"/"
operator|+
name|FIELDTYPES
decl_stmt|;
DECL|field|NAME_PATH
specifier|public
specifier|static
specifier|final
name|String
name|NAME_PATH
init|=
literal|"/"
operator|+
name|IndexSchema
operator|.
name|NAME
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|NAME_SEGMENT
specifier|public
specifier|static
specifier|final
name|String
name|NAME_SEGMENT
init|=
literal|"/{"
operator|+
name|IndexSchema
operator|.
name|NAME
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
operator|+
literal|"}"
decl_stmt|;
DECL|field|COPY_FIELDS
specifier|public
specifier|static
specifier|final
name|String
name|COPY_FIELDS
init|=
name|IndexSchema
operator|.
name|COPY_FIELDS
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|COPY_FIELDS_PATH
specifier|public
specifier|static
specifier|final
name|String
name|COPY_FIELDS_PATH
init|=
literal|"/"
operator|+
name|COPY_FIELDS
decl_stmt|;
DECL|field|VERSION_PATH
specifier|public
specifier|static
specifier|final
name|String
name|VERSION_PATH
init|=
literal|"/"
operator|+
name|IndexSchema
operator|.
name|VERSION
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|DEFAULT_SEARCH_FIELD
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_SEARCH_FIELD
init|=
name|IndexSchema
operator|.
name|DEFAULT_SEARCH_FIELD
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|DEFAULT_SEARCH_FIELD_PATH
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_SEARCH_FIELD_PATH
init|=
literal|"/"
operator|+
name|DEFAULT_SEARCH_FIELD
decl_stmt|;
DECL|field|SIMILARITY_PATH
specifier|public
specifier|static
specifier|final
name|String
name|SIMILARITY_PATH
init|=
literal|"/"
operator|+
name|IndexSchema
operator|.
name|SIMILARITY
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|SOLR_QUERY_PARSER
specifier|public
specifier|static
specifier|final
name|String
name|SOLR_QUERY_PARSER
init|=
name|IndexSchema
operator|.
name|SOLR_QUERY_PARSER
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|SOLR_QUERY_PARSER_PATH
specifier|public
specifier|static
specifier|final
name|String
name|SOLR_QUERY_PARSER_PATH
init|=
literal|"/"
operator|+
name|SOLR_QUERY_PARSER
decl_stmt|;
DECL|field|DEFAULT_OPERATOR
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_OPERATOR
init|=
name|IndexSchema
operator|.
name|DEFAULT_OPERATOR
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|DEFAULT_OPERATOR_PATH
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_OPERATOR_PATH
init|=
name|SOLR_QUERY_PARSER_PATH
operator|+
literal|"/"
operator|+
name|DEFAULT_OPERATOR
decl_stmt|;
DECL|field|UNIQUE_KEY_FIELD
specifier|public
specifier|static
specifier|final
name|String
name|UNIQUE_KEY_FIELD
init|=
name|IndexSchema
operator|.
name|UNIQUE_KEY
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|UNIQUE_KEY_FIELD_PATH
specifier|public
specifier|static
specifier|final
name|String
name|UNIQUE_KEY_FIELD_PATH
init|=
literal|"/"
operator|+
name|UNIQUE_KEY_FIELD
decl_stmt|;
comment|/**    * Returns reserved endpoints under /schema    */
DECL|method|getReservedEndpoints
specifier|public
specifier|static
name|Set
argument_list|<
name|String
argument_list|>
name|getReservedEndpoints
parameter_list|()
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|reservedEndpoints
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|reservedEndpoints
operator|.
name|add
argument_list|(
name|RestManager
operator|.
name|SCHEMA_BASE_PATH
operator|+
name|FIELDS_PATH
argument_list|)
expr_stmt|;
name|reservedEndpoints
operator|.
name|add
argument_list|(
name|RestManager
operator|.
name|SCHEMA_BASE_PATH
operator|+
name|DYNAMIC_FIELDS_PATH
argument_list|)
expr_stmt|;
name|reservedEndpoints
operator|.
name|add
argument_list|(
name|RestManager
operator|.
name|SCHEMA_BASE_PATH
operator|+
name|FIELDTYPES_PATH
argument_list|)
expr_stmt|;
name|reservedEndpoints
operator|.
name|add
argument_list|(
name|RestManager
operator|.
name|SCHEMA_BASE_PATH
operator|+
name|NAME_PATH
argument_list|)
expr_stmt|;
name|reservedEndpoints
operator|.
name|add
argument_list|(
name|RestManager
operator|.
name|SCHEMA_BASE_PATH
operator|+
name|COPY_FIELDS_PATH
argument_list|)
expr_stmt|;
name|reservedEndpoints
operator|.
name|add
argument_list|(
name|RestManager
operator|.
name|SCHEMA_BASE_PATH
operator|+
name|VERSION_PATH
argument_list|)
expr_stmt|;
name|reservedEndpoints
operator|.
name|add
argument_list|(
name|RestManager
operator|.
name|SCHEMA_BASE_PATH
operator|+
name|DEFAULT_SEARCH_FIELD_PATH
argument_list|)
expr_stmt|;
name|reservedEndpoints
operator|.
name|add
argument_list|(
name|RestManager
operator|.
name|SCHEMA_BASE_PATH
operator|+
name|SIMILARITY_PATH
argument_list|)
expr_stmt|;
name|reservedEndpoints
operator|.
name|add
argument_list|(
name|RestManager
operator|.
name|SCHEMA_BASE_PATH
operator|+
name|SOLR_QUERY_PARSER_PATH
argument_list|)
expr_stmt|;
name|reservedEndpoints
operator|.
name|add
argument_list|(
name|RestManager
operator|.
name|SCHEMA_BASE_PATH
operator|+
name|DEFAULT_OPERATOR_PATH
argument_list|)
expr_stmt|;
name|reservedEndpoints
operator|.
name|add
argument_list|(
name|RestManager
operator|.
name|SCHEMA_BASE_PATH
operator|+
name|UNIQUE_KEY_FIELD_PATH
argument_list|)
expr_stmt|;
return|return
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
name|reservedEndpoints
argument_list|)
return|;
block|}
DECL|field|router
specifier|private
name|Router
name|router
decl_stmt|;
DECL|method|SolrSchemaRestApi
specifier|public
name|SolrSchemaRestApi
parameter_list|()
block|{
name|router
operator|=
operator|new
name|Router
argument_list|(
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|stop
specifier|public
name|void
name|stop
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
literal|null
operator|!=
name|router
condition|)
block|{
name|router
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**    * Bind URL paths to the appropriate ServerResource subclass.     */
annotation|@
name|Override
DECL|method|createInboundRoot
specifier|public
specifier|synchronized
name|Restlet
name|createInboundRoot
parameter_list|()
block|{
name|log
operator|.
name|info
argument_list|(
literal|"createInboundRoot started for /schema"
argument_list|)
expr_stmt|;
name|router
operator|.
name|attach
argument_list|(
literal|""
argument_list|,
name|SchemaResource
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Allow a trailing slash on full-schema requests
name|router
operator|.
name|attach
argument_list|(
literal|"/"
argument_list|,
name|SchemaResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|router
operator|.
name|attach
argument_list|(
name|FIELDS_PATH
argument_list|,
name|FieldCollectionResource
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Allow a trailing slash on collection requests
name|router
operator|.
name|attach
argument_list|(
name|FIELDS_PATH
operator|+
literal|"/"
argument_list|,
name|FieldCollectionResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|router
operator|.
name|attach
argument_list|(
name|FIELDS_PATH
operator|+
name|NAME_SEGMENT
argument_list|,
name|FieldResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|router
operator|.
name|attach
argument_list|(
name|DYNAMIC_FIELDS_PATH
argument_list|,
name|DynamicFieldCollectionResource
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Allow a trailing slash on collection requests
name|router
operator|.
name|attach
argument_list|(
name|DYNAMIC_FIELDS_PATH
operator|+
literal|"/"
argument_list|,
name|DynamicFieldCollectionResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|router
operator|.
name|attach
argument_list|(
name|DYNAMIC_FIELDS_PATH
operator|+
name|NAME_SEGMENT
argument_list|,
name|DynamicFieldResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|router
operator|.
name|attach
argument_list|(
name|FIELDTYPES_PATH
argument_list|,
name|FieldTypeCollectionResource
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Allow a trailing slash on collection requests
name|router
operator|.
name|attach
argument_list|(
name|FIELDTYPES_PATH
operator|+
literal|"/"
argument_list|,
name|FieldTypeCollectionResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|router
operator|.
name|attach
argument_list|(
name|FIELDTYPES_PATH
operator|+
name|NAME_SEGMENT
argument_list|,
name|FieldTypeResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|router
operator|.
name|attach
argument_list|(
name|COPY_FIELDS_PATH
argument_list|,
name|CopyFieldCollectionResource
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Allow a trailing slash on collection requests
name|router
operator|.
name|attach
argument_list|(
name|COPY_FIELDS_PATH
operator|+
literal|"/"
argument_list|,
name|CopyFieldCollectionResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|router
operator|.
name|attach
argument_list|(
name|NAME_PATH
argument_list|,
name|SchemaNameResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|router
operator|.
name|attach
argument_list|(
name|VERSION_PATH
argument_list|,
name|SchemaVersionResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|router
operator|.
name|attach
argument_list|(
name|UNIQUE_KEY_FIELD_PATH
argument_list|,
name|UniqueKeyFieldResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|router
operator|.
name|attach
argument_list|(
name|DEFAULT_SEARCH_FIELD_PATH
argument_list|,
name|DefaultSearchFieldResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|router
operator|.
name|attach
argument_list|(
name|SIMILARITY_PATH
argument_list|,
name|SchemaSimilarityResource
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// At present solrQueryParser only contains defaultOperator, but there may be more children in the future
name|router
operator|.
name|attach
argument_list|(
name|SOLR_QUERY_PARSER_PATH
argument_list|,
name|SolrQueryParserResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|router
operator|.
name|attach
argument_list|(
name|DEFAULT_OPERATOR_PATH
argument_list|,
name|SolrQueryParserDefaultOperatorResource
operator|.
name|class
argument_list|)
expr_stmt|;
name|router
operator|.
name|attachDefault
argument_list|(
name|RestManager
operator|.
name|ManagedEndpoint
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// attach all the dynamically registered schema resources
name|RestManager
operator|.
name|getRestManager
argument_list|(
name|SolrRequestInfo
operator|.
name|getRequestInfo
argument_list|()
argument_list|)
operator|.
name|attachManagedResources
argument_list|(
name|RestManager
operator|.
name|SCHEMA_BASE_PATH
argument_list|,
name|router
argument_list|)
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"createInboundRoot complete for /schema"
argument_list|)
expr_stmt|;
return|return
name|router
return|;
block|}
block|}
end_class
end_unit
