begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.response.transform
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|transform
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|JavaBinCodec
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|TextResponseWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|WriteableValue
import|;
end_import
begin_import
import|import
name|org
operator|.
name|locationtech
operator|.
name|spatial4j
operator|.
name|io
operator|.
name|ShapeWriter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|locationtech
operator|.
name|spatial4j
operator|.
name|shape
operator|.
name|Shape
import|;
end_import
begin_comment
comment|/**  * This will let the writer add values to the response directly  */
end_comment
begin_class
DECL|class|WriteableGeoJSON
specifier|public
class|class
name|WriteableGeoJSON
extends|extends
name|WriteableValue
block|{
DECL|field|shape
specifier|public
specifier|final
name|Shape
name|shape
decl_stmt|;
DECL|field|jsonWriter
specifier|public
specifier|final
name|ShapeWriter
name|jsonWriter
decl_stmt|;
DECL|method|WriteableGeoJSON
specifier|public
name|WriteableGeoJSON
parameter_list|(
name|Shape
name|shape
parameter_list|,
name|ShapeWriter
name|jsonWriter
parameter_list|)
block|{
name|this
operator|.
name|shape
operator|=
name|shape
expr_stmt|;
name|this
operator|.
name|jsonWriter
operator|=
name|jsonWriter
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|resolve
specifier|public
name|Object
name|resolve
parameter_list|(
name|Object
name|o
parameter_list|,
name|JavaBinCodec
name|codec
parameter_list|)
throws|throws
name|IOException
block|{
name|codec
operator|.
name|writeStr
argument_list|(
name|jsonWriter
operator|.
name|toString
argument_list|(
name|shape
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
comment|// this means we wrote it
block|}
annotation|@
name|Override
DECL|method|write
specifier|public
name|void
name|write
parameter_list|(
name|String
name|name
parameter_list|,
name|TextResponseWriter
name|writer
parameter_list|)
throws|throws
name|IOException
block|{
name|jsonWriter
operator|.
name|write
argument_list|(
name|writer
operator|.
name|getWriter
argument_list|()
argument_list|,
name|shape
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|jsonWriter
operator|.
name|toString
argument_list|(
name|shape
argument_list|)
return|;
block|}
block|}
end_class
end_unit
