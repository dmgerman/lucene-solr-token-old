begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.response
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Query
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrDocument
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|component
operator|.
name|ResponseBuilder
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|DocList
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|ReturnFields
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|SolrIndexSearcher
import|;
end_import
begin_comment
comment|/**  * A class to hold the QueryResult and the Query  *   *  */
end_comment
begin_class
DECL|class|ResultContext
specifier|public
specifier|abstract
class|class
name|ResultContext
block|{
DECL|method|getDocList
specifier|public
specifier|abstract
name|DocList
name|getDocList
parameter_list|()
function_decl|;
DECL|method|getReturnFields
specifier|public
specifier|abstract
name|ReturnFields
name|getReturnFields
parameter_list|()
function_decl|;
DECL|method|getSearcher
specifier|public
specifier|abstract
name|SolrIndexSearcher
name|getSearcher
parameter_list|()
function_decl|;
DECL|method|getQuery
specifier|public
specifier|abstract
name|Query
name|getQuery
parameter_list|()
function_decl|;
comment|// TODO: any reason to allow for retrievial of any filters as well?
comment|/** Note: do not use the request to get the searcher!  A cross-core request may have a different    *  searcher (for the other core) than the original request.    */
DECL|method|getRequest
specifier|public
specifier|abstract
name|SolrQueryRequest
name|getRequest
parameter_list|()
function_decl|;
DECL|method|wantsScores
specifier|public
name|boolean
name|wantsScores
parameter_list|()
block|{
return|return
name|getReturnFields
argument_list|()
operator|.
name|wantsScore
argument_list|()
operator|&&
name|getDocList
argument_list|()
operator|.
name|hasScores
argument_list|()
return|;
block|}
DECL|method|getProcessedDocuments
specifier|public
name|Iterator
argument_list|<
name|SolrDocument
argument_list|>
name|getProcessedDocuments
parameter_list|()
block|{
return|return
operator|new
name|DocsStreamer
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
end_class
end_unit
