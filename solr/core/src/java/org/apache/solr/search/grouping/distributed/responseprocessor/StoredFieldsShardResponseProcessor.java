begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.search.grouping.distributed.responseprocessor
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|grouping
operator|.
name|distributed
operator|.
name|responseprocessor
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|FieldDoc
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrDocument
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrDocumentList
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|component
operator|.
name|ResponseBuilder
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|component
operator|.
name|ShardDoc
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|component
operator|.
name|ShardRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|component
operator|.
name|ShardResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|SolrIndexSearcher
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|grouping
operator|.
name|distributed
operator|.
name|ShardResponseProcessor
import|;
end_import
begin_comment
comment|/**  * Concrete implementation for processing the stored field values from shard responses.  */
end_comment
begin_class
DECL|class|StoredFieldsShardResponseProcessor
specifier|public
class|class
name|StoredFieldsShardResponseProcessor
implements|implements
name|ShardResponseProcessor
block|{
comment|/**    * {@inheritDoc}    */
annotation|@
name|Override
DECL|method|process
specifier|public
name|void
name|process
parameter_list|(
name|ResponseBuilder
name|rb
parameter_list|,
name|ShardRequest
name|shardRequest
parameter_list|)
block|{
name|boolean
name|returnScores
init|=
operator|(
name|rb
operator|.
name|getFieldFlags
argument_list|()
operator|&
name|SolrIndexSearcher
operator|.
name|GET_SCORES
operator|)
operator|!=
literal|0
decl_stmt|;
name|ShardResponse
name|srsp
init|=
name|shardRequest
operator|.
name|responses
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|SolrDocumentList
name|docs
init|=
operator|(
name|SolrDocumentList
operator|)
name|srsp
operator|.
name|getSolrResponse
argument_list|()
operator|.
name|getResponse
argument_list|()
operator|.
name|get
argument_list|(
literal|"response"
argument_list|)
decl_stmt|;
name|String
name|uniqueIdFieldName
init|=
name|rb
operator|.
name|req
operator|.
name|getSchema
argument_list|()
operator|.
name|getUniqueKeyField
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
for|for
control|(
name|SolrDocument
name|doc
range|:
name|docs
control|)
block|{
name|Object
name|id
init|=
name|doc
operator|.
name|getFieldValue
argument_list|(
name|uniqueIdFieldName
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|ShardDoc
name|shardDoc
init|=
name|rb
operator|.
name|resultIds
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|FieldDoc
name|fieldDoc
init|=
operator|(
name|FieldDoc
operator|)
name|shardDoc
decl_stmt|;
if|if
condition|(
name|shardDoc
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|returnScores
operator|&&
operator|!
name|Float
operator|.
name|isNaN
argument_list|(
name|fieldDoc
operator|.
name|score
argument_list|)
condition|)
block|{
name|doc
operator|.
name|setField
argument_list|(
literal|"score"
argument_list|,
name|fieldDoc
operator|.
name|score
argument_list|)
expr_stmt|;
block|}
name|rb
operator|.
name|retrievedDocuments
operator|.
name|put
argument_list|(
name|id
argument_list|,
name|doc
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class
end_unit
