begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.search.stats
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|stats
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|CollectionStatistics
import|;
end_import
begin_comment
comment|/**  * Modifiable version of {@link CollectionStatistics} useful for  * aggregation of per-shard stats.  */
end_comment
begin_class
DECL|class|CollectionStats
specifier|public
class|class
name|CollectionStats
block|{
DECL|field|field
specifier|public
specifier|final
name|String
name|field
decl_stmt|;
DECL|field|maxDoc
specifier|public
name|long
name|maxDoc
decl_stmt|;
DECL|field|docCount
specifier|public
name|long
name|docCount
decl_stmt|;
DECL|field|sumTotalTermFreq
specifier|public
name|long
name|sumTotalTermFreq
decl_stmt|;
DECL|field|sumDocFreq
specifier|public
name|long
name|sumDocFreq
decl_stmt|;
DECL|method|CollectionStats
specifier|public
name|CollectionStats
parameter_list|(
name|String
name|field
parameter_list|)
block|{
name|this
operator|.
name|field
operator|=
name|field
expr_stmt|;
block|}
DECL|method|CollectionStats
specifier|public
name|CollectionStats
parameter_list|(
name|String
name|field
parameter_list|,
name|long
name|maxDoc
parameter_list|,
name|long
name|docCount
parameter_list|,
name|long
name|sumTotalTermFreq
parameter_list|,
name|long
name|sumDocFreq
parameter_list|)
block|{
name|this
operator|.
name|field
operator|=
name|field
expr_stmt|;
name|this
operator|.
name|maxDoc
operator|=
name|maxDoc
expr_stmt|;
name|this
operator|.
name|docCount
operator|=
name|docCount
expr_stmt|;
name|this
operator|.
name|sumTotalTermFreq
operator|=
name|sumTotalTermFreq
expr_stmt|;
name|this
operator|.
name|sumDocFreq
operator|=
name|sumDocFreq
expr_stmt|;
block|}
DECL|method|CollectionStats
specifier|public
name|CollectionStats
parameter_list|(
name|CollectionStatistics
name|stats
parameter_list|)
block|{
name|this
operator|.
name|field
operator|=
name|stats
operator|.
name|field
argument_list|()
expr_stmt|;
name|this
operator|.
name|maxDoc
operator|=
name|stats
operator|.
name|maxDoc
argument_list|()
expr_stmt|;
name|this
operator|.
name|docCount
operator|=
name|stats
operator|.
name|docCount
argument_list|()
expr_stmt|;
name|this
operator|.
name|sumTotalTermFreq
operator|=
name|stats
operator|.
name|sumTotalTermFreq
argument_list|()
expr_stmt|;
name|this
operator|.
name|sumDocFreq
operator|=
name|stats
operator|.
name|sumDocFreq
argument_list|()
expr_stmt|;
block|}
comment|/*    * If any stats being added uses -1 then reset the total stats to -1    * as that parameter becomes unknowable.    */
DECL|method|add
specifier|public
name|void
name|add
parameter_list|(
name|CollectionStats
name|stats
parameter_list|)
block|{
name|this
operator|.
name|maxDoc
operator|+=
name|stats
operator|.
name|maxDoc
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|docCount
operator|<
literal|0
operator|||
name|stats
operator|.
name|docCount
operator|<
literal|0
condition|)
block|{
name|this
operator|.
name|docCount
operator|=
operator|-
literal|1
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|docCount
operator|+=
name|stats
operator|.
name|docCount
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|sumTotalTermFreq
operator|<
literal|0
operator|||
name|stats
operator|.
name|sumTotalTermFreq
operator|<
literal|0
condition|)
block|{
name|this
operator|.
name|sumTotalTermFreq
operator|=
operator|-
literal|1
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|sumTotalTermFreq
operator|+=
name|stats
operator|.
name|sumTotalTermFreq
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|sumDocFreq
operator|<
literal|0
operator|||
name|stats
operator|.
name|sumDocFreq
operator|<
literal|0
condition|)
block|{
name|this
operator|.
name|sumDocFreq
operator|=
operator|-
literal|1
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|sumDocFreq
operator|+=
name|stats
operator|.
name|sumDocFreq
expr_stmt|;
block|}
block|}
DECL|method|toCollectionStatistics
specifier|public
name|CollectionStatistics
name|toCollectionStatistics
parameter_list|()
block|{
return|return
operator|new
name|CollectionStatistics
argument_list|(
name|field
argument_list|,
name|maxDoc
argument_list|,
name|docCount
argument_list|,
name|sumTotalTermFreq
argument_list|,
name|sumDocFreq
argument_list|)
return|;
block|}
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|StatsUtil
operator|.
name|colStatsToString
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
end_class
end_unit
