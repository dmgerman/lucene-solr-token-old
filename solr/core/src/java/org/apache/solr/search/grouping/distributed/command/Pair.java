begin_unit
begin_package
DECL|package|org.apache.solr.search.grouping.distributed.command
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|search
operator|.
name|grouping
operator|.
name|distributed
operator|.
name|command
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/**  * A simple data structure to hold a pair of typed objects.  *  * @lucene.experimental  */
end_comment
begin_class
DECL|class|Pair
specifier|public
class|class
name|Pair
parameter_list|<
name|A
parameter_list|,
name|B
parameter_list|>
block|{
DECL|field|a
specifier|private
specifier|final
name|A
name|a
decl_stmt|;
DECL|field|b
specifier|private
specifier|final
name|B
name|b
decl_stmt|;
DECL|method|Pair
specifier|public
name|Pair
parameter_list|(
name|A
name|a
parameter_list|,
name|B
name|b
parameter_list|)
block|{
name|this
operator|.
name|a
operator|=
name|a
expr_stmt|;
name|this
operator|.
name|b
operator|=
name|b
expr_stmt|;
block|}
DECL|method|getA
specifier|public
name|A
name|getA
parameter_list|()
block|{
return|return
name|a
return|;
block|}
DECL|method|getB
specifier|public
name|B
name|getB
parameter_list|()
block|{
return|return
name|b
return|;
block|}
block|}
end_class
end_unit
