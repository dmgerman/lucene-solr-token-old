begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.index
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|index
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|MergePolicy
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|util
operator|.
name|SolrPluginUtils
import|;
end_import
begin_class
DECL|class|MergePolicyFactoryArgs
specifier|public
class|class
name|MergePolicyFactoryArgs
block|{
DECL|field|args
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|args
decl_stmt|;
DECL|method|MergePolicyFactoryArgs
specifier|public
name|MergePolicyFactoryArgs
parameter_list|()
block|{
name|this
operator|.
name|args
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
DECL|method|MergePolicyFactoryArgs
specifier|public
name|MergePolicyFactoryArgs
parameter_list|(
name|Iterable
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|args
parameter_list|)
block|{
name|this
operator|.
name|args
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
for|for
control|(
specifier|final
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|arg
range|:
name|args
control|)
block|{
name|this
operator|.
name|args
operator|.
name|put
argument_list|(
name|arg
operator|.
name|getKey
argument_list|()
argument_list|,
name|arg
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|add
specifier|public
name|void
name|add
parameter_list|(
name|String
name|key
parameter_list|,
name|Object
name|val
parameter_list|)
block|{
name|args
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|val
argument_list|)
expr_stmt|;
block|}
DECL|method|remove
specifier|public
name|Object
name|remove
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
name|args
operator|.
name|remove
argument_list|(
name|key
argument_list|)
return|;
block|}
DECL|method|get
specifier|public
name|Object
name|get
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
name|args
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
DECL|method|keys
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|keys
parameter_list|()
block|{
return|return
name|args
operator|.
name|keySet
argument_list|()
return|;
block|}
DECL|method|invokeSetters
specifier|public
name|void
name|invokeSetters
parameter_list|(
name|MergePolicy
name|policy
parameter_list|)
block|{
name|SolrPluginUtils
operator|.
name|invokeSetters
argument_list|(
name|policy
argument_list|,
name|args
operator|.
name|entrySet
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|args
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class
end_unit
