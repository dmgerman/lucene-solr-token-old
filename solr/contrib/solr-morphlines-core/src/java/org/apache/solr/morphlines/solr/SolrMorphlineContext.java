begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.morphlines.solr
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|morphlines
operator|.
name|solr
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|schema
operator|.
name|IndexSchema
import|;
end_import
begin_import
import|import
name|com
operator|.
name|cloudera
operator|.
name|cdk
operator|.
name|morphline
operator|.
name|api
operator|.
name|MorphlineContext
import|;
end_import
begin_comment
comment|/**  * A context that is specific to Solr.  */
end_comment
begin_class
DECL|class|SolrMorphlineContext
specifier|public
class|class
name|SolrMorphlineContext
extends|extends
name|MorphlineContext
block|{
DECL|field|loader
specifier|private
name|DocumentLoader
name|loader
decl_stmt|;
DECL|field|schema
specifier|private
name|IndexSchema
name|schema
decl_stmt|;
comment|/** For public access use {@link Builder#build()} instead */
DECL|method|SolrMorphlineContext
specifier|protected
name|SolrMorphlineContext
parameter_list|()
block|{}
DECL|method|getDocumentLoader
specifier|public
name|DocumentLoader
name|getDocumentLoader
parameter_list|()
block|{
return|return
name|loader
return|;
block|}
DECL|method|getIndexSchema
specifier|public
name|IndexSchema
name|getIndexSchema
parameter_list|()
block|{
return|return
name|schema
return|;
block|}
comment|///////////////////////////////////////////////////////////////////////////////
comment|// Nested classes:
comment|///////////////////////////////////////////////////////////////////////////////
comment|/**    * Helper to construct a {@link SolrMorphlineContext} instance.    */
DECL|class|Builder
specifier|public
specifier|static
class|class
name|Builder
extends|extends
name|MorphlineContext
operator|.
name|Builder
block|{
DECL|field|loader
specifier|private
name|DocumentLoader
name|loader
decl_stmt|;
DECL|field|schema
specifier|private
name|IndexSchema
name|schema
decl_stmt|;
DECL|method|Builder
specifier|public
name|Builder
parameter_list|()
block|{}
DECL|method|setDocumentLoader
specifier|public
name|Builder
name|setDocumentLoader
parameter_list|(
name|DocumentLoader
name|loader
parameter_list|)
block|{
name|this
operator|.
name|loader
operator|=
name|loader
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setIndexSchema
specifier|public
name|Builder
name|setIndexSchema
parameter_list|(
name|IndexSchema
name|schema
parameter_list|)
block|{
name|this
operator|.
name|schema
operator|=
name|schema
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|build
specifier|public
name|SolrMorphlineContext
name|build
parameter_list|()
block|{
operator|(
operator|(
name|SolrMorphlineContext
operator|)
name|context
operator|)
operator|.
name|loader
operator|=
name|loader
expr_stmt|;
operator|(
operator|(
name|SolrMorphlineContext
operator|)
name|context
operator|)
operator|.
name|schema
operator|=
name|schema
expr_stmt|;
return|return
operator|(
name|SolrMorphlineContext
operator|)
name|super
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|create
specifier|protected
name|SolrMorphlineContext
name|create
parameter_list|()
block|{
return|return
operator|new
name|SolrMorphlineContext
argument_list|()
return|;
block|}
block|}
block|}
end_class
end_unit
