begin_unit
begin_package
DECL|package|org.apache.solr.update.processor
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|processor
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputDocument
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|params
operator|.
name|ModifiableSolrParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_class
DECL|class|TikaLanguageIdentifierUpdateProcessorFactoryTest
specifier|public
class|class
name|TikaLanguageIdentifierUpdateProcessorFactoryTest
extends|extends
name|LanguageIdentifierUpdateProcessorFactoryTestCase
block|{
annotation|@
name|Override
DECL|method|createLangIdProcessor
specifier|protected
name|LanguageIdentifierUpdateProcessor
name|createLangIdProcessor
parameter_list|(
name|ModifiableSolrParams
name|parameters
parameter_list|)
throws|throws
name|Exception
block|{
return|return
operator|new
name|TikaLanguageIdentifierUpdateProcessor
argument_list|(
name|_parser
operator|.
name|buildRequestFrom
argument_list|(
name|h
operator|.
name|getCore
argument_list|()
argument_list|,
name|parameters
argument_list|,
literal|null
argument_list|)
argument_list|,
name|resp
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Test
DECL|method|testMaxFieldValueChars
specifier|public
name|void
name|testMaxFieldValueChars
parameter_list|()
throws|throws
name|Exception
block|{
name|SolrInputDocument
name|doc
init|=
operator|new
name|SolrInputDocument
argument_list|()
decl_stmt|;
name|String
name|valueF1
init|=
literal|"Apache Lucene is a free/open source information retrieval software library, originally created in Java by Doug Cutting. It is supported by the Apache Software Foundation and is released under the Apache Software License."
decl_stmt|;
name|String
name|valueF2
init|=
literal|"An open-source search server based on the Lucene Java search library. News, documentation, resources, and download."
decl_stmt|;
name|doc
operator|.
name|addField
argument_list|(
literal|"foo_s"
argument_list|,
name|valueF1
argument_list|)
expr_stmt|;
name|ModifiableSolrParams
name|parameters
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|TikaLanguageIdentifierUpdateProcessor
name|p
init|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|valueF1
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|parameters
operator|=
operator|new
name|ModifiableSolrParams
argument_list|()
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.maxFieldValueChars"
argument_list|,
literal|"6"
argument_list|)
expr_stmt|;
name|p
operator|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Apache"
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addField
argument_list|(
literal|"bar_s"
argument_list|,
name|valueF2
argument_list|)
expr_stmt|;
name|parameters
operator|=
operator|new
name|ModifiableSolrParams
argument_list|()
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s,bar_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|p
operator|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|valueF1
operator|+
literal|" "
operator|+
name|valueF2
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|parameters
operator|=
operator|new
name|ModifiableSolrParams
argument_list|()
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s,bar_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.maxFieldValueChars"
argument_list|,
literal|"6"
argument_list|)
expr_stmt|;
name|p
operator|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Apache"
operator|+
literal|" "
operator|+
literal|"An ope"
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|parameters
operator|=
operator|new
name|ModifiableSolrParams
argument_list|()
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s,bar_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.maxFieldValueChars"
argument_list|,
literal|"100000"
argument_list|)
expr_stmt|;
name|p
operator|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|valueF1
operator|+
literal|" "
operator|+
name|valueF2
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMaxTotalChars
specifier|public
name|void
name|testMaxTotalChars
parameter_list|()
throws|throws
name|Exception
block|{
name|SolrInputDocument
name|doc
init|=
operator|new
name|SolrInputDocument
argument_list|()
decl_stmt|;
name|String
name|valueF1
init|=
literal|"Apache Lucene is a free/open source information retrieval software library, originally created in Java by Doug Cutting. It is supported by the Apache Software Foundation and is released under the Apache Software License."
decl_stmt|;
name|String
name|valueF2
init|=
literal|"An open-source search server based on the Lucene Java search library. News, documentation, resources, and download."
decl_stmt|;
name|doc
operator|.
name|addField
argument_list|(
literal|"foo_s"
argument_list|,
name|valueF1
argument_list|)
expr_stmt|;
name|ModifiableSolrParams
name|parameters
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|TikaLanguageIdentifierUpdateProcessor
name|p
init|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|valueF1
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|parameters
operator|=
operator|new
name|ModifiableSolrParams
argument_list|()
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.maxTotalChars"
argument_list|,
literal|"6"
argument_list|)
expr_stmt|;
name|p
operator|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Apache"
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addField
argument_list|(
literal|"bar_s"
argument_list|,
name|valueF2
argument_list|)
expr_stmt|;
name|parameters
operator|=
operator|new
name|ModifiableSolrParams
argument_list|()
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s,bar_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|p
operator|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|valueF1
operator|+
literal|" "
operator|+
name|valueF2
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|parameters
operator|=
operator|new
name|ModifiableSolrParams
argument_list|()
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s,bar_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.maxTotalChars"
argument_list|,
literal|"6"
argument_list|)
expr_stmt|;
name|p
operator|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Apache"
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|parameters
operator|=
operator|new
name|ModifiableSolrParams
argument_list|()
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s,bar_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.maxTotalChars"
argument_list|,
literal|"100000"
argument_list|)
expr_stmt|;
name|p
operator|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|valueF1
operator|+
literal|" "
operator|+
name|valueF2
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMaxFieldValueCharsAndMaxTotalChars
specifier|public
name|void
name|testMaxFieldValueCharsAndMaxTotalChars
parameter_list|()
throws|throws
name|Exception
block|{
name|SolrInputDocument
name|doc
init|=
operator|new
name|SolrInputDocument
argument_list|()
decl_stmt|;
name|String
name|valueF1
init|=
literal|"Apache Lucene is a free/open source information retrieval software library, originally created in Java by Doug Cutting. It is supported by the Apache Software Foundation and is released under the Apache Software License."
decl_stmt|;
name|String
name|valueF2
init|=
literal|"An open-source search server based on the Lucene Java search library. News, documentation, resources, and download."
decl_stmt|;
name|doc
operator|.
name|addField
argument_list|(
literal|"foo_s"
argument_list|,
name|valueF1
argument_list|)
expr_stmt|;
name|ModifiableSolrParams
name|parameters
init|=
operator|new
name|ModifiableSolrParams
argument_list|()
decl_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|TikaLanguageIdentifierUpdateProcessor
name|p
init|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|valueF1
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|parameters
operator|=
operator|new
name|ModifiableSolrParams
argument_list|()
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.maxFieldValueChars"
argument_list|,
literal|"8"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.maxTotalChars"
argument_list|,
literal|"6"
argument_list|)
expr_stmt|;
name|p
operator|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Apache"
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|.
name|addField
argument_list|(
literal|"bar_s"
argument_list|,
name|valueF2
argument_list|)
expr_stmt|;
name|parameters
operator|=
operator|new
name|ModifiableSolrParams
argument_list|()
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s,bar_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|p
operator|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|valueF1
operator|+
literal|" "
operator|+
name|valueF2
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|parameters
operator|=
operator|new
name|ModifiableSolrParams
argument_list|()
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s,bar_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.maxFieldValueChars"
argument_list|,
literal|"3"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.maxTotalChars"
argument_list|,
literal|"8"
argument_list|)
expr_stmt|;
name|p
operator|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Apa An"
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|parameters
operator|=
operator|new
name|ModifiableSolrParams
argument_list|()
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.fl"
argument_list|,
literal|"foo_s,bar_s"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.langField"
argument_list|,
literal|"language"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.enforceSchema"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.maxFieldValueChars"
argument_list|,
literal|"10000"
argument_list|)
expr_stmt|;
name|parameters
operator|.
name|add
argument_list|(
literal|"langid.maxTotalChars"
argument_list|,
literal|"100000"
argument_list|)
expr_stmt|;
name|p
operator|=
operator|(
name|TikaLanguageIdentifierUpdateProcessor
operator|)
name|createLangIdProcessor
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|valueF1
operator|+
literal|" "
operator|+
name|valueF2
argument_list|,
name|p
operator|.
name|concatFields
argument_list|(
name|doc
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
