begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.hadoop.morphline
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|hadoop
operator|.
name|morphline
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|hadoop
operator|.
name|Utils
import|;
end_import
begin_enum
DECL|enum|MorphlineCounters
specifier|public
enum|enum
name|MorphlineCounters
block|{
DECL|enum constant|FILES_READ
DECL|enum constant|getClassName
DECL|enum constant|Ó
name|FILES_READ
argument_list|(
name|getClassName
argument_list|(
name|MorphlineMapper
operator|.
name|class
argument_list|)
operator|+
literal|": Number of files read"
argument_list|)
block|,
DECL|enum constant|FILE_BYTES_READ
DECL|enum constant|getClassName
DECL|enum constant|Ó
name|FILE_BYTES_READ
argument_list|(
name|getClassName
argument_list|(
name|MorphlineMapper
operator|.
name|class
argument_list|)
operator|+
literal|": Number of file bytes read"
argument_list|)
block|,
DECL|enum constant|DOCS_READ
DECL|enum constant|getClassName
DECL|enum constant|Ó
name|DOCS_READ
argument_list|(
name|getClassName
argument_list|(
name|MorphlineMapper
operator|.
name|class
argument_list|)
operator|+
literal|": Number of documents read"
argument_list|)
block|,
DECL|enum constant|PARSER_OUTPUT_BYTES
DECL|enum constant|getClassName
DECL|enum constant|Ó
name|PARSER_OUTPUT_BYTES
argument_list|(
name|getClassName
argument_list|(
name|MorphlineMapper
operator|.
name|class
argument_list|)
operator|+
literal|": Number of document bytes generated by Tika parser"
argument_list|)
block|,
DECL|enum constant|ERRORS
DECL|enum constant|getClassName
DECL|enum constant|Ó
name|ERRORS
argument_list|(
name|getClassName
argument_list|(
name|MorphlineMapper
operator|.
name|class
argument_list|)
operator|+
literal|": Number of errors"
argument_list|)
block|;
DECL|field|label
specifier|private
specifier|final
name|String
name|label
decl_stmt|;
DECL|method|MorphlineCounters
specifier|private
name|MorphlineCounters
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|this
operator|.
name|label
operator|=
name|label
expr_stmt|;
block|}
DECL|method|toString
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|label
return|;
block|}
DECL|method|getClassName
specifier|private
specifier|static
name|String
name|getClassName
parameter_list|(
name|Class
name|clazz
parameter_list|)
block|{
return|return
name|Utils
operator|.
name|getShortClassName
argument_list|(
name|clazz
argument_list|)
return|;
block|}
block|}
end_enum
end_unit
