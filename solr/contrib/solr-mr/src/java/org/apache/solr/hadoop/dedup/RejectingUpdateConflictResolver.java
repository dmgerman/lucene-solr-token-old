begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.hadoop.dedup
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|hadoop
operator|.
name|dedup
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Reducer
operator|.
name|Context
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputDocument
import|;
end_import
begin_comment
comment|/**  * UpdateConflictResolver implementation that rejects multiple documents with  * the same key with an exception.  */
end_comment
begin_class
DECL|class|RejectingUpdateConflictResolver
specifier|public
specifier|final
class|class
name|RejectingUpdateConflictResolver
implements|implements
name|UpdateConflictResolver
block|{
annotation|@
name|Override
DECL|method|orderUpdates
specifier|public
name|Iterator
argument_list|<
name|SolrInputDocument
argument_list|>
name|orderUpdates
parameter_list|(
name|Text
name|key
parameter_list|,
name|Iterator
argument_list|<
name|SolrInputDocument
argument_list|>
name|updates
parameter_list|,
name|Context
name|ctx
parameter_list|)
block|{
name|SolrInputDocument
name|firstUpdate
init|=
literal|null
decl_stmt|;
while|while
condition|(
name|updates
operator|.
name|hasNext
argument_list|()
condition|)
block|{
if|if
condition|(
name|firstUpdate
operator|==
literal|null
condition|)
block|{
name|firstUpdate
operator|=
name|updates
operator|.
name|next
argument_list|()
expr_stmt|;
assert|assert
name|firstUpdate
operator|!=
literal|null
assert|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Update conflict! Documents with the same unique key are forbidden: "
operator|+
name|key
argument_list|)
throw|;
block|}
block|}
assert|assert
name|firstUpdate
operator|!=
literal|null
assert|;
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
name|firstUpdate
argument_list|)
operator|.
name|iterator
argument_list|()
return|;
block|}
block|}
end_class
end_unit
