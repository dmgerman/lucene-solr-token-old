begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.handler.dataimport
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|dataimport
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputDocument
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|dataimport
operator|.
name|config
operator|.
name|Entity
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_import
import|import
name|com
operator|.
name|icegreen
operator|.
name|greenmail
operator|.
name|imap
operator|.
name|ImapHostManager
import|;
end_import
begin_import
import|import
name|com
operator|.
name|icegreen
operator|.
name|greenmail
operator|.
name|store
operator|.
name|MailFolder
import|;
end_import
begin_import
import|import
name|com
operator|.
name|icegreen
operator|.
name|greenmail
operator|.
name|user
operator|.
name|GreenMailUser
import|;
end_import
begin_import
import|import
name|com
operator|.
name|icegreen
operator|.
name|greenmail
operator|.
name|util
operator|.
name|GreenMail
import|;
end_import
begin_import
import|import
name|com
operator|.
name|icegreen
operator|.
name|greenmail
operator|.
name|util
operator|.
name|GreenMailUtil
import|;
end_import
begin_import
import|import
name|com
operator|.
name|icegreen
operator|.
name|greenmail
operator|.
name|util
operator|.
name|ServerSetup
import|;
end_import
begin_import
import|import
name|com
operator|.
name|icegreen
operator|.
name|greenmail
operator|.
name|imap
operator|.
name|ImapConstants
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|net
operator|.
name|ServerSocket
import|;
end_import
begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|Flags
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|Session
import|;
end_import
begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|internet
operator|.
name|MimeMessage
import|;
end_import
begin_comment
comment|/**  * Test for MailEntityProcessor; uses GreenMail embedded Java mail server.  *  * @see org.apache.solr.handler.dataimport.MailEntityProcessor  * @since solr 1.4  */
end_comment
begin_class
DECL|class|TestMailEntityProcessor
specifier|public
class|class
name|TestMailEntityProcessor
extends|extends
name|AbstractDataImportHandlerTestCase
block|{
comment|// Credentials
DECL|field|email
specifier|private
specifier|static
specifier|final
name|String
name|email
init|=
literal|"test@localhost.com"
decl_stmt|;
DECL|field|user
specifier|private
specifier|static
specifier|final
name|String
name|user
init|=
literal|"test"
decl_stmt|;
DECL|field|password
specifier|private
specifier|static
specifier|final
name|String
name|password
init|=
literal|"secret"
decl_stmt|;
DECL|field|protocol
specifier|private
specifier|static
specifier|final
name|String
name|protocol
init|=
literal|"imap"
decl_stmt|;
comment|// embedded test mail server
DECL|field|serverSetup
specifier|private
name|ServerSetup
name|serverSetup
decl_stmt|;
DECL|field|greenMail
specifier|private
name|GreenMail
name|greenMail
decl_stmt|;
DECL|field|mailUser
specifier|private
name|GreenMailUser
name|mailUser
decl_stmt|;
DECL|field|hostAndPort
specifier|private
name|String
name|hostAndPort
decl_stmt|;
DECL|field|sep
specifier|private
name|String
name|sep
init|=
name|ImapConstants
operator|.
name|HIERARCHY_DELIMITER
decl_stmt|;
DECL|field|cal
specifier|private
name|Calendar
name|cal
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
comment|/**    * Setup an embedded GreenMail server for testing.    */
annotation|@
name|Override
annotation|@
name|Before
DECL|method|setUp
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|int
name|port
init|=
name|findAvailablePort
argument_list|(
literal|9103
argument_list|,
literal|9193
argument_list|)
decl_stmt|;
name|serverSetup
operator|=
operator|new
name|ServerSetup
argument_list|(
name|port
argument_list|,
literal|null
argument_list|,
name|protocol
argument_list|)
expr_stmt|;
name|greenMail
operator|=
operator|new
name|GreenMail
argument_list|(
name|serverSetup
argument_list|)
expr_stmt|;
name|greenMail
operator|.
name|start
argument_list|()
expr_stmt|;
name|mailUser
operator|=
name|greenMail
operator|.
name|setUser
argument_list|(
name|email
argument_list|,
name|user
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|hostAndPort
operator|=
literal|"localhost:"
operator|+
name|port
expr_stmt|;
comment|// Test mailbox is like this: foldername(mailcount)
comment|// top1(2) -> child11(6)
comment|//         -> child12(0)
comment|// top2(2) -> child21(1)
comment|//                  -> grandchild211(2)
comment|//                  -> grandchild212(1)
comment|//         -> child22(2)
name|ImapHostManager
name|imapMgr
init|=
name|greenMail
operator|.
name|getManagers
argument_list|()
operator|.
name|getImapHostManager
argument_list|()
decl_stmt|;
name|setupFolder
argument_list|(
name|imapMgr
argument_list|,
literal|"top1"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|setupFolder
argument_list|(
name|imapMgr
argument_list|,
literal|"top1"
operator|+
name|sep
operator|+
literal|"child11"
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|setupFolder
argument_list|(
name|imapMgr
argument_list|,
literal|"top2"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|setupFolder
argument_list|(
name|imapMgr
argument_list|,
literal|"top2"
operator|+
name|sep
operator|+
literal|"child21"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|setupFolder
argument_list|(
name|imapMgr
argument_list|,
literal|"top2"
operator|+
name|sep
operator|+
literal|"child21"
operator|+
name|sep
operator|+
literal|"grandchild211"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|setupFolder
argument_list|(
name|imapMgr
argument_list|,
literal|"top2"
operator|+
name|sep
operator|+
literal|"child21"
operator|+
name|sep
operator|+
literal|"grandchild212"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|setupFolder
argument_list|(
name|imapMgr
argument_list|,
literal|"top2"
operator|+
name|sep
operator|+
literal|"child22"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|setupFolder
argument_list|(
name|imapMgr
argument_list|,
literal|"top3"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
DECL|method|findAvailablePort
specifier|private
name|int
name|findAvailablePort
parameter_list|(
name|int
name|min
parameter_list|,
name|int
name|max
parameter_list|)
block|{
for|for
control|(
name|int
name|port
init|=
name|min
init|;
name|port
operator|<
name|max
condition|;
name|port
operator|++
control|)
block|{
try|try
block|{
operator|new
name|ServerSocket
argument_list|(
name|port
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|port
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// Port is in use
block|}
block|}
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Could not find available port in range "
operator|+
name|min
operator|+
literal|" to "
operator|+
name|max
argument_list|)
throw|;
block|}
annotation|@
name|Override
annotation|@
name|After
DECL|method|tearDown
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|greenMail
operator|.
name|stop
argument_list|()
expr_stmt|;
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
comment|/**    * Creates 1 or more messages in the specified folder.     */
DECL|method|setupFolder
specifier|protected
name|void
name|setupFolder
parameter_list|(
name|ImapHostManager
name|imapMgr
parameter_list|,
name|String
name|folderName
parameter_list|,
name|int
name|numMessages
parameter_list|)
throws|throws
name|Exception
block|{
name|setupFolder
argument_list|(
name|imapMgr
argument_list|,
name|folderName
argument_list|,
name|numMessages
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|setupFolder
specifier|protected
name|void
name|setupFolder
parameter_list|(
name|ImapHostManager
name|imapMgr
parameter_list|,
name|String
name|folderName
parameter_list|,
name|int
name|numMessages
parameter_list|,
name|int
name|startAt
parameter_list|)
throws|throws
name|Exception
block|{
name|cal
operator|.
name|setTimeInMillis
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|Date
name|now
init|=
name|cal
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|MailFolder
name|folder
init|=
name|imapMgr
operator|.
name|getFolder
argument_list|(
name|mailUser
argument_list|,
name|folderName
argument_list|,
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|folder
operator|==
literal|null
condition|)
name|folder
operator|=
name|imapMgr
operator|.
name|createMailbox
argument_list|(
name|mailUser
argument_list|,
name|folderName
argument_list|)
expr_stmt|;
name|Session
name|session
init|=
name|GreenMailUtil
operator|.
name|getSession
argument_list|(
name|serverSetup
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|m
init|=
literal|0
init|;
name|m
operator|<
name|numMessages
condition|;
name|m
operator|++
control|)
block|{
name|int
name|idx
init|=
name|m
operator|+
name|startAt
decl_stmt|;
name|MimeMessage
name|msg
init|=
operator|new
name|MimeMessage
argument_list|(
name|session
argument_list|)
decl_stmt|;
name|msg
operator|.
name|setSubject
argument_list|(
literal|"test"
operator|+
name|idx
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setFrom
argument_list|(
literal|"from@localhost.com"
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setText
argument_list|(
literal|"test"
operator|+
name|idx
argument_list|)
expr_stmt|;
name|msg
operator|.
name|setSentDate
argument_list|(
name|now
argument_list|)
expr_stmt|;
name|folder
operator|.
name|appendMessage
argument_list|(
name|msg
argument_list|,
operator|new
name|Flags
argument_list|(
name|Flags
operator|.
name|Flag
operator|.
name|RECENT
argument_list|)
argument_list|,
name|now
argument_list|)
expr_stmt|;
block|}
name|folder
operator|.
name|getMessages
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
DECL|method|testConnection
specifier|public
name|void
name|testConnection
parameter_list|()
throws|throws
name|Exception
block|{
comment|// also tests recurse = false and default settings
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|paramMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"folders"
argument_list|,
literal|"top1"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"recurse"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"processAttachments"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|DataImporter
name|di
init|=
operator|new
name|DataImporter
argument_list|()
decl_stmt|;
name|di
operator|.
name|loadAndInit
argument_list|(
name|getConfigFromMap
argument_list|(
name|paramMap
argument_list|)
argument_list|)
expr_stmt|;
name|RequestInfo
name|rp
init|=
operator|new
name|RequestInfo
argument_list|(
literal|null
argument_list|,
name|createMap
argument_list|(
literal|"command"
argument_list|,
literal|"full-import"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|SolrWriterImpl
name|swi
init|=
operator|new
name|SolrWriterImpl
argument_list|()
decl_stmt|;
name|di
operator|.
name|runCmd
argument_list|(
name|rp
argument_list|,
name|swi
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"top1 did not return 2 messages"
argument_list|,
literal|2
argument_list|,
name|swi
operator|.
name|docs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
DECL|method|testRecursion
specifier|public
name|void
name|testRecursion
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|paramMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"folders"
argument_list|,
literal|"top2"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"recurse"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"processAttachments"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|DataImporter
name|di
init|=
operator|new
name|DataImporter
argument_list|()
decl_stmt|;
name|di
operator|.
name|loadAndInit
argument_list|(
name|getConfigFromMap
argument_list|(
name|paramMap
argument_list|)
argument_list|)
expr_stmt|;
name|RequestInfo
name|rp
init|=
operator|new
name|RequestInfo
argument_list|(
literal|null
argument_list|,
name|createMap
argument_list|(
literal|"command"
argument_list|,
literal|"full-import"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|SolrWriterImpl
name|swi
init|=
operator|new
name|SolrWriterImpl
argument_list|()
decl_stmt|;
name|di
operator|.
name|runCmd
argument_list|(
name|rp
argument_list|,
name|swi
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"top2 and its children did not return 8 messages"
argument_list|,
literal|8
argument_list|,
name|swi
operator|.
name|docs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
DECL|method|testExclude
specifier|public
name|void
name|testExclude
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|paramMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"folders"
argument_list|,
literal|"top2"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"recurse"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"processAttachments"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"exclude"
argument_list|,
literal|".*grandchild.*"
argument_list|)
expr_stmt|;
name|DataImporter
name|di
init|=
operator|new
name|DataImporter
argument_list|()
decl_stmt|;
name|di
operator|.
name|loadAndInit
argument_list|(
name|getConfigFromMap
argument_list|(
name|paramMap
argument_list|)
argument_list|)
expr_stmt|;
name|RequestInfo
name|rp
init|=
operator|new
name|RequestInfo
argument_list|(
literal|null
argument_list|,
name|createMap
argument_list|(
literal|"command"
argument_list|,
literal|"full-import"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|SolrWriterImpl
name|swi
init|=
operator|new
name|SolrWriterImpl
argument_list|()
decl_stmt|;
name|di
operator|.
name|runCmd
argument_list|(
name|rp
argument_list|,
name|swi
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"top2 and its direct children did not return 5 messages"
argument_list|,
literal|5
argument_list|,
name|swi
operator|.
name|docs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
DECL|method|testInclude
specifier|public
name|void
name|testInclude
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|paramMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"folders"
argument_list|,
literal|"top2"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"recurse"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"processAttachments"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"include"
argument_list|,
literal|".*grandchild.*"
argument_list|)
expr_stmt|;
name|DataImporter
name|di
init|=
operator|new
name|DataImporter
argument_list|()
decl_stmt|;
name|di
operator|.
name|loadAndInit
argument_list|(
name|getConfigFromMap
argument_list|(
name|paramMap
argument_list|)
argument_list|)
expr_stmt|;
name|RequestInfo
name|rp
init|=
operator|new
name|RequestInfo
argument_list|(
literal|null
argument_list|,
name|createMap
argument_list|(
literal|"command"
argument_list|,
literal|"full-import"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|SolrWriterImpl
name|swi
init|=
operator|new
name|SolrWriterImpl
argument_list|()
decl_stmt|;
name|di
operator|.
name|runCmd
argument_list|(
name|rp
argument_list|,
name|swi
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"top2 and its direct children did not return 3 messages"
argument_list|,
literal|3
argument_list|,
name|swi
operator|.
name|docs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
DECL|method|testIncludeAndExclude
specifier|public
name|void
name|testIncludeAndExclude
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|paramMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"folders"
argument_list|,
literal|"top1,top2"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"recurse"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"processAttachments"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"exclude"
argument_list|,
literal|".*top1.*"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"include"
argument_list|,
literal|".*grandchild.*"
argument_list|)
expr_stmt|;
name|DataImporter
name|di
init|=
operator|new
name|DataImporter
argument_list|()
decl_stmt|;
name|di
operator|.
name|loadAndInit
argument_list|(
name|getConfigFromMap
argument_list|(
name|paramMap
argument_list|)
argument_list|)
expr_stmt|;
name|RequestInfo
name|rp
init|=
operator|new
name|RequestInfo
argument_list|(
literal|null
argument_list|,
name|createMap
argument_list|(
literal|"command"
argument_list|,
literal|"full-import"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|SolrWriterImpl
name|swi
init|=
operator|new
name|SolrWriterImpl
argument_list|()
decl_stmt|;
name|di
operator|.
name|runCmd
argument_list|(
name|rp
argument_list|,
name|swi
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"top2 and its direct children did not return 3 messages"
argument_list|,
literal|3
argument_list|,
name|swi
operator|.
name|docs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Test
DECL|method|testFetchTimeSince
specifier|public
name|void
name|testFetchTimeSince
parameter_list|()
throws|throws
name|ParseException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|paramMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"folders"
argument_list|,
literal|"top1"
operator|+
name|sep
operator|+
literal|"child11"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"recurse"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"processAttachments"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|paramMap
operator|.
name|put
argument_list|(
literal|"fetchMailsSince"
argument_list|,
literal|"2008-12-26 00:00:00"
argument_list|)
expr_stmt|;
name|DataImporter
name|di
init|=
operator|new
name|DataImporter
argument_list|()
decl_stmt|;
name|di
operator|.
name|loadAndInit
argument_list|(
name|getConfigFromMap
argument_list|(
name|paramMap
argument_list|)
argument_list|)
expr_stmt|;
name|RequestInfo
name|rp
init|=
operator|new
name|RequestInfo
argument_list|(
literal|null
argument_list|,
name|createMap
argument_list|(
literal|"command"
argument_list|,
literal|"full-import"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|SolrWriterImpl
name|swi
init|=
operator|new
name|SolrWriterImpl
argument_list|()
decl_stmt|;
name|di
operator|.
name|runCmd
argument_list|(
name|rp
argument_list|,
name|swi
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"top1"
operator|+
name|sep
operator|+
literal|"child11 and its direct children did not return 6 messages"
argument_list|,
literal|6
argument_list|,
name|swi
operator|.
name|docs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// configures the data importer to use the MailEntityProcessor we're testing in this class
DECL|method|getConfigFromMap
specifier|private
name|String
name|getConfigFromMap
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
parameter_list|)
block|{
name|String
name|conf
init|=
literal|"<dataConfig>"
operator|+
literal|"<document>"
operator|+
literal|"<entity processor=\"org.apache.solr.handler.dataimport.MailEntityProcessor\" name=\"mail_entity\" "
operator|+
literal|"someconfig"
operator|+
literal|">"
operator|+
literal|"<field column=\"messageId\" name=\"id\" />"
operator|+
literal|"<field column=\"folder\" name=\"folder_s\" />"
operator|+
literal|"<field column=\"subject\" name=\"subject_s\" />"
operator|+
literal|"<field column=\"sentDate\" name=\"date_dt\" />"
operator|+
literal|"<field column=\"from\" name=\"from_s\" />"
operator|+
literal|"<field column=\"content\" name=\"content_s\" />"
operator|+
literal|"</entity>"
operator|+
literal|"</document>"
operator|+
literal|"</dataConfig>"
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"user"
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"password"
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"host"
argument_list|,
name|hostAndPort
argument_list|)
expr_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"protocol"
argument_list|,
name|protocol
argument_list|)
expr_stmt|;
name|StringBuilder
name|attribs
init|=
operator|new
name|StringBuilder
argument_list|(
literal|""
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
name|params
operator|.
name|keySet
argument_list|()
control|)
name|attribs
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
operator|.
name|append
argument_list|(
name|key
argument_list|)
operator|.
name|append
argument_list|(
literal|"="
operator|+
literal|"\""
argument_list|)
operator|.
name|append
argument_list|(
name|params
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
literal|"\""
argument_list|)
expr_stmt|;
name|attribs
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
return|return
name|conf
operator|.
name|replace
argument_list|(
literal|"someconfig"
argument_list|,
name|attribs
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
comment|// collects documents written by the DataImporter (from the MailEntityProcessor)
DECL|class|SolrWriterImpl
specifier|static
class|class
name|SolrWriterImpl
extends|extends
name|SolrWriter
block|{
DECL|field|docs
name|List
argument_list|<
name|SolrInputDocument
argument_list|>
name|docs
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|deleteAllCalled
name|Boolean
name|deleteAllCalled
decl_stmt|;
DECL|field|commitCalled
name|Boolean
name|commitCalled
decl_stmt|;
DECL|method|SolrWriterImpl
specifier|public
name|SolrWriterImpl
parameter_list|()
block|{
name|super
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|close
specifier|public
name|void
name|close
parameter_list|()
block|{
comment|// no-op method to avoid NPE in super impl
block|}
annotation|@
name|Override
DECL|method|upload
specifier|public
name|boolean
name|upload
parameter_list|(
name|SolrInputDocument
name|doc
parameter_list|)
block|{
return|return
name|docs
operator|.
name|add
argument_list|(
name|doc
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|doDeleteAll
specifier|public
name|void
name|doDeleteAll
parameter_list|()
block|{
name|deleteAllCalled
operator|=
name|Boolean
operator|.
name|TRUE
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|commit
specifier|public
name|void
name|commit
parameter_list|(
name|boolean
name|b
parameter_list|)
block|{
name|commitCalled
operator|=
name|Boolean
operator|.
name|TRUE
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
