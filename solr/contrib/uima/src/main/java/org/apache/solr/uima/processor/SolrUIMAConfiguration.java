begin_unit
begin_package
DECL|package|org.apache.solr.uima.processor
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|uima
operator|.
name|processor
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_comment
comment|/**  * Configuration holding all the configurable parameters for calling UIMA inside Solr  *   * @version $Id$  */
end_comment
begin_class
DECL|class|SolrUIMAConfiguration
specifier|public
class|class
name|SolrUIMAConfiguration
block|{
DECL|field|fieldsToAnalyze
specifier|private
name|String
index|[]
name|fieldsToAnalyze
decl_stmt|;
DECL|field|fieldsMerging
specifier|private
name|boolean
name|fieldsMerging
decl_stmt|;
DECL|field|typesFeaturesFieldsMapping
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|typesFeaturesFieldsMapping
decl_stmt|;
DECL|field|aePath
specifier|private
name|String
name|aePath
decl_stmt|;
DECL|field|runtimeParameters
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|runtimeParameters
decl_stmt|;
DECL|method|SolrUIMAConfiguration
specifier|public
name|SolrUIMAConfiguration
parameter_list|(
name|String
name|aePath
parameter_list|,
name|String
index|[]
name|fieldsToAnalyze
parameter_list|,
name|boolean
name|fieldsMerging
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|typesFeaturesFieldsMapping
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|runtimeParameters
parameter_list|)
block|{
name|this
operator|.
name|aePath
operator|=
name|aePath
expr_stmt|;
name|this
operator|.
name|fieldsToAnalyze
operator|=
name|fieldsToAnalyze
expr_stmt|;
name|this
operator|.
name|fieldsMerging
operator|=
name|fieldsMerging
expr_stmt|;
name|this
operator|.
name|runtimeParameters
operator|=
name|runtimeParameters
expr_stmt|;
name|this
operator|.
name|typesFeaturesFieldsMapping
operator|=
name|typesFeaturesFieldsMapping
expr_stmt|;
block|}
DECL|method|getFieldsToAnalyze
specifier|public
name|String
index|[]
name|getFieldsToAnalyze
parameter_list|()
block|{
return|return
name|fieldsToAnalyze
return|;
block|}
DECL|method|isFieldsMerging
specifier|public
name|boolean
name|isFieldsMerging
parameter_list|()
block|{
return|return
name|fieldsMerging
return|;
block|}
DECL|method|getTypesFeaturesFieldsMapping
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|getTypesFeaturesFieldsMapping
parameter_list|()
block|{
return|return
name|typesFeaturesFieldsMapping
return|;
block|}
DECL|method|getAePath
specifier|public
name|String
name|getAePath
parameter_list|()
block|{
return|return
name|aePath
return|;
block|}
DECL|method|getRuntimeParameters
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getRuntimeParameters
parameter_list|()
block|{
return|return
name|runtimeParameters
return|;
block|}
block|}
end_class
end_unit
