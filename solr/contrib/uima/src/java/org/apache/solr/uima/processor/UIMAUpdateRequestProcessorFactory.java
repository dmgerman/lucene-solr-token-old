begin_unit
begin_package
DECL|package|org.apache.solr.uima.processor
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|uima
operator|.
name|processor
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|uima
operator|.
name|ae
operator|.
name|AEProvider
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|uima
operator|.
name|ae
operator|.
name|AEProviderFactory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|util
operator|.
name|NamedList
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|request
operator|.
name|SolrQueryRequest
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|response
operator|.
name|SolrQueryResponse
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|processor
operator|.
name|UpdateRequestProcessor
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|update
operator|.
name|processor
operator|.
name|UpdateRequestProcessorFactory
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|uima
operator|.
name|analysis_engine
operator|.
name|AnalysisEngine
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|uima
operator|.
name|resource
operator|.
name|ResourceInitializationException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|uima
operator|.
name|util
operator|.
name|JCasPool
import|;
end_import
begin_comment
comment|/**  * Factory for {@link UIMAUpdateRequestProcessor}  *   *   */
end_comment
begin_class
DECL|class|UIMAUpdateRequestProcessorFactory
specifier|public
class|class
name|UIMAUpdateRequestProcessorFactory
extends|extends
name|UpdateRequestProcessorFactory
block|{
DECL|field|args
specifier|private
name|NamedList
argument_list|<
name|Object
argument_list|>
name|args
decl_stmt|;
DECL|field|ae
specifier|private
name|AnalysisEngine
name|ae
decl_stmt|;
DECL|field|pool
specifier|private
name|JCasPool
name|pool
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
DECL|method|init
specifier|public
name|void
name|init
parameter_list|(
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|NamedList
name|args
parameter_list|)
block|{
name|this
operator|.
name|args
operator|=
operator|(
name|NamedList
argument_list|<
name|Object
argument_list|>
operator|)
name|args
operator|.
name|get
argument_list|(
literal|"uimaConfig"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getInstance
specifier|public
name|UpdateRequestProcessor
name|getInstance
parameter_list|(
name|SolrQueryRequest
name|req
parameter_list|,
name|SolrQueryResponse
name|rsp
parameter_list|,
name|UpdateRequestProcessor
name|next
parameter_list|)
block|{
name|SolrUIMAConfiguration
name|configuration
init|=
operator|new
name|SolrUIMAConfigurationReader
argument_list|(
name|args
argument_list|)
operator|.
name|readSolrUIMAConfiguration
argument_list|()
decl_stmt|;
synchronized|synchronized
init|(
name|this
init|)
block|{
if|if
condition|(
name|ae
operator|==
literal|null
operator|&&
name|pool
operator|==
literal|null
condition|)
block|{
name|AEProvider
name|aeProvider
init|=
name|AEProviderFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|getAEProvider
argument_list|(
name|req
operator|.
name|getCore
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|configuration
operator|.
name|getAePath
argument_list|()
argument_list|,
name|configuration
operator|.
name|getRuntimeParameters
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|ae
operator|=
name|aeProvider
operator|.
name|getAE
argument_list|()
expr_stmt|;
name|pool
operator|=
operator|new
name|JCasPool
argument_list|(
literal|10
argument_list|,
name|ae
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ResourceInitializationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SolrException
argument_list|(
name|SolrException
operator|.
name|ErrorCode
operator|.
name|SERVER_ERROR
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
return|return
operator|new
name|UIMAUpdateRequestProcessor
argument_list|(
name|next
argument_list|,
name|req
operator|.
name|getCore
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|configuration
argument_list|,
name|ae
argument_list|,
name|pool
argument_list|)
return|;
block|}
block|}
end_class
end_unit
