begin_unit
begin_package
DECL|package|org.apache.solr.handler.dataimport
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|dataimport
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|common
operator|.
name|SolrInputDocument
import|;
end_import
begin_comment
comment|/**  * @solr.experimental  *  */
end_comment
begin_interface
DECL|interface|DIHWriter
specifier|public
interface|interface
name|DIHWriter
block|{
comment|/** 	 *<p> 	 *  If this writer supports transactions or commit points, then commit any changes,  	 *  optionally optimizing the data for read/write performance 	 *</p> 	 * @param optimize 	 */
DECL|method|commit
specifier|public
name|void
name|commit
parameter_list|(
name|boolean
name|optimize
parameter_list|)
function_decl|;
comment|/** 	 *<p> 	 *  Release resources used by this writer.  After calling close, reads& updates will throw exceptions. 	 *</p> 	 */
DECL|method|close
specifier|public
name|void
name|close
parameter_list|()
function_decl|;
comment|/** 	 *<p> 	 *  If this writer supports transactions or commit points, then roll back any uncommitted changes. 	 *</p> 	 */
DECL|method|rollback
specifier|public
name|void
name|rollback
parameter_list|()
function_decl|;
comment|/** 	 *<p> 	 *  Delete from the writer's underlying data store based the passed-in writer-specific query. (Optional Operation) 	 *</p> 	 * @param q 	 */
DECL|method|deleteByQuery
specifier|public
name|void
name|deleteByQuery
parameter_list|(
name|String
name|q
parameter_list|)
function_decl|;
comment|/** 	 *<p> 	 *  Delete everything from the writer's underlying data store 	 *</p> 	 */
DECL|method|doDeleteAll
specifier|public
name|void
name|doDeleteAll
parameter_list|()
function_decl|;
comment|/** 	 *<p> 	 *  Delete from the writer's underlying data store based on the passed-in Primary Key 	 *</p> 	 * @param key 	 */
DECL|method|deleteDoc
specifier|public
name|void
name|deleteDoc
parameter_list|(
name|Object
name|key
parameter_list|)
function_decl|;
comment|/** 	 *<p> 	 *  Add a document to this writer's underlying data store. 	 *</p> 	 * @param doc 	 * @return 	 */
DECL|method|upload
specifier|public
name|boolean
name|upload
parameter_list|(
name|SolrInputDocument
name|doc
parameter_list|)
function_decl|;
comment|/** 	 *<p> 	 *  Provide context information for this writer.  init() should be called before using the writer. 	 *</p> 	 * @param context 	 */
DECL|method|init
specifier|public
name|void
name|init
parameter_list|(
name|Context
name|context
parameter_list|)
function_decl|;
block|}
end_interface
end_unit
