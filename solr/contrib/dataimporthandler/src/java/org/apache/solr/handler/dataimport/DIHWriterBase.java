begin_unit
begin_package
DECL|package|org.apache.solr.handler.dataimport
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|dataimport
package|;
end_package
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import
begin_class
DECL|class|DIHWriterBase
specifier|public
specifier|abstract
class|class
name|DIHWriterBase
implements|implements
name|DIHWriter
block|{
DECL|field|keyFieldName
specifier|protected
name|String
name|keyFieldName
decl_stmt|;
DECL|field|deltaKeys
specifier|protected
name|Set
argument_list|<
name|Object
argument_list|>
name|deltaKeys
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
DECL|method|setDeltaKeys
specifier|public
name|void
name|setDeltaKeys
parameter_list|(
name|Set
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|passedInDeltaKeys
parameter_list|)
block|{
name|deltaKeys
operator|=
operator|new
name|HashSet
argument_list|<
name|Object
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|aMap
range|:
name|passedInDeltaKeys
control|)
block|{
if|if
condition|(
name|aMap
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|Object
name|key
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|keyFieldName
operator|!=
literal|null
condition|)
block|{
name|key
operator|=
name|aMap
operator|.
name|get
argument_list|(
name|keyFieldName
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|key
operator|=
name|aMap
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|key
operator|!=
literal|null
condition|)
block|{
name|deltaKeys
operator|.
name|add
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_class
end_unit
