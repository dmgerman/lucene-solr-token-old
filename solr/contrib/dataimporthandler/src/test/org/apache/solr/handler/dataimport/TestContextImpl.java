begin_unit
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.solr.handler.dataimport
package|package
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|dataimport
package|;
end_package
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|dataimport
operator|.
name|DataConfig
operator|.
name|Entity
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|solr
operator|.
name|handler
operator|.
name|dataimport
operator|.
name|DataImporter
operator|.
name|RequestParams
import|;
end_import
begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import
begin_class
DECL|class|TestContextImpl
specifier|public
class|class
name|TestContextImpl
extends|extends
name|AbstractDataImportHandlerTestCase
block|{
annotation|@
name|Test
DECL|method|testEntityScope
specifier|public
name|void
name|testEntityScope
parameter_list|()
block|{
name|ContextImpl
name|ctx
init|=
operator|new
name|ContextImpl
argument_list|(
operator|new
name|Entity
argument_list|()
argument_list|,
operator|new
name|VariableResolverImpl
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|"something"
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|String
name|lala
init|=
operator|new
name|String
argument_list|(
literal|"lala"
argument_list|)
decl_stmt|;
name|ctx
operator|.
name|setSessionAttribute
argument_list|(
literal|"huhu"
argument_list|,
name|lala
argument_list|,
name|Context
operator|.
name|SCOPE_ENTITY
argument_list|)
expr_stmt|;
name|Object
name|got
init|=
name|ctx
operator|.
name|getSessionAttribute
argument_list|(
literal|"huhu"
argument_list|,
name|Context
operator|.
name|SCOPE_ENTITY
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|lala
argument_list|,
name|got
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCoreScope
specifier|public
name|void
name|testCoreScope
parameter_list|()
block|{
name|DataImporter
name|di
init|=
operator|new
name|DataImporter
argument_list|()
decl_stmt|;
name|di
operator|.
name|loadAndInit
argument_list|(
literal|"<dataConfig><document /></dataConfig>"
argument_list|)
expr_stmt|;
name|DocBuilder
name|db
init|=
operator|new
name|DocBuilder
argument_list|(
name|di
argument_list|,
operator|new
name|SolrWriter
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|SimplePropertiesWriter
argument_list|()
argument_list|,
operator|new
name|RequestParams
argument_list|()
argument_list|)
decl_stmt|;
name|ContextImpl
name|ctx
init|=
operator|new
name|ContextImpl
argument_list|(
operator|new
name|Entity
argument_list|()
argument_list|,
operator|new
name|VariableResolverImpl
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|"something"
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
literal|null
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|String
name|lala
init|=
operator|new
name|String
argument_list|(
literal|"lala"
argument_list|)
decl_stmt|;
name|ctx
operator|.
name|setSessionAttribute
argument_list|(
literal|"huhu"
argument_list|,
name|lala
argument_list|,
name|Context
operator|.
name|SCOPE_SOLR_CORE
argument_list|)
expr_stmt|;
name|Object
name|got
init|=
name|ctx
operator|.
name|getSessionAttribute
argument_list|(
literal|"huhu"
argument_list|,
name|Context
operator|.
name|SCOPE_SOLR_CORE
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|lala
argument_list|,
name|got
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDocumentScope
specifier|public
name|void
name|testDocumentScope
parameter_list|()
block|{
name|ContextImpl
name|ctx
init|=
operator|new
name|ContextImpl
argument_list|(
operator|new
name|Entity
argument_list|()
argument_list|,
operator|new
name|VariableResolverImpl
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|"something"
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|ctx
operator|.
name|setDoc
argument_list|(
operator|new
name|DocBuilder
operator|.
name|DocWrapper
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|lala
init|=
operator|new
name|String
argument_list|(
literal|"lala"
argument_list|)
decl_stmt|;
name|ctx
operator|.
name|setSessionAttribute
argument_list|(
literal|"huhu"
argument_list|,
name|lala
argument_list|,
name|Context
operator|.
name|SCOPE_DOC
argument_list|)
expr_stmt|;
name|Object
name|got
init|=
name|ctx
operator|.
name|getSessionAttribute
argument_list|(
literal|"huhu"
argument_list|,
name|Context
operator|.
name|SCOPE_DOC
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|lala
argument_list|,
name|got
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGlobalScope
specifier|public
name|void
name|testGlobalScope
parameter_list|()
block|{
name|ContextImpl
name|ctx
init|=
operator|new
name|ContextImpl
argument_list|(
operator|new
name|Entity
argument_list|()
argument_list|,
operator|new
name|VariableResolverImpl
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|"something"
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|String
name|lala
init|=
operator|new
name|String
argument_list|(
literal|"lala"
argument_list|)
decl_stmt|;
name|ctx
operator|.
name|setSessionAttribute
argument_list|(
literal|"huhu"
argument_list|,
name|lala
argument_list|,
name|Context
operator|.
name|SCOPE_GLOBAL
argument_list|)
expr_stmt|;
name|Object
name|got
init|=
name|ctx
operator|.
name|getSessionAttribute
argument_list|(
literal|"huhu"
argument_list|,
name|Context
operator|.
name|SCOPE_GLOBAL
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|lala
argument_list|,
name|got
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
