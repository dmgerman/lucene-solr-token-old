begin_unit
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_package
DECL|package|org.apache.lucene.spatial.base.distance
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|spatial
operator|.
name|base
operator|.
name|distance
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|spatial
operator|.
name|base
operator|.
name|context
operator|.
name|SpatialContext
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|spatial
operator|.
name|base
operator|.
name|shape
operator|.
name|Point
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|spatial
operator|.
name|base
operator|.
name|shape
operator|.
name|Rectangle
import|;
end_import
begin_interface
DECL|interface|DistanceCalculator
specifier|public
interface|interface
name|DistanceCalculator
block|{
DECL|method|distance
specifier|public
name|double
name|distance
parameter_list|(
name|Point
name|from
parameter_list|,
name|Point
name|to
parameter_list|)
function_decl|;
DECL|method|distance
specifier|public
name|double
name|distance
parameter_list|(
name|Point
name|from
parameter_list|,
name|double
name|toX
parameter_list|,
name|double
name|toY
parameter_list|)
function_decl|;
DECL|method|pointOnBearing
specifier|public
name|Point
name|pointOnBearing
parameter_list|(
name|Point
name|from
parameter_list|,
name|double
name|dist
parameter_list|,
name|double
name|bearingDEG
parameter_list|,
name|SpatialContext
name|ctx
parameter_list|)
function_decl|;
comment|/**    * Converts a distance to radians (multiples of the radius). A spherical    * earth model is assumed for geospatial, and non-geospatial is the identity function.    */
DECL|method|distanceToDegrees
specifier|public
name|double
name|distanceToDegrees
parameter_list|(
name|double
name|distance
parameter_list|)
function_decl|;
DECL|method|degreesToDistance
specifier|public
name|double
name|degreesToDistance
parameter_list|(
name|double
name|degrees
parameter_list|)
function_decl|;
comment|//public Point pointOnBearing(Point from, double angle);
DECL|method|calcBoxByDistFromPt
specifier|public
name|Rectangle
name|calcBoxByDistFromPt
parameter_list|(
name|Point
name|from
parameter_list|,
name|double
name|distance
parameter_list|,
name|SpatialContext
name|ctx
parameter_list|)
function_decl|;
DECL|method|calcBoxByDistFromPtHorizAxis
specifier|public
name|double
name|calcBoxByDistFromPtHorizAxis
parameter_list|(
name|Point
name|from
parameter_list|,
name|double
name|distance
parameter_list|,
name|SpatialContext
name|ctx
parameter_list|)
function_decl|;
block|}
end_interface
end_unit
