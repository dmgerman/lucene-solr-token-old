begin_unit
begin_package
DECL|package|org.apache.lucene.benchmark.byTask.tasks
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|benchmark
operator|.
name|byTask
operator|.
name|tasks
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|benchmark
operator|.
name|byTask
operator|.
name|PerfRunData
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|MultiFields
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Bits
import|;
end_import
begin_comment
comment|/**  * Deletes a percentage of documents from an index randomly  * over the number of documents.  The parameter, X, is in  * percent.  EG 50 means 1/2 of all documents will be  * deleted.  *  *<p><b>NOTE</b>: the param is an absolute percentage of  * maxDoc().  This means if you delete 50%, and then delete  * 50% again, the 2nd delete will do nothing.  *  *<p> Parameters:  *<ul>  *<li> delete.percent.rand.seed - defines the seed to  * initialize Random (default 1717)  *</ul>  */
end_comment
begin_class
DECL|class|DeleteByPercentTask
specifier|public
class|class
name|DeleteByPercentTask
extends|extends
name|PerfTask
block|{
DECL|field|percent
name|double
name|percent
decl_stmt|;
DECL|field|numDeleted
name|int
name|numDeleted
init|=
literal|0
decl_stmt|;
DECL|field|random
specifier|final
name|Random
name|random
decl_stmt|;
DECL|method|DeleteByPercentTask
specifier|public
name|DeleteByPercentTask
parameter_list|(
name|PerfRunData
name|runData
parameter_list|)
block|{
name|super
argument_list|(
name|runData
argument_list|)
expr_stmt|;
name|random
operator|=
operator|new
name|Random
argument_list|(
name|runData
operator|.
name|getConfig
argument_list|()
operator|.
name|get
argument_list|(
literal|"delete.percent.rand.seed"
argument_list|,
literal|1717
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setParams
specifier|public
name|void
name|setParams
parameter_list|(
name|String
name|params
parameter_list|)
block|{
name|super
operator|.
name|setParams
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|percent
operator|=
name|Double
operator|.
name|parseDouble
argument_list|(
name|params
argument_list|)
operator|/
literal|100
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|supportsParams
specifier|public
name|boolean
name|supportsParams
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|doLogic
specifier|public
name|int
name|doLogic
parameter_list|()
throws|throws
name|Exception
block|{
name|IndexReader
name|r
init|=
name|getRunData
argument_list|()
operator|.
name|getIndexReader
argument_list|()
decl_stmt|;
name|int
name|maxDoc
init|=
name|r
operator|.
name|maxDoc
argument_list|()
decl_stmt|;
name|int
name|numDeleted
init|=
literal|0
decl_stmt|;
comment|// percent is an absolute target:
name|int
name|numToDelete
init|=
operator|(
call|(
name|int
call|)
argument_list|(
name|maxDoc
operator|*
name|percent
argument_list|)
operator|)
operator|-
name|r
operator|.
name|numDeletedDocs
argument_list|()
decl_stmt|;
if|if
condition|(
name|numToDelete
operator|<
literal|0
condition|)
block|{
name|r
operator|.
name|undeleteAll
argument_list|()
expr_stmt|;
name|numToDelete
operator|=
call|(
name|int
call|)
argument_list|(
name|maxDoc
operator|*
name|percent
argument_list|)
expr_stmt|;
block|}
while|while
condition|(
name|numDeleted
operator|<
name|numToDelete
condition|)
block|{
name|double
name|delRate
init|=
operator|(
call|(
name|double
call|)
argument_list|(
name|numToDelete
operator|-
name|numDeleted
argument_list|)
operator|)
operator|/
name|r
operator|.
name|numDocs
argument_list|()
decl_stmt|;
name|Bits
name|liveDocs
init|=
name|MultiFields
operator|.
name|getLiveDocs
argument_list|(
name|r
argument_list|)
decl_stmt|;
name|int
name|doc
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|doc
operator|<
name|maxDoc
operator|&&
name|numDeleted
operator|<
name|numToDelete
condition|)
block|{
if|if
condition|(
operator|(
name|liveDocs
operator|==
literal|null
operator|||
name|liveDocs
operator|.
name|get
argument_list|(
name|doc
argument_list|)
operator|)
operator|&&
name|random
operator|.
name|nextDouble
argument_list|()
operator|<=
name|delRate
condition|)
block|{
name|r
operator|.
name|deleteDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|numDeleted
operator|++
expr_stmt|;
if|if
condition|(
name|liveDocs
operator|==
literal|null
condition|)
block|{
name|liveDocs
operator|=
name|MultiFields
operator|.
name|getLiveDocs
argument_list|(
name|r
argument_list|)
expr_stmt|;
assert|assert
name|liveDocs
operator|!=
literal|null
assert|;
block|}
block|}
name|doc
operator|++
expr_stmt|;
block|}
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--> processed (delete) "
operator|+
name|numDeleted
operator|+
literal|" docs"
argument_list|)
expr_stmt|;
name|r
operator|.
name|decRef
argument_list|()
expr_stmt|;
return|return
name|numDeleted
return|;
block|}
block|}
end_class
end_unit
