begin_unit
begin_package
DECL|package|org.apache.lucene.search.grouping
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|grouping
package|;
end_package
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|SortField
import|;
end_import
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_comment
comment|/** Represents result returned by a grouping search.  *  * @lucene.experimental */
end_comment
begin_class
DECL|class|TopGroups
specifier|public
class|class
name|TopGroups
parameter_list|<
name|GROUP_VALUE_TYPE
parameter_list|>
block|{
comment|/** Number of documents matching the search */
DECL|field|totalHitCount
specifier|public
specifier|final
name|int
name|totalHitCount
decl_stmt|;
comment|/** Number of documents grouped into the topN groups */
DECL|field|totalGroupedHitCount
specifier|public
specifier|final
name|int
name|totalGroupedHitCount
decl_stmt|;
comment|/** The total number of unique groups. If<code>null</code> this value is not computed. */
DECL|field|totalGroupCount
specifier|public
specifier|final
name|Integer
name|totalGroupCount
decl_stmt|;
comment|/** Group results in groupSort order */
DECL|field|groups
specifier|public
specifier|final
name|GroupDocs
argument_list|<
name|GROUP_VALUE_TYPE
argument_list|>
index|[]
name|groups
decl_stmt|;
comment|/** How groups are sorted against each other */
DECL|field|groupSort
specifier|public
specifier|final
name|SortField
index|[]
name|groupSort
decl_stmt|;
comment|/** How docs are sorted within each group */
DECL|field|withinGroupSort
specifier|public
specifier|final
name|SortField
index|[]
name|withinGroupSort
decl_stmt|;
DECL|method|TopGroups
specifier|public
name|TopGroups
parameter_list|(
name|SortField
index|[]
name|groupSort
parameter_list|,
name|SortField
index|[]
name|withinGroupSort
parameter_list|,
name|int
name|totalHitCount
parameter_list|,
name|int
name|totalGroupedHitCount
parameter_list|,
name|GroupDocs
argument_list|<
name|GROUP_VALUE_TYPE
argument_list|>
index|[]
name|groups
parameter_list|)
block|{
name|this
operator|.
name|groupSort
operator|=
name|groupSort
expr_stmt|;
name|this
operator|.
name|withinGroupSort
operator|=
name|withinGroupSort
expr_stmt|;
name|this
operator|.
name|totalHitCount
operator|=
name|totalHitCount
expr_stmt|;
name|this
operator|.
name|totalGroupedHitCount
operator|=
name|totalGroupedHitCount
expr_stmt|;
name|this
operator|.
name|groups
operator|=
name|groups
expr_stmt|;
name|this
operator|.
name|totalGroupCount
operator|=
literal|null
expr_stmt|;
block|}
DECL|method|TopGroups
specifier|public
name|TopGroups
parameter_list|(
name|TopGroups
argument_list|<
name|GROUP_VALUE_TYPE
argument_list|>
name|oldTopGroups
parameter_list|,
name|Integer
name|totalGroupCount
parameter_list|)
block|{
name|this
operator|.
name|groupSort
operator|=
name|oldTopGroups
operator|.
name|groupSort
expr_stmt|;
name|this
operator|.
name|withinGroupSort
operator|=
name|oldTopGroups
operator|.
name|withinGroupSort
expr_stmt|;
name|this
operator|.
name|totalHitCount
operator|=
name|oldTopGroups
operator|.
name|totalHitCount
expr_stmt|;
name|this
operator|.
name|totalGroupedHitCount
operator|=
name|oldTopGroups
operator|.
name|totalGroupedHitCount
expr_stmt|;
name|this
operator|.
name|groups
operator|=
name|oldTopGroups
operator|.
name|groups
expr_stmt|;
name|this
operator|.
name|totalGroupCount
operator|=
name|totalGroupCount
expr_stmt|;
block|}
block|}
end_class
end_unit
