begin_unit
begin_package
DECL|package|org.apache.lucene.analysis.ja.util
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|ja
operator|.
name|util
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|ja
operator|.
name|dict
operator|.
name|CharacterDefinition
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|ja
operator|.
name|dict
operator|.
name|UnknownDictionary
import|;
end_import
begin_class
DECL|class|UnknownDictionaryWriter
specifier|public
class|class
name|UnknownDictionaryWriter
extends|extends
name|BinaryDictionaryWriter
block|{
DECL|field|characterDefinition
specifier|private
specifier|final
name|CharacterDefinitionWriter
name|characterDefinition
init|=
operator|new
name|CharacterDefinitionWriter
argument_list|()
decl_stmt|;
DECL|method|UnknownDictionaryWriter
specifier|public
name|UnknownDictionaryWriter
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|super
argument_list|(
name|UnknownDictionary
operator|.
name|class
argument_list|,
name|size
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|put
specifier|public
name|int
name|put
parameter_list|(
name|String
index|[]
name|entry
parameter_list|)
block|{
comment|// Get wordId of current entry
name|int
name|wordId
init|=
name|buffer
operator|.
name|position
argument_list|()
decl_stmt|;
comment|// Put entry
name|int
name|result
init|=
name|super
operator|.
name|put
argument_list|(
name|entry
argument_list|)
decl_stmt|;
comment|// Put entry in targetMap
name|int
name|characterId
init|=
name|CharacterDefinition
operator|.
name|lookupCharacterClass
argument_list|(
name|entry
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|addMapping
argument_list|(
name|characterId
argument_list|,
name|wordId
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
comment|/**    * Put mapping from unicode code point to character class.    *     * @param codePoint code point    * @param characterClassName character class name    */
DECL|method|putCharacterCategory
specifier|public
name|void
name|putCharacterCategory
parameter_list|(
name|int
name|codePoint
parameter_list|,
name|String
name|characterClassName
parameter_list|)
block|{
name|characterDefinition
operator|.
name|putCharacterCategory
argument_list|(
name|codePoint
argument_list|,
name|characterClassName
argument_list|)
expr_stmt|;
block|}
DECL|method|putInvokeDefinition
specifier|public
name|void
name|putInvokeDefinition
parameter_list|(
name|String
name|characterClassName
parameter_list|,
name|int
name|invoke
parameter_list|,
name|int
name|group
parameter_list|,
name|int
name|length
parameter_list|)
block|{
name|characterDefinition
operator|.
name|putInvokeDefinition
argument_list|(
name|characterClassName
argument_list|,
name|invoke
argument_list|,
name|group
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|write
specifier|public
name|void
name|write
parameter_list|(
name|String
name|baseDir
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|write
argument_list|(
name|baseDir
argument_list|)
expr_stmt|;
name|characterDefinition
operator|.
name|write
argument_list|(
name|baseDir
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
