begin_unit
begin_package
DECL|package|org.apache.lucene.analysis.kuromoji
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|kuromoji
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|TokenStream
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|Tokenizer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|cjk
operator|.
name|CJKWidthFilter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|core
operator|.
name|LowerCaseFilter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|core
operator|.
name|StopFilter
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|kuromoji
operator|.
name|KuromojiTokenizer
operator|.
name|Mode
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|kuromoji
operator|.
name|dict
operator|.
name|UserDictionary
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|util
operator|.
name|CharArraySet
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|util
operator|.
name|StopwordAnalyzerBase
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Version
import|;
end_import
begin_comment
comment|/**  * Analyzer for Japanese that uses morphological analysis.  * @see KuromojiTokenizer  */
end_comment
begin_class
DECL|class|KuromojiAnalyzer
specifier|public
class|class
name|KuromojiAnalyzer
extends|extends
name|StopwordAnalyzerBase
block|{
DECL|field|mode
specifier|private
specifier|final
name|Mode
name|mode
decl_stmt|;
DECL|field|stoptags
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|stoptags
decl_stmt|;
DECL|field|userDict
specifier|private
specifier|final
name|UserDictionary
name|userDict
decl_stmt|;
DECL|method|KuromojiAnalyzer
specifier|public
name|KuromojiAnalyzer
parameter_list|(
name|Version
name|matchVersion
parameter_list|)
block|{
name|this
argument_list|(
name|matchVersion
argument_list|,
literal|null
argument_list|,
name|KuromojiTokenizer
operator|.
name|DEFAULT_MODE
argument_list|,
name|DefaultSetHolder
operator|.
name|DEFAULT_STOP_SET
argument_list|,
name|DefaultSetHolder
operator|.
name|DEFAULT_STOP_TAGS
argument_list|)
expr_stmt|;
block|}
DECL|method|KuromojiAnalyzer
specifier|public
name|KuromojiAnalyzer
parameter_list|(
name|Version
name|matchVersion
parameter_list|,
name|UserDictionary
name|userDict
parameter_list|,
name|Mode
name|mode
parameter_list|,
name|CharArraySet
name|stopwords
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|stoptags
parameter_list|)
block|{
name|super
argument_list|(
name|matchVersion
argument_list|,
name|stopwords
argument_list|)
expr_stmt|;
name|this
operator|.
name|userDict
operator|=
name|userDict
expr_stmt|;
name|this
operator|.
name|mode
operator|=
name|mode
expr_stmt|;
name|this
operator|.
name|stoptags
operator|=
name|stoptags
expr_stmt|;
block|}
DECL|method|getDefaultStopSet
specifier|public
specifier|static
name|CharArraySet
name|getDefaultStopSet
parameter_list|()
block|{
return|return
name|DefaultSetHolder
operator|.
name|DEFAULT_STOP_SET
return|;
block|}
DECL|method|getDefaultStopTags
specifier|public
specifier|static
name|Set
argument_list|<
name|String
argument_list|>
name|getDefaultStopTags
parameter_list|()
block|{
return|return
name|DefaultSetHolder
operator|.
name|DEFAULT_STOP_TAGS
return|;
block|}
comment|/**    * Atomically loads DEFAULT_STOP_SET, DEFAULT_STOP_TAGS in a lazy fashion once the     * outer class accesses the static final set the first time.    */
DECL|class|DefaultSetHolder
specifier|private
specifier|static
class|class
name|DefaultSetHolder
block|{
DECL|field|DEFAULT_STOP_SET
specifier|static
specifier|final
name|CharArraySet
name|DEFAULT_STOP_SET
decl_stmt|;
DECL|field|DEFAULT_STOP_TAGS
specifier|static
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|DEFAULT_STOP_TAGS
decl_stmt|;
static|static
block|{
try|try
block|{
name|DEFAULT_STOP_SET
operator|=
name|loadStopwordSet
argument_list|(
literal|true
argument_list|,
name|KuromojiAnalyzer
operator|.
name|class
argument_list|,
literal|"stopwords.txt"
argument_list|,
literal|"#"
argument_list|)
expr_stmt|;
comment|// ignore case
specifier|final
name|CharArraySet
name|tagset
init|=
name|loadStopwordSet
argument_list|(
literal|false
argument_list|,
name|KuromojiAnalyzer
operator|.
name|class
argument_list|,
literal|"stoptags.txt"
argument_list|,
literal|"#"
argument_list|)
decl_stmt|;
name|DEFAULT_STOP_TAGS
operator|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|Object
name|element
range|:
name|tagset
control|)
block|{
name|char
name|chars
index|[]
init|=
operator|(
name|char
index|[]
operator|)
name|element
decl_stmt|;
name|DEFAULT_STOP_TAGS
operator|.
name|add
argument_list|(
operator|new
name|String
argument_list|(
name|chars
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
comment|// default set should always be present as it is part of the distribution (JAR)
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Unable to load default stopword or stoptag set"
argument_list|)
throw|;
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|createComponents
specifier|protected
name|TokenStreamComponents
name|createComponents
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|Reader
name|reader
parameter_list|)
block|{
name|Tokenizer
name|tokenizer
init|=
operator|new
name|KuromojiTokenizer
argument_list|(
name|reader
argument_list|,
name|userDict
argument_list|,
literal|true
argument_list|,
name|mode
argument_list|)
decl_stmt|;
name|TokenStream
name|stream
init|=
operator|new
name|KuromojiBaseFormFilter
argument_list|(
name|tokenizer
argument_list|)
decl_stmt|;
name|stream
operator|=
operator|new
name|KuromojiPartOfSpeechStopFilter
argument_list|(
literal|true
argument_list|,
name|stream
argument_list|,
name|stoptags
argument_list|)
expr_stmt|;
name|stream
operator|=
operator|new
name|CJKWidthFilter
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|stream
operator|=
operator|new
name|StopFilter
argument_list|(
name|matchVersion
argument_list|,
name|stream
argument_list|,
name|stopwords
argument_list|)
expr_stmt|;
name|stream
operator|=
operator|new
name|LowerCaseFilter
argument_list|(
name|matchVersion
argument_list|,
name|stream
argument_list|)
expr_stmt|;
return|return
operator|new
name|TokenStreamComponents
argument_list|(
name|tokenizer
argument_list|,
name|stream
argument_list|)
return|;
block|}
block|}
end_class
end_unit
