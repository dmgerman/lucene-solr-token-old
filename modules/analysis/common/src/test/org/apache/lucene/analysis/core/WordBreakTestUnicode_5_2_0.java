begin_unit
begin_package
DECL|package|org.apache.lucene.analysis.core
package|package
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|core
package|;
end_package
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|Analyzer
import|;
end_import
begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|analysis
operator|.
name|BaseTokenStreamTestCase
import|;
end_import
begin_comment
comment|/**  * This class was automatically generated by generateJavaUnicodeWordBreakTest.pl  * from: http://www.unicode.org/Public/5.2.0/ucd/auxiliary/WordBreakTest.txt  *  * WordBreakTest.txt indicates the points in the provided character sequences  * at which conforming implementations must and must not break words.  This  * class tests for expected token extraction from each of the test sequences  * in WordBreakTest.txt, where the expected tokens are those character  * sequences bounded by word breaks and containing at least one character  * from one of the following character sets:  *  *    \p{Script = Han}                (From http://www.unicode.org/Public/5.2.0/ucd/Scripts.txt)  *    \p{Script = Hiragana}  *    \p{LineBreak = Complex_Context} (From http://www.unicode.org/Public/5.2.0/ucd/LineBreak.txt)  *    \p{WordBreak = ALetter}         (From http://www.unicode.org/Public/5.2.0/ucd/auxiliary/WordBreakProperty.txt)  *    \p{WordBreak = Katakana}  *    \p{WordBreak = Numeric}         (Excludes full-width Arabic digits)  *    [\uFF10-\uFF19]                 (Full-width Arabic digits)  */
end_comment
begin_class
DECL|class|WordBreakTestUnicode_5_2_0
specifier|public
class|class
name|WordBreakTestUnicode_5_2_0
extends|extends
name|BaseTokenStreamTestCase
block|{
DECL|method|test
specifier|public
name|void
name|test
parameter_list|(
name|Analyzer
name|analyzer
parameter_list|)
throws|throws
name|Exception
block|{
comment|// Ã· 0001 Ã· 0001 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 000D Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 000D Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 000A Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 000A Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 000B Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 000B Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 3031 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 0041 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 0041 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 003A Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 003A Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 002C Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 002C Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 0027 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 0030 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 0030 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 005F Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 005F Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 00AD Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã 00AD Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0300 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã 0300 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0001 Ã 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2]<START OF HEADING> (Other) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0001\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0001 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 0001 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 000D Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 000D Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã 000A Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã [3.0]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 000A Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 000B Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 000B Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 3031 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 3031 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0041 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 0041 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 003A Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 003A Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 002C Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 002C Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0027 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 0027 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0030 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 0030 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 005F Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 005F Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 00AD Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã 00AD Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0300 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã 0300 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000D Ã· 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2]<CARRIAGE RETURN (CR)> (CR) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\r\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0001 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 0001 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 000D Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 000D Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 000A Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 000A Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 000B Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 000B Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 3031 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 3031 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0041 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 0041 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 003A Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 003A Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 002C Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 002C Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0027 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 0027 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0030 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 0030 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 005F Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 005F Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 00AD Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã 00AD Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0300 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã 0300 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000A Ã· 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2]<LINE FEED (LF)> (LF) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\n\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0001 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 0001 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 000D Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 000D Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 000A Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 000A Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 000B Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 000B Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 3031 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 3031 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0041 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 0041 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 003A Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 003A Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 002C Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 002C Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0027 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 0027 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0030 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 0030 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 005F Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 005F Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 00AD Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã 00AD Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0300 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã 0300 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 000B Ã· 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2]<LINE TABULATION> (Newline) Ã· [3.1] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u000B\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 0001 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 000D Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 000A Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 000B Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 3031 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [13.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã 3031 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 0041 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|,
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 0041 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|,
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 003A Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 002C Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 0027 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 0030 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|,
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 0030 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|,
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 005F Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [13.1] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u005F"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã 005F Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.1] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308\u005F"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 00AD Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u00AD"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308\u00AD"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0300 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0300"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308\u0300"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|,
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|,
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 3031 Ã 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] VERTICAL KANA REPEAT MARK (Katakana) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u3031\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031\u0308"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã· 0001 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã· 000D Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã· 000A Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã· 000B Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã· 3031 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0041 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [5.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã 0041 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [5.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã· 003A Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã· 002C Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã· 0027 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0030 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [9.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã 0030 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [9.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 005F Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [13.1] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u005F"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã 005F Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.1] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308\u005F"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 00AD Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u00AD"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308\u00AD"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0300 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0300"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308\u0300"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0061 Ã 2060 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã 0061 Ã 2060 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0061 Ã· 003A Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã 0061 Ã· 003A Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0061 Ã· 0027 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã 0061 Ã· 0027 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0061 Ã· 002C Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã 0061 Ã· 002C Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0031 Ã· 003A Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã 0031 Ã· 003A Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0031 Ã· 0027 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã 0031 Ã· 0027 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0031 Ã· 002C Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã 0031 Ã· 002C Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0041 Ã 0308 Ã 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] LATIN CAPITAL LETTER A (ALetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0041\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 0001 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 000D Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 000A Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 000B Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 3031 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 0041 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 0041 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 003A Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 002C Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 0027 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 0030 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 0030 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 005F Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 005F Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 00AD Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0300 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 003A Ã 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u003A\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 0001 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 000D Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 000A Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 000B Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 3031 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 0041 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 0041 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 003A Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 002C Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 0027 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 0030 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 0030 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 005F Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 005F Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 00AD Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0300 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 002C Ã 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u002C\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 0001 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 000D Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 000A Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 000B Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 3031 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 0041 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 0041 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 003A Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 002C Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 0027 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 0030 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 0030 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 005F Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 005F Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 00AD Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0300 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0027 Ã 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0027\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã· 0001 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã· 000D Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã· 000A Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã· 000B Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã· 3031 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0041 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [10.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã 0041 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [10.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0030 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [8.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã 0030 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [8.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 005F Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [13.1] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u005F"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã 005F Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.1] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308\u005F"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 00AD Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u00AD"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308\u00AD"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0300 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0300"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308\u0300"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0061 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [10.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã 0061 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [10.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0061 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [10.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã 0061 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [10.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0061 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [10.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã 0061 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [10.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [10.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [10.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0061 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [10.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã 0061 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [10.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0031 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [8.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã 0031 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [8.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0031 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [8.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã 0031 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [8.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0031 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [8.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã 0031 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [8.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [8.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0030 Ã 0308 Ã 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] DIGIT ZERO (Numeric) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [8.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0030\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã· 0001 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã· 000D Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã· 000A Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã· 000B Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 3031 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [13.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 3031 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.2] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0308\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0041 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [13.2] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 0041 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.2] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0308\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã· 003A Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã· 002C Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã· 0027 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0030 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [13.2] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 0030 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.2] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0308\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 005F Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [13.1] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 005F Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.1] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 00AD Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0300 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0061 Ã 2060 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [13.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 0061 Ã 2060 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0308\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0061 Ã· 003A Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [13.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 0061 Ã· 003A Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0061 Ã· 0027 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [13.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 0061 Ã· 0027 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [13.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0061 Ã· 002C Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [13.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 0061 Ã· 002C Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0031 Ã· 003A Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [13.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 0031 Ã· 003A Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0031 Ã· 0027 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [13.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 0031 Ã· 0027 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0031 Ã· 002C Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [13.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 0031 Ã· 002C Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [13.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 005F Ã 0308 Ã 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] LOW LINE (ExtendNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u005F\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u005F\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 0001 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 000D Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 000A Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 000B Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 3031 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 0041 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 0041 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 003A Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 002C Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 0027 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 0030 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 0030 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 005F Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 005F Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 00AD Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0300 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 00AD Ã 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] SOFT HYPHEN (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u00AD\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 0001 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 000D Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 000A Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 000B Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 3031 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 0041 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 0041 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 003A Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 002C Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 0027 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 0030 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 0030 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 005F Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 005F Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 00AD Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0300 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{  }
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0300 Ã 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] COMBINING GRAVE ACCENT (Extend_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0300\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã· 0001 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã· 000D Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã· 000A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã· 000B Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã· 3031 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0041 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [5.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã 0041 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [5.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0030 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [9.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã 0030 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [9.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 005F Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [13.1] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u005F"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã 005F Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [13.1] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308\u005F"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 00AD Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u00AD"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308\u00AD"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0300 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0300"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308\u0300"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0061 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã 0061 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0061 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã 0061 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0061 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã 0061 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0061 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã 0061 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0031 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã 0031 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0031 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã 0031 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0031 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã 0031 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 2060 Ã 0308 Ã 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [9.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u2060\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã· 0001 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã· 000D Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã· 000A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã· 000B Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã· 3031 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 003A Ã 0041 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] COLON (MidLetter) Ã [7.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u003A\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 003A Ã 0308 Ã 0041 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u003A\u0308\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã· 0030 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã· 0030 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã· 005F Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã· 005F Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 00AD Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0300 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 003A Ã 0061 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] COLON (MidLetter) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u003A\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 003A Ã 0308 Ã 0061 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u003A\u0308\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 003A Ã 0061 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] COLON (MidLetter) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u003A\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 003A Ã 0308 Ã 0061 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u003A\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 003A Ã 0061 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] COLON (MidLetter) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u003A\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 003A Ã 0308 Ã 0061 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u003A\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 003A Ã 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] COLON (MidLetter) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u003A\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 003A Ã 0308 Ã 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u003A\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 003A Ã 0061 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] COLON (MidLetter) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u003A\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 003A Ã 0308 Ã 0061 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u003A\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 003A Ã 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u003A\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã· 0001 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã· 000D Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã· 000A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã· 000B Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã· 3031 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 0041 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [7.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 0308 Ã 0041 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u0308\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã· 0030 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã· 0030 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã· 005F Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã· 005F Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 00AD Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0300 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 0061 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 0308 Ã 0061 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u0308\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 0061 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 0308 Ã 0061 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 0061 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 0308 Ã 0061 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 0308 Ã 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 0061 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 0308 Ã 0061 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã· 0001 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã· 000D Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã· 000A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã· 000B Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã· 3031 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 2060 Ã 0041 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [7.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u2060\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 2060 Ã 0308 Ã 0041 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u2060\u0308\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã· 0030 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã· 0030 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã· 005F Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã· 005F Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 00AD Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0300 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 2060 Ã 0061 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u2060\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 2060 Ã 0308 Ã 0061 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u2060\u0308\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 2060 Ã 0061 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u2060\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 2060 Ã 0308 Ã 0061 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u2060\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 2060 Ã 0061 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u2060\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 2060 Ã 0308 Ã 0061 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u2060\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 2060 Ã 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u2060\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 2060 Ã 0308 Ã 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u2060\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 2060 Ã 0061 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u2060\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0027 Ã 2060 Ã 0308 Ã 0061 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [7.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0027\u2060\u0308\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0027 Ã 2060 Ã 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0027\u2060\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 0001 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 000D Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 000A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 000B Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 3031 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 0041 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 0041 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 0030 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 0030 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 005F Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 005F Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 00AD Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0300 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 002C Ã 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u002C\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 0001 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 000D Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 000A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 000B Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 3031 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 0041 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 0041 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 0030 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 0030 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 005F Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 005F Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 00AD Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0300 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 0031 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 0031 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 0031 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 003A Ã 0308 Ã· 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u003A\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 0001 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 000D Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 000A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 000B Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 3031 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 0041 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 0041 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 0027 Ã 0030 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] APOSTROPHE (MidNumLet) Ã [11.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u0027\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 0027 Ã 0308 Ã 0030 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u0027\u0308\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 005F Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 005F Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 00AD Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0300 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 0027 Ã 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 0027 Ã 0031 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] APOSTROPHE (MidNumLet) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u0027\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 0027 Ã 0308 Ã 0031 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u0027\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 0027 Ã 0031 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] APOSTROPHE (MidNumLet) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u0027\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 0027 Ã 0308 Ã 0031 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u0027\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 0027 Ã 0031 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] APOSTROPHE (MidNumLet) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u0027\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 0027 Ã 0308 Ã 0031 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u0027\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 0027 Ã 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] APOSTROPHE (MidNumLet) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u0027\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 0027 Ã 0308 Ã 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] APOSTROPHE (MidNumLet) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u0027\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u0027\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 0001 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 000D Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 000A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 000B Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 3031 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 0041 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 0041 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002C Ã 0030 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] COMMA (MidNum) Ã [11.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002C\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002C Ã 0308 Ã 0030 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002C\u0308\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 005F Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 005F Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 00AD Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0300 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002C Ã 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002C Ã 0031 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] COMMA (MidNum) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002C\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002C Ã 0308 Ã 0031 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002C\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002C Ã 0031 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] COMMA (MidNum) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002C\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002C Ã 0308 Ã 0031 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002C\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002C Ã 0031 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] COMMA (MidNum) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002C\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002C Ã 0308 Ã 0031 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002C\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002C Ã 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] COMMA (MidNum) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002C\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002C Ã 0308 Ã 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] COMMA (MidNum) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002C\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002C\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 0001 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 0001 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0]<START OF HEADING> (Other) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u0001"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 000D Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 000D Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<CARRIAGE RETURN (CR)> (CR) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\r"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 000A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 000A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE FEED (LF)> (LF) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\n"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 000B Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 000B Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [3.11]<LINE TABULATION> (Newline) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u000B"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 3031 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 3031 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] VERTICAL KANA REPEAT MARK (Katakana) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u3031"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u3031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 0041 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 0041 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN CAPITAL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u0041"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0041"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002E Ã 2060 Ã 0030 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [11.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002E\u2060\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002E Ã 2060 Ã 0308 Ã 0030 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ZERO (Numeric) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u0030"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002E\u2060\u0308\u0030"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 005F Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 005F Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LOW LINE (ExtendNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u005F"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 00AD Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã 00AD Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u00AD"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0300 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã 0300 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [4.0] COMBINING GRAVE ACCENT (Extend_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u0300"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 0061 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u0061\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 0061 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u0061\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 0061 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u0061\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 0061 Ã· 0027 Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u0061\u0027\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã· 002E Ã 2060 Ã 0308 Ã· 0061 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u0061\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031"
block|,
literal|"\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002E Ã 2060 Ã 0031 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002E\u2060\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002E Ã 2060 Ã 0308 Ã 0031 Ã· 003A Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] COLON (MidLetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u0031\u003A"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002E\u2060\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002E Ã 2060 Ã 0031 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002E\u2060\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002E Ã 2060 Ã 0308 Ã 0031 Ã· 0027 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] APOSTROPHE (MidNumLet) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u0031\u0027"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002E\u2060\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002E Ã 2060 Ã 0031 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002E\u2060\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002E Ã 2060 Ã 0308 Ã 0031 Ã· 002C Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] COMMA (MidNum) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u0031\u002C"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002E\u2060\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002E Ã 2060 Ã 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002E\u2060\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0031 Ã 002E Ã 2060 Ã 0308 Ã 0031 Ã· 002E Ã 2060 Ã·	#  Ã· [0.2] DIGIT ONE (Numeric) Ã [12.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] COMBINING DIAERESIS (Extend_FE) Ã [11.0] DIGIT ONE (Numeric) Ã· [999.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0031\u002E\u2060\u0308\u0031\u002E\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0031\u002E\u2060\u0308\u0031"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0063 Ã 0061 Ã 006E Ã 0027 Ã 0074 Ã·	#  Ã· [0.2] LATIN SMALL LETTER C (ALetter) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã [5.0] LATIN SMALL LETTER N (ALetter) Ã [6.0] APOSTROPHE (MidNumLet) Ã [7.0] LATIN SMALL LETTER T (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0063\u0061\u006E\u0027\u0074"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0063\u0061\u006E\u0027\u0074"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0063 Ã 0061 Ã 006E Ã 2019 Ã 0074 Ã·	#  Ã· [0.2] LATIN SMALL LETTER C (ALetter) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã [5.0] LATIN SMALL LETTER N (ALetter) Ã [6.0] RIGHT SINGLE QUOTATION MARK (MidNumLet) Ã [7.0] LATIN SMALL LETTER T (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0063\u0061\u006E\u2019\u0074"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0063\u0061\u006E\u2019\u0074"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã 0062 Ã 00AD Ã 0062 Ã 0079 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã [5.0] LATIN SMALL LETTER B (ALetter) Ã [4.0] SOFT HYPHEN (Format_FE) Ã [5.0] LATIN SMALL LETTER B (ALetter) Ã [5.0] LATIN SMALL LETTER Y (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0062\u00AD\u0062\u0079"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u0062\u00AD\u0062\u0079"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0061 Ã· 0024 Ã· 002D Ã· 0033 Ã 0034 Ã 002C Ã 0035 Ã 0036 Ã 0037 Ã 002E Ã 0031 Ã 0034 Ã· 0025 Ã· 0062 Ã·	#  Ã· [0.2] LATIN SMALL LETTER A (ALetter) Ã· [999.0] DOLLAR SIGN (Other) Ã· [999.0] HYPHEN-MINUS (Other) Ã· [999.0] DIGIT THREE (Numeric) Ã [8.0] DIGIT FOUR (Numeric) Ã [12.0] COMMA (MidNum) Ã [11.0] DIGIT FIVE (Numeric) Ã [8.0] DIGIT SIX (Numeric) Ã [8.0] DIGIT SEVEN (Numeric) Ã [12.0] FULL STOP (MidNumLet) Ã [11.0] DIGIT ONE (Numeric) Ã [8.0] DIGIT FOUR (Numeric) Ã· [999.0] PERCENT SIGN (Other) Ã· [999.0] LATIN SMALL LETTER B (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0061\u0024\u002D\u0033\u0034\u002C\u0035\u0036\u0037\u002E\u0031\u0034\u0025\u0062"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061"
block|,
literal|"\u0033\u0034\u002C\u0035\u0036\u0037\u002E\u0031\u0034"
block|,
literal|"\u0062"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 0033 Ã 0061 Ã·	#  Ã· [0.2] DIGIT THREE (Numeric) Ã [10.0] LATIN SMALL LETTER A (ALetter) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u0033\u0061"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0033\u0061"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 2060 Ã· 0063 Ã 2060 Ã 0061 Ã 2060 Ã 006E Ã 2060 Ã 0027 Ã 2060 Ã 0074 Ã 2060 Ã 2060 Ã·	#  Ã· [0.2] WORD JOINER (Format_FE) Ã· [999.0] LATIN SMALL LETTER C (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [5.0] LATIN SMALL LETTER N (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [6.0] APOSTROPHE (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [7.0] LATIN SMALL LETTER T (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u2060\u0063\u2060\u0061\u2060\u006E\u2060\u0027\u2060\u0074\u2060\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0063\u2060\u0061\u2060\u006E\u2060\u0027\u2060\u0074\u2060\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 2060 Ã· 0063 Ã 2060 Ã 0061 Ã 2060 Ã 006E Ã 2060 Ã 2019 Ã 2060 Ã 0074 Ã 2060 Ã 2060 Ã·	#  Ã· [0.2] WORD JOINER (Format_FE) Ã· [999.0] LATIN SMALL LETTER C (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [5.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [5.0] LATIN SMALL LETTER N (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [6.0] RIGHT SINGLE QUOTATION MARK (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [7.0] LATIN SMALL LETTER T (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u2060\u0063\u2060\u0061\u2060\u006E\u2060\u2019\u2060\u0074\u2060\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0063\u2060\u0061\u2060\u006E\u2060\u2019\u2060\u0074\u2060\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 2060 Ã· 0061 Ã 2060 Ã 0062 Ã 2060 Ã 00AD Ã 2060 Ã 0062 Ã 2060 Ã 0079 Ã 2060 Ã 2060 Ã·	#  Ã· [0.2] WORD JOINER (Format_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [5.0] LATIN SMALL LETTER B (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] SOFT HYPHEN (Format_FE) Ã [4.0] WORD JOINER (Format_FE) Ã [5.0] LATIN SMALL LETTER B (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [5.0] LATIN SMALL LETTER Y (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u2060\u0061\u2060\u0062\u2060\u00AD\u2060\u0062\u2060\u0079\u2060\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060\u0062\u2060\u00AD\u2060\u0062\u2060\u0079\u2060\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 2060 Ã· 0061 Ã 2060 Ã· 0024 Ã 2060 Ã· 002D Ã 2060 Ã· 0033 Ã 2060 Ã 0034 Ã 2060 Ã 002C Ã 2060 Ã 0035 Ã 2060 Ã 0036 Ã 2060 Ã 0037 Ã 2060 Ã 002E Ã 2060 Ã 0031 Ã 2060 Ã 0034 Ã 2060 Ã· 0025 Ã 2060 Ã· 0062 Ã 2060 Ã 2060 Ã·	#  Ã· [0.2] WORD JOINER (Format_FE) Ã· [999.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] DOLLAR SIGN (Other) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] HYPHEN-MINUS (Other) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] DIGIT THREE (Numeric) Ã [4.0] WORD JOINER (Format_FE) Ã [8.0] DIGIT FOUR (Numeric) Ã [4.0] WORD JOINER (Format_FE) Ã [12.0] COMMA (MidNum) Ã [4.0] WORD JOINER (Format_FE) Ã [11.0] DIGIT FIVE (Numeric) Ã [4.0] WORD JOINER (Format_FE) Ã [8.0] DIGIT SIX (Numeric) Ã [4.0] WORD JOINER (Format_FE) Ã [8.0] DIGIT SEVEN (Numeric) Ã [4.0] WORD JOINER (Format_FE) Ã [12.0] FULL STOP (MidNumLet) Ã [4.0] WORD JOINER (Format_FE) Ã [11.0] DIGIT ONE (Numeric) Ã [4.0] WORD JOINER (Format_FE) Ã [8.0] DIGIT FOUR (Numeric) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] PERCENT SIGN (Other) Ã [4.0] WORD JOINER (Format_FE) Ã· [999.0] LATIN SMALL LETTER B (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u2060\u0061\u2060\u0024\u2060\u002D\u2060\u0033\u2060\u0034\u2060\u002C\u2060\u0035\u2060\u0036\u2060\u0037\u2060\u002E\u2060\u0031\u2060\u0034\u2060\u0025\u2060\u0062\u2060\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0061\u2060"
block|,
literal|"\u0033\u2060\u0034\u2060\u002C\u2060\u0035\u2060\u0036\u2060\u0037\u2060\u002E\u2060\u0031\u2060\u0034\u2060"
block|,
literal|"\u0062\u2060\u2060"
block|}
argument_list|)
expr_stmt|;
comment|// Ã· 2060 Ã· 0033 Ã 2060 Ã 0061 Ã 2060 Ã 2060 Ã·	#  Ã· [0.2] WORD JOINER (Format_FE) Ã· [999.0] DIGIT THREE (Numeric) Ã [4.0] WORD JOINER (Format_FE) Ã [10.0] LATIN SMALL LETTER A (ALetter) Ã [4.0] WORD JOINER (Format_FE) Ã [4.0] WORD JOINER (Format_FE) Ã· [0.3]
name|assertAnalyzesTo
argument_list|(
name|analyzer
argument_list|,
literal|"\u2060\u0033\u2060\u0061\u2060\u2060"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"\u0033\u2060\u0061\u2060\u2060"
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
