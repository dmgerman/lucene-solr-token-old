begin_unit
comment|'# Licensed to the Apache Software Foundation (ASF) under one or more'
nl|'\n'
comment|'# contributor license agreements.  See the NOTICE file distributed with'
nl|'\n'
comment|'# this work for additional information regarding copyright ownership.'
nl|'\n'
comment|'# The ASF licenses this file to You under the Apache License, Version 2.0'
nl|'\n'
comment|'# (the "License"); you may not use this file except in compliance with'
nl|'\n'
comment|'# the License.  You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#     http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
comment|'# $Id$'
nl|'\n'
comment|'# A simple Solr client for python.'
nl|'\n'
comment|'# This is prototype level code and subject to change.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# quick examples on use:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# from solr import *'
nl|'\n'
comment|"# c = SolrConnection(host='localhost:8983', persistent=True)"
nl|'\n'
comment|"# c.add(id='500',name='python test doc')"
nl|'\n'
comment|"# c.delete('123')"
nl|'\n'
comment|'# c.commit()'
nl|'\n'
comment|"# print c.search(q='id:[* TO *]', wt='python', rows='10',indent='on')"
nl|'\n'
comment|"# data = c.search(q='id:500', wt='python')"
nl|'\n'
comment|"# print 'first match=', eval(data)['response']['docs'][0]"
nl|'\n'
nl|'\n'
name|'import'
name|'httplib'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
name|'from'
name|'xml'
op|'.'
name|'dom'
op|'.'
name|'minidom'
name|'import'
name|'parseString'
newline|'\n'
name|'import'
name|'codecs'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SolrException
name|'class'
name|'SolrException'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'""" An exception thrown by solr connections """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'httpcode'
op|','
name|'reason'
op|'='
name|'None'
op|','
name|'body'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'httpcode'
op|'='
name|'httpcode'
newline|'\n'
name|'self'
op|'.'
name|'reason'
op|'='
name|'reason'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'='
name|'body'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'HTTP code=%s, Reason=%s, body=%s'"
op|'%'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'httpcode'
op|','
name|'self'
op|'.'
name|'reason'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'HTTP code=%s, reason=%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'httpcode'
op|','
name|'self'
op|'.'
name|'reason'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SolrConnection
dedent|''
dedent|''
name|'class'
name|'SolrConnection'
op|':'
newline|'\n'
DECL|member|__init__
indent|'  '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'host'
op|'='
string|"'localhost:8983'"
op|','
name|'solrBase'
op|'='
string|"'/solr'"
op|','
name|'persistent'
op|'='
name|'True'
op|','
name|'postHeaders'
op|'='
op|'{'
op|'}'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'self'
op|'.'
name|'host'
op|'='
name|'host'
newline|'\n'
name|'self'
op|'.'
name|'solrBase'
op|'='
name|'solrBase'
newline|'\n'
name|'self'
op|'.'
name|'persistent'
op|'='
name|'persistent'
newline|'\n'
name|'self'
op|'.'
name|'reconnects'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'encoder'
op|'='
name|'codecs'
op|'.'
name|'getencoder'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
comment|'#responses from Solr will always be in UTF-8'
nl|'\n'
name|'self'
op|'.'
name|'decoder'
op|'='
name|'codecs'
op|'.'
name|'getdecoder'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
comment|'#a real connection to the server is not opened at this point.'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'httplib'
op|'.'
name|'HTTPConnection'
op|'('
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
comment|'#self.conn.set_debuglevel(1000000)'
nl|'\n'
name|'self'
op|'.'
name|'xmlheaders'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'text/xml; charset=utf-8'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'xmlheaders'
op|'.'
name|'update'
op|'('
name|'postHeaders'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'persistent'
op|':'
name|'self'
op|'.'
name|'xmlheaders'
op|'['
string|"'Connection'"
op|']'
op|'='
string|"'close'"
newline|'\n'
name|'self'
op|'.'
name|'formheaders'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/x-www-form-urlencoded; charset=utf-8'"
op|'}'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'persistent'
op|':'
name|'self'
op|'.'
name|'formheaders'
op|'['
string|"'Connection'"
op|']'
op|'='
string|"'close'"
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
string|"'SolrConnection{host=%s, solrBase=%s, persistent=%s, postHeaders=%s, reconnects=%s}'"
op|'%'
op|'('
name|'self'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'solrBase'
op|','
name|'self'
op|'.'
name|'persistent'
op|','
name|'self'
op|'.'
name|'xmlheaders'
op|','
name|'self'
op|'.'
name|'reconnects'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__reconnect
dedent|''
name|'def'
name|'__reconnect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'self'
op|'.'
name|'reconnects'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__errcheck
dedent|''
name|'def'
name|'__errcheck'
op|'('
name|'self'
op|','
name|'rsp'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'rsp'
op|'.'
name|'status'
op|'!='
number|'200'
op|':'
newline|'\n'
indent|'      '
name|'ex'
op|'='
name|'SolrException'
op|'('
name|'rsp'
op|'.'
name|'status'
op|','
name|'rsp'
op|'.'
name|'reason'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'ex'
op|'.'
name|'body'
op|'='
name|'rsp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
dedent|''
name|'raise'
name|'ex'
newline|'\n'
dedent|''
name|'return'
name|'rsp'
newline|'\n'
nl|'\n'
DECL|member|doPost
dedent|''
name|'def'
name|'doPost'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'body'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'      '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'request'
op|'('
string|"'POST'"
op|','
name|'url'
op|','
name|'body'
op|','
name|'headers'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'__errcheck'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'socket'
op|'.'
name|'error'
op|','
name|'httplib'
op|'.'
name|'CannotSendRequest'
op|')'
op|':'
newline|'\n'
comment|'#Reconnect in case the connection was broken from the server going down,'
nl|'\n'
comment|'#the server timing out our persistent connection, or another'
nl|'\n'
comment|'#network failure. Also catch httplib.CannotSendRequest because the'
nl|'\n'
comment|'#HTTPConnection object can get in a bad state.'
nl|'\n'
indent|'      '
name|'self'
op|'.'
name|'__reconnect'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'request'
op|'('
string|"'POST'"
op|','
name|'url'
op|','
name|'body'
op|','
name|'headers'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'__errcheck'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|doUpdateXML
dedent|''
dedent|''
name|'def'
name|'doUpdateXML'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'      '
name|'rsp'
op|'='
name|'self'
op|'.'
name|'doPost'
op|'('
name|'self'
op|'.'
name|'solrBase'
op|'+'
string|"'/update'"
op|','
name|'request'
op|','
name|'self'
op|'.'
name|'xmlheaders'
op|')'
newline|'\n'
name|'data'
op|'='
name|'rsp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'      '
name|'if'
name|'not'
name|'self'
op|'.'
name|'persistent'
op|':'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
comment|'#detect old-style error response (HTTP response code of'
nl|'\n'
comment|'#200 with a non-zero status.'
nl|'\n'
dedent|''
name|'if'
name|'data'
op|'.'
name|'startswith'
op|'('
string|'\'<result status="\''
op|')'
name|'and'
name|'not'
name|'data'
op|'.'
name|'startswith'
op|'('
string|'\'<result status="0"\''
op|')'
op|':'
newline|'\n'
indent|'      '
name|'data'
op|'='
name|'self'
op|'.'
name|'decoder'
op|'('
name|'data'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'parsed'
op|'='
name|'parseString'
op|'('
name|'data'
op|')'
newline|'\n'
name|'status'
op|'='
name|'parsed'
op|'.'
name|'documentElement'
op|'.'
name|'getAttribute'
op|'('
string|"'status'"
op|')'
newline|'\n'
name|'if'
name|'status'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'reason'
op|'='
name|'parsed'
op|'.'
name|'documentElement'
op|'.'
name|'firstChild'
op|'.'
name|'nodeValue'
newline|'\n'
name|'raise'
name|'SolrException'
op|'('
name|'rsp'
op|'.'
name|'status'
op|','
name|'reason'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|escapeVal
dedent|''
name|'def'
name|'escapeVal'
op|'('
name|'self'
op|','
name|'val'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'val'
op|'='
name|'val'
op|'.'
name|'replace'
op|'('
string|'"&"'
op|','
string|'"&amp;"'
op|')'
newline|'\n'
name|'val'
op|'='
name|'val'
op|'.'
name|'replace'
op|'('
string|'"<"'
op|','
string|'"&lt;"'
op|')'
newline|'\n'
name|'val'
op|'='
name|'val'
op|'.'
name|'replace'
op|'('
string|'"]]>"'
op|','
string|'"]]&gt;"'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'encoder'
op|'('
name|'val'
op|')'
op|'['
number|'0'
op|']'
comment|'#to utf8'
newline|'\n'
nl|'\n'
DECL|member|escapeKey
dedent|''
name|'def'
name|'escapeKey'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'key'
op|'='
name|'key'
op|'.'
name|'replace'
op|'('
string|'"&"'
op|','
string|'"&amp;"'
op|')'
newline|'\n'
name|'key'
op|'='
name|'key'
op|'.'
name|'replace'
op|'('
string|'\'"\''
op|','
string|'"&quot;"'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'encoder'
op|'('
name|'key'
op|')'
op|'['
number|'0'
op|']'
comment|'#to utf8'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'xstr'
op|'='
string|"'<delete><id>'"
op|'+'
name|'self'
op|'.'
name|'escapeVal'
op|'('
name|'unicode'
op|'('
name|'id'
op|')'
op|')'
op|'+'
string|"'</id></delete>'"
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'doUpdateXML'
op|'('
name|'xstr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|deleteByQyery
dedent|''
name|'def'
name|'deleteByQyery'
op|'('
name|'self'
op|','
name|'query'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'xstr'
op|'='
string|"'<delete><query>'"
op|'+'
name|'self'
op|'.'
name|'escapeVal'
op|'('
name|'query'
op|')'
op|'+'
string|"'</query></delete>'"
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'doUpdateXML'
op|'('
name|'xstr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__add
dedent|''
name|'def'
name|'__add'
op|'('
name|'self'
op|','
name|'lst'
op|','
name|'fields'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'lst'
op|'.'
name|'append'
op|'('
string|"'<doc>'"
op|')'
newline|'\n'
name|'for'
name|'f'
op|','
name|'v'
name|'in'
name|'fields'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'      '
name|'lst'
op|'.'
name|'append'
op|'('
string|'\'<field name="\''
op|')'
newline|'\n'
name|'lst'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'escapeKey'
op|'('
name|'str'
op|'('
name|'f'
op|')'
op|')'
op|')'
newline|'\n'
name|'lst'
op|'.'
name|'append'
op|'('
string|'\'">\''
op|')'
newline|'\n'
name|'lst'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'escapeVal'
op|'('
name|'str'
op|'('
name|'v'
op|')'
op|')'
op|')'
newline|'\n'
name|'lst'
op|'.'
name|'append'
op|'('
string|"'</field>'"
op|')'
newline|'\n'
dedent|''
name|'lst'
op|'.'
name|'append'
op|'('
string|"'</doc>'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|add
dedent|''
name|'def'
name|'add'
op|'('
name|'self'
op|','
op|'**'
name|'fields'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'lst'
op|'='
op|'['
string|"'<add>'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'__add'
op|'('
name|'lst'
op|','
name|'fields'
op|')'
newline|'\n'
name|'lst'
op|'.'
name|'append'
op|'('
string|"'</add>'"
op|')'
newline|'\n'
name|'xstr'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'lst'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'doUpdateXML'
op|'('
name|'xstr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|addMany
dedent|''
name|'def'
name|'addMany'
op|'('
name|'self'
op|','
name|'arrOfMap'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'lst'
op|'='
op|'['
string|"'<add>'"
op|']'
newline|'\n'
name|'for'
name|'doc'
name|'in'
name|'arrOfMap'
op|':'
newline|'\n'
indent|'      '
name|'self'
op|'.'
name|'__add'
op|'('
name|'lst'
op|','
name|'doc'
op|')'
newline|'\n'
dedent|''
name|'lst'
op|'.'
name|'append'
op|'('
string|"'</add>'"
op|')'
newline|'\n'
name|'xstr'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'lst'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'doUpdateXML'
op|'('
name|'xstr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|commit
dedent|''
name|'def'
name|'commit'
op|'('
name|'self'
op|','
name|'waitFlush'
op|'='
name|'True'
op|','
name|'waitSearcher'
op|'='
name|'True'
op|','
name|'optimize'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'xstr'
op|'='
string|"'<commit'"
newline|'\n'
name|'if'
name|'optimize'
op|':'
name|'xstr'
op|'='
string|"'<optimize'"
newline|'\n'
name|'if'
name|'not'
name|'waitSearcher'
op|':'
comment|'#just handle deviations from the default'
newline|'\n'
indent|'      '
name|'if'
name|'not'
name|'waitFlush'
op|':'
name|'xstr'
op|'+='
string|'\' waitFlush="false" waitSearcher="false"\''
newline|'\n'
name|'else'
op|':'
name|'xstr'
op|'+='
string|'\' waitSearcher="false"\''
newline|'\n'
dedent|''
name|'xstr'
op|'+='
string|"'/>'"
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'doUpdateXML'
op|'('
name|'xstr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|search
dedent|''
name|'def'
name|'search'
op|'('
name|'self'
op|','
op|'**'
name|'params'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'request'
op|'='
name|'urllib'
op|'.'
name|'urlencode'
op|'('
name|'params'
op|','
name|'doseq'
op|'='
name|'True'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'      '
name|'rsp'
op|'='
name|'self'
op|'.'
name|'doPost'
op|'('
name|'self'
op|'.'
name|'solrBase'
op|'+'
string|"'/select'"
op|','
name|'request'
op|','
name|'self'
op|'.'
name|'formheaders'
op|')'
newline|'\n'
name|'data'
op|'='
name|'rsp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'      '
name|'if'
name|'not'
name|'self'
op|'.'
name|'persistent'
op|':'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
